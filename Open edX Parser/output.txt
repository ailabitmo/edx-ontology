[
    {
        "course_chapters":[],
        "course_id":"course",
        "course_name":"Introduction to Linear Models and Matrix Algebra "
    },
    {
        "course_chapters":[
            {
                "chapter_id":"a2e49d2e95b145c9a51521bbc77601d9",
                "chapter_name":"Getting Started",
                "sequentials":[
                    {
                        "sequential_id":"f21ce5eaad634807b0a90437545442cf",
                        "sequential_name":"Welcome to the Course!",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Web page",
                                            "Linear algebra",
                                            "Linear system",
                                            "Matrix decompositions",
                                            "Programming language",
                                            "Data mining",
                                            "Associate professor",
                                            "Vector norms",
                                            "Computer program",
                                            "Computer graphics",
                                            "Computer science",
                                            "Copy",
                                            "Linear",
                                            "Weekly",
                                            "Introduction",
                                            "Begin",
                                            "Mooc",
                                            "Ll",
                                            "Content",
                                            "Thinking",
                                            "Book",
                                            "Part"
                                        ],
                                        "data":" Introduction to D003X.2 Welcome to Applications of Linear Algebra Introduction to D003X.2 VIDEO Subtitres Start of transcript. Skip to the end. TIM CHARTIER: Welcome to this DavidsonX MOOC on applications of linear algebra. My name is Tim Chartier. And I'm an Associate Professor of Mathematics and Computer Science here at Davidson College. This introductory video will give you a roadmap of what's to come in this MOOC. By the end, you'll be ready to jump into Unit 1 and begin learning applications of linear algebra. This is the second part of a two part series. Part 1 had more introductory ideas, covering topics like matrix arithmetic, vector norms, and solving a linear system. This course begins with least squares, and then moves into areas like eigenvectors and matrix decompositions. The emphasis will be on applications in data mining and computer graphics. Let's talk about the goal of the lectures and the activities throughout this course. Many of the lectures will end in an activity. My goal is to lay a foundation in the lectures that springboard you into your own areas of discovery and exploration. In the lecture, we'll discuss computational tools of linear algebra. Then we'll think about how to use the methods in applications. This type of thinking can be important in today's world. Innovation can come from a theoretical idea or a computer program. It can also come from finding existing pieces of knowledge and having the creativity to put them together. Moving from lecture to the activity will allow us to use this type of mathematical thinking. Now, let's talk about the content itself. All the lecture content is available now. This will allow you to move through the content at your own pace. Have more time this week? Then move through more units. Have less time? Then look to next week. While the lecture content and activity is available now, we will have weekly surprises that come your way. The weekly email will indicate what units will keep you on pace. If you get ahead, that's great. Fall behind, that's fine. Everyone that is on pace will be eligible for our weekly book giveaway. We'll also have some other surprises that come your way weekly, to keep you connecting linear algebra to applications. Now, let's talk about the activities in this MOOC. The activities will involve coding with sample codes supplied to you. The codes I give you will be written in MATLAB. Mathworks is offering a free copy of MATLAB for everyone in this course for the duration of the MOOC. MATLAB is a powerful tool in math computation, especially in the area of linear algebra. So look at the course web page to see how to download your copy of MATLAB for this course. Or if you prefer, download my code and translate it to the programming language of your choice. MATLAB tends to translate, for instance, very easily into Python. Finally, if you'd like some hard copy content related to this course, you may want to look at my book When Life is Linear: From Computer Graphics To Bracketology-- published by the Mathematical Association of America. The content of this MOOC parallels topics in the second half of the book. Sometimes the content similar and sometimes it differs. If you're interested, a coupon for the electronic version of this book is on the MOOC web page. So that's our roadmap for our journey through this MOOC. We'll see a variety of applications in data mining and computer graphics. Ready? I am. So let's move into Unit 1 and start learning applications of linear algebra. ",
                                        "unit_id":"13aa9278b822404f809e269834eed528",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"980e9c4c11e04b3bbc2e4e34cb085ef7",
                                "vertical_name":"Introduction to Course"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a88854be210146219b95feae96da1b2e",
                        "sequential_name":"Grading and Verified Certificates",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Good luck",
                                            "Discussion boards",
                                            "Progress",
                                            "Learning",
                                            "Count",
                                            "Discussion"
                                        ],
                                        "data":" Grading Requirements Bookmark this page Grading Requirements A large amount of our learning about linear algebra in this course will happen through creatively investigating applications of our mathematical topics. Successful learning in this course will depend more heavily on your participation in exploratory activities. The more you participate and reflect on these, the more you will learn. Multiple attempts are allowed on all quizzes. These are meant to be instructional. Every activity includes a self-assessment that you must complete to receive credit for participation. Activities count for 60% of the grade. At specific stages of the course, you will also need some basic understanding of linear algebra concepts to continue. These quizzes will count for 40% of your grade. To pass the course, you need at least 70%. Verified certificates require passing the course at 70% or above. Certificates will be issued on May 7, 2015. The course has TAs who will, along with the Dr. Tim Chartier, will monitor and offer feedback on the Discussion Boards. You can track your progress using the Progress menu link at the top. Good luck! DISCUSSION Topic: Grading Requirements / Topic-Level Student-Visible Label ",
                                        "unit_id":"225b02c1335a4b48971b6d7c031b91a5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7f814013e8bb4f53a15be9a5b022d70d",
                                "vertical_name":"Grading Requirements"
                            }
                        ]
                    },
                    {
                        "sequential_id":"67effbd04e1a48d89e96306ca4c21b67",
                        "sequential_name":"Introduce Yourself!",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Linear algebra",
                                            "Map"
                                        ],
                                        "data":" Introductions and Our Community Map Bookmark this page Let's Get To Know Each Other! Welcome to Applications of Linear Algebra, Part 2. We are glad you are here and look forward to learning math through creative exploration. Please take a moment to introduce yourself on the discussion forum below and get to know each other. We've also included a map if you'd like to add your location. To do so, click on the blue + icon and add your information. INTRODUCE YOURSELF! Topic: Introduce Yourself! / Topic-Level Student-Visible Label Show Discussion ",
                                        "unit_id":"346ab3f823fd401a8099bbbedc192e0e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"563e032f67ee472a8457b6bacfd313d0",
                                "vertical_name":"Introductions and Our Community Map"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"3f2d34b9ac4b49b68630bf4fcaca8000",
                "chapter_name":"Unit 1: Math To The Max \u2013 Least-Squares",
                "sequentials":[
                    {
                        "sequential_id":"881f7f2bd17c4c73824d13ea15efbddf",
                        "sequential_name":"Unit 1: Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Facial recognition",
                                            "Linear regression",
                                            "Introduction",
                                            "Start",
                                            "Linear",
                                            "Transcript"
                                        ],
                                        "data":" Introduction to Unit 1 INTRODUCTION TO UNIT 1 VIDEO TRANSCRIPT Start of transcript. Skip to the end. TIM CHARTIER: Unit 1 of our MOOC is called Math to the Max, Least Squares. In it, we talk about the method of linear least squares, also known as linear regression. We'll use it to first examine a data set- specifically, athletic data from the Olympics. This topic is covered in Part One of this MOOC. But this lecture gives more details, given we are in Part 2. From there, we launch into an application of this idea in facial recognition, and then move into the area of correlation. So, let's dive into analyzing data and learning applications of linear least squares. End of transcript. Skip to the start. ",
                                        "unit_id":"d987bbdb14bd4389a941a0ece196b356",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a7331e982b294592a8640a0b458c7842",
                                "vertical_name":"Introduction to Unit 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Least squares method",
                                            "Facial recognition"
                                        ],
                                        "data":" What Will We Learn? Bookmark this page What Will We Learn? In this unit, we will learn how to perform the linear least-squares method on a dataset how linear algebra produces the linear least-squares approximation to a set of data how to apply the least-squares method to facial recognition how to compute the correlation between two datasets DISCUSSION Topic: Unit 1: Learning Goals / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"1b13e96b71064631b6c1cb23fbafbb07",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d0c3b4c0cec9409d83115dc49f401f61",
                                "vertical_name":"What Will We Learn?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7fd426f37b9944c2851dcad791b54b44",
                        "sequential_name":"1.1 Dash of Math",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear regression"
                                        ],
                                        "data":" Learning Goals Bookmark this page What Will We Learn? In this section, we learn how to perform linear regression on a dataset how linear regression uses linear algebra DISCUSSION Topic: 1.1 Learning Goals / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"d6c845b2b2bf40608ac93469ed297982",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e91795e8b9c74f87a856bb5f43080732",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Usain bolt",
                                            "Olympic games",
                                            "Top speed",
                                            "Euclidean norm",
                                            "Decimal places",
                                            "Critical values",
                                            "Linear equations",
                                            "Linear algebra",
                                            " ",
                                            "Sports data",
                                            "Data points",
                                            "Data mining",
                                            "Linear system",
                                            "Square root",
                                            "Gold",
                                            "Fastest",
                                            "Bolt",
                                            "Ran",
                                            "Dash",
                                            "Track",
                                            "Fit",
                                            "Literally",
                                            "Simply",
                                            "Ll",
                                            "Mx",
                                            "System",
                                            "Time",
                                            "Won",
                                            "Analyze",
                                            "Linear",
                                            "Modeling",
                                            "Fast",
                                            "Start",
                                            "Work",
                                            "Solve",
                                            "Model",
                                            "Transpose",
                                            "Slope",
                                            "Race",
                                            "Find",
                                            "Men",
                                            "Equal",
                                            "Understand",
                                            "Data",
                                            "Math",
                                            "Point",
                                            "Vector",
                                            "Question",
                                            "Trend",
                                            "Line",
                                            "Run",
                                            "Make",
                                            "Square"
                                        ],
                                        "data":" Dash of Math (Lecture) DASH OF MATH VIDEO TRANSCRIPTS Start of transcript. Skip to the end. TIM CHARTIER: Behind me is Irwin Belk Track at Davidson College. I've always enjoyed the athleticism of track and field. It's amazing to see world records beat, and sometimes I wonder how fast could someone run. Well, another natural question is when might we see this happen? In this lecture, we'll answer this question of when might someone run the fastest 100-meter dash ever. To make such a prediction, we are going to analyze data with linear algebra and use the method of least squares. Those of you who took Part One of the course will know the answer to this question. But this is a lecture for Part Two, so we'll have a few more math details for you as we move along. The method of least squares is a very powerful tool of data mining. It is used to understand phenomenon and to predict future occurrences. To use it, we need data. We'll refine our question to ask when will the fastest men's 100-meter dash be run in the Olympics, or at least what will math tell us? To help, we look at the set of 28 gold medal times for the men's 100-meter race in the Olympic games between 1896 and 2012. The slowest time was Tom Burke's 12-second sprint to gold in 1896. The fastest was in 2012 went Usain Bolt ran 100 meters in 9.63 seconds to win his second consecutive gold medal in the 100-meter dash. Our first step is to graph the data. This is always a good first step. We do see an overall trend in the data-- it's decreasing. There's a trend so that sometimes you can see that it decreases and that it's following what we often call a cloud. Now it's a trend, so in 1968, for instance, there was this fast time. And that time would hold as the fastest time for that race in the Olympics until 1984, when Carl Lewis ran his gold medal time. There is another trend in the data that I just mentioned. This trend will be the one that enables us to use a linear least squares. The data tends to decrease in a cloud that looks like a line. Now, that's where you use some judgment. Deciding that it can be approximated by a line is where we make a modeling decision. It's an important decision. If the data had followed a curve in it, we might try another technique. But we'll use linear least squares and that will be our choice for this lecture. The line we find won't pass through every point-- it can't. They don't lie on a line. But we can find a line that approximates the data and use it to make predictions. Now we want to find a line y = mx + b, where x is a year and y is the timed run in that year. Suppose the points did lie on a line. Then we'd have 9.63 = 2012 x m + b using Usain Bolt's gold medal time from 2012. We can do the same thing with Tom Burke's time and get 12 = 1896 x m + b. The two linear equations for Bolt and Burke correspond to the linear system of equations where we get 2012, 1, 1896, 1 times the vector m, b equals the vector 9.63, 12. We can easily solve the system and find m equals -0.024 and b equals 50.73. And that corresponds to the equation y = mx + b for the m and b that we just found. Now that would perfectly predict those two times, but not the other times in the data set. To see that, let's look at Carl Lewis' performance in 1984. You put in 1984 for x, and you get y equals negative 0.024, 1984 plus 50.73. But that predicts Carl Lewis' time to be 10.26 seconds, but he ran it in 9.99. Now we produced a line, but we only used two data points. What about all the others? That's where we use the method of least squares. So what we'll do is we'll produce a line, but what line? To understand the line we'll produce, we will work with the data that we have. So we'll begin with those two times, and then we'll add one more. We'll specifically add the time for Carl Lewis and the time that he ran in 1984. So the linear system that we get has one more row, and that would give us 2012, 1, 1896, 1, 1984, 1 times the vector m, b equals 9.63, 12, 9.99. We'll denote this by Mx = b. This system doesn't have a solution. If it did, those three points would have lied on a line and they simply do not. To try and understand what we'll find, we'll talk about the residual vector. This is the vector r and it equals b - Mx. r will be the zero vector if there is a solution to Mx = b, but ours won't have a solution because the points are not colinear. So we'll find a vector r that makes that vector b equal Mx as short as possible under the Euclidean norm, or the L2 norm. Remember, if x equals x1, x2, x3, then the Euclidean norm is the square root of x1 squared + x2 squared + x3 squared. At first glance, this is a crazy task to ask yourself to do. You literally have infinitely many choices for that x. How can you possibly know which one to pick? It turns out that you can use calculus among several choices to show exactly what to do. You take derivatives of the unknowns and find the critical values in proceed from there as you would in calculus. But amazingly, it all comes down to multiplying by the transpose of M on the left on both sides of the equation. The transpose makes the rows columns. It's easy to do. So M transposed is 2012, 1896, 1984, 1, 1, 1. So we solve M transpose Mx = M transpose b, and that gives us our best fit line. It gives us the vector x such that that residual vector is as short as possible. It literally amazes me that you can go through such a simple process to go from infinitely many choices down to that least square's fit. Note, you often don't actually multiply by M transpose because it can cause issues numerically on a computer-- you can get round-off error. But there are ways to solve the system without such issues. When you do, you get the best fit line. In Matlab, you simply literally say please solve Mx = b, and it realizes you need least squares and it does it for you. Now rather than using three times from the Olympic games, we'll use all of them including 2012. Now the line is y equals negative 0.0133 x plus about 30. Now Usain Bolt's time was 9.599, which is only about 0.3 seconds from his actual time if we use that least squares line. What else does that line tell us? Well, the slope of the line is negative 0.0133. Remember, y denotes the time and x is the year. So the slope predicts that with every year we expect to drop the Olympic gold medal time by just over a hundredth of a second. That's helpful information. Now let's use this line to make a prediction. No one will ever run the 100-meter dash in two seconds, so there's some time between two seconds in 9.63 seconds that someone can run the 100-meter dash. In his book, The Perfection Point, John Brenkus considers this question. Brenkus analyzes four distinct phases of the race-- reacting to the gun, getting out of the blocks, accelerating the top speed, and hanging on for dear life at the end of the race. His work predicts 8.99 seconds as the fastest 100-meter dash that can ever be run. Now we can turn this and use it in our model. We simply solve 8.99 = -0.0132x + 36.310. I'm actually going to use more decimal places for the slope and the y-intercept, and when I do, that gives me better accuracy. When I solve for x, I find x = 2059.84. So this model predicts that we'll see the fastest 100-meter dash for the men in the Olympics in the 2060 games. Will we? Well, it depends if the trend continues. Could it actually slow down as we approach that time? Can people keep improving at the rate that we saw? These are assumptions and they're modeling that we make if we make such a prediction. I applied the method of least squares to sports data. What comes to mind for you? What data would you like to analyze? What predictions might you make on something that interests you? Find the data, graph it, and then use the method of linear least squares to see what you might uncover. In coming lectures in this unit, we'll see other applications of linear least squares. But for now, it's your turn to go out and explore. End of transcript. Skip to the start. ",
                                        "unit_id":"6bfe79ffb23847e392e4e596f4fc2f44",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b393296559d24879a901fd6d4f8d6d6f",
                                "vertical_name":"Dash of Math (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"cf050784e927489183b510cf3c8da1ee",
                        "sequential_name":"1.1 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Show",
                                            "Usain bolt",
                                            "Discussion",
                                            "London olympics",
                                            "Linear system",
                                            " ",
                                            "Information",
                                            "Code",
                                            "Linear",
                                            "Simply",
                                            "Pull",
                                            "Time",
                                            "Matlab",
                                            "Analysis",
                                            "Year",
                                            "Data"
                                        ],
                                        "data":" Exploratory Activity 1.1 Bookmark this page Exploratory Activity 1.1 Watch the video below and then download the Matlab code: linearLS.m to work on your own least-squares analysis. As you work, share your data and/or your insights about the data and/or analysis on the forum. EXPLORATORY ACTIVITY 1.1 VIDEO SUBTITRES Start of transcript. Skip to the end. TIM CHARTIER: In the lecture, we looked at a 100 meter dash information for the gold medal times for the men. To show you how to use the MATLAB code, I'm going to use a different data set So first I'll open the code in MATLAB and here we go. And as we see, I've taken information from a website on the Olympic 100 meter women's race. And so here's the data as I found it and then I cut and pasted it into this particular matrix, which has the Olympic data, and I peel off the first column. The colon says, I want every row and then the one means in the first column and that gives me the year information. Every row in the second column gives me the time information. Then I simply pull off a number of years and then I'm ready to create my matrix where I have the times that are-- I'm sorry I'm creating a matrix of entirely ones. And then I replace the first column with the years. So that's very much like the lecture where the first column is the years and the second column is all ones. And this was just a tricky, not sure tricky, but a way to quickly do that. Then I just simply ask MATLAB to perform the linear least squares solve just like I would any linear system. Then here I'm plotting the least squares line, along with the data. So that's what you see me doing here. And then I have what I'm interested in. So I can pull it off. I say Run, Change the Folder, and there you go. There is the least squares line that I'm interested in. So I could print out the m and the x equal b. So the linear coeffs 1 is m, linear coeffs 2 is b. So I could print those if I wanted to or I can just come over to MATLAB and just say linear collapse like that and there I have the slope and there and the intercepts. So I could do the same type of analysis that we saw. So you can look at this, you can answer the question of when would we expect a female to run at the speed of the Usain Bolt in the London Olympics or ask other questions that you're interested in. Nonetheless, let's get you started so that you can begin to make predictions using linear least squares on things that you find interesting. Have fun. DISCUSSION Topic: Exploratory Activity 1.1 / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"9abc95057c5f4ba5b42697b746c4b2e3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7a613f14581c4756bb30f4c9ab14abe1",
                                "vertical_name":"Exploratory Activity 1.1"
                            }
                        ]
                    },
                    {
                        "sequential_id":"30baca1760f04071a8fcbbd7e0ac0b22",
                        "sequential_name":"1.2 Presidential Look-Alike",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear combination",
                                            "Facial recognition",
                                            "Linear least squares",
                                            "Library",
                                            "Least squares",
                                            "Learn"
                                        ],
                                        "data":" Learning Goals Bookmark this page What Will We Learn? In this section, we will learn to use linear least-squares in facial recognition. You'll learn how to create a library of training images how to find a linear combination of the library images to approximate a target image what the role of least-squares is in this process DISCUSSION Topic: 1.2 Learning Goals / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"dd1855dc3ff74469ad0cd715e476640a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bbd10ac0c7de45b89a7beaac92951cda",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Facial recognition software",
                                            "United states",
                                            "Linear algebra",
                                            "Linear system",
                                            "Grayscale images",
                                            "Harry truman",
                                            "Barack obama",
                                            "Jimmy carter",
                                            "Gerald ford",
                                            "Ronald reagan",
                                            "Euclidean norm",
                                            "Abraham lincoln",
                                            "Lyndon johnson",
                                            "Walking dead",
                                            "Orlando bloom",
                                            "Discussion",
                                            "Key word",
                                            "Richard nixon",
                                            "Bill clinton",
                                            "Linear combination",
                                            "Square root",
                                            "Color image",
                                            "Tim",
                                            "Presidential",
                                            "Left",
                                            "System",
                                            "Ll",
                                            "Find",
                                            "Gray",
                                            "Exercise",
                                            "Small",
                                            "College",
                                            "Bottom",
                                            "Change",
                                            "Color",
                                            "Pc",
                                            "Simple",
                                            "Pixel",
                                            "Matlab",
                                            "Square",
                                            "Transpose",
                                            "Matching",
                                            "Vector",
                                            "Combination",
                                            "Image"
                                        ],
                                        "data":" Presidential Look-Alike (Lecture) Bookmark this page PRESIDENTIAL LOOK-ALIKE VIDEO SUBTITRES TIM CHARTIER: In college, I was sometimes told I looked a bit like Abraham Lincoln. So what do you think? Yes, no? Well, how about this instead? In a recent computer science class I taught here at Davidson College, a group of students thought I looked like Andrew Lincoln, star of The Walking Dead, which is a popular show here in the United States. Is that better, maybe worse? A friend thought I looked like a cross between these two Lincolns-- one a president and the other a TV actor. Maybe I do, maybe I don't. Well, let's let math decide. In particular, linear algebra decide. In this section, we'll work with a method I used in my book, Math Bytes-- Google Bombs, Chocolate-Covered Pi, and Other Cool Bits in Computing. To begin, we need a library of images that help me figure out how presidential I look. We'll take a group of recent United States presidents that you see on the screen, and we're going to review them one-by-one because we'll refer to them later when we figure out who I look like. We have Harry Truman, a president of the United States from 1945 to 1953. Dwight D. Eisenhower, president from 1953 to '61. John F. Kennedy, president from 1961 to '63. Lyndon Johnson, president from 1963 to '69. Richard Nixon, president from 1969 to '74. Gerald Ford, president from 1974 to '77. Jimmy Carter, president from 1977 until '81. Ronald Reagan, president from 1981 until 1989. George H. W. Bush, president from 1989 to '93. Bill Clinton, president from 1993 until 2001. George W. Bush, president from 2001 until 2009. And finally, Barack Obama, from 2009 until the time of this filming. So who do I look like? Do I look like a cross between different presidents? First, how does this type of question become a linear algebra problem? Well, images can be stored as matrices. While we could do this in color, I'll simplify things a bit by using grayscale images. For example, the matrix A that you see on the screen has four rows and four columns. So the corresponding image would have four rows of pixels and four columns of pixels, almost like a small speck on the screen. Grayscale values range from 0, which corresponds to black, to 255, which is white. Looking at the matrix A, we see the upper left pixel would have a value of 78, and would be a darker gray value. In fact, here are the shades of gray for all 16 pixels. So we have a matrix which puts us in the realm of linear algebra. Next, we want to compute images for these images. We want an image for me. So here is a grayscale image of me. Now, our question. Our question will be what combination of images of those presidents is closest to mine? A key word there is \"closest.\" That means I need a definition of distance. To help, I'm going to turn the matrix of my image into a vector. For instance, the 3 by 2 matrix B on the screen can easily be converted into a vector. I simply need to know how I convert from the matrix to the vector and the vector to the matrix. Now, suppose some combination of the photos could create my picture. What might this mean? It can mean a number of things, but I'm going to convert this to the following mathematical meaning. Suppose we have four presidential pictures. I'll call them p1, p2, p3, and p4 for those four vectors. I'm going to try and find constants-- c1, c2, c3, and c4, such that c1 x p1 + c2 x p2 + c3 x p3 + c4 x p4 = t, where t is the vector corresponding to my image because I'm Tim. This can be written as a linear system. The matrix P times the vector c equals the vector t. C, again, as a vector containing those constants that I'm looking for-- c1, c2, c3, and c4. The matrix P is formed by taking the vectors of those presidential images. The first column of P is the vector p1, the second column is the vector p2, and I just keep lining them up as I go along. Well, easy enough. Just solve the linear system. It is that easy in MATLAB. You simply ask MATLAB to solve it like you would any other linear system. But keep in mind. There are a lot of pixels in these images. The images we've been looking at are 200-by-250, so there are 50,000 pixels in each image. Can I really expect to match all 50,000 pixels of my image by adding some combination of four images? Well, probably not. You can see this same issue by looking at the linear system that we have. The issue of matching 50,000 pixels by four images, and looking for those unknowns-- c1, c2, c3, and c4. You see this because the matrix has 50,000 rows. This system is overdetermined because we only have four unknowns. We can't find constants that exactly solve this type of system. There's no solution. So what we want is we want to get as close as we can. For that, we find the least squares solution, which is related to performing linear regression that we covered in the last unit. We had the linear system Pc = t. Just like the last unit, we multiply on the left by P transpose, which gives us P transpose Pc = P transpose t. Now this isn't how MATLAB solves the problem as it can lead to significant round-off error. Instead, it uses more advanced and accurate numerical methods, and I get those coefficients that tell me the linear combination that best approximates my image. But again, what does closest mean here? Remember that we have a linear system, Pc = t. So, t - Pc = 0 if we have an exact solution. That means I find a vector c, so Pc = t. For these problems, we take the vector r = t - Pc, which is called the residual vector. When we find the least squares solution, we're finding the vector c that makes that residual vector as small as possible under the Euclidean norm. And remember, the Euclidean norm for c = c1, c2, c3, and c4 would simply be c1 squared + c2 squared + c3 squared + c4 squared. And that quantity-- you take the square root. So that's it. That gives us the ability to answer the question of who I look like. In fact what combination of those presidents most closely matches me? OK, here's what we get If we use all 12 presidents that we talked about at the beginning, here are my top three. With a coefficient of 0.281, Bill Clinton. 0.226, Lyndon Johnson, and 0.195, Richard Nixon. And my bottom three-- at the top of the bottom three is Ronald Reagan with -0.41. Then, Barack Obama with -0.130. And finally, Dwight D. Eisenhower with -0.208. So what does this best approximation look like? What do I look like as a combination of the presidents? Well, here you go. Oh, really? The only way I really look like that is if you have bad eyesight and you're not wearing your glasses. Well, remember, I only used 12 images. Still, you can get a sense from this blurry image of what the algorithm is matching. You can see it working on my hair line and that dark shirt that I have on. Keep in mind that this isn't matching features, just pixels. It's looking at a matrix. If I wore a gray shirt, things would change. If you shift the placement of my head up or down, things change too. I tried to scale my face and the faces of the president so that our faces were scaled and our eyes were in relatively the same position. Still, it isn't perfect. And in fact, in facial recognition software, you'll often see people looking straight into a camera. In an algorithm as simple as ours, that can make a big difference and be quite important. So, you may want to play around with these ideas as now it's your turn. In the exploratory exercise, you'll get to play around with this idea. You can import a color image and the algorithm will do simple grayscaling of it if you input an image of yourself, remember it needs to be the same size as those presidential pictures, which were 200 by 250. We will talk about that in the exercise. There will also be some other images for you to play with if you don't have one of yourself to use. Remember, you could also import your own library of images. But, again, remember, everything needs to be the same size. My students wanted to see what famous actor I look like. Was it Andrew Lincoln from The Walking Dead? In fact, no. Number one was Orlando Bloom. Enough about my experimentations with this. Let's get to the activity so you can explore. Maybe you'll find your presidential lookalike. DISCUSSION Topic: Presidential Look-Alike (Lecture) / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"6180c1a42c5e40c499c254734b2a60cd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b8077cf011284ea08cfa3f03a8e40917",
                                "vertical_name":"Presidential Look-Alike (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"03e7395945b04e76aebc961c31446fde",
                        "sequential_name":"1.2 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Facial recognition",
                                            "File type",
                                            "United states",
                                            "Computer vision",
                                            "Zip file",
                                            "Show",
                                            " ",
                                            "Activity",
                                            "Analysis",
                                            "Zip",
                                            "Share",
                                            "Library",
                                            "Image"
                                        ],
                                        "data":" Exploratory Activity 1.2 Bookmark this page Exploratory Activity 1.2 Watch the video below and then download the zip file below: 1.2lsPres.zip to work with our least-squares facial analysis. As you work, share your data and/or your insights about the data and/or analysis on the forum. EXPLORATORY ACTIVITY 1.2 VIDEO SUBTITRES TIM CHARTIER: In this section, we found, at least mathematically, my presidential lookalike. In this activity, you get to play with computer vision through our codes. Who's your presidential lookalike? Use our library of Presidents of the United States and grab an image of yourself and find out. Remember, your image will need to be the same size as the library of images. Try different pictures and see the difference it makes. Another option is taking an image and disguising it to see how the method does. You may also want to try a new library of images. If you do, be sure and tell us on the forum so we might share ideas. Students here at Davidson College have tried interesting and sometimes quite humorous ideas. Remember, you need an image that is the same size as the library of images, and all your library images need to be the same size. So let me show you some of the tools we have ready for you. Then you can get started and try your own ideas. And again, remember to share them on the forum so we can learn together. So let's learn to do the facial recognition that we learned in the lecture. For that, you're going to turn to the LSFace.m, Least Square's Face.m. So you open that in MATLAB, as we have here, and then you indicate the target image. This is the one that you're trying to test, so this is the image that we had of me that we're going to try to match it with. And you have the directory name. The directory name is all of the images that are in your training library. So here we have the presidents that we saw in the lecture. Then we have the file type. I keep them all the same, so they're all .png files. If you had JPEGs or something, then you would change it to that. Then it simply comes and it loads the target image, and then it loads those training images that we saw, and then it shows you the images. Let's run the code and we'll see it. So there we see the images. This is a histogram of the weights and then this is my image, and that's the best approximation to my image. So can see the hairline right here, you can see the contour of my face. It's trying to get a little bit dark with my beard here and trying to match my eyebrows, and then in particular trying to match my shirt, as we see there. So that's pretty much the code. You can walk through this if you want and begin to step through the code to see how it works. I'm not going to go line by line through this. If we have questions, we can deal with them. In terms of how it works, it's pretty much what you saw in the lecture, so you should be able to walk through it, but if not, feel free to ask, and myself or the TAs will try to help you. If you want to change the target image, put an image in there, and if you want to change the library of images, you can change them there as well. So have fun. Remember that the library and the target image all have to be the same size. I look forward to seeing who you might look like or other ways that you might adapt this idea. EXPLORATORY ACTIVITY 1.2 Topic: Exploratory Activity 1.2 / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"cb3321cce31749b0b3ad3753ee5b1917",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a4f4e238d92a42b8841faba8c3bc915a",
                                "vertical_name":"Exploratory Activity 1.2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7ccfdfdd710a4ee488311f283c3cff9f",
                        "sequential_name":"1.3 Getting Correlated",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Learn"
                                        ],
                                        "data":" Learning Goals Bookmark this page What Will We Learn? In this section, you'll learn how to compute the correlation between two sets of data that correlation does not imply causation DISCUSSION Topic: 1.3 Learning Goals / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"985427cbe87e449fa42c46914c2f8dbb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"012320de9f8a4e04b73dbdf0f40128ac",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Swimming pool",
                                            "Fishing boat",
                                            "United states",
                                            "Social media",
                                            "Shark attacks",
                                            "Discussion",
                                            "Data analytics",
                                            "Data points",
                                            "Positive correlation",
                                            "Chocolate",
                                            "Share",
                                            "Connected",
                                            "Spent",
                                            "Causation",
                                            "Due",
                                            "Finding",
                                            "Ll",
                                            "Data",
                                            "Correlation",
                                            "Compute",
                                            "Correlated",
                                            "Found",
                                            "Column"
                                        ],
                                        "data":" Getting Correlated (Lecture) Bookmark this page GETTING CORRELATED VIDEO SUBTITRES TIM CHARTIER: Sour cream consumption and motorcycle accidents. The number of people who drown after falling out of a fishing boat and the marriage rate in Kentucky. The number of people who drowned by falling into a swimming pool and the number of films Nicolas Cage appeared in in that same year. These correlations appear on the website Spurious Correlations created by a Harvard Law student. How did he find these correlations? First, be careful. In this course, we'll be doing data analytics and here lies an important lesson. Correlation does not imply causation. Did you find yourself trying to think why these events might be connected? Exactly! That can be part of the problem. We tend to think about correlation been linked with causation. Correlations can be real. Causation can lead to correlation. But that doesn't mean correlation means causation. Two factors maybe correlated due to their association with another factor. Or we may simply see a random connection in data. Let's see how to find such correlations which are correlated from the data we find, but one doesn't necessarily cause the other. I found one that made it appear that eating chocolate might help a math major in college. Maybe it would help you in this MOOC. How did I find that correlation? First I thought of something I thought would be funny to link is correlated. Claims about the benefits of eating chocolate are not new. A paper in the New England Journal of Medicine in 2012 found a correlation between chocolate consumption in a country and the number of Nobel laureates produced by that country. So I looked for data. I found it, and then look to see if it seemed to be growing at the same pace. If it roughly was, then I took the time to compute the correlation between those data points. First, here's the data found for the number of doctorates and chocolate consumption measured in trillions of dollars in the United States between 2002 and 2008. For example, in 2002, there were 24,608 doctorates in engineering and science in the United States while $9.037 trillion were spent on chocolate consumption in the United States in that same year. I'll remove the column containing the year as that doesn't enter the computation numerically. So I have two columns of data and I want to compute their correlation. To compute correlation, I first subtract the mean of each column from each element in that column. For example, the mean for the column connected to the number of doctorates is about 28,377. So we subtract 28,377 from every element of that column. The mean for the column connected to chocolate consumption is 10.738. We subtract this value from each entry in that second column. Then, I treat each column as a vector. I'll let d be the column of mean subtracted data associated with doctorates. I'll let c be the column of mean subtract a data associated with chocolate. Then the correlation equals c dot d divided by the quantity the norm of c times the norm of d. This is simply the cosine of the angle between those vectors. If c and d point in the same direction, then the data is perfectly correlated. Knowing the value of one enables you to exactly compute the value of the other. This would give a correlation of 1. For the data of doctorates and chocolate, the correlation coefficient equals 0.99. So we have found a strong correlation between doctorates in science and engineering and chocolate consumption in the United States. If you find a correlation of 0.6 or higher, we'll call that correlated. Remember, things could be negatively correlated, too. For this unit, let's look for positive correlation. If you want to learn more about correlation, you'll want to read more online or in a text. There are a variety of texts to use to get a sense of the chance of a correlation being due to randomness and other such ideas. This unit is mainly to introduce this idea. It's purpose is, in part, for us to have fun together while learning the important lesson that correlation does not mean causation. I'm hoping playing around with this idea might enable us to connect in a fun way as a community of learners. We can share results, share data, and begin connecting with each other, which can really benefit us in this and coming units. Computing the correlation of two sets of data is especially easy to find in Matlab. I'll show you how in the exploratory exercise. But here is our challenge. Let's come up with some correlations. What can you find that's correlated? I've been looking forward to this section. I plan to share some of our findings on social media. I'll see what people do with these things being correlated, and if they retweet or repost. Why? Probably because some people will think that causation is happening with correlation. And others will just think they're funny. To springboard your search for correlations, here is a rather well known one. Shark attacks are correlated with ice cream consumption. And finally, one more from the Spurious Correlations website. Did you know that the money spent on pets in the United States is correlated with the number of lawyers in California? Well, there you go. We're ready now for you to take your turn at finding correlations. So go out, find some data, and see what you can find that's correlated. DISCUSSION Topic: Getting Correlated (Lecture) / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"438f0ae16cc7440c89f05dab89d7aa35",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cc2c960597fb4970a2b423b76950e0f8",
                                "vertical_name":"Getting Correlated (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"18e541b2bb6b4384a8e761e24430bebc",
                        "sequential_name":"1.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            " ",
                                            "Discussion",
                                            "Show",
                                            "Google search",
                                            "Significant digit",
                                            "United states",
                                            "Pdf file",
                                            "Activity",
                                            "Correlation coefficient",
                                            "Called",
                                            "Chocolate",
                                            "Account",
                                            "Matlab",
                                            "Pretty",
                                            "Pdf",
                                            "Give",
                                            "Finding",
                                            "Correlation",
                                            "Share",
                                            "Data",
                                            "Find"
                                        ],
                                        "data":" Exploratory Activity 1.3 Bookmark this page Exploratory Activity 1.3 Watch the video below and then download the Matlab code: chocolate.m to begin finding your own correlations. As you work, share the correlations you find and/or the data you use on the forum. EXPLORATORY ACTIVITY 1.3 VIDEO SUBTITRES TIM CHARTIER: As I mentioned in this section, I've really been looking forward to this section and activity and seeing what you create. As you saw in the lecture, I found a correlation between chocolate consumption and the number of doctorates in engineering and science. How did I find that? First, I thought of two things I thought would be funny, frankly, to correlate. Then I began looking around for data and Copy and Pasted that data in the MATLAB, and let it find the correlation and compute that for me. I'll show you how in a moment. But first, what comes to mind for you? Your correlated data is only a few clicks away. When you find one, you'll share it on the forum, so we all get to sharing your findings. OK, let me show you how to put your data in MATLAB, and get started, and then find correlations. So we're ready to look at correlations and see how to do that with data that we find. So I created a MATLAB program called chocolate that enables you to see what I did to get the example that we saw in the lecture. So I open it MATLAB, which opens it in the editor, and here you see it. So first of all, I had to find that data on the number of doctorates, so I just did a Google search and looked around. And with a little bit of searching, here is the PDF file that I found that gave me the data that was of interest to me. So we'll give it a second to download, and here we go. So we're going to find the PDF. And then I just looked through, and right up here is where I found the data. Right up at the top is where I found the data that was mentioned in the lecture. Well, how did I get the second piece of information? The second piece of information was on data consumption of chocolate, and it turned out that Wolfram|Alpha will give that to me. Oops, I'm sorry, I meant to be a browser. So I'm going to go into browser. Wolfram|Alpha actually made that quite simple for me. But the thing is to actually download the data, I needed what's called a professional account, a pro account, and then I could download the data and look at it. So here is the data over the years that I actually had, and then I could download particular years, and right here you can download the data with a professional account, okay. So you could find it in other places if you don't have an account to Wolfram|Alpha. When I did, this is what it looked like. I asked it to be an Excel document. And once it was an Excel document, I went to the years of interest, which I think was in here. And a couple of these numbers are little bit different than the ones I had in the lecture. The last significant digit I noticed was a little difference, so I don't know if that changed or where that came from. So here is the data that I got more from Wolfram|Alpha. Oh, really quick-- I did that quite quickly-- what did I actually put into Wolfram|Alpha? That was one thing I wanted to point out to you. Oh, here is. It's right at the top. So I put in chocolate consumption in the United States. So you could ask for another country, you could ask for your country if you're not from the United States or a country you'd like to visit someday to figure out if they have an appropriate level of chocolate consumption for you. Then here, I simply plot the data of X versus Y. And then finally, right here, I ask for the correlation coefficient. When I run it, there it is. So you can see, that's pretty correlated, because you pretty much have a line going on there. And then, when I return to MATLAB, it says the correlation coefficient is .9913. So that's where I had that strong correlation between the two. So this one's going to involve you going out and looking around. And when you find it, others may want to share in your data. So be sure to go to the forum, and share the correlations that you find. DISCUSSION Topic: 1.3 Exploratory Activity / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"05d0be8c5bf24b99a71a086de0aa2643",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b7de11da03ed47feb67fc9ee7f48b69e",
                                "vertical_name":"Exploratory Activity 1.3"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"f2045636883449358fd73952e38f4f20",
                "chapter_name":"Unit 2: Time To Stretch \u2013 Eigenvectors",
                "sequentials":[
                    {
                        "sequential_id":"774bd5152a264b2391206d29df086adb",
                        "sequential_name":"Unit 2: Time To Stretch \u2013 Eigenvectors",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Show",
                                            "Discussion",
                                            "Data mining",
                                            "Image processing",
                                            "Social networks",
                                            "Computer graphics",
                                            "Lewis carroll",
                                            "Unit",
                                            "Introduction",
                                            "Ll",
                                            "Eigenvectors",
                                            "Learn"
                                        ],
                                        "data":" Introduction to Unit 2 Bookmark this page INTRODUCTION TO UNIT 2 VIDEO SUBTITRES TIM CHARTIER: Unit 2 of our MOOC is called Time to Stretch-- Eigenvectors. In this unit, we learn about eigenvectors. In the first section, we learn what eigenvectors are and then an application in image processing. From there, we'll learn how to compute a determinant. We'll also learn how to compute a determinant in a way derived by Lewis Carroll, author of Alice in Wonderland. Then we'll see how to use eigenvectors to cluster data-- specifically, social networks. Not every section in this unit will have an exploratory exercise. Sometimes I want to show you something that's interesting computationally, but not necessarily for an application. This will be true with the method of Lewis Carroll. So let's move into this unit and learn about the eigenvectors and applications in computer graphics and data mining. DISCUSSION Topic: Introduction to Unit 2 / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"a661a06e81ff4af4a38d2b81938e0b02",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"741baa1456c84b0b9a89698be76c3941",
                                "vertical_name":"Introduction to Unit 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Unit",
                                            "Undirected graph",
                                            "Lewis carroll",
                                            "Learn"
                                        ],
                                        "data":" What Will We Learn? Bookmark this page What Will We Learn? In this unit, you'll learn what an eigenvalue and eigenvector is of a matrix how to compute the determinant of a 2 x 2 matrix how to compute a determinant of a 4 x 4 matrix using a method created by Charles Dodgson, better known by his pen name Lewis Carroll how to cluster nodes in an undirected graph with eigenanalysis DISCUSSION Topic: Unit 2 Learning Goals / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"ed4eece3e1ad4079b5aef79c2da1d682",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f0193cb828764d61b0623b0ba6ca4c6f",
                                "vertical_name":"What Will We Learn?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2e557521532a44d095be4fa52e58f825",
                        "sequential_name":"2.1 Graphic About Definitions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Image manipulation",
                                            "Matrix",
                                            "Learn"
                                        ],
                                        "data":" Learning Goals Bookmark this page What Will We Learn? In this section, you'll learn what an eigenvalue and eigenvector is of a matrix how to use eigenvectors in connection to image manipulation how to compute the determinant of a 2 x 2 matrix DISCUSSION Topic: 2.1 Learning Goals / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"d465d229927e4b0c9fa61be1aa5f368b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b146bd56ce7f49519e00cffeb2f3560f",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Perpendicular distance",
                                            "Discussion",
                                            "Mona lisa",
                                            "Characteristic polynomial",
                                            "Scalar multiple",
                                            "Shear transformation",
                                            "Av",
                                            "Lambda",
                                            "Equation",
                                            "Polynomial",
                                            "Ll",
                                            "Scalar",
                                            "Easy",
                                            "Multiplying",
                                            "Equal",
                                            "Plane",
                                            "Axis",
                                            "X axis",
                                            "Graphic",
                                            "Matrix",
                                            "Transformation",
                                            "Direction",
                                            "Image",
                                            "Vector",
                                            "Eigenvectors",
                                            "Find"
                                        ],
                                        "data":" Graphic About Definitions (Lecture) Bookmark this page GRAPHIC ABOUT DEFINITIONS VIDEO SUBTITRES TIM CHARTIER: In this unit, we learn about and use eigenvectors. In this section, we learn what an eigenvector is in a graphical interpretation. It's easy enough to multiply a vector x by a matrix A. This gives us another vector, possibly in a different dimension. For example, the matrix 1, 2, -1, 3, 0, 1 times the 3D vector 1, 3, -2 gives us the vector 9, 1, which is in 2D. Some matrices, when multiplied by a vector, will stretch or shrink that vector. For example, let's take the matrix 2, -4, -1, -1 times the vector -4, 1. That equals the vector -12, 3, which is three times our original vector -4, 1. These types of vectors that result in this type of stretching or shrinking form the equation Av = lambda t. Said in words, this type of vector v has the property that the matrix A multiplied by v results in a scalar multiple of v. And that's our topic. The vector v is called an eigenvector of A. And lambda, it's associated eigenvalue. So the vector -4, 1 is an eigenvector of the matrix 2, -4, -1, -1 with the associated eigenvalue 3. Let's look a bit more at eigenvectors. If v is an eigenvector and lambda an associated eigenvalue of the matrix A, then Av equals lambda v. Let's assume A is a two-by-two matrix for the moment. Eigenvectors connect to something called the determinant of a matrix. For two-by-two matrices, the determinant of the matrix is pretty easy to compute. Let's let A equal a11, a12, a21, a22 as denoted on the screen. When you find the determinant, you put bars around it as you see on the screen. And for a two-by-two, it equals a11 x a22 - a21 x a12. For example, if we have the matrix 1, 3, 4, 5, then the determinant of that matrix is 1, 5 - 3 x 4, which equals minus 7. How does this help us with eigenvectors? Well, for that, we want to rewrite Av equals lambda v as Av - lambda v equals 0. This is the same as A minus lambda times the identity matrix-- that matrix-- times v equals 0. And this is where determinants come in. You can always find such a vector V to satisfy that equation. Just take v to equal to zero vector. But can we find a non-zero vector v that satisfies this? We can if the determinant of A minus lambda I is 0. This tells us a way to find eigenvalues. To see how, let's return to our two-by-two matrix. We again had the matrix 1, 3, 4, 5. To find the eigenvalues of this matrix. We find the values of lambda such that the determinant of A minus lambda I equals 0. So we want the determinant of the matrix 1 minus lambda, 3, 4, 5 minus lambda, and we want that to equal 0. The determinant of that matrix equals 1 minus lambda-- that quantity-- times 5 minus lambda, and that all minus 12, and I want that to equal 0. Multiplying and combining terms, this all becomes lambda squared minus 6 lambda minus 7 equals 0. Finding the roots of this quadratic equation leads to lambda equals -1 and lambda equals 7. This means -1 and 7 are the eigenvalues of the matrix. We just found the roots of what is called the characteristic polynomial. So for two-by-two matrices, we find the roots of quadratic polynomials to find the eigenvalues of those matrices. Finding the eigenvalues of an n-by-n matrix involves computing the roots of a polynomial of degree n. Once you find an eigenvalue, you can substitute it into A minus lambda I times v equals 0, and use for instance Gaussian elimination to find v. But, if you have a matrix of degree 10, 20, 100, or 1,000, finding the roots of the characteristic polynomial can be really hard. So computers often estimate eigenvalues and eigenvectors of a matrix. We'll let MATLAB be a computational tool so we can kind of think of it as a calculator popping out the eigenvalues and eigenvectors for us. With that, let's see an application. What's happening visually with an eigenvector? One application is a sheer mapping of an image, which leaves points along one axis unchanged while shifting the points in a direction parallel to the axis by the amount that is proportional to the perpendicular distance from the axis. Woo, that was a mouthful! Let's see it in action. For example, we're going to take a horizontal shear in the plane, and that's performed by multiplying vectors by the matrix S, which equals 1, k, 0, 1. Using this matrix, the vector x, y, becomes x plus ky, y, where k is the cotangent of phi, and phi is the angle of that sheared axis to the x-axis. It's easier to see in the images we'll produce. It can still be a lot to visualize, so again, let's see it in action. We'll take the image that you see of the Mona Lisa. The vector 1, 0 is an eigenvector of the matrix S. The mapping leaves points along the x-axis unchanged, but shifts all others. Repeatedly applying a shear transformation changes the direction of all vectors in the plane closer to the direction of that eigenvector. On the screen, you see an application of the sheer mapping of that original image of the Mona Lisa. Well, let's try another one. Another approach is to stretch or shrink a vector equally in all directions. This means that the vector x, y is multiplied by a scalar. For this, we use the matrix lambda, 0, 0, lambda. This matrix's only eigenvalue is lambda, and any 2D vector is an eigenvector. On the screen, we see the effect of repeatedly applying this transformation with lambda equal one-third. For fun, I've placed one transformation on top of another and done it multiple times. So this will be your assignment. Make interesting images from the transformations we just discussed, or try new ones. We'll share our images in a gallery. I look forward to what you'll make in this first unit on eigenvectors. DISCUSSION Topic: Graphic About Definitions (Lecture) / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"c7d08aef957b4dce93e6061b8bceec8a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"740af500eecc4ff890ac50dc7b512ea3",
                                "vertical_name":"Graphic About Definitions (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"116e1933927a4c1eacf1a1cfce069fd5",
                        "sequential_name":"2.1 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mona lisa",
                                            "Discussion",
                                            "Uniform scaling",
                                            "Image manipulation",
                                            "Activity",
                                            "Show",
                                            "Shear",
                                            "Interesting",
                                            "Matlab",
                                            "Ve",
                                            "Ll",
                                            "Image",
                                            "Transformation",
                                            "Run",
                                            "Exhibit",
                                            "Top",
                                            "Create"
                                        ],
                                        "data":" Exploratory Activity 2.1 Bookmark this page Exploratory Activity 2.1 Watch the video below and then download the Matlab codes sheer.m uniformScaling.m to create an image to share with everyone in the course. After you've created your image, upload it to the class exhibit here: http://math365.org/exhibit/contribution. The tutorial steps for using this online exhibit are located in the next section and can be referenced from the top menu throughout the course. EXPLORATORY ACTIVITY 2.1 VIDEO SUB TIM CHARTIER: In this section, we saw how to shrink, flip, and skew an image. In this activity, you'll get to create artwork in this way and then share it with the group. You might want to think up other options, as they can be quite interesting. I'll show you how to create the ones you saw in the lecture and to place them on top of each other, as that can have an interesting visual effect. Then it is your turn to create your own mathematical artwork and share it with the class. Okay, let me show you how to do this in MATLAB. All right. Let's learn to use eigenvectors for image manipulation. The first one we're going to try is that shear movement on an image. So the first thing you'll do is you'll open shear.m, and then you have your image that you're going to transform. So I've got the Mona Lisa image, as we saw on the lecture. This is a nice blog entry that explains how this particular affine transformation associates with what we're doing in this code, so the connection between the lecture and the code. So let's run it and we'll see this transformation. So I actually perform it twice in the code, just so that you can see it greater. So you have the original image. Figure two is one application, so here we have that angle, and then we've applied the shear on figure two, so that's where we see it even bigger. To get the connection to angles, if you really want to think of it in that way, I have the second attribute here, where you can say the number of degrees that you want. So that's about what you saw in the original image. So then you can change it and say, I want to make this bigger, make it 30. So there you see a pretty large shear. So that's that code. You can play around with some transformations that you see. And here's the uniform scaling that we saw. So it'll come in, it has the target image, and then you have your x and y scale. And then we form that matrix, which performs the transformation that we saw, and then I put them one on top of the other. So I'll run it, and there you see them right there. One that's kind of fun is if you make one of them negative, then they flip, so there. I like that one. I think that one's kind of fun. So you can try that with different images. The Mona Lisa, I made it one third so her face still shows regardless of where it goes. I like that. All right. I look forward to seeing what you create. DISCUSSION Topic: 2.1 Exploratory Activity / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"41376b7812584a138760dbb9869990e7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e46360cd3a2b430b9ff5efcbff618871",
                                "vertical_name":"Exploratory Activity 2.1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Show",
                                            "Online",
                                            "Discussion",
                                            "Email address",
                                            "Math art",
                                            "Exhibit",
                                            "Page",
                                            "Required",
                                            "Field",
                                            "Choose",
                                            "Contribute",
                                            "Click",
                                            "Math",
                                            "Title",
                                            "Image"
                                        ],
                                        "data":" Online Exhibit Tutorial Bookmark this page Online Exhibit Tutorial ONLINE COURSE EXHIBIT We are inviting you to add your math art to an online course exhibit so that others may see your creations and learn about the math behind your images. The steps below will show you how to contribute your image. If you have any questions about the process, please use the discussion forum at the bottom of this page. HOW TO CONTRIBUTE YOUR IMAGE Now that you have your ASCII image ready, head over to the D003X Exhibit here: http://math365.org/exhibit/ Click Contribute an Item. Give your image a title, filling in the Title field. Enter the Activity Name. Choose from the following: Eigenvector Transformation DownSampling Subdivision In the Image Description field, tell us about your image. Here you can add as much detail and reflection as you would like. Add any copyright credit required for your image (refer to the next section for more information) Click the Choose File button to upload your image. Enter your email address to allow you access to the exhibit. This field is required. Type in the re-captcha text that is generated. Select the box to Publish my contribution on the web, and I agree to the terms and conditions. NOTE: If you select to contribute anonymously, your image will not be visible on the pubic gallery. That feature is designed to make submissions private. If you intend to share your image broadly, do not check this option. Click the Contribute button. Your items will not appear right away. We will approve the contributions as they are submitted, and you will be able to view them in the online exhibit shortly. We look forward to seeing your creations! DISCUSSION Topic: Online Exhibit Tutorial / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"69764bab86914275bab18d4c1e78651c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ee44a6dee014481980c7d6366bc2434b",
                                "vertical_name":"Online Exhibit Tutorial"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Public domain image resources",
                                            "Public domain images",
                                            "Google images",
                                            "Discussion",
                                            "Image search",
                                            "Search engines",
                                            "Government agencies",
                                            "Copyright",
                                            "Manipulation",
                                            "Image",
                                            "Search"
                                        ],
                                        "data":" Finding Images for Manipulation | Copyright Guidelines Bookmark this page Finding Images for Manipulation | Copyright Guidelines Finding an image to use for your image manipulation project sounds easy, right? It can be, but you have to keep in mind that copyright laws restrict what you can use. Many of the images you&rsquo;ll find in Google Images are protected by copyright. A listing of sites we recommend using to begin your image search are listed below. Please review this handout, which contains important information that will help you better understand how to search and find legally available images you can use for your image manipulation project. WHAT RESOURCES CAN I USE TO FIND IMAGES? Creative Commons Search: Portal for searching various websites and search engines for CC - licensed images. Flickr Commons: User-submitted public domain images. Gimp-Savy: Public domain images from various U.S. government agencies, such as NASA and NOAA. List of Public Domain Image Resources (From Wikipedia) Public Domain Media on Wikimedia: Public domain content organized by topic area. Public-Domain-Image.com: Various images in the public domain organized into different categories. DISCUSSION Topic: Finding Images &amp; Copyright / Topic-Level Student-Visible Label Show Discussion Previous Next ",
                                        "unit_id":"5cedd865f2f94149872de41ff3b354b9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"37661863dd724a4eaa93d083a6c66e71",
                                "vertical_name":"Finding Images for Manipulation | Copyright Guidelines"
                            }
                        ]
                    },
                    {
                        "sequential_id":"62caec061fb94b4d82c516bbf7970606",
                        "sequential_name":"2.2 Alice in Determinant-Land?",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lewis carroll",
                                            "Matrix",
                                            "Learn"
                                        ],
                                        "data":" What Will We Learn? In this section, you'll learn a method of computing the determinant of a matrix created by Charles Dodgson, better known for his pen name Lewis Carroll how to find the central submatrix of a matrix ",
                                        "unit_id":"0e5a2634a3704e7ea12be95e14867d33",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"54a14ccbccb64c74bbefc3733c39896d",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Web page",
                                            "Linear algebra",
                                            "Lewis carroll",
                                            "Mad hatter",
                                            "Symmetric matrix",
                                            "Integer matrix",
                                            "Note",
                                            "Put",
                                            "Dodgeson",
                                            "Left",
                                            "Connected",
                                            "Submatrices",
                                            "Ll",
                                            "Mad",
                                            "Find",
                                            "Alice",
                                            "Error",
                                            "Created",
                                            "Wondered",
                                            "Top",
                                            "Call",
                                            "Compute",
                                            "Work",
                                            "Called",
                                            "End",
                                            "Matrix",
                                            "Step",
                                            "Method",
                                            "Row",
                                            "Divided",
                                            "Determinant",
                                            "Entry"
                                        ],
                                        "data":" TIM CHARTIER: In this section, we'll learn to find determinants like a Mad Hatter. Actually, we'll find determinants with the method created by the author of Alice in Wonderland which is a book containing a character called the Mad Hatter. In 1865, Charles Dodgeson, better known by his pen name Lewis Carroll, published Alice in Wonderland. Two years later, this same mathematician at Christchurch published a document on an algorithm for calculating determinants. The method, known as condensation, is useful for hand calculation of determinants. For an integer matrix, all sub matrices that are computed throughout the algorithm will also have integer elements. Let's give the basic idea to begin. Suppose you have a 4 by 4 matrix. You'll compute a 3 by 3 matrix, then a 2 by 2 matrix, and finally you'll end up with a 1 by 1 matrix whose only entry equals the determinant of the original matrix. So let's find the determinant using this method for a 4 by 4 matrix. And the matrix is 2, 0, 3, 1, then 1, 4, 2, 3, 0, 3, 1, 2, 3, 2, 0, 1. Step one. Construct a 3 by 3 matrix where the entries are the determinants of what are called the 2 by 2 connected submatrices. That's easiest to see when you look at what we're doing. For the top row of A, the connected sub matrices are 2, 0, 1, 4. Then the next connected submatrix is 0, 3, 4, 2, and then finally 3 1, 2, 3. For the second row, the 2 by 2 connected submatrices are 1, 4, 0, 3. Then we move over to 4, 2, 3, 1. Then we move over one more time and get 2, 3, 1, 2. Now we move to the third row, and the 2 by 2 connected submatrices are 0, 3, 3, 2, 3, 1, 2, 0. And finally we have our last one, which is 1, 2, 0, 1. And that gives us all of them. Now the determinants of the sub matrices become the entries in the resulting matrix. So we end up with a 3 by 3 matrix. The 1, 1 entry of this 3 by 3 matrix is the determinant of the matrix that we had in that first row, that 2 by 2 connected submatrix, which was 2, 0, 1, 4. The determinant is 8 minus 0 or 8. Now we move to the 1, 2 entry of this 3 by 3 matrix. And find the determinant of the matrix 0, 3, 4, 2, which equals minus 12. Note that the 2, 1 entry is the determinant of the matrix 1, 4, 0, 3 which equals 3. When we compute this for every 2 by 2 connected submatrix, we get our desired 3 by 3 matrix, which is 8, -12, 7, 3, -2, 1, -9, -2, 1. You may wish to verify these entries to be sure you understand the method. Now we simply continue this process, and in the next step we produce a 2 by 2 matrix where the entries are, again, the entries of the determinants of those connected submatrices. There will be one more step, though. But first let's find those 2 by 2 connected submatrices. So in the first row they are, 8, -12, 3, -2, -12, 7, -2, 1. And then for the second row, they are 3, -2, -9, -2. And then finally, we have -2, 1, -2, 1. So now we're ready to find that 2 by 2 matrix. And the 1 by 1 entry is the determinant of that upper left hand connected submatrix that we had, which was 8, -12, 3, -2. And the determinant equals -16 + 36 or 20. The 1, 2 entry of the resulting 2 by 2 matrix is the determinant of the matrix -12, 7, -2, 1. And that determinant is -12 + 14, or 2. Continuing this, we end up with our 2 by 2 submatrix, which I'm going to call L. And that equals 20, 2 and then -24, 0. Now we're ready for that second step. From the second time that we create our submatrices on, we have this additional step. Right now we have a 2 by 2 matrix. To keep things general, we'll call this a k by k matrix, since this step we'll generalize to whatever size matrix we're generating. At this step, the entries of our k by k matrix are divided by the corresponding entries in what's called the central submatrix of the earlier k by k + 2 by k + 2 matrix. The central submatrix is generated by removing the top and bottom rows and left and right hand columns. So where we? We were at k = 2. So we're interested in k + 2 by k + 2 matrix, or that 4 by 4 matrix that we had earlier, which was 2, 0, 3, 1, 1, 4, 2, 3, 0, 3, 1, 2, 3, 2, 0, 1. Now remember, we want to remove the top and bottom rows and the left and right columns and that gives us the central submatrix, which I'm going to call C, and that equals 4, 2, 3, 1. So now we compute our 2 by 2 matrix by taking L-- which is 20, 2, -24, 0-- and dividing its entries by the corresponding entry in the central submatrix c that we just found. So that gives us 20 divided by 4, 2 divided by 2, -24 divided by 3, and 0 divided by 1, which is 5, 1, -8, 0. Now we take another step. Remember, we first created our 2 by 2 connected submatrices. This matrix itself serves as its only 2 by 2 submatrix. So we want the determinant of that just like we did before. So we want the determinant of the only sub connected matrix that we have, and that matrix is 5, 1, -8, 0, which equals 8. Remember, though, that we have that additional step. So we found the determinant. And for this matrix, which is k by k where k is 1, we look at the k + 2 by k + 2 matrix, which is 3 by 3. Remember what we had? Our 3 by 3 matrix was 8, -12, 7, 3, -2, 1, -9, -2, 1. Now the central submatrix is simply -2. Therefore, the 1 by 1 matrix becomes 8-- which we just found-- divided by -2, which was the central submatrix, which is -4. Do you remember what that gives us? We're at 1 by 1. That's the determinant of our original matrix A. That's it. You'll have more opportunities to walk through this process in the handouts that you'll find on the web page for our course. Now, just a note Dodgeson put mathematical references in his writings. So let's consider the following verse written by Lewis Carroll. I'll just read it for you. \"I often wondered when I cursed, often feared where I would be-- wondered where she'd yield her love. When I yield, so will she. I would her will be pitied! Cursed by love, she pitied me.\" Good grief, what does that have to do with linear algebra? Well there lies the subtlety often use by Lewis Carroll to put math into his writing. Put one of those words I read into each element of a matrix. Here we'll, do it for you. Now look, you see anything? We have a symmetric matrix. The transpose of this matrix is equal to itself. Indeed, Lewis Carroll was a mathematician and peppered his writings with such references. OK. You'll get a chance to do more with Dodgeson's method of finding the determinant and work out a determinant in the quiz for this section. Work carefully as making a computational error will cascade through your work. And finding an error can indeed drive you mad. ",
                                        "unit_id":"2238bcd5952548ec95df59e89a9cb7d6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7e076421f5d04c3488ad41145004a659",
                                "vertical_name":"Alice in Determinant-Land (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"bd68773807dc4d86b8801116473944c5",
                        "sequential_name":"2.3 Finding Groupies",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Undirected graph",
                                            "Laplacian matrix",
                                            "Learn"
                                        ],
                                        "data":" What Will We Learn? In this section, you'll learn to cluster nodes in an undirected graph with eigenanalysis to compute the Laplacian matrix of an undirected graph ",
                                        "unit_id":"67dd5c6920c54bc8bcf0dcaba1ece0ba",
                                        "unit_type":"html"
                                    },
                                    {
                                        "data":"",
                                        "unit_id":"d462f1c6b4a5478ebef3063c626523f7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ce373a88f67740a9a7473c7bbd896d7f",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Fiedler vector",
                                            "Postdoctoral fellowship",
                                            "United states",
                                            "Doctoral studies",
                                            "Linear algebra",
                                            "Social network",
                                            "Adjacency matrix",
                                            "Laplacian matrix",
                                            "Data science",
                                            "Data mining",
                                            "Large number",
                                            "Diagonal matrix",
                                            "Directed graph",
                                            "Undirected graph",
                                            "Connected graph",
                                            "Society",
                                            "Undirected",
                                            "Ll",
                                            "Diagonal",
                                            "Network",
                                            "Facebook",
                                            "Connected",
                                            "Form",
                                            "Column",
                                            "Role",
                                            "Matrix",
                                            "Find",
                                            "Number",
                                            "Analyze",
                                            "Data",
                                            "Eigenvectors",
                                            "Identify",
                                            "Element",
                                            "Clustering",
                                            "Sum",
                                            "Cluster",
                                            "Graph",
                                            "Friend",
                                            "Group",
                                            "Row"
                                        ],
                                        "data":" TIM CHARTIER: I'm standing in front of the literary houses on the campus of Davidson College. Behind me is Philanthropic Society Hall and Eumenean Society Hall. Both societies were formed by students in 1837 as the first student organizations at Davidson College. They had weekly debates, along with essays and speeches. They created the first libraries on campus, too. Today, during each election for the President of the United States, Davidson College's Republicans and Young Democrats have a head-to-head formal debate from the balconies of these two historic literary halls. Wait, why all the history? This is a linear algebra course. Indeed it is. There are many ways we organize our lives, and friendships is one of them. I have friends here at Davidson College, and in the town. I have friends from my doctoral studies in Boulder, Colorado. I also have friends for my time in Seattle from my postdoctoral fellowship at the University of Washington. Math can help identify these groups. To do this, we use clustering, which is a powerful tool in data mining. There are many ways to cluster data, and the type of question you ask in the data you analyze often influences which clustering method you will use. In this section, we'll cluster undirected graphs using eigenvectors. We'll see how eigenvectors play a role in clustering by partitioning the undirected graph you see on the screen. A graph is a collection of vertices and edges. The vertices in the graph on the screen are the circles labeled 1 to 7. Edges exist between pairs of vertices. The graph is undirected since the edges have no orientation. Think of the edges as connections. We can see that 1 is connected to 4, and since the graph is undirected, this means that 4 is also connected to 1. In a directed graph, there's orientation so 1 may be connected to 4 but 4 may not be connected to 1. In such graphs, this is denoted by an arrow. To cluster this graph, we'll use an eigenvector of a matrix. First we need to form the matrix which begins by forming the adjacency matrix of the graph. Each row of the adjacency matrix corresponds to a node in the graph, and each column corresponds to that same node. Given our numbers, we'll let row 1 in column 1 correspond to node 1, row 2 and column 2 correspond to node 2, and so forth. In the adjacency matrix, we put a 1 in an element of the matrix in the corresponding row and column, if the corresponding nodes are connected by an edge. So the element in row 1 and column four has a 1 since there is an edge between nodes 1 and 4. Given this, the matrix is as you see on the screen. We'll call this matrix A. Well that's easy enough. Well now we go to step two. For this step, we form the matrix D, which is a diagonal matrix where each row of D equals the row sum of the row in the matrix A. For example, since the first row of A sums to 2, the diagonal element of D in the first row is set to 2. Similarly, since the second row of D sums to 3, the diagonal element in the second row of D equals 3. So D is as you see on the screen. Remember, it's a diagonal matrix, so it's diagonal is 2, 3, 2, 3, 3, 2, 3. We are now now ready to form the matrix that we need in order to actually cluster. We'll denote it by L. And L equals D minus A. This forms the matrix that you see on the screen. This matrix is called the Laplacian matrix. Now identifying this matrix role in clustering is due to the work of Miroslav Fiedler. He uncovered the importance of the eigenvector corresponding to the second smallest eigenvalue of that Laplacian matrix. In particular, he proved that this vector partitions a graph into maximally intraconnected components and minimally interconnected components. This is what we want with clusters. Think of a close group of friends. They have close friendships within the group and fewer connections outside the group. The importance of the Fiedler vector is that it can identify these types of connections, and it's called the Fiedler vector. What clusters does the Fiedler vector identify for our graph? Given how small the graph is, you may want to take a guess before letting the mathematics inform you. Computing the eigenvector associated with the second smallest eigenvalue, we find the Fiedler vector as you see on the screen. Clustering is now quite simple. The Fiedler factor clusters the graph using only the signs of the elements in the eigenvector. The rows with the same sign are placed in the same cluster. So our previous vector can be viewed only by its signs, and it becomes plus, minus, minus, plus, minus, plus, minus. Well that tells us that we place nodes 1, 4, and 6 into one cluster, and nodes 2, 3, 5, and 7 into the other. Removing the edge, which is the only edge between node 2 and 4, we see our resulting clusters that we get from the Fiedler method as you see on the screen. Let's try this with a larger network we'll analyze some Facebook friends. We'll use the social network of a friend who joined the social network relatively recently, so it still stays somewhat small. In the undirected graph, the nodes will be Facebook friends. There is an edge between two nodes, or people, if the people are friends on Facebook. We see the graph of the about 50 people on the screen. Now again, the goal of clustering is to form maximally connected groups while the connections between the different groups are minimally connected. It isn't a clear to me-- at least looking at the graph-- who to group into these clusters. I see some organization, but it's still hard to see. But when I partition the group into two clusters using the Fiedler method with that Fiedler vector, I see the clusters that you see on the screen. There are still connections between the clusters. This is due to friends who have friendships that cross between the two groups. Does it mean anything? For that, I turned to my friend and asked. Clustering methods will cluster. So you need to look at what connections they might identify. It's math, so it isn't finding friendships. It's mathematically finding connections as best it can. When my friend looked at the groupings, he saw what it found quickly. They connected graph with black nodes, to the right, is my friends extended family, which in part explains the large number of connections within the network. The other group is essentially non-family members, although actually, a few family members make their way into this cluster. What if we wanted to try more clusters? Can we? We will learn to break the matrix into more groups in a later section. For now, let's learn to identify two groups like those who were in the two literary houses behind me. What groups? Depends on the data you choose to use. In the exploratory exercise, I'll show you how to get the adjacency matrix for your Facebook friends if you have access to Mathematica. If not, I'll show you some data sites that you can go to look at things of interest to yourself. Then, try clustering. Do you get anything? You may not. Remember, there are a lot of clustering methods, and that's partially because you need them for different types of data. So, give it a whirl and explore this side of data science, and see if you can find groupies within data that interests you. ",
                                        "unit_id":"616dcfb01a4741ca847d053f456719ea",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6b3592d326c64cf49ca08b4be97e6a51",
                                "vertical_name":"Finding Groupies (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8d5e6ad671194cdf912f329498c016db",
                        "sequential_name":"2.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Social network",
                                            "Sports data",
                                            "Plain text",
                                            "Data science",
                                            "Undirected graph",
                                            "Adjacency matrix",
                                            "Grab",
                                            "Download",
                                            "Clustering",
                                            "Data",
                                            "Graph",
                                            "Activity",
                                            "Important",
                                            "Ll",
                                            "Matrix",
                                            "Show",
                                            "Perform",
                                            "Find",
                                            "Mathematica",
                                            "Cluster",
                                            "Code",
                                            "Matlab",
                                            "Run",
                                            "Form",
                                            "Ve"
                                        ],
                                        "data":" Exploratory Activity 2.3 Watch the video below and then download the codes clusterFB.m fbGraph.m fbData.nb to explore clustering of undirected networks. As you work, share your data and/or your insights about the data and/or analysis on the forum. EXPLORATORY ACTIVITY 2.3 VIDEO TIM CHARTIER: In this section, we saw how to create groups from data. To do this, you'll want data. I'll show you a spot to grab that data that you can cluster. You may want to find your own, which would also be great. In the past, I've had students grab network connections on Twitter, which can be fun. I'll show you how to grab Facebook data via Mathematica, which is only an option if you have Mathematica. But with the Facebook data, I'll show you how to cluster in MATLAB, so you can see what groups you can find on your data sets of interest. In this activity, I'd like you to let our class know number one, what data you clustered, and two, if you believe it was helpful or not. It could be that it isn't entirely helpful. What does your clustering find, and what does it miss? This is an important part of clustering. Again, there are a lot of clustering methods. This is because each has its own strengths. But with strengths, at least in this case, comes weaknesses. In our algorithm, it is very important that the data be modeled in a meaningful way as an undirected graph. So what are your nodes that you'll cluster? Then, what is the undirected edge? In Twitter, for instance, there is direction. I may follow you, but you may not follow me. So do you want to model that as an undirected network? If you do, it might work for certain types of questions and fail for others that need the direction to be included. So experiment, find data, cluster, and then interpret your results. These are all important steps of data science. So dig in and mind for meaning. Let me show you how to get started. So let's learn to cluster. First, let me show you where you can find some data sets, and then I'll show you how to download Mathematica data sets and run the MATLAB code. Mathematica-- you'll actually need the program. So it won't take long. So just see the wonders of Mathematica, if you happen not to have it, and then we'll see. So for this, I usually put in machine learning clustering data sets. You can try all kinds of other searches, but this one will quickly get you to a number of data sets. Here are a number of machine learning clustering data sets that my students have used. They looked in this larger set, as well. But I've also had people cluster athletes off of statistics, teams off of their statistics, and various other types of data. So it can be anything that you find interesting. In the particular lecture that we saw, we saw that I was using Facebook data. To do that I used Mathematica. So here we'll run the first program. And it's kind of neat, because Mathematica will pull down my Facebook data, and it actually clusters it into more clusters. So this is actually Mathematica's clustering of my Facebook friends. Then, here I'm going to form the adjacency matrix for the actual data that I have. So it's actually pulling down that graph data of my Facebook friends. And then it'll form that adjacency matrix that I have. Then, I'm going to cut and paste that into my code, so that I can actually use it in the particular clustering codes that I have. But it will take a moment to pull that down. If you don't have that, then what, again, you're going to want to do is go out and find your own data. And you can perform clustering just like I'm doing here. You just perform it in a slightly different way, in terms of what you're wanting. It's a social network, so remember, we're doing the Fiedler Method, so you're actually clustering on an undirected graph. So we have what we need here. Then we just say, show me the full output. And once it does that, it's going to actually form that adjacency matrix. So we'll see the adjacency matrix in a moment. It's fairly large. So it takes a moment to actually see. Okay, so now we have the matrix up here. And we actually want to take this, and we want to put it into MATLAB. So for that, I click right over here and then I say Copy as Plain Text. Once I've done that, I can open this particular code. And I've removed the matrix, and then I just say Paste. And then I close off the matrix and put a semicolon so I don't see it. Then I go all the way to the top, and I remove this particular parentheses, and then I save it. Now I'm ready cluster. So with clustering, it will actually read in that particular matrix. And then I actually reorder the rows, just so that we see even more of what's going on with the clustering. So I run it. And then there you see it. So I have the original matrix here with the dots being the non-zeros in the adjacency matrix. And then here I see it after one cluster. So go out and see what you can do with the data sets that interest you, share with the group, and let us know what you think. Remember, here you're clustering undirected graphs. So I mentioned earlier you could use sports data. If you do that, you're going to need to then turn it into a graph to figure out who's connected to who. Once you get that, you can use the Fiedler Method and see what you can uncover. Have fun. ",
                                        "unit_id":"f89dcb4e98d84fa094a1cf5e70a4bb40",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"790aa6304d924b0487731d2ee4d2924c",
                                "vertical_name":"Exploratory Activity 2.3"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"3473ec3ceb2d4348b89dbcb0bde65d01",
                "chapter_name":"Unit 3: Zombie Math \u2013 Decomposing",
                "sequentials":[
                    {
                        "sequential_id":"32d8c94fa4c14394abeb6ec5bf1fb303",
                        "sequential_name":"Introduction to Unit 3",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Computer graphics",
                                            "Data mining",
                                            "Image compression",
                                            "Image",
                                            "Explore",
                                            "Data",
                                            "Ll"
                                        ],
                                        "data":" Introduction to Unit 3 VIDEO TIM CHARTIER: In this unit, we'll decompose-- well, matrices. We'll explore a particular decomposition called the Singular Value Decomposition-- also known as the SVD. Then we'll see how to apply it to image compression, and then to remove noise from data. Then in the last section, we'll see how to use the SVD to down-sample an image. In this unit, some sections have a quiz and others have an exploratory activity, but not always both. In this way, we get the math down and then explore it in applications in computer graphics and data mining. ",
                                        "unit_id":"1070a305096346a0a783e9c68e0c2896",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"940e49a5ded242cc802e6f84955a5713",
                                "vertical_name":"Introduction to Unit 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Frobenius norm",
                                            "Image compression",
                                            "Image"
                                        ],
                                        "data":" What Will We Learn? Bookmark this page What Will We Learn? In this unit, we learn the singular value decomposition, also called the SVD, of a matrix how to compute the Frobenius norm of a matrix how to find a rank-k approximation of a matrix using the SVD how to use the SVD in image compression how to use the SVD to reduce noise in a dataset how to downsample an image using the SVD ",
                                        "unit_id":"900de8d208394040b6a44ff16a648cca",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"812f8836ea0c46559b015f4472f69645",
                                "vertical_name":"What Will We Learn?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"da7a3e6687fd43aa82a9bea001ad3d32",
                        "sequential_name":"3.1 Singularly Valuable Decomposition",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Frobenius norm"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn the singular value decomposition, also called the SVD, of a matrix how to form the matrix A from the matrices U,&Sigma;, and V produced by the SVD how to compute the Frobenius norm of a matrix how to find a rank-k approximation of a matrix using the SVD ",
                                        "unit_id":"8fde0fbfb0204e219df09ea84242436f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"94b6f3934cf24cbfaf710426cc269628",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Singular values",
                                            "Frobenius norm",
                                            "Gaussian elimination",
                                            "Linear combination",
                                            "Prime factors",
                                            "Square root",
                                            "Square matrices",
                                            "Image compression",
                                            "Lu factorization",
                                            "Matrix norm",
                                            "Matrix decomposition",
                                            "Diagonal matrix",
                                            "Matrix approximation",
                                            "Meaning",
                                            "Norm",
                                            "Decomposition",
                                            "Singular",
                                            "Ll",
                                            "Square",
                                            "Good",
                                            "Compute",
                                            "Denoted",
                                            "Diagonal",
                                            "Product",
                                            "Assume",
                                            "Approximation",
                                            "Decomposed",
                                            "Rank",
                                            "Compression",
                                            "Multiple",
                                            "Sigma",
                                            "Factorization",
                                            "Matrix",
                                            "Form",
                                            "Svd"
                                        ],
                                        "data":" SINGULARLY VALUABLE DECOMPOSITION VIDEO TIM CHARTIER: Let's take a look at the number 2015. It equals 5 times 13 times 31. By writing it this way, we've decomposed the number into its prime factors. A matrix can also be decomposed. Given matrices A, M, and N; if A equals M times N, then we say that the matrices M and N form a matrix decomposition of A, since their product equals A. For example, if A equals 1, 2, 3, 4, then A equals LU, where L equals 1/3, 1, and then 1, 0. And U equals 3, 4, 0, 2/3 . This is called the LU factorization of A, and can be obtained using Gaussian elimination. This factorization can be helpful for instance, if you're solving Ax = b, a number of times for different values of that right hand vector, b. In this unit, we learned another factorization of A, called the Singular Value Decomposition. It is also called the SVD. Computing the SVD is an interesting topic, and one that you can research if that interests you. We'll assume a computational tool like MATLAB or Python computes it for us. This allows us to quickly jump into applications that use this very powerful decomposition, that has a lot of theoretical components to it. Before we see applications, we still need to get a handle on the SVD, and how to create a matrix approximation with it. If we ask for the SVD decomposition of a matrix, what do we get? The SVD is defined by three matrices, and can be found for any matrix. Let's consider a matrix that has more rows than columns. Let B equal 1, 2, 3, 4, 5, 6 7, 8 9, 10, 11, 0. Performing the SVD on a matrix, always returns three matrices, which are generally denoted U, sigma and V. The decomposition of B comes from the fact that B will equal U times sigma times V. For the four by three matrix, B, we just saw, our computational tool would return U, which is a four-by-three matrix, as you see on the screen. For this B, sigma is a three-by-three diagonal matrix, meaning nonzero values only occur on the diagonal, which can have zero values themselves. Finally, the matrix V is the three-by-three matrix that you see on the screen. Again, U times sigma times V equals B. Note that U has the same number of rows and columns as B. V and sigma will have the same number of columns as B. Further, V and sigma are square matrices, meaning they have the same number of rows as columns. Now those diagonal entries that you see on the diagonal of sigma, are called the singular values. We will assume that the singular values of sigma are ordered from highest to lowest, with the highest value appearing in the upper left hand corner of that matrix sigma. We will soon see that the SVD gives us good approximations to an underlying matrix. When I say good though, in a good approximation, I'm thinking of some measurement of distance. An important measure of distance for the SVD is called the Frobenius Norm, which is defined as the square root of the sum of the squares, of all the elements of the matrix. This is the distance from the matrix A to the zero matrix, and can be written as you see on the screen. That's a lot to look at. In words, we square every element of the matrix, sum them, and then take the square root. It's easy to compute, and we'll see that it is quite helpful. Let's look at an example of using this norm. If A equals 2, 1, 2, -4, then when we find the Frobenius Norm, it equals the square root of the quantity, 2 squared plus 1 squared, plus 2 squared, plus -4 squared, which equals 5. This is a norm, and in fact, it is a matrix norm. The Frobenius Norm helps us see the power of the SVD. First we need to discuss what it means for a matrix to have rank K. A matrix has a rank 1 if every row is a multiple of the first row. The matrix M, which equals 1 1,1, 2, 2, 2, 4, 4, 4, is an example of a rank 1 matrix. We can also talk about a rank K matrix. A matrix has rank K if there exists K rows, such that all remaining rows are a linear combination of those K rows, and K is the smallest such number. For instance, if M equals 1, 1, 1, 1, 2, 1, 2, 3, 2, then it's an example of a rank 2 matrix. This is true, since you can add the first and second rows to form the third, and no other row is a constant multiple of another one. So that gives us that rank K approximation that we're interested in. The SVD can give us the closest rank 1 approximation of a matrix, as measured by the Frobenius Norm. Finding that rank 1 matrix with the SVD is easy. We take the first column of U, denoted by U1. The largest singular value, sigma 1 in the first row of V, denoted V1. To form the closest rank one approximation under the Frobenius Norm, we simply compute B1 , which equals sigma one, a scalar, times U1 times V1. The SVD can give us the best rank K approximation to our matrix, for any K you like, as long as the K is less than or equal to the rank of our matrix A. To find the rank K approximations, pick K, then form UK, which contains the first K columns of U. The second matrix, sigma K, is a submatrix formed from the first K rows and K columns of sigma, which forms a K by K diagonal matrix. Then VK equals the first K rows of V. Our rank K approximation is UK times sigma K, times VK. Let's see this in action, using our B from earlier. B again, equals 1, 2, 3, 4, 5, 6, 7, 8, 8, 10, 11, 0. We'll make the rank 2 approximation to B. Remember while it's possible to write code to produce this, stable and efficient methods already exist to compute the SVD. So we'll assume we already have the SVD in those three matrices, popping out of a program. When we request the SVD in a program, again we get back U, sigma, and V. For B, U is as you see on the screen. Again, U has the same number of rows and columns as B. V and sigma are as you see on the screen now. They have the same number of columns as B. Further, V and sigma are again square matrices. Now you can fully recover B by computing the product U sigma V. Instead we're going to form a rank two approximation to B. U2 is formed by using the first two columns of U. Sigma2 is a diagonal submatrix of sigma, taking the first two rows and first two columns of sigma. And finally we want V2. And that contains the first two rows of V. With that, we can form the rank two approximation, by finding the product U2, sigma2 times V2. We mentioned that this would be the closest rank 2 approximation under the Frobenius Norm. Well how close is that? Well, in the next unit, we'll look more at how close these approximations are, and how it helps us with image compression. But for now in this unit, we'll work on getting this math down. And then in the next units, or in the next sections, we'll dive into applications of the SVD, and in the next one, in compression. ",
                                        "unit_id":"db5513824e6b48e2a9a0821172f0fdcc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"af6d3afde39e418fbe89e2ff5dc648ab",
                                "vertical_name":"Singularly Valuable Decomposition (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5415116eb27e4600a94316ae4e37ab29",
                        "sequential_name":"3.2 Feeling Compressed",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" What Will We Learn? In this section, we learn how to reduce the amount of storage needed for an image using the singular value decomposition. ",
                                        "unit_id":"8fb4157ba0d648188f6b0fc282dd6e50",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5080e5d06487405aa152ad87defff161",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mars rover",
                                            "Compression algorithms",
                                            "Gray scale",
                                            "Column",
                                            "Image compression",
                                            "Print",
                                            "Stored",
                                            "Resolution",
                                            "Original",
                                            "Storage",
                                            "Approximation",
                                            "Grayscale",
                                            "Rank",
                                            "Blurry",
                                            "Matrix",
                                            "Ll",
                                            "Compressed",
                                            "Sending",
                                            "Create",
                                            "Reduction",
                                            "Image",
                                            "Pixel",
                                            "Singular",
                                            "Row",
                                            "Important",
                                            "Svd"
                                        ],
                                        "data":" TIM CHARTIER: In the last unit, we learned to decompose a matrix into three matrices using the singular value decomposition known as the SVD. We also saw how to create a rank k approximation to a matrix using the SVD. In this section, we'll use these rank k approximations to reduce the storage needed for an image-- although it's important to keep in mind we will lose some resolution in the image. We'll use SVD on matrices that store grayscale data for an image. For example, consider the matrix A. It will equal 78, 92, 59, 26, 166, 206, 26, 48, 74, 138, 165, 3, and then finally, 66, 151, 250, and 214. This corresponds to a four-by-four pixel detail of a print by Albrecht Durer. Each element of that matrix holds the gray scale value of the corresponding pixel in the image. So the pixel in the upper left hand corner of the picture has a grayscale value of 78. It's important to keep in mind that in grayscale, 0 is black in 255 is white. The entire image we'll consider is 648 by 509 pixels, so we'll have a matrix of that size. The elements of the matrix hold the grayscale pixels seen in the Albrecht Durer print called Melencolia. Now, we'll make rank k approximations using the SVD and visualize them as their own images. So as a place to begin, we'll create the rank one approximation with the SVD, and you see that image on the screen. Whoa, that's very blurry! But remember, rank one means every row is a multiple of the first row. So we can't expect too, too much here. Before seeing better approximations though, let's note the reduction in storage needed to produce this very blurry image. The original matrix stored 648 times 509, or 329,832 numbers. Are rank one approximation can be stored with 648 numbers from U, which is that first column. One singular value and 509 numbers from V, which corresponds that first row of V. So our rank one approximation requires storing only 1,158 numbers, or 0.35% of the original data. This huge reduction in storage led to our inability to see our image in recognizable form. So let's have less savings in storage. We'll increase to a rank 10 approximation that you see on the screen. Now, the rank 10 approximation is better than the rank 1, but still it's pretty blurry. So let's again look at the storage savings. This rank 10 approximation requires storing 10 column vectors of U, 10 singular values, and 10 row vectors of V. So the storage requirement is 6,480 plus 10 plus 5,090 numbers, or about 3.5% of the original image's storage requirements. OK, so now let's jump up to rank 50. We have that and the original image on the screen. Can you tell which is which? Well, it would be even harder if we raise the rank of the approximation. By the way, the original image is on the right. The SVD typically is not the method used in compression algorithms. Other methods exist that do an even better job. Still, this gives us a sense of how image compression can be done. We also saw an important issue in compression-- loss of resolution versus storage savings. In some contexts, it can be hard to tell the difference between the original and the approximation. In some cases, the lower resolution is very important. For example, if we were sending pictures from the Mars Rover, sending a lot of compressed pictures can help us see a lot of images and decide which ones we want resent in full resolution. In the exploratory exercise, we'll see how you do getting compressed with the SVD. So have fun and bring some of your own images ",
                                        "unit_id":"72d52bc852ee4ad0a8e4a83b7a87b20b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"29adc0a0bb26447a8aecd992791cd2bd",
                                "vertical_name":"Feeling Compressed (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8171e1e6735a4331abb40c8072b78220",
                        "sequential_name":"3.2 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Animated gif",
                                            "Image compression",
                                            "Resolution",
                                            "Low",
                                            "Fun",
                                            "Create",
                                            "Image"
                                        ],
                                        "data":" TIM CHARTIER: In this section, we saw how to use the SVD to create lower resolution images, so you get to go low-res in this activity. Try a few images and see which ones seem to work a better than others. How low of resolution can you make an image and find it acceptable? Another fun application is creating increasingly low-res images and then combining them into an animated GIF. These are a number of ways you can explore using the SVD in image compression. Let me show you how to use MATLAB for this exploration and then create a low resolution image that you can use for this activity. So let's learn to do image compression using the Singular Value Decomposition. Here, we load the image, then we say what rank K approximation we want. We plot the original image, then we create that rank K approximation with the SVD and we plot it. So when we do that, there we go. We have the original image and the new image, as we see here. So you can see it's a little grainier. So we could go way down to something like five. That will be quite blurry, and it is, but if you see, you can actually make out certain elements of the image. And then you can go quite higher, make it something like 100, and then you can see that the images are close. If you expand it, enlarge it, then you begin to see elements of it that are grainier and harder to see. The last component at the bottom that you can comment out that return, and that will actually create a series of increasing resolution of the image, as you see here. So I have a rank 1, rank 34, rank 37, and so forth approximation to the image. And you can eitehr just look at them. Or I can go in and I can just look at what they are and see which ones I like, or I can create an animated GIF and have it slowly add more and more resolution to it. So it's up to you, but it can be a fun option. Rather than an animated GIF, you could just plot them to the screen. So have fun and help yourself compress and decompress using the SVD. ",
                                        "unit_id":"0605f8c0908441c6ae8c96b99c482690",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bbef7f8a7beb406780d91cb6707daca5",
                                "vertical_name":"Exploratory Activity 3.2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2ecbd6444c494915a380c434c5302fc7",
                        "sequential_name":"3.3 In a Blur",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" What Will We Learn? In this section, you learn how to reduce noise in a dataset using the singular value decomposition. ",
                                        "unit_id":"2d2a7256a4594cc2b40088f35db68942",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"71df097a484a410292c5e111fd0f0b54",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Singular values",
                                            "Wellesley college",
                                            "Linear interpolation",
                                            "Data compression",
                                            "Rank",
                                            "Ll",
                                            "Approximation",
                                            "Grid",
                                            "Drop",
                                            "Square",
                                            "Matrix",
                                            "Reducing",
                                            "Begin",
                                            "Data",
                                            "Image",
                                            "Noise",
                                            "Construct",
                                            "Function",
                                            "Svd"
                                        ],
                                        "data":" TIM CHARTIER: In the last section, we used the SVD for data compression, applying it to an image. In that application, we started with a matrix that stored a higher resolution image. Lower rank approximations to the matrix resulted in degradation in the data. Now, in this unit, it's almost like we're doing the opposite thing. We'll start with a matrix containing noise. And noise often occurs in data and measurement. Reducing it can help identify the underlying phenomenon that we're studying. For data containing noise, lower rank approximations can actually improve the quality of the data. In this section, we'll adapt ideas from the lecture notes of Dr. Andy Schultz of Wellesley College, also a Davidson College alum. To see this, we'll create data with some noise. We'll begin with the exact data by using a function, z equals sin of xy divided by 3. To construct the matrix, we begin with a square region going from 0 to 3pi over 2 in both the x and y directions. We'll make a grid over the square at increments of pi over 30 in the x and y direction. We'll place a vertex, and that's where we will evaluate the function and put that as an element of the matrix. An approximation of the underlying function can be made with linear interpolation, and we can see such an approximation on the screen. Now, we'll introduce noise to this approximation by adding random values between -0.1 and 0.1 to every element of the matrix. This produces the image you see now on the screen. Like the last section, we'll construct a rank k approximation to the matrix. In this case, we are taking approximations to the matrix with the noise that we induced. But what k should we choose? To aid in this decision, we turn to a graph of the singular values. Looking at the plot, we see a steep drop off in values beginning at the seventh largest singular value. That drop off is the signal of a k to choose. We'll take k equal to 8 and construct the rank 8 matrix approximation with the SVD. Now we plot the rank 8 matrix approximation. Notice how the noise is reduced. We don't entirely recover the original values before we added the noise. That's really asking too much. But this technique is used when you may know there is noise, but don't know where or how much there is. So having improvement in the data can be very important. The blurring of the image that occurred in compression aids in reducing noise in this case. So now it's your turn to explore this idea in the activity. Try adding noise. How much noise is, in a sense, too much? You might try a finer grid and see what happens. Maybe you want to return to images and see the effects visually. It's your turn to think about this idea and see how you approach this SVD de-blurring in your exploration, so dive in. ",
                                        "unit_id":"e02ba60bbcb945b39f388d93ec2983e2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f1061a79b02a4665a6ebdf0d20c0aa49",
                                "vertical_name":"In a Blur (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6f659df1d21947ebb6a198e713291955",
                        "sequential_name":"3.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Random numbers",
                                            "Singular values",
                                            "Goodness gracious",
                                            "Add",
                                            "Induce",
                                            "Pretty",
                                            "Noise",
                                            "Image",
                                            "Plot",
                                            "Function"
                                        ],
                                        "data":" TIM CHARTIER: In this section, we induced noise into a function and then used the SVD to reduce that noise. We didn't re-capture the original data, but we did pretty well. So what can we do? First, in our lecture our underlined function was z equals sin of xy divided by 3. You could try another function and see what happens. Then, I induced noise as random numbers between -0.1 and 0.1. What if you tried -0.2 and 0.2, or -0.3 to 0.3? What can you recover for those? Another option is to take an image and simply add random values to the pixels and again, see what you can recover of the original image before the noise was induced. Okay, let me show you how to do each of these steps in MATLAB so you can reduce the noise with the SVD. So here we're going to induce noise into a graph and then recover it. So I'm just going to show you the one that I did in the lecture. So this is adapted from the work of Andy Schultz, who's at Wellesley, which I point out here. So if you want to look at his original notes, you can. It's pretty close to what I do. So the first thing I do is create that grid. And then I find the z values evaluated at all those points. Then I simply plot that graph. And then here is where I induce noise. So I'm inducing the plus or minus 1.1. And that's where I induce it and then add it to those z values that I plot. Then I create the SVD. I find the SVD. I plot the singular values. Then I determine how many singular values, what rank k approximation am I going to use? I create the rank k, and then I plot it. So here you go. So there's everything. So here are those singular values, and there they are dropping off. Here is the original image. Here's the noise, and there's the de-noised. And so let's try a few less singular values. Where am I? Right there. So if I try 4, for instance-- here we go, boom. Goodness gracious, look at that. That's just not even the ballpark of what we're trying to do. So that one definitely was not what we wanted. So the other thing I could do is to take it back up to, like, eight. And this was mention mentioned in the lecture-- you could change it to like 0.2 and increase it. Hit Run. There you go. And then you can begin to see what you can recover and not recover, depending on the image that you have. So play around with it. You might want to try another function. You might want to try it on an image. I would really enjoy seeing what you do if you try that. And share it with the group. Have fun. ",
                                        "unit_id":"124c302c73e74d20b500fcc4f0f297fa",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"902e5d470c034da3ae19ee4c3a26e474",
                                "vertical_name":"Exploratory Activity 3.3"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2989c7bcb0124da18c955d0298b0061d",
                        "sequential_name":"3.4 Losing Some Memory",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Learn"
                                        ],
                                        "data":" What Will We Learn? In this section, you'll learn to downsample an image using the singular value decomposition. ",
                                        "unit_id":"c961ca7e0f65459d9a179fdc729d5596",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4c8915fb24664a6c812473eaf7fd1894",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square matrices",
                                            "Wikimedia commons",
                                            "Sign",
                                            "Matrix",
                                            "Positive",
                                            "Store",
                                            "Note",
                                            "Eigenvectors",
                                            "Color",
                                            "Image",
                                            "Negative",
                                            "Row",
                                            "Pixel",
                                            "Cluster"
                                        ],
                                        "data":" TIM CHARTIER: In our unit on eigenvectors, we saw how to cluster. The SVD can also be used for clustering. An application of clustering is in the down sampling of images, which can reduce the memory necessary to save the picture. Let's apply this idea of clustering to the lovely image of a mandrel from Wikimedia Commons that you see on the screen. Let's create a picture with pixels containing only the colors of black and white. The question is simply which pixels of that mandrel become black and which of them become white. Clustering will help us make that decision. There is more than one way to store color in an image. In this context, we'll take an n by m pixel image and store it as an n times m by 3 matrix. We call this matrix T. Each row of T contains the red, green, and blue intensities of a pixel in the image. We're now ready for the SVD, but we first need to recenter the values. All the values of T are non-negative. Since the values range between 0 and 255, we will subtract 127 from each value. Note you could pick another value, and you'll have that option in the activity. With this recentered matrix, we can apply the SVD. Note eigenvectors can be applied to square matrices. The SVD can be found for any matrix. This flexibility applies here, as we have a very long and skinny matrix. Now, we form the SVD and get U times sigma times V. The dimensions of U and T are the same. We will take the first column of U, which is called the left singular vector. Its first element can be associated with the same pixel that is associated with the first element in T. We can associate the second element of the singular vector with the same pixel as is associated with the second element of T. Associating every pixel in this way, we are now ready to cluster. Pixels that correspond to negative elements in the singular vector are put in one cluster. All other pixels are put in the other cluster. Then we decide what color to attach to each of those clusters. In this image, we will decide to use black and white. The color could also be chosen to be the average color of the pixels in the cluster. What if you want more colors? The SVD can be used to create more clusters. We can simply take the first and second columns of U to form the matrix U2. The first row of U2 corresponds to the pixel associated with the first row of T. The second row corresponds to the pixel associated with the second row of T, and so forth. We then look only at the sign of the numbers in each of the rows of U2. For all the rows that have elements that are positive and positive, we put those into one of our clusters. For all the rows that have elements that are negative and positive, we put those in another cluster. Then we look at the rows for all the elements that have the sign pattern positive and then negative, and we put those in a third cluster. And then finally, for all the rows that have elements that are negative and negative, we put those in our last and fourth cluster. So we now have four clusters. And all we do is attach a color to each of those clusters, which could be the average color of the pixels in that cluster. If we do that for the mandrel, here is what we get. So that's it. You are now ready to explore this yourself. Enjoy. I look forward to seeing what you try and what we produce together. ",
                                        "unit_id":"bb642fbd10094315a25cfeaa2c8a4ad1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bbd20bcf234e47b996a3b8dfe7f5367b",
                                "vertical_name":"Losing Some Memory (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9d24370f89274ed79533cf29f17b562b",
                        "sequential_name":"3.4 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "President barack obama",
                                            "Hard code",
                                            "Singular values",
                                            "Exhibit",
                                            "Pixel",
                                            "Run",
                                            "Code",
                                            "Mandrill",
                                            "Color",
                                            "Singular",
                                            "Top",
                                            "Downsample",
                                            "Ll",
                                            "Show",
                                            "Image",
                                            "White",
                                            "Matlab",
                                            "Cluster"
                                        ],
                                        "data":" Exploratory Activity 3.4 Watch the video below and then download the Matlab code: svdCluster.m to use the SVD to downsample an image. After you've created your image, upload it to the class exhibit here: http://math365.org/exhibit/contribution. If you need help filling out this form, you can refer to the instructions in the D003X Online Exhibit link in the top menu of this page. You can access the images used in the lecture below: image of a mandrill image of President Obama Exploratory Activity 3.4 VIDEO TIM CHARTIER: In this section, we saw how to downsample images using the SVD. I'll show you how to use MATLAB to do this, and then it is your turn to create your own image and share it with the group. I'll show you how to vary some parameters that make changes to the resulting image. Then it's your turn to create an image and upload it to the gallery that we have for the class. I really look forward to what you create. Let me show you how to use MATLAB to create your downsampled image. So let's downsample an image using the singular value decomposition. The first thing we'll do is we'll load our image. We'll get that image of the mandrill that we had and we'll get its size, and then we're going to actually cast it into a double. If you leave it the way it is, it won't work because the singular value decomposition needs that. If you remember, we actually subtract, and you can change that value. We'll see that in a second. Here, I'm moving it by 127. As you can tell, I have other values already preset that I like. I perform that subtraction, then I decide how many singular values I want. I find the SVD, then this is a matrix of ones. It's identifying all of the values in that u vector where they're positive, and that's going to help me cluster, and that's what I'm doing here. So here, I'm actually creating a matrix that has the cluster in which a particular pixel will reside, and they're all in powers of 2, as you see. So that is a way of identifying it. And then I simply color everything, so the image cluster is the actual image containing the pixel values. And here, I'm actually finding the average pixel color in each of the clusters and coloring them that way. And up here, I can hard code it a different way. So I'm choosing one singular value, and then I'll hit Run, so here we go. So there is the average pixel value of that mandrill picture that we saw. So what else could we do? Well, we can increase the number, so we could make it try two singular values, and you pick up the blue, and then we could say three. Given the size and the way I'm doing this, that's as many as I can pick. You can think through other ways to pick up more values here. I'm getting more colors because of having three singular values, and I'll have up to eight clusters. So let's take it down to one and see one thing you can change. You can change the colors to just be black and white, and then you can comment out these lines of code, and then you can run it and you just get a black and white image, as we saw in the lecture. So you actually get the black and white. Then I want to try it on one more image, just to show you. I have this image of President Barack Obama. And there he is with two colors, but I want to show you if I change the shift. So rather than that, I'm going to move it to here, and if you notice, you get a very different look. You pick up different values. So maybe I don't like that. I like something like there. And there, I picked up more of his hair, but I found an in between. That's a parameter that you can play with to see what you like. So let's leave it at 135, and then let me try three singular values. There you go. So the top of his head's a little different, but there's the value. So if I didn't like that, if I went, whoa, what's with that little black up there, that often has do with that shift. So I can try a smaller one, go back to 127. No, I'm still picking it up, so I could try 110, see what I get there. And then maybe go up to 150, see what that does, and so forth and so on. So you can play with it. Some images downsample in that way. Sometimes I don't like the way that it's automatically downsampling, so I'll just reduce the color tones as well. I'll do something like that and then look at what it looks like. So that lets you posterize an image so that you could save it with less colors. So have fun. I look forward to seeing what you create. ",
                                        "unit_id":"1b46526bdff843c9a652c1e73ecdc6c0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"88a6a69e1f3b464bb613905c151d6323",
                                "vertical_name":"Exploratory Activity 3.4"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"72b123ed1c324095969f5624b2cdba4c",
                "chapter_name":"Unit 4: What Are The Chances?",
                "sequentials":[
                    {
                        "sequential_id":"6dededbded2d43629f2d1c62b017fd55",
                        "sequential_name":"Unit 4 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Markov chains",
                                            "Board game",
                                            "Weighted average",
                                            "Google",
                                            "Ll"
                                        ],
                                        "data":" TIM CHARTIER: In this unit, we'll look at matrices where the elements sum to one in a particular row, or a particular column. In Sections 1 and 2, those entries correspond to probabilities which connect to the title of the unit. What are the Chances? In Unit 1, we'll learn about Markov Chains, which are the method of using matrices with probabilities to analyze phenomenon. We'll look at a board game and answer some questions about it. In Section 2, we'll see how Markov Chains played a big role in making Google the Google we know today. Then in Section 3, the matrices are no longer probabilities, but now coefficients of the weighted average used in animation. We'll be learning how Pixar makes the shapes in its movies, from the faces of its characters to the bark on trees in a forest. So, let's dive into this section. ",
                                        "unit_id":"d147ee411c1e4c169e8b40e75bb9fb6f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b0fe75bd92844af3b350f58a03255441",
                                "vertical_name":"Introduction to Unit 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Sergey brin",
                                            "Markov chains"
                                        ],
                                        "data":" What Will We Learn? In this unit, we learn how to use Markov Chains to study phenomenon, including board games the PageRank algorithm as proposed by Google founders Larry Page and Sergey Brin the subdivision algorithm used by Pixar to create surfaces in its movies ",
                                        "unit_id":"451f2f59a54e489b89e6e2d53aaa813c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"94ee59a3cdd940d889f3fd80a60a75df",
                                "vertical_name":"What Will We Learn?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"b64ab9526b244a06b9ee1e569a786c7b",
                        "sequential_name":"4.1 Caught in Chains",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Board game",
                                            "Transition matrix",
                                            "Markov chains",
                                            "Phenomenon",
                                            "Study"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn how to use Markov Chains to study phenomenon to create the transition matrix for a phenomenon to use the transition matrix to study a board game ",
                                        "unit_id":"e42af4e1db97430c8365b26d797d2948",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"660d62021dec498eb06a1e93c973a063",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Markov chains",
                                            "Web page",
                                            "Linear algebra",
                                            "Fourth power",
                                            "Transition matrix",
                                            "Game board",
                                            "Called",
                                            "Board",
                                            "Matrix",
                                            "Number",
                                            "Game",
                                            "Slide",
                                            "Create",
                                            "Begin",
                                            "Notice",
                                            "Turn",
                                            "Analyze",
                                            "Vn",
                                            "Compute",
                                            "Start",
                                            "Find",
                                            "Vector",
                                            "Square",
                                            "Move",
                                            "Row"
                                        ],
                                        "data":" TIM CHARTIER: The world is infused with chance. In this unit, we create matrices with probabilities to help analyze situations that involve randomness. To learn this type of application, we'll look at analyzing a board game called Chutes and Ladders, which is also known as Snakes and Ladders. The game originated in India as a game of knowledge, landing on a virtue resulted in climbing a ladder toward the god Vishnu. Another option was being swallowed by a snake, which resulted in death and a new start. In Chutes and Ladders, rather than being swallowed, players slide down a chute. The game is played with two or more players on a board with numbered squares on a grid. Players begin on the starting square and the first to reach the finishing square wins. This journey from beginning to end is helped and hindered by the ladders and chutes that appear on the game board. Let's see how linear algebra can aid us in analyzing the game. Rather than using the full size game, I've made a smaller game board to analyze where we have ladders and snakes. Here are the rules. The game starts on square 1. Reaching square 9 results in winning. On each turn, roll a die. If you roll a one or a two, do not move and stay on your current square. If you roll a three or a four, move ahead one square. And then finally, if you roll five or six, move ahead two squares. So, those are the basic rules. Now looking at the board, if you land on square 4, you slide down the snake to square 2. If you land on square 6, you climb the ladder to square 8. Then when you're on square 8, you can roll three, four, five, or six, and land at square 9 to complete the game. Now we will ask a couple questions, which will be answered with linear algebra. What is the minimum number of rolls or number of turns in the game. How many moves are necessary for it to be 50% likely that someone has won the game? To answer these, we'll use Markov Chains, which use matrices in which the elements correspond to probabilities. This means that the sum of each row of every matrix will be one. Our first step is forming what is called the transition matrix, which contains the probabilities of going from one square to another. Row one corresponds to the probabilities of moving off square 1. Row two corresponds to the probabilities of moving off square 2, and so forth. The element in row one, column two, is the probability of moving from square 1-- since I'm on row one-- to square 2 since I'm in column two. The element in row one, column three is the probability of moving from square 1 to square 3. OK, with that, we can form the transition matrix from the rules of the game that allows us to answer our questions. Let's form the first row of the matrix. Again, this corresponds to being on square 1. If you roll one or two, we stay on square 1. So there is a one-third chance of getting to square 1 from square 1. This means that the one-one element of the transition matrix is 1/3. If you roll three or four, we move to square 2. So the one-two element of the matrix is also 1/3. If we roll five or six, we move to square 3. So the one-three element is 1/3. We can't get anywhere else from square 1. So that gives us the first row of the transition matrix, and it equals 1/3, 1/3, 1/3 followed by six 0's, since, again, there are nine total squares on the board. OK, now let's move to if we were on square 2. There's a one-third chance of staying on square 2, or moving to square 3. There Is also a one-third probability of landing on square 4, which results in returning to square 2. So the second row is 0, 2/3, 1/3, followed by six 0's. Note the second element of that row became 2/3 since we have a one-third chance of staying on square 2 in a one-third chance of ending up back at square 2 after landing on square 4. So here is the entire transition matrix A. You may wish to verify the elements-- at least the third row to be sure you can create such a transition matrix. To analyze the game, we begin with a vector containing probabilities that sum to one. The game always begins on square 1, so this vector becomes v equal 1, 0, 0 followed by six more 0's. Why? Well, that tells us that with probability 1, we start at square 1. Where will we be after one move? This involves computing v sub 1, and that will equal the vector v-- which we just had-- times A, our transition matrix. When we do, we get 1/3, 1/3, 1/3 followed by six 0's. Exactly what we found earlier. Not terribly insightful. But notice we are multiplying v on the left of the matrix to get this. When you do, you get v1, and it tells us that you have a one-third chance of being at square 1, 2, or 3 after one move. So we can do a similar move to find out what would happen after two moves. v2 equals v1 times A, which equals 0.11, 0.44, 0.33, 0, 0.11, 0, 0, 0, 0. This indicates that after two moves, there's about an 11% chance you're still stuck at square 1. There's a 44% chance of being at square 2, a 33% chance of being a square 3, and an 11% chance of being at square five. So let's find the minimum number of moves in the game. To find this, we compute vn, which equals v sub n minus 1 times A. And we keep doing that until the last element of vn is nonzero. Why? This is telling us the first moment there is a non-zero probability of landing on square 9, which corresponds to winning the game. Well, when we do this, this happens when n equals 4. OK, well let's look back at the game board again. Can you verify that one could win in four moves? Well, you could start at square 1 and move to square 2, or start square 1, move two places, and land at square 3. Then go another two squares to square 5. Then you could go another two squares and go to square 7. And finally, win by going another two squares to square 9. What's the probability of this happening? Well, we could notice that this happens when you roll a five or six four times in a row. This is 1/3 to the fourth power, or about 0.01. But there is another way that you could get there in four moves. You could have also gone from square 5 or 6, which would've moved us to square 8. Well, what's the probability of that? Well, we don't need to do all the combinatorics. Linear algebra can do all of this for us. We just find v4 as you see on the screen. Note the last element is 0.037, which means that the probability of winning the game in four moves is about that percent. Possibly, it's possible, but it's not likely. You only have that probability of getting there. Our other question was how many moves are necessary for it to be 50% likely that someone has won. For this, we do a very similar thing. We compute v sub n equal v sub n minus 1 times A until the last element in vn becomes larger than 0.50. This happens for v10-- that's the first time you see it. And v10 equals the vector that you see on the screen. So it is possible that you could win in four moves, but generally it will take 10. If you know how long a turn takes, you can even compute how long the game will generally last. Note-- we could experiment with changing the game. Maybe rolling a one or two could result in not moving, but now rolling three, four, or five will move your piece one square and only rolling six moves you two squares. All we do now is re-calculate the transition matrix because that impacts those probabilities. Now computing similar computations as before, the minimum length of the game is still four moves. But now, that will only occur about 1% of the time. How about game length? Now after 15 moves, you are 50% likely to be done with the game. You can answer other questions about a game board too by using this type of analysis. For example, you might suddenly notice that you're always getting 0 in the vector v sub n for a particular element. It can be that that square is actually unattainable in your game. That happened to me when I was making a game board for this lecture. You could also perform such computations to see how likely different squares are to be landed on. This could help you determine rewards to offer on different squares. In the end, Markov Chains can tell you a lot about a game, even helping you improve or design it. On the course web page for this course, you'll see a handout for a larger game board that will have you ready for the exploratory exercise. Break out a game board and do some analysis, and share it with the group on the forum. Or make up your own game, and explain how Markov Chains help you think through the rules. Have fun. I look forward to seeing what you do. ",
                                        "unit_id":"16e4c99da876445baa9db2483fec359b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"774b018004b24a5f8bdc44b6cf22e1c8",
                                "vertical_name":"Caught in Chains (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"75fccc3fb39f480b8326b7b36bd8a3f5",
                        "sequential_name":"4.1 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Board game",
                                            "Markov chains",
                                            "Analyze",
                                            "Move",
                                            "Roll",
                                            "Probability"
                                        ],
                                        "data":" TIM CHARTIER: For this activity, you'll analyze board games with Markov chains. Find a board game and see what you can analyze. If you don't have one, make one up-- like I did with Snakes and Ladders-- and analyze it. In the lecture, I analyzed minimal game length and average game length. Try these questions and see what others might come to mind. Let me walk you through the code that I used to analyze Snakes and Ladders. You may wish to adapt it for your analysis. As you work on your activity, share your results with the group on the forum, so we can learn with each other. So let's learn to analyze board games using Markov Chains. So for that, we're going to look at Snakes and Ladders. So open snakes.m. Here at the beginning, I have my rules for the different types of moves you could make, with a one third probability you stay where you are, with a one third probability you move ahead one square, and with a one third probability you move two squares. And this is for the small game board that we saw in the lecture. Then I simply perform the analysis that we have. Now, the one thing that's a little different than the lecture is that I'm actually maintaining those probability vectors from roll to roll. And then I actually visualize it. So let's see that play itself out. So here I actually see all of that worked out. So this is after one roll. The column is the roll. On the first roll, I start at square 1, so that's completely black. Here, I have the one third probabilities of landing after square 1, 2, and 3. Then I see the probabilities after a second roll, a third roll, and a fourth roll, and that's where I see that first non-zero probability in the final one. So I just count 0, 1, 2, 3, 4, and then I see the various probabilities, as I'm moving down, in a colored way. So I could change those probabilities and say, oh, you know, let's say that you only go two squares with this. And let's make-- they add up to 1. So then I change that. And then I see the impact of the actual images that I have. And then I can also print G, so that I can actually-- G, and I guess it's just G. It doesn't matter which one-- and then I can actually begin to see the impact of what I'm doing in the vectors that I was producing. So anyway, this is a way to analyze a board game. You can use that code or use other codes and see what you can find. Have fun. ",
                                        "unit_id":"30ba5673db70474a938ca658c0da5f25",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1bae2fd5bed54ae2b87401867554e551",
                                "vertical_name":"Exploratory Activity 4.1"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7baaca779e9847a3bd47767aef43f232",
                        "sequential_name":"4.2 Googling Markov",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical theorem",
                                            "Search results",
                                            "Sergey brin",
                                            "Markov chains",
                                            "Google",
                                            "Pagerank"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn the PageRank algorithm as proposed by Google founders Larry Page and Sergey Brin how to use PageRank on a network of webpages how PageRank uses Markov Chains how a mathematical theorem is useful for Google's search results ",
                                        "unit_id":"bc466d0f28e64bf9a92c0ac6f878b9b6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e95570aa297244a294e973df626762c3",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Positive real numbers",
                                            "World wide web",
                                            "Search engines",
                                            "Linear algebra",
                                            "Search engine",
                                            "Web pages",
                                            "Big business",
                                            "Web address",
                                            "Graduate school",
                                            "Board game",
                                            "Decimal places",
                                            "Net worth",
                                            "Web page",
                                            "Transition matrix",
                                            "Directed graph",
                                            "Sergey brin",
                                            "Google matrix",
                                            "Square matrix",
                                            "Unit length",
                                            "Left eigenvector",
                                            "Return",
                                            "Web",
                                            "Represent",
                                            "Unique",
                                            "Internet",
                                            "Theory",
                                            "Work",
                                            "Algorithm",
                                            "Vector",
                                            "Pagerank",
                                            "Page",
                                            "Teleportation",
                                            "Higher",
                                            "Possibly",
                                            "Matrix",
                                            "Google",
                                            "Called",
                                            "Graph",
                                            "Jump",
                                            "Surfer",
                                            "Piece",
                                            "Length",
                                            "Square",
                                            "Determine",
                                            "Unit",
                                            "Eigenvector",
                                            "Node",
                                            "Element",
                                            "Model",
                                            "Left",
                                            "Quality",
                                            "Row",
                                            "Brin",
                                            "Follow",
                                            "Result",
                                            "Step",
                                            "Important",
                                            "Probability",
                                            "Question",
                                            "Teleport",
                                            "Entry",
                                            "Ll",
                                            "Rating",
                                            "Network",
                                            "Equal",
                                            "Theorem",
                                            "Time"
                                        ],
                                        "data":" TIM CHARTIER: Search engines like Google are big business. In 2005, Google founders Larry Page and Sergey Brin each had a net worth of more than $10 billion. Less than 10 years earlier in 1998, the duo had dropped out of graduate school at Stanford and were working out of a garage on their search engine business. There is also big business in the results search engines return. How often do you shop the web in order to get a gift? The Wall Street Journal reported that 39% of web users look only at the first result return from a search engine and 29% view only a few results. Again, there is big business in getting to the top of those rankings. How do such search engines work? That's a big question with an ever-changing answer. But there is one algorithm that shot Google to the top and differentiated them from the rest of the search engines. I like to think that linear algebra literally was a major player in creating Google as the Google that we know today. So let's learn that algorithm called PageRank. What do we want to have returned from a query to a search engine? We need web pages to be relevant to our query. We also need a sense of the quality of a web page because we want higher quality pages listed toward the top. In the sense or measurement of quality is what we will look at in this unit. With billions of web pages out there, how can we possibly determine the quality of a web page? Well, Google tackles this issue with the use of the PageRank algorithm developed by Page and Brin. Google determines the popularity of a web page by modeling internet activity. If you visit web pages, according to Google's model, which pages would you end up at the most? The frequency of time spent on a web page yields that page's PageRank. What is Google's model of surfing? Is someone tracking your surfing to build the model? Well, Google's model is for everyone, and it models us as random surfers where we choose randomly the links that we'll follow. In this way, the model stays away from making personal decisions about our preferred content. The PageRank model assumes that you have an 85% chance of following a hyperlink on a page and a 15% chance of jumping to any web page in the network where each is equally likely. So any time you're at a web page with links on it, you'll either follow the links or jump randomly on to another link in the network. Now if you're on a web page with no outlinks on it, like many PDF files or even video or audio files, then you're equally likely to jump anywhere on the internet because, again, there are no links. You could even jump back to the current page, and that can seem kind of odd. Why allow someone to jump back to the same page? Well, we'll see soon why you would want that to happen, and it has to do with the underlying mathematical theory. So the better question is possibly why let the model do this? And again, the answer is to guarantee an answer from the method deriving from the theory. This means that no matter how the world wide web is organized, we will always have a ranking come out of the algorithm. Always. How can we know? Well, a theorem, which is a wonderful part of math, tells us so. If the theorem says is true and we can show the theorem applies, we're set. Let's see this model of surfing in action on the very small network that you see on the screen. This is called a directed graph and it has six vertices, and those represent web pages. With the vertices are nodes of the graph being web pages, we then have directed edges or arrows coming out of those vertices from one vertex to another. That represents a link from one web page to another web page. So on web page one, there's a link you can click that will take you to web page four. On web page four, there are links to web pages two and five. And web page six has no links and is called a dangling node. By the PageRank model, if you're on web page six, then you will jump with equal probability to any web page in that network. Said another way, you have a one-sixth probability, since there are six pages in the network, of jumping to any given web page. Now if we're at web page one, you have an 85% probability of clicking the link that's on that web page to take your web page four, and a 15% divided by 6 probability of jumping to any web page in the network. Now notice this is very similar to the chutes and ladders game we applied mark-off chains in the last section. Now we look at the probability of moving from web page to web page rather than square to square. Let's call our transition matrix in this context G for Google. Now we're going to compute the first row of G for our small network. The entry in the first column equals the probability of moving from web page one to web page one. This only happens through what Brin and Page called teleportation, which means I don't follow a link, but just put in the web address and land at that web page. In our model of surfing, this happens 15% of the time. That's when we teleport. And at that time, every page is equally likely to happen. So each page has a 15 divided by 100 times one-sixth or 1/40 40 chance of being visited through teleportation from web page one. Now hyperlinks on a page are clicked 85% of the time. Web page one only has a link to web page four, so web page four will be visited through teleportation 1/40 of the time, and through web page one's hyperlink 85% of the time. So that means we have a 35/40 chance of visiting web page four after your first step of surfing when you begin at web page one. Therefore, the first row of G has 1/40 40 in every element except the fourth, which is 35/40. Now before producing the entire matrix, let's look at the sixth row. This corresponds to that node with no outlinks-- again, called a dangling node. Here we must teleport because there are no links, and we assume that all web pages are equally likely destinations. So that means that that entire row will have values of one-sixth. Finally, here is the entire matrix G. Note that it is a six-by-six matrix since we had six web pages. Now think about the size of Google's matrix. This is billions, possibly trillions of rows of length. It's truly amazing. Now we find the necessary probabilities for Google's rankings of web pages. That's what we really are looking for. So let's assume we start at web page one. We represent this with the vector 1, 0, 0 followed by zeroes for the remainder of the vector. To determine the probability of visiting each web page in the network after one step, we compute v times G, which equals v sub 1. This equals as you see on the screen. That's very similar to the chutes and ladders game that we played. The probability of visiting web pages after an additional step through the network are v sub 1 times G, which equals v sub 2, which again you see on the screen. This aligns again with what we did in the board game with making moves. However, at this time, let's note that v sub 2 equals v sub 1 times G, which actually equals v times G squared. Now if you work the math out, this actually does what's called telescoping. And you can find that v sub n equals v-- that original v that we had-- times G to the nth power. It's important to note that generally this isn't computed this way because that's not terribly computationally efficient for large networks of web pages. Still, it can be quick for the small networks that we'll often look at. So let's find v sub 50. That equals v times g to the 50th power, and it produces the vector you see on the screen. Now for this particular network, v sub 50 and v sub 51 are actually the same to five decimal places. In fact, v sub 100, v sub 200, v sub 1,000, v sub 10,000 are all the same when you truncate to that many places. What we have found is what's called the steady state vector. The probabilities have settled in, and as you can see in the vector, we expect to be at web page one about 26.8% of the time. Now let's return to PageRank. PageRank defines the rating of a web page or the quality of it as the probability assigned to that web page through this type of process. Said another way, if we keep iterating, what does that web page's probability settle to? That's its PageRank rating. The higher the rating, the higher the quality of the page as measured by PageRank. The vectors that we're finding is again called the steady state vector. The steady state vector has the property that v equals v times G. That means it's what's called a left eigenvector of G since we're multiplying the vector on the left. The associated eigenvalue is 1 since the vector is not changing when multiplied by G. So now, how does Google know that for any network-- any network of web pages, it can find such a steady state vector? The PageRank model assumes a surfer can, at any stage, jump to any other web page. That will be very important. Well, this results in positive entries in that transition matrix, which according to Perron's theorem, guarantees a unique steady state vector. Well, with something that powerful, let's see the theorem. Here's Perron's theorem. Every square matrix with positive entries has a unique eigenvector of unit length with all positive entries. This eigenvector's corresponding eigenvalue has only one associated eigenvector, and the eigenvalue is the largest of the eigenvalues. Let's walk through some of this theorem and look at it in the context of Google. First, that Google matrix G is a square matrix and all its entries are positive real numbers. The last requirement for this theorem to be used is that this is, again, that the matrix has positive entries. Teleportation is what guaranteed that we would have positive entries in that matrix G. Remember the fact that we said that you could teleport back to yourself. That makes that diagonal element a positive entry. So suddenly, we're guaranteed that no matter how much the web changes or what set of web pages Google indexes, the PageRank vector can be found and it will be unique. So we can find when our networks' probabilities settle down. We know what will happen and that the answer is unique again by Perron's theorem. So we find that v as you see on the screen for a small network, and it tells us that a random surfer will visit page one approximately 30% of the time, page two about 11% of the time. So web page one is ranked higher than web page two. Again, the higher the rating, the higher the PageRank of the associated web page. Will we always see it at the top of the rankings? Will web page one always be before web page two regardless of the query? No, as search engines depend on the query. But this is a piece of the returned rankings since the quality of the web page is an important piece of that. How does this help search engines? It pays to have recommendations from a web page with higher PageRank-- that helps your page go up in the rankings. There are companies that you can pay to boost your PageRank, and they are, as you probably suspect, very aware of what we just learned. So let's move to the exploratory exercise and dive into the linear algebra of search engines. Remember, if you have any questions, you might just want to Google it. Have fun. ",
                                        "unit_id":"8486d70a94954d0ca5838fd89881af21",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bcf846d4a4374781b5d2003ecc2cc616",
                                "vertical_name":"Googling Markov (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"442d8e5622e442d482f6cfbc7ecd8494",
                        "sequential_name":"4.2 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Page rank",
                                            "Home page",
                                            "Web crawler",
                                            "Sergey brin",
                                            "Web pages",
                                            "Step back",
                                            "Sports data",
                                            "Matlab",
                                            "Open",
                                            "Ll",
                                            "Activity",
                                            "Written",
                                            "Analyze",
                                            "Back",
                                            "Directed",
                                            "Davidson",
                                            "Show",
                                            "Network",
                                            "Fun",
                                            "Data",
                                            "Code"
                                        ],
                                        "data":" TIM CHARTIER: In this activity, you get to work with the page rank algorithm as proposed by Google founders Larry Page and Sergey Brin. For it, you'll need data. You'll need directed networks to analyze. You may want to find your own. I'll show you how to use code written by MATLAB founder Cleve Moler. He has a web crawler and code to compute page rank. I use these codes in class here at Davidson College. It is great fun to share these ideas, step back, and watch the students' exploration begin. I hope the same happens for us. I'll show you the codes in a moment, but remember, you can use other data. For instance, you can use page rank to analyze sports. You simply create your networks from the scores and have them be directed according to who won and lost. Page rank doesn't always work well for sports but it can, so think carefully about it if you move in that direction. Let me show you the code that we have ready for you. So let's learn to create page rank on a network of web pages. You might want to run page rank on something else, but let me show you how these work. These codes are written by Cleve Moler, the founder MathWorks. He's the creator of MATLAB. And so this really shows you what you want to do, this little code right here. And so you take that. This is in surfer.m. It's a web crawler. I'm going to take this down to 50. And then you pick your starting spot. I'm going to take Davidson.edu. You hit Enter. And now what it's doing is crawling around and making a web network of 50 web pages. That's what it's doing. So you just wait. I'm at page 38 right now, 40. It takes a little bit. I didn't make it 500 because that takes a little while to actually open up. There it is. It's returned, so I have u and g. Then I simply open pagerank.m, and then the P that you see there is actually the probability of teleportation, so that's the 0.85. And you can change it to other things if you want. And then this walks through finding page rank. So here we go, x equals page rank of ug 0.85. Let me check that that's correct. Yep, ugp, and p is 0.85. There it is. There is the histogram. I didn't put a semicolon, so I got x back, and then we see the page rank. So Davidson's home page is number one, then comes Instagram, then Davidson Wildcats, and so forth and so on. So that can be quite fun. It can be quite interesting to see what you have. So you can use that on web networks of your own or you can use it and adapt it for other things. For instance, like I mentioned in the lecture or in the activity warm up for this, you could use it in sports data as well. Have fun. ",
                                        "unit_id":"64035164c3144ab2aa4d3ba0b5c18bf0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"eba209bfdc3645c1a9063e05d65d449f",
                                "vertical_name":"Exploratory Activity 4.2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f4dfec9993eb4b7e9af2755df6469ce6",
                        "sequential_name":"4.3 Animated Eigenvectors",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" What Will We Learn? In this section, we learn the subdivision algorithm used by Pixar to create surfaces in its movies how eigenvectors play a role in this process ",
                                        "unit_id":"b9826106530f42c6a03ea7265a890f69",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"202e7aa378324acd961ebb95fa0cddcd",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Tree bark",
                                            "Finding nemo",
                                            "Three dimensional space",
                                            "Page rank",
                                            "Infinite number",
                                            "Line segments",
                                            "Line segment",
                                            "Arbitrarily large",
                                            "Smooth curve",
                                            "Animation studio",
                                            "Left eigenvector",
                                            "Computer",
                                            "Award",
                                            "Weighted average",
                                            "Jerry",
                                            "Animated",
                                            "Smooth",
                                            "Pixar",
                                            "Shape",
                                            "Call",
                                            "Split",
                                            "Tony",
                                            "Animation",
                                            "Ll",
                                            "Eigenvector",
                                            "Curve",
                                            "Story",
                                            "Counterclockwise",
                                            "Add",
                                            "Location",
                                            "Simply",
                                            "Part",
                                            "Row",
                                            "Learn",
                                            "Converging",
                                            "Cn",
                                            "Clockwise",
                                            "Begin",
                                            "Polygon",
                                            "Step",
                                            "Found",
                                            "Infinity",
                                            "Meet",
                                            "Replace",
                                            "Averaging",
                                            "Film",
                                            "Subdivision",
                                            "Average",
                                            "Square",
                                            "Smoother",
                                            "Work",
                                            "Splitting",
                                            "Vertex",
                                            "Find",
                                            "Point"
                                        ],
                                        "data":" TIM CHARTIER: The Incredibles, Finding Nemo, Up, Brave, Toy Story 3, and Monsters University. What do these movies have in common? For one thing, they are all Pixar films. There is another answer. These films all use linear algebra extensively. In fact, linear algebra, eigenvectors in fact, help create the beloved characters in the movies we just mentioned. Eigenvectors? Seriously? Indeed. Before learning Pixar's method, let's discuss overarching steps in animated movie-making. Animation begins with storyboarding, and with the story comes characters. The characters must be designed and then built in a computer so they can be animated. The models of the characters are created with wireframes. Then the characters are given texture and shading, which adds a very important element of realism to Pixar's animation. A big step in animation occurred with the animated short called Jerry's Game. With this film, Pixar introduced the process of subdivision. Let's see how the algorithm works. Actually, let's listen to Tony DeRose of Pixar Animation Studios and hear him talk about subdivision. Then we'll learn it together. TONY DEROSE: So we use subdivision to represent surfaces of complex shapes. So think of the face of one of our characters, for instance. And before we talk about the surfaces in three-dimensional space, it's a little easier to talk about how to make a smooth two-dimensional shape. So let's think about, say, how to make a smooth curve in two dimensions. And the way subdivision works is you start out with a very crude shape, maybe even just a four-point polygon, and you create a smooth object by repeatedly doing a couple of simple steps. The first step is called split, and that's where you add midpoints to edges. So that's a really, really easy computation. And the second step is called average, where you reposition all those points, again, say, using midpoints. And after one stage of splitting and averaging, you can go from, say, four points to eight points, and that's a little smoother. You do it again. You go from 8 points to 16 points. That's smoother still. And mathematically speaking, we do it an infinite number of times. And in the limit then, those polygons, those subdivided polygons, converge to something that, if you're careful, is smooth. And that same idea of splitting and averaging repeatedly also works for surfaces. And that's the basis of how we create all our complicated shapes. TIM CHARTIER: So let's see how subdivision works in 2D as Tony just described. We'll begin with a square. Then, just as Tony said, for each line segment we take the step called split and find the midpoint of each line segment. Next, we replace the vertices of our square with points found by a weighted average. To begin, we'll replace each vertex of our square with the average of its value and the next midpoint in the clockwise direction. This creates a polygon with eight points. We can repeat this process. We find the midpoints of all the line segments with the splitting step. Then we replace the vertices of our current polygon with an average of the vertex and the next midpoint in the clockwise direction. If we continue to loop through this process, we get a smoother and smoother polygon. In the limit, that is if we could do this infinitely many times, we would have a smooth curve. Note how the polygon changes with each iteration. What can we say about the curve that would be produced after infinitely many steps? First, two consecutive points get closer and closer in each iteration. So in their limit, they meet. If you look carefully, we know at every step where two points will meet. They'll meet at the midpoint of a line segment on the current polygon. So we know at every step points that lie on that final smooth curve. At the first step, we have four of them, the midpoints of the four line segments of our polygon. At the second step, we have another four midpoints, giving us another four points on the final curve. How does this help? Well, look at this wireframe image of Jerry's hand. Now look at his hand after subdivision. Another interesting aspect is that we can change the resulting curve by only changing the placement of the initial points. Watch as I move one of the vertices of my original square. Subdivision was a big step in animation. In fact, this advancement led to Tony DeRose winning, among his various awards, an ACM SIGGRAPH Computer Graphics Achievement Award. Even in 2D, subdivision can be done in several ways. For example, we can use other averages. For instance, for each vertex, I'll now take the next point in the clockwise and counterclockwise directions and average their location with two parts of the vertex itself. I'll call this the 1-2-1 rule. Let me show you. Here we see the split just like before and the average, which uses the 1-2-1 rule. Note how the vertex moves each time. What is the final location now? With our 1-1 rule that we used, we saw that it would be the midpoint. But what would it be now after infinitely many steps? Not as easily seen. Linear algebra, however, can help us. I'm going to look at a line segment after splitting my curve. I'll call A0 and C0 the vertices that are counterclockwise and clockwise to my vertex B0. I'll perform subdivision and create the point C1, A1, and B1. A1 is created by splitting, so its value equals A0 plus B0 divided by 2. Similarly, C1 is B0 plus C0 divided by 2. But what about B1? That is created with our averaging, which, in this case, is the 1-2-1 rule. So B1 is created as an average of one part A1, the midpoint we just found, and one part C1, which is the other midpoint we just found, and again, two parts B0. So this equals A1 plus C1 plus 2B0, that quantity divided by 4. Or substituting, I get 1/4 times the quantity A0 plus B0 divided by 2 plus B0 plus C0 divided by 2 plus 2B0. Well, when I work that all out, that equals A0 plus 6B0 plus C0, that quantity divided by 8. We just found A1, C1, and B1 from A0, C0, and B0. Let's find An, Bn, and Cn but use matrices this time. We want to find a matrix P times the vector A sub n minus 1, B sub n minus 1, C sub n minus 1. That multiplication will give us A sub n, B sub n, C sub n. Leaning on what we just did, we can find that. In particular, that matrix P equals 1/2, 1/2, 0; 1/8, 6/8, 1/8; 0, 1/2, 1/2. The first row helps us find A sub n, which equals, again, an average of A sub n minus 1 and B sub n minus 1. The other rows are the formulas we just found a bit earlier. So P times the vector A sub 0, B sub 0, C sub 0 gives us A sub 1, B sub 1, C sub 1. And P times the vector A sub 1, B sub 1, C sub 1 gives us A sub 2, B sub 2, C sub 2. Ah, but notice, P times the vector A sub 1, B sub 1, C sub 1 equals P squared times A0, B0, C0. Trying this one more time, P times the vector A sub 2, B sub 2, C sub 2 will give us A sub 3, B sub 3, C sub 3. And P times A sub 2, B sub 2, C sub 2 equals P cubed A0, B0, C0. Well, if you look carefully, that means that A sub n, B sub n, C sub n equals P times the vector A sub n minus 1, B sub n minus 1, C sub n minus 1. And that equals P to the n-th power times A0, B0, C0. Again, where are the points converging to as n gets bigger and bigger? Well, this analysis helps us with that. First, the points are getting closer and closer together. So A sub n, B sub n, and C sub n are going to converge to the same point in their limit. But where will that point be? To answer this question, we find the left eigenvector of P. For this, you simply find the eigenvectors of P transpose, which are the right eigenvectors. In fact, you simply want the left eigenvector associated with the largest eigenvalue, which is 1, which is very similar to what we were doing with page rank. For our matrix P, we get that that eigenvector is 1/6, 4/6, 1/6. We use these values as a weighted average. So we'll look at A1 plus 4B1 plus C1 divided by 6. Now remember, A1 equals A0 plus B0 divided by 2, C1 equals C0 plus B0 divided by 2, and B1 equals A0 plus 6B0 plus C0 divided by 8. We make those substitutions, and we end up with A1 plus 4B1 plus C1 divided by 6. That will give us 1/6 times, making those substitutions, A0 plus B0 divided by 2 plus C0 plus B0 divided by 2 plus A0 plus 6B0 plus C0 divided by 2. You work that out, and that equals A0 plus 4B0 plus C0 divided by 6. What does that mean? That means that A0 plus 4B-- or I'm sorry-- A1 plus 4B1 plus C1 divided by 6 equals A0 plus 4B0 plus C0 divided by 6. OK? Well, that means that A2 plus 4B2 plus C2 divided by 6 also equals A0 plus 4B0 plus C0 divided by 6. Well, that means that An plus 4Bn plus Cn divided by 6 also equals A0 plus 4B0 plus C0 divided by 6. Well, let's call A infinity the point that A sub n converges to as n gets arbitrarily large. Our work shows that A infinity plus 4B infinity plus C infinity divided by 6 equals A0 plus 4B0 plus C0 divided by 6. But remember, A infinity and C infinity are converging to B infinity since the points get closer and closer to each other. So we can substitute A infinity and C infinity for B infinity, giving us B infinity plus 4B infinity plus B infinity divided by 6 equals A0 plus 4B0 plus C0 divided by 6. What does that give us? That gives us the placement of B infinity. B infinity equals A0 plus 4B0 plus C0 divided by 6. Right there is what we want. We know in one step where that point will lie on the curve. For the 1-1 rule, we saw it earlier as the midpoint of the line segment. Now we have a formula for the 1-2-1 rule. What's the formula? It came from that left eigenvector. This is how Pixar creates surfaces for its movies. In what parts of a Pixar film do we see the result of eigenanalysis? Well, we're going to ask Tony DeRose and hear his answer. TONY DEROSE: There's subdivision in just about anything that deforms, so faces, hands, clothing. We also use subdivision for things that don't deform. We use it a lot of times for things like buildings, blades of grass, tree bark. So just about every surface you see these days is built using subdivision. TIM CHARTIER: So again, what do the movies The Incredibles, Finding Nemo, Up, Brave, Toy Story 3, and Monsters University have in common? In a sense, in all of them you are seeing eigenvectors, or at least the result of eigenanalysis on the screen. Thanks to Tony DeRose for sharing with us and for helping us learn this application of linear algebra. In the activity with this lecture, you'll get to experiment with subdivision. You'll even get to animate your shapes and become, in a sense, your own animation studio. ",
                                        "unit_id":"af80a4a5ca714ff2bda8f48445337e7e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0365f618e9f9464c89539d652a29bc6a",
                                "vertical_name":"Animated Eigenvectors (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2f90288333454abf90334236b3069a15",
                        "sequential_name":"4.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Web application",
                                            "Smooth",
                                            "Ll",
                                            "Application",
                                            "Split",
                                            "Average"
                                        ],
                                        "data":" TIM CHARTIER: In this activity, you get to experiment with subdivision in two dimensions. We won't find eigenvectors in the exploration, but you could if you wish for any averaging that you choose. That would allow you to know the exact points on the limit curve. Let's see how to find smooth curves the Pixar way and let's see how to animate them. After you create an image, share it with the group. It will be fun to see what we are creating. Here's the web application we have ready for you thanks to David Borland of Renaissance Computing Institute, who created this application in D3JS for us. All right. Let's learn to do subdivision. So to do that, go to math365.org/lifeisli near/subdivision/subdivision.html. We have the square that we saw in the video, and then we're just going to use the one-one rule, and we'll split, and then we'll average. Then we'll split and then we'll average. You may want to do both steps at the same time. We'll go one more. And then, as we saw in the video, you can actually animate this. What I particularly like is that David Borland put in the ability to take out those outlay points, and then you can actually animate here. So you can, for instance have it breathe in like that. So anyway, it's kind of silly but kind of fun. So then we'll try the one-two-one rule, and we can split, split on that. Let's try it again. So the one-two-one rule, and we split and average, split and average. And then again, you can animate this as you wish. It's also fun to try other weights. These weights are actually coming from Pascal's Triangle, and the farther down Pascal's Triangle that you go, the smoother the underlying curve that you're going to get that you have, but you could also use completely different ones. For instance, let's just reset it, and then you could take 1, -2, 3, for instance. You can split and average-- whoa-- split and average, split and average, subdivide, subdivide. You see there. So this is actually a fractal that is nowhere smooth. And there again, you can actually animate it. All right. So see what you get, share it with the group. I really look forward to seeing what you make subdividing the way that Pixar does. Have fun. ",
                                        "unit_id":"13b7dc79d9d0430ebca4f4217a41c532",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b251754aedc541db94af1352a493c8ed",
                                "vertical_name":"Exploratory Activity 4.3"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"b9725d1311ef4d3e8e11b1fccbcad1fe",
                "chapter_name":"Unit 5: Mining For Meaning",
                "sequentials":[
                    {
                        "sequential_id":"bbe69b093e4d4528916bbfcfe645d93d",
                        "sequential_name":"Unit 5 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Facial recognition",
                                            "Linear algebra",
                                            "Data science",
                                            "Recommendation systems",
                                            "Data",
                                            "Find",
                                            "Unit",
                                            "Pca",
                                            "Meaning",
                                            "Recommendation",
                                            "Ll"
                                        ],
                                        "data":" TIM CHARTIER: This unit focuses on data science. Our world is filled with data. Data sets of increasing size are created all the time. Linear algebra can play in a very important role in mining through the data to find meaning, or simply handling the mere magnitude of the data. We'll begin this unit with a method called Principal Component Analysis, and use it in the context of movies. Will find, in a sense, computational or mathematical genres of films. We'll do this only by using the ratings of movies by users-- real people. From there, we'll see how to use PCA in the context of facial recognition. We'll disguise a United States president, and see how it recovers the underlying face. Along the way, we'll see how PCA connects to the SVD that we learned in Unit 3. The last section in this unit shows how to use the SVD in recommendation systems. When you see a recommendation on Netflix, for instance, how is this done? We'll see how the SVD can be used for such an application. So let's get ready to dig into some larger data sets, and mine for meaning with linear algebra. ",
                                        "unit_id":"d72c4761517042c1bcb92686dc3e94c4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3b351379e4404b82b0d9df94527c65b9",
                                "vertical_name":"Introduction to Unit 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Principal component analysis",
                                            "Recommendation systems",
                                            "Facial recognition",
                                            "Pca"
                                        ],
                                        "data":" What Will We Learn? In this unit, we learn the method known as Principal Component Analysis, also known as PCA how to use PCA to create mathematical genres of movies the connection between PCA and the SVD how to apply PCA to facial recognition how to use the SVD for recommendation systems ",
                                        "unit_id":"b3ebc912af2845baa05709546aae06ce",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a67c474700fe43c9b38a5b16dacaf469",
                                "vertical_name":"What Will We Learn?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"dcb306ea142c4dd7a623c57cf13b7ae4",
                        "sequential_name":"5.1 Principal Component Analysis and the Movies",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Principal component analysis"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn the method known as Principal Component Analysis, also known as PCA how to use PCA on a dataset containing user ratings of movies how to create mathematical genres of movies from a dataset of user ratings of movies ",
                                        "unit_id":"2c53db68a7384aa99fb89dde0f28bab1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"89805320e46f4a0c93adc3ffe17ea2a3",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Principal component analysis",
                                            "Empire strikes back",
                                            "Star wars",
                                            "Snow white",
                                            "Cosine similarity",
                                            "Data science",
                                            "Finding",
                                            "Create",
                                            "Film",
                                            "Science",
                                            "Sigma",
                                            "Find",
                                            "Detail",
                                            "Vector",
                                            "Angle",
                                            "Data",
                                            "Svd",
                                            "Movie",
                                            "Row",
                                            "Matrix"
                                        ],
                                        "data":" TIM CHARTIER: In this unit, we look at some applications in the area of data science. A well-used tool in this field is the SVD, so you'll see it used a lot in this section. Keep in mind there are other tools too. Remember that the SVD decomposes any matrix into three matrices, U, sigma, and V. If you have a matrix A, then the SVD will give you a equal U times sigma times V. So let's see how to use this to mine through data for information and meaning. In data science, you need data in an algorithm. You also need a question. What are you looking for in the data? Many data sets can answer a variety of questions. First, our data will be the Movie Land's data set consisting of 100,000 ratings from one to five from 943 users on 1,682 movies. Our task will be finding similar movies simply from the ways users rate the films. The data will be stored in a matrix with 1,682 rows and 943 columns. So each row corresponds to a movie and contains the ratings by every user for that movie. Now, we'll use principal component analysis. Step one, subtract the mean of each row from each element in that row. Now, we are ready for PCA once we've made that step, and we will use it to create a lower dimensional approximation to the data. You could treat each row as a vector. That's an over a 900 dimensional vector. Pick a movie like Star Wars, then find the movie that's closest to it by finding the movie vector or the row of the matrix that is closest to that vector's ratings using some type of norm or sense of distance. We're going to use cosine similarity to measure this. That is, we find the angle between the two vectors, or cosine inverse of u dot v divided by the norm of u times the norm of v. That gives us the angle between u and v. The two vectors with the smallest angle are considered the closest, or in this case the most similar movies. So let's try this with the 1977 film Star Wars. But rather than comparing 900 dimensional vectors, we'll use PCA-- Principal Component Analysis-- to create 50 dimensional approximations to the ratings vectors. Remember, the SVD gives us U, sigma, and V. We take the first 50 columns of U, and that corresponds to a 50-dimensional point that approximates the 900th dimensional point we had when we took the whole vector. Can this really work? It seems like we're losing some information. Well, when we do this, we find the three most similar films to Star Wars as Return of the Jedi, The Empire Strikes Back., and Raiders of the Lost Ark. Turns out this is exactly the same if we use cosine similarity on the full vector in that nine hundredth dimensional space. So we don't lose anything? Well, things can change. Let's take Snow White and the Seven Dwarves. The full vectors find the top three movies to be Beauty and the Beast from 1991, Cinderella from 1950, and Pinocchio. When PCA is used, then the ordering changes to Cinderella, Pinocchio, and Beauty and the Beast. Is one better than the other? Well, more testing and even validation if possible would be necessary. Lower dimensional approximations have the ability to remove noise but can also blur an obscure detail in the full matrix. So there is a balance between reducing noise and losing too much detail. There is both an art and a science to using PCA. Yet notice the amount of information we gleaned from a lower approximation pointing to the power of such a method. OK. What movies would you try? You'll get your chance in the exploratory exercise with this activity. So have fun mining the movies. ",
                                        "unit_id":"54ffe87a61d64e2e8fd0574fbe6584a3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"94582a0762844397b905c23ce954ee53",
                                "vertical_name":"Principal Component Analysis and the Movies (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"29ccfec5276540099c6fc4cc514313ba",
                        "sequential_name":"5.1 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Empire strikes back",
                                            "Time stamp",
                                            "Snow white",
                                            "Star wars",
                                            "User id",
                                            "Escape code",
                                            "Lower",
                                            "Approximation",
                                            "Small",
                                            "Film",
                                            "Movie",
                                            "Data",
                                            "Mr",
                                            "Rating",
                                            "Ll",
                                            "Run",
                                            "Change",
                                            "Rank",
                                            "Open",
                                            "Make",
                                            "Code"
                                        ],
                                        "data":" TIM CHARTIER: In this activity, you'll explore the movie lens data set and make movie recommendations. In particular, we'll use a lower dimensional approximation to the data. In the lecture, we took the 900 dimensional data and lowered it to 50 dimensions. What happens when you lower the number of dimensions even further? Remember how we made lower resolution approximations to images? At some point, the image is somewhat recognizable but not much. What happens here? Pick a movie you know and give it a try. Let me show you the code and how to change the parameters for the exploration. Let's learn to use PCA in the movies. For that, you want to open PCAmovies.m, and then you have two movies that you can look at. So let's start with Star Wars, which is the first one we looked at in the lecture. So you're going to open the data on the user ratings, then you're loading the movies themselves, then it actually goes through and forms what we're interested in. This line right here is the rank k approximation, so this is a 51 rank 50 approximation to the data. It takes this a moment to run the code, and there you go. You've got Return of the Jedi, Empire Strikes Back. Well, let's make it bigger. Let's make it 100. This is a rank 100 approximation. You're keeping more of the data, and there it is. So you see 1, 2, and 3 are the same, but you already see a difference in 4 and 5. Then we can make it quite small. We can make it something like 20 and see what we get. So let's see. Yep, we still get Return of the Jedi, but then things change quite considerably at that point. But rank 20 is a pretty small approximation. Let's make it 50 again, and then we'll run up and we'll try Snow White. There we go. So we have Cinderella, Pinocchio, and Beauty and the Beast. Now, how do I know these names? That comes from right here. So here, I have Mr. Holland's Opus. Maybe I really like that film and I want to try it out. So I take that line and I copy it, and then I just paste it in here. So I say movie equal Mr. Holland's Opus 1995. Now I can find the movies most similar to that. Oh, I'm sorry. It has two of these, so I just put in one more for an escape code, and there you go. Now you can get Mr. Holland's Opus. And there they are. The closest is Jerry Maguire, and then the codes from that. So you can see what you think. I'm not sure Jerry Maguire-- I guess it's kind of a feel good film too. Then the other one is the data side, and the data is described right here, so you get those four columns. You've got the user ID, the item ID, the rating, and the time stamp, and that's what we're clustering is that rating data. See what you can find, share with the group, and enjoy compressing data. ",
                                        "unit_id":"a29145c647f24dd4b2affc4ee67ed7ad",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"89d2898b810f460ab7c6814e48f3a7af",
                                "vertical_name":"Exploratory Activity 5.1"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a9b4f67015604a86b5b6766c0178db91",
                        "sequential_name":"5.2 Seeing through a Disguise with PCA",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Principal component analysis",
                                            "Facial recognition"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn to use principal component analysis (PCA) in facial recognition the connection between the SVD and PCA ",
                                        "unit_id":"f1d3933c579b4855a8f9a24554ea25f0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"83b4ace504e24b34941ca40b2c9de94a",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Principal component analysis",
                                            "Singular values",
                                            "Presidential library",
                                            "Facial recognition",
                                            "Small data",
                                            "Dot product",
                                            "United states",
                                            "Square roots",
                                            "Image recognition",
                                            "Matrix multiplication",
                                            "Covariance matrix",
                                            "Library",
                                            "President",
                                            "Ll",
                                            "Recognize",
                                            "Image",
                                            "Pixel",
                                            "Eigenvectors",
                                            "Simply",
                                            "Approximation",
                                            "Eigenface",
                                            "Eigenvector",
                                            "Eigenfaces",
                                            "Matrix"
                                        ],
                                        "data":" TIM CHARTIER: In the last section, we found similar movies using the SVD and Principal Component Analysis. Now let's look at image recognition with these tools. Images can be stored as vectors or matrices. So a 200 by 300 pixel image can be stored as a 200 by 300 matrix. With PCA, we may need only 50 or 100 faces to create a good approximation to a set of 10,000 faces. Whose face? They are truly mathematical faces, as they come from the SVD or eigenvectors. In fact, they are sometimes called eigenfaces. Let's try this for a small data set of portraits of presidents of the United States as seen on the screen. Here, we see the connection of PCA with the SVD. The matrix containing the grayscale image of each image is converted into a vector. We then find the average image. So suppose we had three images. Then the average image would simply be 1/3 v1, the vector of the first image, + v2 + v3. The average president calculated for our set of presidents is seen on the screen. We then subtract the average image from each presidential image. Each of these mean subtracted vectors becomes a column of a matrix P for president. Then we form C, which equals P times P transpose, which is named C, since this matrix is known as the covariance matrix. We are interested in the eigenvectors of C. Because the number of rows of P equals the number of pixels in each image, which is in this case 50,000-- P is a 50,000 by 50,000 matrix-- finding eigenvectors would be really difficult, even for a supercomputer. It would take a lot of time. However, there are N images in the library. So in that case, there will be at most N minus 1 eigenvectors with nonzero eigenvalues. So our presidential library will have at most 11 eigenvectors with nonzero eigenvalues. To deal with the size of C, we instead look at P transpose P, which is only 12 by 12. Fortunately, the eigenvalues are the same for both systems. So we need the eigenvectors. If we have the eigenvector ui of P transpose P, then we can find the eigenvector we want. If u is an eigenvector of P transpose P, then Pu is an eigenvector of P times P transpose. Note, we went from looking for eigenvectors of a 50,000 by 50,000 matrix to a 12 by 12 matrix and simply at the end, lopping on matrix multiplication. So on the screen, you see six eigenfaces, which again, are simply eigenvectors of the six largest eigenvalues of C for our presidential library of images. Here, we see the connection to eigenvalues of C and singular values. The singular values of P are the square roots of the nonzero eigenvalues of C. Remember, the tendency of the magnitude of singular values drops very quickly. This allows us to approximate a large collection of images, like 5,000, with only a small subset of eigenfaces. In the case of our presidential library of images, we only have a dozen. Nonetheless, let's see how to use half of them. We'll use that to recognize President John F. Kennedy with a minimal amount of disguising, as we see on the screen with the sunglasses. We subtract the average presidential image that we found earlier from this new image-- this disguised image. Then we need to know how much of each eigenface to add for our approximation. We compute the dot product of our mean subtracted new image in each eigenface. We'll call this dot product D sub i, where i is the i-th presidential eigenface. Sum the dot product of Di and the eigenface. Then add that average presidential image, and that gives you our approximation. And here is our recovered John F. Kennedy. Remember, we're doing that with only six eigenfaces, which are eigenvectors. This is part of the power of PCA in facial recognition. One can use a large library of images, reduce it to a much smaller subset, and then use that to recognize a face and recover what you see as an approximation, even when there's disguising. So what images would you try? What would you try to recognize? In the exploratory exercise, we'll explore this idea more. So think about it. It can be fun and also enjoyable to see how much disguising do you need to fool the algorithm. So I look forward to seeing what you try. ",
                                        "unit_id":"4e2ae7c6f39047e29b3c3ee238f23a3a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a4b2439ad72045d4a91a614935102bd5",
                                "vertical_name":"Seeing through a Disguise with PCA (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3bb842da082a4c05bf4f3b7fa148452f",
                        "sequential_name":"5.2 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Web page",
                                            "Image recognition",
                                            "Online application",
                                            "Directory",
                                            "Jfk",
                                            "Edit",
                                            "Make",
                                            "Show",
                                            "Application",
                                            "Online",
                                            "Image",
                                            "Put"
                                        ],
                                        "data":" TIM CHARTIER: There are a number of ways to play with the ideas of this lecture. First, you may want to disguise the pictures and see when you make an image unrecognizable. I'll show you an online application that will allow you to edit an image for disguising. I put the sunglasses on President John F. Kennedy with Photoshop. If you have that or similar software, that's another option. You may also want to try another set of images and see what happens. Again, share with the group as you make discoveries. And let's dive into this application of linear algebra together. Okay, let me show you the code that we have ready for you. Okay, let's use PCA for image recognition. For that, you want to open eigenface. And this is code that I adapted from online. So the first thing is you want to load your training images so they are in a directory called Presidents. And their extension is .PNG. So that's what you see here, is the directory Presidents. It will load them all in. And then it'll compute the mean image, subtract them off, and perform the type of steps that we saw. And then down here-- you could put this at the top if you wanted to-- is the disguised image. So here I have the JFK image that we saw. And it will try to recreate it. So the first thing it does is it creates the images that we have. So here we have the particular directory or library of images that we have. Then we have the mean presidential image that we see there. Here we have the eigenfaces that we're going to use. Then you have your target image, which is the disguised JFK. And next to it, you have JFK himself as recovered by the eigenfaces So you may want to adapt the particular image and try to color it, maybe use Photoshop. Maybe put in your own image and see what it would create. And I'll put a link on the web page for a website that you can use that will be almost like paint, where you can color on the image. For instance, you could add sunglasses yourself if you don't have edit software that allows you to edit image like Photoshop or something like that. OK, have fun. ",
                                        "unit_id":"dec756f91664407283d62e72150b8a1d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fa4855d06b884523b5271e315fe7e5da",
                                "vertical_name":"Exploratory Activity 5.2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8d0c7cdbf4eb4aac9f651e28fc18fef7",
                        "sequential_name":"5.3 SVD and Recommendation Systems",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" What Will We Learn? In this section, we learn how to use the SVD for recommendation systems based on a dataset of user ratings. ",
                                        "unit_id":"799ee64234864841a8368cac724d1dbb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4f5c8f27473b406faa7b2a2adba57ef5",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Recommendation system",
                                            "Computer algorithm",
                                            "Big business",
                                            "Weighted average",
                                            "Online retailer",
                                            "Cosine similarity",
                                            "Movie ratings",
                                            "Euclidean distance",
                                            "Netflix",
                                            "Recommendation",
                                            "Give",
                                            "Competition",
                                            "Sigma",
                                            "Data",
                                            "Similarity",
                                            "Consolidate",
                                            "Approximation",
                                            "Predicting",
                                            "Plot",
                                            "Create",
                                            "Store",
                                            "Lydia",
                                            "Sam",
                                            "Jess",
                                            "Online",
                                            "Movie",
                                            "Distance",
                                            "User",
                                            "Similar",
                                            "Rating"
                                        ],
                                        "data":" TIM CHARTIER: Recommendations are big business. You buy something online and you see other things that you might buy. You watch stream content and other options appear for your consideration. How can we do this? How might Netflix do it was the question Netflix asked when they put together a million dollar competition to improve their recommendation system. To enter the millionaire's club, you needed to create a computer algorithm that could do a better job of predicting then Netflix's existing recommendation system at the time, which was called Cinematch SM. To create recommendations, you had a Netflix data set of user ratings, which are integers from 1 to 5 for all movies. Then, your program would give an anticipated rating for films for user. This isn't exactly recommending a film, it is supplying a prediction of how a film will be rated by a user. In the competition, Netflix supplied data on which you could test your ideas. When you thought you had something, you test your recommendation method by predicting ratings of movies and users in another data set that had actual ratings of movies by users. If your predictions were at least 10% better than the recommendation system Netflix used, Netflix would write a million dollar check. One big advantage in that competition came from using the SVD. Let's see how. We'll store our data in a matrix. A column will be one users ratings for all the movies, with a 0 being a movie that wasn't rated. So a row contains all the ratings for one movie. Suppose we have Sam, Melody, Mike, and Lydia recommending 6 movies. You can see they're ratings on the screen. For example, Sam gave movie 1 a rating of 5, and movie 3 a rating of 3. And Sam didn't see movie 4. We store the data in a matrix with six rows and four columns. So that's a quick computation given the table we had, so A equals 5 5 0 5, 5 0 3 4, 3 4 0 3, 0 0 5 3, 5 4 4 5, 5 4 5 5. There it is. So then we compute the SVD of A, giving us A times sigma times V. Now we're only going to use V, so that's the matrix that you see on the screen. In an earlier lecture, we took columns of U. Those corresponded to coordinates of the movies. Now, we're going to take components of V for the users. And we're going to consolidate that down to a two-dimensional approximation of our data. So we're actually going from having the full data, down to only two ratings per user. So we do that by taking those components of V and getting those 2-D coordinates for each user's preference. So when we plot Sam's position, we end up having the coordinate -0.5710 and -0.2228. We do the same for Melody, Mike, and Lydia. These points consolidate their movie ratings into two numbers each. This is similar to compressing an image into an image with less storage. Now, who's the most similar from the plot of the 2-D points that you see on the screen? It is Lydia and Sam. Now go back, look at the data itself, and consider the ratings for Lydia and Sam. There is indeed a lot of similarity. The key here is that we never have to look back at the data. For large data sets, we can't absorb all those numbers. Now, suppose a new user named Jess gives her ratings. Suppose they were 5 5 0 0 0 5. First, we compress her information into two points. This is done by computing 5 5 0 0 0 5, times the first two columns of U, times the two-by-two sub matrix of sigma containing the first two rows and first two columns of sigma. This gives us the 2-D point for Jess, which equals -0.3775, -0.0802. So we now have a 2-D approximation to Jess' ratings. We can now find to whom she is most similar just as we did before. We just use either cosine similarity or Euclidean distance. Whatever definition of distance, we have a measure of distance to know who she is like and give recommendations. You can take their recommendations for the film-- the people that you already know-- take a weighted average of similar users. Or you could try a number of other ways. What ways come to mind for you? What would you give as a recommendation for Jess, given the information you already have? So next time someone asks you for a movie recommendation, you have a way to mathematically give input. And the next time an online retailer or media provider gives you a recommendation, just remember maybe the SVD is at work behind the scenes. ",
                                        "unit_id":"0d339dbe183b40ff8224dea48b018753",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6126046c3b944997b63f4a9a3267924b",
                                "vertical_name":"SVD and Recommendation Systems (Lecture)"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"393147abded9408f8c0460eeda51c045",
                "chapter_name":"Unit 6: Sports Ranking",
                "sequentials":[
                    {
                        "sequential_id":"ae7e68002f13427cb2dd1aca180a8a36",
                        "sequential_name":"Unit 6 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "World cup soccer",
                                            "Basketball tournament",
                                            "College basketball",
                                            "United states",
                                            "Data mining",
                                            "Winning percentage",
                                            "Mathematical research",
                                            "Rank",
                                            "Ll",
                                            "Ranking",
                                            "March",
                                            "Winning",
                                            "Research",
                                            "Davidson",
                                            "Play",
                                            "Team",
                                            "Area"
                                        ],
                                        "data":" TIM CHARTIER: Who's number one is a question often heard in sports. It's a question beyond sports, too. Who has the best clothing? What was the funniest TV show ever? Computing a number one, and, in fact, a number two, three, four, and so forth, is an area of mathematical research for me. I study and explore ways to rank items either using existing methods or designing new ones. With a Davidson student researcher, I worked with a successful, London-based start-up company, Twizoo, to rank restaurants based on the buzz on Twitter. I also consulted the ESPN sports science show on their series that unveiled their best athlete ever. Last year, I worked with two professors, one here at Davidson College and one at Whittier College to rank FIFA World Cup teams for the World Cup tournament. Ranking sports teams from college basketball here in the United States to World Cup soccer is a large area of research for me in that area of ranking. In this unit, we'll learn methods designed for sports ranking. You determine who's number one, but again, who's number two, three, four, and so forth. This can help you predict the outcomes of future games. We've used it to help predict the outcomes of sporting tournaments. Here in the United States, considerable energy revolves around the March Madness tournament, which happens every March around the Division I NCAA men's basketball tournament. In this unit, we'll begin by seeing the issue with winning percentage. Why not just rank with winning percentage? With that knowledge of its issue, we'll learn how to take the outcomes of games and rank teams with a sense of quality of the teams that a team wins and loses to. It isn't just winning, but how strong of a team that you beat. We'll see how to rank personalized ranking to emphasize elements of play that you believe are predictive of future play and how to download data so you can look at various sports. In fact, just like our work with Twizoo on London restaurants, you may want to work outside of sports. Ranking is a component of data mining. And we'll explore this in the context of sports. So enough talking about this. Let's get in the game and jump into the math. ",
                                        "unit_id":"549027242051477281b3aaced8110e62",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4066e16422984b3e9bf4e647db44c339",
                                "vertical_name":"Introduction to Unit 6"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Sports data",
                                            "Winning percentage",
                                            "Ranking"
                                        ],
                                        "data":" What Will We Learn? In this unit, we learn how to represent a season of sports data in a network the problem with ranking sports teams with winning percentage how to create linear systems that ranks teams with a model of strength of schedule integrated to download sports data off masseyratings.com in order to rank teams to integrate weights into rankings for personalized rankings ",
                                        "unit_id":"491f4e3f807c43c6b8416c87d39b321d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4154dd5f928f472098d48fe21c560dd6",
                                "vertical_name":"What Will We Learn?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5cfb86548153464e927bf4492cebf869",
                        "sequential_name":"6.1 Winning isn\u2019t Everything \u2013 Winning Percentage",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Sports data",
                                            "Winning percentage"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn how to represent a season of sports data in a network the problem with ranking sports teams with winning percentage ",
                                        "unit_id":"578f779303be457cabc8a80c068be0a4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ad36c9150931462d8a3a539b76818091",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Winning percentage",
                                            "Perfect season",
                                            "Linear system",
                                            "Linear algebra",
                                            "Directed graphs",
                                            "Winning team",
                                            "Important",
                                            "Beat",
                                            "Represent",
                                            "Graph",
                                            "Method",
                                            "Called",
                                            "Strength",
                                            "Play",
                                            "Data",
                                            "Gain",
                                            "Ranking",
                                            "Team",
                                            "Rank",
                                            "Learn",
                                            "Stop"
                                        ],
                                        "data":" TIM CHARTIER: In this section, we're going to delve into sports ranking. This has been a major part of my research for the last several years. We'll work largely within two goals of ranking. First, we might want to rank teams for their play over an entire season. Second, we might want to rank teams in order to predict their future play. The methods involved in these two goals might be similar, but they can also differ, as these can be very different goals by and large. Now, before we learn the methods that use linear algebra, let's first see why a simple method, like winning percentage, struggles. That will be very important to motivating the methods that we'll learn. We're going to represent our gain data with directed graphs. The vertices will represent teams, and an arrow from one team to the other team indicates a win. So an arrow from Team A to Team B means Team A beat Team B. I sometimes consider this the poor sportsmanship graph. The winning team keeps pointing at the losing team. And that's the convention that we take. With that, let's look at a graph. Now, you might want to stop the video in a moment, as I want you to come up with a ranking for these teams. Who would you say is the best, and who is the worst? Again, an arrow always points from the winning team to the losing team. So rank the teams now. In our network, team D beat everyone. C lost only to D, A beat only B, and B lost to everyone. A common ranking is D, C, A, B, where D is first and B is last. That's sometimes called the perfect season. Now let's try another one. In this picture, I have two conferences or divisions, as you see on the screen. The one on your left is the one we just looked at. The one on the right has the same structure, but I changed the team's names. Now, let's have Team F beat Team D. How would you rank now? If you don't know why or what information might you want to have in order to rank, you may want to stop the video a moment and consider the ranking you would give this particular graph. Now, let's make one change, and have Team E beat Team D. How would you rank now? Again, if you don't know why or what other information might you want in order to rank, you again may want to stop the video a moment and rank the teams for this data. Now, there are some pretty important differences in those two graphs. But let's look only at Team D. In either case, Team D lost. But there is a strong chance that you ranked differently when Team D lost to F verses when Team D lost to E. This is because of the difference in the strength between Teams E and F. This is often called strength of schedule. But it is exactly why winning percentage can struggle as a ranking method. In winning percentage, it makes no difference who you lose to. If the teams aren't of equal strength, then we really want to know who you lost to. If you can beat strong teams, that makes you stronger in the rankings. If you lose to weak teams, that makes you weaker in terms of how we'll rank. How do you figure that all of this can be figured out? Well, it is interdependent, but that's exactly why linear algebra can help us. We solve a linear system, and that lets us know all the information at one time. So that sets us up for the next section. So we'll stop here and get ready to learn some linear algebra to gain some strength in our rankings. ",
                                        "unit_id":"8fb99fca06da4d519078849698869ff3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"07efd9dd89ea4a8ea3e6a34598afb8f4",
                                "vertical_name":"Winning Isn't Everything - Winning Percentage (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d99871b56459461b901f2a150418a090",
                        "sequential_name":"6.1 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Reflect",
                                            "Section"
                                        ],
                                        "data":" TIM CHARTIER: This section sets us up to understand the importance of the following sections, so let's simply reflect on the difference between the networks that we saw in the lecture. Here is the first network that you saw in the lecture. How would you rank these teams? Now we changed the team that D lost to. How would you rank now? The only responsibility in this section is putting a ranking to these teams and sharing it in a reflection. The reflections won't appear on the forum, so if you want to share, feel free to post something on the forum, but for now, reflect on the rankings you'd give these networks. ",
                                        "unit_id":"823da9332cd24c5f8c6f5185e1a82303",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6e12c49a9ab8441d86b14d25ecc562fb",
                                "vertical_name":"Activity: Share Your Answers"
                            }
                        ]
                    },
                    {
                        "sequential_id":"99714485bc9847c0aa3a1f7803979593",
                        "sequential_name":"6.2 Gaining Strength \u2013 Massey Method",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear system"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn how to create linear systems that ranks teams with a model of strength of schedule integrated why this system require the method least-squares in order to be solved how to produce a ranking from the solution of the linear system ",
                                        "unit_id":"8f3fd185724b428885a4afeabfea54d3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6175595ce7754c29bb693c470a190a58",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "American football",
                                            "Main diagonal",
                                            "Winning percentage",
                                            "Web page",
                                            "United states",
                                            "Linear algebra",
                                            "Linear system",
                                            "Rating system",
                                            "Square matrix",
                                            "Predict",
                                            "Football",
                                            "Side",
                                            "Math",
                                            "Assign",
                                            "True",
                                            "Vector",
                                            "Ll",
                                            "Played",
                                            "Method",
                                            "Point",
                                            "System",
                                            "Strength",
                                            "Ranking",
                                            "Square",
                                            "Solving",
                                            "Call",
                                            "Number",
                                            "Play",
                                            "Equation",
                                            "Assume",
                                            "Transitivity",
                                            "Won",
                                            "Transpose",
                                            "Place",
                                            "Team",
                                            "Rating",
                                            "Matrix",
                                            "Column",
                                            "Game",
                                            "Row"
                                        ],
                                        "data":" TIM CHARTIER: A weakness of winning percentage that we looked at in the last lecture is its indifference to the quality of an opponent. The desire to integrate strength of schedule or the quality of one's opponent into the rating system is why we turn to linear algebra. By computing all the ratings at one time, we can tie strength of schedule into our ratings. In the last unit-- in this unit, we'll begin with a method used by Kenneth Massey of Carson Newman College. It's fun to know that he developed his method as an undergraduate honors math project. The method was used to help predict college football teams in the big bowl games here in the United States. And by football, I mean American football. Now here's the idea. Let's use a fictional series of games. We're going to have a few teams, and the first team will be team A, and that beat team B by one point. Team B beat team C by 15 points. Now, if we know that, do we then know that team A will beat team C by 16 points? If we did, then that would mean the transitivity of scores holds. But that rarely holds. That's why we watch. But can we assume that the transitivity of scores holds approximately? The Massey method does. So let x be the rating for team A, y the rating for team B, and z the rating for team C. The Massey method assumes these ratings can predict the outcome of games. So x - y = 1. That equation came from the fact that team A beat team B by 1 point. Similarly, y - z = 15. That came from that second game. Now let's add an additional game and assume team C actually beat team A by 10 points. That gives us z - x = 10. The scores do not match the transitivity assumption since team A didn't beat team C by 16 points. This is often true in sports. So we have three equations-- x - y = 1, y - z = 15, and z - x = 10-- that correspond to the linear system. Notice it's that z - x = 10 that breaks that transitivity property. Well, that gives us a matrix, and our first matrix-- we'll call it M sub 1-- equals 1, -1, 0. That's because, again, x - y-- they're the coefficients of that. The second row is 0, 1, -1, and the third row is -1, 0, 1. We multiply that times the vector x, y, z, and then on the right hand side we get those scores of the games, 1, 15, 10. Now additional games would add more rows to that matrix M1, and to that right hand side vector. For most sports with a season of data, M1 will have many more rows than columns. It'll be long and skinny. There are no values for x, y, and z that will make all three equation simultaneously true. That's because of the fact again that transitivity did not hold. So we turned to least squares, which will help us determine the ratings for the teams. And to do that, we multiply both sides of the equation by the transpose of M1, which turns the rows into columns. So that leads to the linear system. 1, 0, -1, -1, 1, 0, 0, -1, 1 times 1, -1, 0, 0, 1, -1, -1, 0, 1 times the vector x, y, z. And that equals-- again, we need that transpose matrix-- 1, 0, -1, -1, 1, 0, 0, -1, 1 times 1, 15, 10. Well, there we go. Once we perform that, that gives us our linear system. And that becomes 2, -1, -1, -1 2, -1, -1, -2 times x, y, z equals -9, 14, -5. Now this system has infinitely many solutions. So we take one more step and we replace that last row of the matrix on the right hand side of the equation with 1's-- that last row gets 1's. And the last entry in the vector on the right hand side gets a 0. This will enforce that the ratings sum to zero, which can be a nice debugging tool. Find the ratings corresponding to solving the linear system by solving mr = p. Well, that's what we just found. So our mr = p is 2, -1, -1, -1, 2, -1, 1, 1, 1 because, again, we replace that last row, times x, y, z equals -9, 14, and then that 0 that we replaced in the last entry. Well, that-- when you solve it-- produces our desired ratings. This system gives the ratings of x = -3, y = 4.66, and z = -1.66. A larger rating indicates a better team under the ranking method. So the ranking for this group of teams from first to last would be B, C, and then finally A. Well, easy enough. It turns out it's even easier as we can jump directly from the data to the linear system. We don't need that step and then multiplying by the right hand side with the transpose. So first, you assign a team to each row of the matrix. We'll assign team A to row one, team B to row two, team C to row three-- just like we did earlier. That assigns the columns. Column one is team A, column two is team B, and column three is team C. Now we're ready to fill in the entries of the matrix itself. First, we'll work with the main diagonal of the square matrix. We'll start with the one-one element. This is in the first row in the first column, so it's associated with team A. And to that element, we place the total number of games that team played. Team A played two games, so we put a 2 into the element of the matrix. Into the two-two element, we're looking at team B. So that team played 2 games, so we place a 2 into that element. Into the three-three element, we put in a two since C also played two games. All of the teams played two games, so they all get two. Now we focus on the off-diagonal elements. And to those elements, you place -1 times a number of games-- the associated teams-- in the row and column played. Take the one-two element. That corresponds to teams A and B. They played once, so we put a -1 in the one-two element. Now for this particular season, every team played once. So we put a -1 in all of the off-diagonal elements. If two teams didn't play, then in that case, we would have placed a 0 into the element. OK, that fills out that matrix. We now replace that last row with 1's-- do you remember that step? It's very important. So we put the 1's there. And now we're ready to create the right hand side vector that we call p. For that vector, the rows of p have the same association of the teams as the matrix M did. So the first row of p corresponds to team A. Row two is team B, and so forth. For the element in any row of p, you find what's called a total point differential for the team, where a win is a positive and a loss is negative. So let's take team A. That team won by 1 and lost by 10. So into the first element of p goes minus 1-- the loss-- plus 10-- the win-- which equals 9. Team B won by 15 and lost by 1, so the second element of p gets a 14. Finally, team C won by 10 and lost by 15, so into that third element of p goes a minus 5. That gives us p, except remember, we need to replace that last element by 0 just like we replace that last row of the matrix by 1's. So we have the 0 and the 1. Then we do the linear solve, and that's it. This is wonderful for code as you simply walk through the season of data and keep tallying up the wins and losses, and updating the matrix in that right hand side vector accordingly. So in the course web page, you'll get to try another system to be sure you have the math down on doing the Massey method. Soon, we'll see how to personalize the rankings according to when and what you think might be predictive of future play in your sport of interest. But for now, let's get the math down and start ranking by using strength of schedule. ",
                                        "unit_id":"b1c0bbdc16ca4b429d1f59b1914d3a01",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c3e8eaed1017493ab81d08aec1b83ae3",
                                "vertical_name":"Gaining Strength \u2013 Massey Method (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7357a8fc91c447a080028253403ea2bf",
                        "sequential_name":"6.3 Got Data?",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Data"
                                        ],
                                        "data":" What Will We Learn? In this section, we learn to download sports data off masseyratings.com in order to rank teams the format of data on masseyratings.com so one can adapt other scores to this format ",
                                        "unit_id":"7f6b771c4ad846ee9149438c47ed20b4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3e918510086e480f8416423c95d67b10",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "World cup soccer",
                                            "National basketball association",
                                            "Boston celtics",
                                            "College basketball",
                                            "Text document",
                                            "Comment line",
                                            "Discussion forum",
                                            "March madness",
                                            "Command line",
                                            "Page",
                                            "Ll",
                                            "Matlab",
                                            "Home",
                                            "Basketball",
                                            "Document",
                                            "Ken",
                                            "Pick",
                                            "Start",
                                            "Line",
                                            "Wordpad",
                                            "Data",
                                            "Code",
                                            "Move",
                                            "Interested",
                                            "Good",
                                            "Immediately",
                                            "Loss",
                                            "Ranked",
                                            "Great",
                                            "Forum",
                                            "Madness",
                                            "Work",
                                            "Ve",
                                            "Important",
                                            "Changed",
                                            "Command",
                                            "Time",
                                            "Team",
                                            "Find",
                                            "Grab",
                                            "Download",
                                            "Nba",
                                            "Thing",
                                            "Game",
                                            "Number",
                                            "Rank",
                                            "Ready"
                                        ],
                                        "data":" TIM CHARTIER: In the last lecture, we saw how to apply sports ranking. Depending on your sports of interest, you may need to go out and grab the data to look at the things that interest you. Last year, I worked with Dr. Michael Mossinghoff of Davidson College, and Dr. Mark Kozek of Whittier College to apply sports ranking to World Cup Soccer. We gleaned our data off the FIFA site in part as we wanted a level of detail on the games that was offered there. Where can we start finding data? One of my favorite places is with Ken Massey's website. Ken Massey is the one that the Massey method is named after. Ken keeps a great site with the URL masseyratings.com, with many resources related to sports ranking. In this unit, I want to show you how to find and download data, and then how easy it is to rank the teams using the MATLAB code supplied with this course. OK, let's see how to go out and grab some data off of masseyratings.com. So let's learn to do sports ranking we'll begin with basketball, and then we'll move from there to other sports that you can learn to use. So here we are to Davidson home page, and you want to go to the web page masseyratings.com. So there we go-- masseyratings.com-- and here we are. Now, the important thing is you want information. That's a way to kind of remember where to go. From there, you want data. And now you pick your sport of interest. So let's start with college basketball since that's the one that we do in the lecture, and now you have to actually pick what part of college basketball you're interested in. There are all kinds of divisions and so forth, so I want NCAA. I'm going to get Division I, and I want all the data. Now those are quite a few steps, so you may need to walk through this video a few times just to get that down. Intragames means I just want the games within Division I, and now I'm ready to download the MATLAB games. So go to games. Now that looks pretty wild, and it depends on your browser what this particular page looks like. I'm using Chrome, and the best way is actually go to page source. And see, this is a little more familiar of what to look at. And I can say-- well, let me show you what can go wrong. So I'm going to say Save As, and then let's see if I can-- let me see if I can do HTML only and if it'll work. So then this was the scores, so scores.txt. And I'll replace it-- the one that I have on there. And there it is. So now, let me go in and look. Here it is scores.txt-- let me double-click it. So it turned out OK. What do I mean by OK? Well, let me open it in a different program so I actually see the formatting that's with it. I'll say Open With, and I'll pick WordPad. There's no HTML in here, so that's what's important. If there's HTML, there's a problem, so I was able to get around that. So you want to look. If there's HTML, you're going to have to do it again. And one way to do it is just to go in here and cut and paste it into your document, but make sure that there's no space at the beginning. If I had come in here-- whoops, sorry. I always forget. On a Mac it opens in a different program. So say Open With, WordPad. If there had been spaces at the top, you can't have that. It has to start with immediately with the data. So you want to be sure that you get that. OK, so let me check one more time. Yeah, there's no space. OK, so then I also want to get the teams. So I go back, and I go back one spot and I say please give me the teams. And there it is. So here are the teams. It, again, has lost the formatting, so I say show me the page source. Then I say Save As. In this case, I want HTML only, and then I want teams.txt. And I want to save it. And I'll replace the one that I had there from when I was practicing for sharing with you. So then again, I want to look. Make sure it looks OK. So let me move this over a little bit so you can see it. So open with WordPad. And there you go, and there's no space at the top. Good, so I'm ready. Ready for what? Well, now I can run my codes. So I'm going to open this with MATLAB. I'm doing the Colley ranking. Now wait a moment for it to open, and I'll immediately be able to run the code. So there it is. OK, now you actually have this as a command line right there, and you need to change into this directory. So what I sometimes do is I just change to this folder, and now I can run it. So I actually changed into the folder. You can see that right here that I'm in the right directory, and now I can actually run my command. So the two files I had were teams and games. Now where did that come from? I did that kind of quickly. I took this particular line that's in the comment line. It gives you an example of how to run it. So here's my game data. Here's my team data. Zero is the particular weighting, so you see here that zero is no weighting. Every game is worth one-- one win and one loss regardless of time, and then one means linear time and so forth. You could look down at the file to see the other options. And then I just hit Enter-- oops. And I think-- did I call it scores? I'm sorry. I might have called it scores. I sometimes call it that instead. I did. So if you get that, just go check like I did. I won't film this again because it's actually helpful to see the errors. There you go. So this is right now, as of today, we're entering 2015 sweet 16. It still has Kentucky. A little bit behind them as Wisconsin. And then Villanova, who's out of the tournament right now. And so they had a big loss. OK, so that's simple enough. Now what if you're not a basketball fan? Please, stop with March Madness. It's madness to do that much. Well, then what you do is you go back and you find a different sport. So I'm going to do the NBA, so the National Basketball Association. I click that. You could just rank for Eastern or Western. I'm going to do the entire NBA, so I want all the data. And then I want intragames and I want the MATLAB games. I click Go, and then that one actually looks pretty good. That's interesting. And then Save As a Text Document, and I'm still going to make that scores. Just going to overwrite the one I had. So there's that, and then I go back and I grab the team names. So team one is Atlanta and team two is Boston Celtics. Save As a Text Document, and this was teams.txt. Great, and so then I'm ready. And then I run it. So it's that simple. I've changed the data. So now when I call it, it's going to have that new data built into it, and there it is. So right now in the NBA, Golden State with Davidson alum Steph Curry is ranked number one, and then comes Atlanta, Memphis, Houston. So those are the teams as ranked by the data. Now let's do one more thing. Let's actually look at that scores data in case you want to download some yourself. So what is this? What are we looking at? OK, so the way this says is that first, here's the date. So this game happened on October 28, 2014. And this number is the number of days since January 1 in the year 0. The reason for that it's a little easier to compare dates given these two type of numbers and in this particular form, but that form is the one that we read. Then, team 19 played team 22. Team 19 was at home-- that's the one. Team 22 was playing away. And the score was 101 to 84. And then if you want, you can open the team data and you can look who's 19? New Orleans. Played 22-- Orlando. So you can look up who they were. Another game on that same day is right here. Team 27 played at home and got a score of 101. Team 7 played away and got a score of 100. And that's the way they work. So if you find your own data, you can put it in this particular form if you'd like and import it into our codes in order to try them. So that's it. That gets you ready to do sports ranking in basketball or another sport of interest. You can turn to masseyratings.com and look for sports of interest, or you may have other sports that interest you and look for those there. Have fun, I look forward to seeing what you do, what you discover, and how you mine the data. So we've seen how to grab the data. Now, it's your turn. Grab some data off masseyratings.com, or go out and find data on a sport that interests you. Be prepared to share with the group on the discussion forum. For the activity, you'll grab data, rank, and share with the forum what you did, so we might find groups of people interested in similar sports. With your data ready, you'll be ready for the next lecture where you can create your own personal choices on how to rank teams in a sport that interests you. ",
                                        "unit_id":"66019853b112432c9d2ca8ee90659ebf",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ddb6e216075341a487d60f7cbd228b0d",
                                "vertical_name":"Got Data? (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ac146df6225b4c22915ae49e62442cca",
                        "sequential_name":"6.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ranking",
                                            "Data",
                                            "Find",
                                            "Massey",
                                            "Pull",
                                            "Grab"
                                        ],
                                        "data":" TIM CHARTIER: In the lecture, I showed you how to grab data off of Ken Massey's site. I also mentioned that my work on ranking FIFA soccer entailed taking data off that site. For this activity, find data. You can pull down data sets off of Massey's site and rank them and see what you get. Or, you can pull data off other sites. In either case, find data, rank, and share it with the group. I look forward to seeing what you find. Hearing what you think about the rankings and sharing our ideas as a group. When you rank, see what you think about the ranking. Remember, we had to adapt the ranking methods for FIFA World Cup Soccer, so you may or may not find the rankings helpful. In the next lecture, you'll get more of an idea of how to adapt the methods. Okay, it's your time to go out and grab some data. ",
                                        "unit_id":"e2740923bc664bc29d77f6dee4279abe",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"986674b734be46218768bbf7543a712d",
                                "vertical_name":"Exploratory Activity"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8b26a40619174b158f647a179a1960e1",
                        "sequential_name":"6.4 Adding Weight",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" What Will We Learn? In this section, we learn to integrate weights into rankings for personalized rankings how to adapt the Massey method when such weights are used ",
                                        "unit_id":"820429e9a3484ffcac074889d5dfa491",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"17485175c0634227af9259eb2d3b2433",
                                "vertical_name":"Learning Goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Point differential",
                                            "Basketball tournament",
                                            "United states",
                                            "Sporting events",
                                            "Linear system",
                                            "March",
                                            "Weighted",
                                            "Tournament",
                                            "Point",
                                            "College",
                                            "Called",
                                            "Higher",
                                            "Million",
                                            "Ll",
                                            "Number",
                                            "System",
                                            "Massey",
                                            "Rating",
                                            "Team",
                                            "Prediction",
                                            "Bracket",
                                            "Ve",
                                            "Method",
                                            "Data",
                                            "Decide",
                                            "Predictive",
                                            "Weight",
                                            "Game"
                                        ],
                                        "data":" TIM CHARTIER: At this point in our unit, you know how to rank and how to grab some data. These methods can be used to make predictions about future games as well. We've had a lot of success with this in the Division I Men's Basketball Tournament here in the United States, often called March Madness. Who is your predicted winner of the game? The higher ranked team in these settings. So we can do that with either the Colley or Massey methods that we've learned. But right now, all of us would get the same predictions with Colley and the same with Massey. Our only variable is whether we want to use the Colley or the Massey method. However, this is where research I developed with Dr. Amy Langville of the College of Charleston comes in. We'll make an adjustment to these systems that require mathematical modeling decisions and result in personalized rankings. The key is to decide variables you think are predictive of how someone will play in the game that interests you. For example, one may decide that the recency or how recent a game occurred is predictive of performance in a game to come. In other words, you have momentum and that means something. How do you measure this mathematical mojo as I sometimes call it? One way is to break the season into parts and assign weights to each part. That weight determines how important those games will be in the final ranking. The higher the weight or the number, the more predictive you believe games in that part of the season will be. So let's look at an example. Suppose I decide to break the season into four parts, and then I decide that I'll weight the games in the first quarter of the season with 0.25. That means if you win, you get 0.25 of a win, and if I lose, I get 0.25 of a loss. Then, I look to the second quarter, and third, and the fourth, and I decide to weigh those 0.5, 1, and 1.5. Now by doing that, I've let the weights increase. So I'm making a decision that the games become more predictive through the season, and the weights mathematically quantify that. By using different weights, games differ in their contribution to the final ratings, increasing the potential of assigning a higher rating to a team that might have a weak starts-- at least in the way I chose to build my weighting. Now remember, the ratings take into account strength of schedule. So that if I win in predictive parts of the season and do so against strong teams, I receive a greater reward in my increased ranking. The change in the linear system is minor. Now a game is counted as the weight of the game in its contribution to the linear system. Earlier, the Massey matrix was formed with each game counting as one. Now we count the associated weight. So returning to our example of breaking a season into quarters, a game would count as 0.5 games in the second quarter of the season. The total number of games becomes the total number of weighted games. For the right hand side of the vector of Massey, the point differential in a game is a weighted point differential. If a point differential in a game was 10 and the weight of the game is 0.25, then the weighted point differential would be 10 times 0.25, or 2.5 points. With these weighted point differentials, we can create the right hand side of the vector as we did before. Now other aspects of a game can be weighted, such as whether a team wins at home or away. Further, one might want to weight a team's ability to maintain winning streaks. We've done this for that March Madness tournament held in the United States. March Madness sweeps through the United States in March with millions looking at the tournament and creating what are called brackets. In the end, someone predicts which teams they think will win every round of the tournament, and you get points for every correct prediction. We submitted our work to what's called the ESPN online tournament challenge. In 2009, a bracket made with these methods beat over 97% of four million brackets. In 2010, a student in one of my classes here at Davidson college created a bracket that beat 99.9% of over five million brackets. So it's time to add some weight and see what happens to you. In this case, you may find you glean data from sporting events that gives insight possibly otherwise too subtle to see. So I look forward to seeing what you'll try and what you do with this. Remember, you have the data that you've downloaded for the sports of your interest. So figure out how you want to gain some weight in your methods, and do that to rank your teams. ",
                                        "unit_id":"fdc7daa78c6948e3b05945deb8c369c0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4c9767e73e974f19866a47343d000fa0",
                                "vertical_name":"Adding Weight (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"345204ac440e463d8abca1c8a253a07e",
                        "sequential_name":"6.4 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Basketball teams",
                                            "Weight",
                                            "Team",
                                            "Ranking",
                                            "Changed",
                                            "Home",
                                            "Top",
                                            "Line",
                                            "Run",
                                            "Colley",
                                            "Code",
                                            "Weighting"
                                        ],
                                        "data":" TIM CHARTIER: So let's see how to do sports ranking using the code supplied. You'll find that there are two codes, Colley ranking and Massey ranking. The changes will be relatively the same, regardless of which one you use. So let's look at Colley. When you use Colley, you get this input line right here which can help you just run the code. So when you do that, you can simply run the code like this. And then you get the ranking of the NCAA men's basketball teams from the 2014 March Madness tournament. That is with a weighting of 0, and it lists the top 20 teams. The weighting of 0, if you go into the code, you go down, and these are the lines. So 0 means no weighting. It's one win, one loss. Linear weighting really tends not to be very good. But this is the one that you can alter. So here, I actually have four intervals. The first fourth is worth 0.5, the second one is worth 0.5, the third quarter's worth 0.75, and the last quarter's worth 1. To invoke that, I say that I want instead a weighting of 2. And there you go. Suddenly, Florida's still on top, but Arizona has-- wait, did anybody-- yeah, we changed. The numbers changed. Sorry, it took me a second to see the change. Now you can make this whatever you want. So you could say, you know, I don't really want it in three pieces-- or four pieces, I want it in three. And so there you go. You could change it something like that. You call it this way, and then you see a change. You see Wichita State has moved up into second with that particular weighting. The other thing that's in this code that's easy to switch is that you might want to down weight home games and say, look, I'm not as interested in how you play at home. And you could up weight playing away and on neutral courts. Neutral means neither team was at home. And so with that, you can save it. And then you can run that. And there you see another change, as well. So with that, you can change the code. One thing about this home and away is that you also get that change on any weighting that you do. So even if you go to 0, you're going to get a difference in terms of the weights. Before, they were about 1.8, and now they're about 1.7. And you would probably see changes down in here. So that should be enough to enable you to rank teams. You can download the data, use the data that you have from the last section, and begin to create your own ratings. Again, when we look at how we predict a game, the higher ranked team is predicted to win. You won't always be right, but sometimes you can mine through the data to get meaning that otherwise might be imperceptible. So I wish you well and look forward to seeing what you create. ",
                                        "unit_id":"2cb38c3d21c74021a50357bfdef3fac5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"425d4afc9ed9445599a3efb65d6bae47",
                                "vertical_name":"Exploratory Activity 6.4"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"1e8b897a658e495cbcf5dfc4432d63cd",
                "chapter_name":"More Resources",
                "sequentials":[
                    {
                        "sequential_id":"ce86a13bc6274e669f3bf7c5b4b56a37",
                        "sequential_name":"Tony DeRose",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Uncanny valley",
                                            "Virtual camera",
                                            "Visual systems",
                                            "Virtual environments",
                                            "Computer animation",
                                            "Research group",
                                            "Linear algebra",
                                            "Three dimensional space",
                                            "Line drawing",
                                            "Infinite number",
                                            "Computer graphics",
                                            "Upper jaw",
                                            "Smooth curve",
                                            "Lower jaw",
                                            "Smiley face",
                                            "Free",
                                            "Motion",
                                            "Pixar",
                                            "Simulation",
                                            "Animation",
                                            "Human",
                                            "Movie",
                                            "Linear",
                                            "Smooth",
                                            "Time",
                                            "Computation",
                                            "Stylized",
                                            "Ll",
                                            "Represent",
                                            "Developed",
                                            "Character",
                                            "Blender",
                                            "Big",
                                            "Simple",
                                            "Polygon",
                                            "Aren",
                                            "Averaging",
                                            "Storytelling",
                                            "Thing",
                                            "Lot",
                                            "Real time",
                                            "Film",
                                            "Solve",
                                            "Create",
                                            "Ve",
                                            "Built",
                                            "Make",
                                            "Subdivision",
                                            "Face"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In September of 2014, Tony DeRose, the leader of the research group at Pixar Animation Studios, came to Davidson College to talk about the math and science used in film animation. For the past 20 years, he's been working on almost every major motion picture Pixar has produced. Our DavidsonX team was lucky enough to travel to Emeryville, California, the home of Pixar Animation Studios, where we sat down with him and talked about the math behind the movies of Pixar. TONY DEROSE: Linear algebra's a major tool, not just in animation, but in all the sciences, really. It's almost like if there's a problem that you can solve, it's because it can be reduced to linear algebra. Anything that isn't linear, you end up having to approximate with linear steps. And so just about anything you can solve ends up being formulated as linear algebra. The services used to create our characters-- the faces, the hands, their bodies-- had to be built out of basically deformed planes. So Buzz Lightyear, for instance, his face is built up by taking a deformed plane to represent the bulk of most of his face. But then there's another deformed plane that's kind of shaped into his nose and stuck into his face, and other deformed planes that are stuck into the head. Even his mouth was made out of two pieces of deformed planes, one's for the lower jaw and one for the upper jaw. And the problem is that if you're just dealing with deformed planes and sticking them into one another, you get all these hard creases that the director may or may not like. You also get seams between those pieces, and it takes a huge amount of skill on the part of the artist to try to hide those seams. Whereas in subdivision, they're just naturally first order continuous. So there aren't any seams. You don't have to do any work at all. The mathematics does the work for you. So we use subdivision to represent surfaces of complex shapes. So think of the face of one of our characters, for instance-- and before we talk about those surfaces in three-dimensional space, it's a little easier to talk about how to make a smooth two-dimensional shape. So let's think about, say, how to make a smooth curve in two dimensions. And the way subdivision works is you start out with a very crude shape, maybe even just a four-point polygon, and you create a smooth object by repeatedly doing a couple of simple steps. The first step is called split, and that's where you add midpoints to edges. That's a really, really easy computation. And the second step is called average, where you reposition all those points-- again, say, using midpoints. And after one stage of splitting and averaging, you can go from, say, four points to eight points, and that's a little smoother. You do it again, you from eight points to 16 points, that's smoother still. And mathematically speaking, we do it an infinite number of times. And in the limit, then, those polygons, those subdivided polygons, converge to something that, if you're careful, is smooth. And that same idea of splitting and averaging repeatedly also works for surfaces. So just about every surface you see these days is built using subdivision. Main branches of linear algebra that come to bear in subdivisions, there are a lot matrices and matrix multiplications. And there's also a really interesting use of eigenanalysis, eigenvectors and eigenvalues. Today, we've developed enough technology that's really freed our directors to just imagine whatever story they want to imagine. A lot of the technology we've already got. Many of our films, the stories that the directors come up with, require us to develop new technology. But for the most part, these days the directors are really free to dream up whatever story they want, and one way or another, we'll figure out how to get it on the screen. But what we try do in the research group is look broadly across all the existing productions for technology needs that might be peculiar to those films, but we also try to pay attention to those persistent unsolved problems that may have been with us for quite a while. And we create lists of opportunities and potential problems to work on, and then collectively we decide which ones we're going to attack in a given time. And so we generally try to have a mix between projects that can be developed and delivered on a relatively short time scale, maybe three to six months, but also in the mix we want to have some of those bigger harder problems that may take us three to five years to solve. Well, two of the big problem areas that we're working on, one is to make all of our computations go in real-time. And that turns out to be a big challenge in a few areas. One area is in lighting. That's where we take the positions of all the virtual light sources in our virtual environments, bouncing off our virtual characters, and we try to simulate what's going to happen as light bounces around in that environment, ultimately back to the virtual camera. And what the virtual camera sees is what you see in the theater. Well, that's a lot of simulation, and it's an extremely time consuming process. So we're working on methods now that'll make that go at 30 frames a second or faster, instead of the four to six hours per frame that we're dealing with now. Another area where real-time computation is very difficult is in flesh and muscle simulation. That requires large scale simulation of deformable volumes whose motion are governed by stress and strain equations, Newton's laws of dynamics. We get very, very large linear systems that have to be solved. Typically, it'll take minutes per sub-step, and we'd like that to go at real-time as well. So the uncanny valley refers to situations where a digital character-- typically a human-- is kind of close to being human, but doesn't really nail it. And the effect can come off as really creepy-- probably because we've had millions or billions of years of evolution built into our visual systems that lets us really analyze human faces and understand when things aren't quite right. So if you have a very stylized character, they're very believable and warm-- even something as simple as a line drawing. A smiley face is maybe that the best example, where it's appealing and it's very stylized. On the other hand, if you get everything right, then you can create an image that's indistinguishable from a real human, but that's really difficult. So typically what happens is people get close, and they fall into the uncanny valley because they're not close enough. At Pixar, we've always been about stylization and appeal, and I don't expect that to change. The level of stylization, the particular details of the stylization, are largely up to the directors, but we find that storytelling with stylized characters can give a heightened sense of realism and entertainment than purely photo-realistic. One nice thing about computer animation, computer graphics, is it's as much art as it is science. And so in addition to learning all the underlying technical information, you can really develop your eye and your storytelling ability as an artist. The best thing to do is just get your hands dirty. Get your hands on Blender, for instance, which is an open source free software package that does just about every part of the movie production process. So you can download Blender, work through the tutorials, make your own digital films. TIM CHARTIER: I hope you found the interview as interesting as I did. So next time you're watching your favorite animated movie, maybe you can see the math used to bring it to life on the screen. I'd like to thank Tony DeRose once again for taking a moment out of his busy production schedule to sit down and talk to us about the math behind the movies. ",
                                        "unit_id":"ee2fce672e38461cab22dec16282e7b1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c831e9d0687f4c66ad16b0c69b43e3a7",
                                "vertical_name":"Pixar: Tony DeRose"
                            }
                        ]
                    },
                    {
                        "sequential_id":"561033bca316497ea3cf1ccae3d3d397",
                        "sequential_name":"Lawrence Livermore National Laboratory (Part 1)",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Internal combustion engine",
                                            "Complex differential equation",
                                            "Differential equation",
                                            "Linear equations",
                                            "Numerical analysis",
                                            "Blue gene",
                                            "Jet engine",
                                            "Computing science",
                                            "Power station",
                                            "Power supply",
                                            "Linear algebra",
                                            "Closed form",
                                            "Nuclear weapon",
                                            "Personal computers",
                                            "Real life",
                                            "Private sector",
                                            "Higher order terms",
                                            "Wind tunnel",
                                            "Linear equation",
                                            "Purple machine",
                                            "Scientific method",
                                            "Tridiagonal matrix",
                                            "Physical process",
                                            "Continuous function",
                                            "Sparse matrices",
                                            "Matrix equation",
                                            "Start talking",
                                            "Big data",
                                            "Time step",
                                            "Small number",
                                            "Computational simulation",
                                            "Computer science",
                                            "Basically",
                                            "Trillion",
                                            "Ll",
                                            "Million",
                                            "Complicated",
                                            "Program",
                                            "Amazing",
                                            "Stuff",
                                            "Relative",
                                            "Worked",
                                            "Van",
                                            "Machine",
                                            "Method",
                                            "Simple",
                                            "Talk",
                                            "Equation",
                                            "Solving",
                                            "Fast",
                                            "Math",
                                            "Brilliant",
                                            "Bigger",
                                            "Step",
                                            "Data",
                                            "Fundamental",
                                            "Matrix",
                                            "Gazillion",
                                            "Small",
                                            "Involved",
                                            "Amount",
                                            "Process",
                                            "Goal",
                                            "Approximation",
                                            "Needing",
                                            "Number",
                                            "Accuracy",
                                            "Finer",
                                            "Fine",
                                            "Loved",
                                            "Wire",
                                            "Lift",
                                            "Surface",
                                            "Higher",
                                            "Paradigm",
                                            "Computational",
                                            "Long",
                                            "Tim",
                                            "Nice",
                                            "Billion",
                                            "Big",
                                            "Airplane",
                                            "Resolution",
                                            "Solve",
                                            "Time",
                                            "Computer",
                                            "Change",
                                            "Changed",
                                            "Temperature",
                                            "Thinking",
                                            "Sparse",
                                            "Function",
                                            "Building",
                                            "Wing",
                                            "Point",
                                            "Science",
                                            "Talking",
                                            "Memory",
                                            "Bar",
                                            "Theory",
                                            "Order",
                                            "Thing",
                                            "Understand",
                                            "Simulation",
                                            "Experiment"
                                        ],
                                        "data":" TIM CHARTIER: Well, Van, it's wonderful to be here at Lawrence Livermore National Lab. And in this MOOC, we'll be doing linear algebra on our personal computers, but here you do it on supercomputers. So can you talk about that and the advent of that in supercomputing? VAN EMDEN HENSON: Sure, Tim. I'd love to talk about that because what I do here is, I think, really cool. And I think what we do in the room behind us, where you can see some of the computers, is pretty amazing stuff. And what's amazing is how we came to this state. From the very beginning of your training as a scientist, you get taught the scientific method. You're taught the science is an interplay between theory and experiment. So what do you do? You want to solve a problem, so you sit down and you think a little while. I assume The Thinker pose here. You think, and you come up with a theory. And then you need to test the theory. So you go out and you design some sort of an experiment. And then when the experiment doesn't play out the way you think it is, you go back and you think some more. So that's, for thousands of years, what the scientific method was. You think. You devise a theory. You test it with an experiment. You revise your theory. You design a new experiment until you're satisfied. In the past two and a half decades or so, that has changed. The scientific method has changed fundamentally. And I want to talk a little bit about how that happened and why that happened. So if you think about it, if I were in the early days of aviation and I wanted to build an airplane, so I'd go out and I'd build the wing to whatever I thought it would look like, and then I'd put it on the fuselage. I don't think that one's going to fly much. And that would be what happened. I I'd build an airplane, and it would not fly very well. It'd crash or something. And so I'd say, well, I need a better wing. I'd think about it. I'd say, well, I need to make the wing-- maybe it's a little longer. Maybe if I make this longer, maybe if I slim it down. So I'd go back to the shop, and I'd build another wing. And then it would fly or would not fly. One of the biggest inventions that came out for aeronautics was when people came up with the wind tunnel, because then I didn't have to go crashing an airplane every time I wanted to try. I could just build a wing itself and put it in the wind tunnel, where there's this big, giant fan here blowing air over it. And I'd release some smoke and see what was happening. I could measure some things as to how well it would work. And then, again, if it wasn't producing as much lift as I would like or anything like that, I'd go back and I'd get my modelers to rebuild it, extend the wing, slim down the profile, that sort of stuff. And then, after a while, that got to be a little old, just rebuilding a new model every time. So somebody said, ah, let's do some math. And then they started covering things with-- devising differential equations and things like that in order to understand the properties of how the airplane wing worked, how it developed lift, and that sort of thing. And so we've already got an advancement in the scientific method. Instead of just thinking and doing an experiment, it was thinking, devise the theory with some fundamental math behind it, and then go through the process again. But it was still always think, experiment, and go back and think some more until you were done. Repeat until satisfied. The problem with that method is severalfold. First of all, you can write all these fancy differential equations, but very few of them can be solved in closed form. Very few of them that are actually complicated enough to solve the kinds of problems that we needed to solve, you just can't do it analytically. They're too complicated. So what you would do is you would simplify, simplify, simplify until you had a problem you could solve. Even that got to be not quite enough. And so then we got the idea of, let's get some computational help in there, and it helped that somebody invented a computer. So what does the computer do that makes it so much better? So here's the deal. If you have some sort of fancy equation, some sort of differential equation, [INAUDIBLE] some gradient or something or other, and you've got a bunch of nonsense there. These are complicated equations. They're difficult to solve. So why don't we replace those with simple equations, something that any idiot can do? What can any idiot do? They can add. They can subtract. They can multiply, and they can divide. So why don't we replace all this fancy math with mathematics that only involves adding and subtracting and multiplication and division, and maybe calculating a logarithm or looking up a logarithm somewhere, something like that? And that's enter the computer and numerical analysis. I used to teach numerical analysis. And I loved teaching it because when I started out, the first thing I always said to my students on the first day was, the nice thing about this class is you only need to know two theorems. That's all you need to know. You need to know the intermediate value theorem, which basically says if you have a continuous function that passes through this point and passes through that point, then somewhere in between it passes through every point in between them. That one you need to know. And you need to know Taylor's theorem with remainder. Taylor's theorem with remainder says if you know the value of a function here and you want to estimate the value of a function here, then there's a simple formula that gives you a good approximation relative to higher and higher orders of derivatives. So you take your first derivative, and your first approximation is f of x plus-- x0 plus-- x minus x0, basically times df dx at x0, right? OK. And then there's higher-order terms there. And of course, we're lazy, and we truncate after the first through the second term. When I first went to school and I saw those higher-order polynomials, and I thought, wow, we're going to have to get up there. And then I discovered that in real life, you rarely get above the second order. Once in a while, you go fourth order and feel really strong. So all you need is a simple formula that looks like this, but it's still got one of those derivatives in it. But it turns out you can replace the derivative with a difference. Just the difference between the value here and the value here divided by the difference there is an approximation to the rate of change. Because that's what derivatives are, right? They give you the rate of change. So what that means is now I can do simple problems by replacing a complex differential equation with a set of linear equations. So I have, let's say, something simple like a bar, and I'm going to figure out the temperature at that bar. What I'm going to do is at every so often in the bar, I'm going to pick a point on this grid. I'm going to grid the whole bar up, pick a point. And then what I'm going to do is I'm going to write a very simple equation for the temperature at this point. And the derivative is going to be replaced by differences between nearby points. So it's going to involve the points at those two points. I just have a very simple equation that relates my forcing temperature, the initial temperature of something, with the temperature at this point in relation to the temperature at those two points. So all I have is one simple equation with one unknown and three things that, in theory, I know. The problem is I don't actually know these guys. I have another equation that looks just like the one for these guys that's centered here and involves this point and that point. And I have another equation that's centered here that involves that point and that point. So what I end up with is I have an equation for each of the points that I want to know. It's a simple equation. It's a simple linear equation, just sums and differences of the values of these points, and I have to solve them all simultaneously. So what I end up with is a matrix equation, where I have a row of the matrix for every one of these points. And these I'll call boundary points, and say those values are known. So I have a row of the matrix for every one of these points, and they're just ordered in order. So this one involves the value at itself. It's got some coefficient there and the value at its neighbor. And this one, the second equation, involves the value at itself and its neighbor and perhaps another neighbor and so on. So I end up with a really nice, simple, tridiagonal matrix with a set of unknowns. Here's f at x1, f at x2, f at x3, and so forth. And then these are the forcing functions. So those are the things that are known. So all I have to do is solve a linear equation. OK. That's much simpler than solving a complicated differential equation because all I have to know how to do is solve matrix equations. And that worked for a while, until we started realizing that we needed lots of resolution. Now, when you need fine, fine resolution, then what happens is the same principle applies, but the systems start getting big, really big, really fast. Because what happens is that if you really want accuracy, that spacing has to be really small. And you can also do these for time-varying problems, where you actually have such a system for each time step. But those systems, you can set them up so they're just a matrix multiplied every time step. But for that to be stable, this distance, which I'll call h, has to be very, very small, which means you have to take very, very many time steps to get any kind of an approximation. And also, if you need good accuracy at these points, then the accuracy is relative to typically the square of that number, and you want that to be really, really small to get good accuracy. And that means if that gets really small, that the number of points gets really big. And when you start talking about not just a simple bar, but the surface of an airfoil, or the entire surface of an airplane, or the fluid flowing through a pipe or through a motor, or the workings of an internal combustion engine or a jet engine or things like that, then you're starting to talk extremely complicated geometries with extremely large systems of equations. And before too long, you're too big for your little podunk computer. So you need to build a bigger computer. OK. So what led to all of that that you see behind me? The government funded a program that, I think, was one of the most brilliant programs, a huge program called the Accelerated Strategic Computing Initiative, or ASCI, whose purpose was to develop the art and science of computational simulation to the point that-- well, their goal was to be able to accurately simulate what happened inside a nuclear weapon. But the bigger goal was to accurately simulate whatever physical process you wanted. And so they started building what were then supercomputers. The first one-- I'm going to dig out a piece of paper here with a couple of facts and figures. The first computer in the ASCI program was the ASCI Red machine. It was at Sandia National Laboratories. And it had 7,000 processors and had one gigabyte of memory on board and would work at one teraflop. Now, if you want to know what those are, mega is a million, gig is a billion, so a gigabyte is a billion bytes of memory. And a tera is a trillion, 10 to the 12, so a trillion floating point operations per second. And that was, at the time, monstrous and fast, and we loved it. And we ran some problems, and what we found was it allowed us to understand physics we'd never before understood. And it also produced results that we didn't understand. And we didn't know, and this was true with every generation of computer. We didn't know when something weird happened, was it because we didn't understand the physics? Was it because we didn't understand the computer science? Or was it because we had a bug in the code? And those are hard problems to ask. And one of the key things you have to do is go for finer and finer resolution. So if I want to be convinced that the resolution I can do it today is accurate, then what I have to do is go to the best that computer will do. And then if I really want to know when that weird stuff happens is it that I don't understand the physics, or is it that my computer science is not understood, I have to build a better computer. The better computer allows me to check the results of the previous computer. And so we've gone through this generation in order to do the problems where we've gone through generation after generation of supercomputer. They get bigger and faster and better. And every time they do, the science we can do with them gets better. It's more detailed. The resolution gets better. What we learn about the fundamentals of the physics involved gets better. What we learn about the fundamentals of computing science gets better. And what we learn about needing something still better becomes even more and more important. So we went from the Red machine at 7,000 processors through the Blue Pacific and Blue Mountain machines. One of those was at Los Alamos. They had 5, 6-- they had about 6,000 processors each, and we're up to two or three teraflops. So a generational improvement. We then got the ASCI White machine, which actually wasn't in this building. It was in the other building across the way. We had the ASCI White machine, and it was up to 8,000 processors and 63 teraflops. So again, you can see the kind of speeds that are coming up. And then we have the Purple machine. That was in this room behind us, one of the first machines that occupied the space in there. It had 10,000 processors. Then we brought in the Blue Gene machine, and that was a whole-- the Blue Gene was the number one machine in the world for quite some time. When we first instantiated it, it had 130,000 processors, just a huge change. It had a different philosophy. It was more small memory per processor and lots of processors. Where we had gone for-- well, small number of processors. Now, I'm talking 7,000 to 10,000 processors as a small number of processors with fair amount of memory each. And the considerations that had to happen in these things. We started needing to consider the amount of wire running through them. And the speed of light, the speed of electrons in all that wire, would it transmit data fast enough through these machines? Would the heat-- that's a huge problem-- how do you cool these machines? How do you provide power for them? We have our own power station or power supply here at the lab because we have to keep these things running even when the local power company is having issues. So we work on that. And then it went up. Los Alamos got a machine called Roadrunner, which had 26,000 processors and was the first machine to get a petaflop. So that's 10 to the 15, a quadrillion floating point operations. And then we're at now-- Sequoia is the big machine in there now. It's got 1 and 1/2 million processing cores in it. It's the first one over a million cores. It's 1.6 petabytes of memory, and it's amazingly fast. Now, this same sort of thing has been paralleled in the private sector and the universities because the ASCI program was brilliant in that it involved a consortium of people at the laboratories, people in industry, and people at universities. It was a brilliant thing, which enabled us to change the fundamental paradigm of science. And so now-- that's where I was headed with this-- what is the paradigm of science now that's different? Well, instead of theory goes to experiment-- yeah, experiment, I got it right, I guess, I don't know, spelling's not my long spot-- and then improve the theory. That's the old way, old. OK. What's the new way? Well, the new way-- I'm not going to draw down low-- the new way is this. You have theory. You'd still do the thinking part. And then up here, you have experiment. And as always, the theory enables you to design the experiment, and the experimental results enable you to improve the theory. But now you got a third leg of the stool of science, simulation. Simulation is also driven by the theory. But the results of the simulation allow you to design the experiment and to improve the theory. And the results of the experiment, as well as adjusting the theory, also enables you to change the simulation. So now science is a three-legged stool-- theory, experiment, and simulation. It's a fundamental change in the scientific method. And it's happened because we and universities and industries-- and I'm not talking just about the ASCI program. I'm talking about once this all became necessary all over, the science has discovered what simulation's all about. That's what those machines are for. Now, what happens is now we're doing these big physics simulations, and they look just like the little one I showed you. They all have these matrix equations in the middle, where you've got to solve ax equals b probably a gazillion times. I don't know where a gazillion is. That's after peta, I think. And they all have the property that they're not nicely tridiagonal, but they're block-banded. So they've got maybe bands of things. So they're sparse matrices. These are very, very big, millions, hundreds of millions of unknowns in these systems, but very small number of non-zeros in this matrix. And the matrix, if this is 100 million unknowns, then you've got 100 million squared entries in this matrix, most of which are 0. That saves us. Now, this is important. That they're banded like this is very important because what you have to do, if you're going to do this system and this problem in parallel is you have to divide up all the data among the processors. And so, typically, you chunk out a bunch of the data to the first processor, and chunk out a bunch of the data to the second processor, and chunk out a bunch to the third processor, and chunk out a bunch, and so on, until you've used up the-- what did I say, 1.5 million processors. You chunk it all up. And what that means is that-- those are the way the rows of the matrix are chunked up. And it means that when I'm solving this particular equation right here, this guy needs to have the value of this guy and that guy, but it also needs the value of this guy and that guy and that guy and that guy. And those values are not on this processor. Those values are held somewhere down here in, say, this processor. So at every step, this processor that's solving this equation has to communicate with this processor, and that's where the sparsity of the system is important. Because if it's not sparse, you need to communicate-- or if it's not sparse, this processor would have to communicate with almost all of the other processors, and that would be untenable. So the sparseness of the system allows us to use the massive numbers of processors in order to solve it without spending 100 million years solving the problem. This has changed again. This? I used to think this was hard, really, really hard. No, no, no-- I don't want to denigrate my physicist friends and my friends who have been doing this with me for the last 20 years. But nowadays, there's another linear algebra problem that's even harder, and that's what happens when we get into big data. And that's what we'll talk about next. ",
                                        "unit_id":"0db3ee6e83ad4d1383a59b917d9a1979",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"aa3af5165db04dd2b19e8337fcec7c24",
                                "vertical_name":"Lawrence Livermore National Laboratory (Part 1)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"73b3e381780049f78888967d5f1f0cd6",
                        "sequential_name":"Lawrence Livermore National Laboratory (Part 2)",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear system",
                                            "San francisco",
                                            "Scientific computing",
                                            "Doctoral studies",
                                            "Gaussian elimination",
                                            "Large",
                                            "Solve",
                                            "Van",
                                            "Dr",
                                            "Talking",
                                            "Big",
                                            "System"
                                        ],
                                        "data":" TIM CHARTIER: During my Doctoral studies at the University of Colorado at Boulder, I served as a summer student at Lawrence Livermore National Laboratory. I worked on solving large linear systems. Why? Well, the lab located in Livermore California, which is east of San Francisco, houses some of the world's largest and fastest supercomputers. These computers operate in petaflops, which is a quadrillion floating point operations per second. So I was solving large linear systems-- are we talking 100 of rows? Thousands of rows? Well, let's ask Dr Van Henson, a mathematician at the lab who works on a variety of projects in scientific computing. How big is big when it comes to a linear system? Let's ask Van. So Van, when you say you solve large linear systems on these supercomputers, how large are we talking? DR. VAN HENSON: They get big. We used to think that a system with thousands of equations and thousands of unknowns was big. But nowadays, we're talking easily 100 of millions of equations, 100 of millions of unknowns. And we've had systems that are in the billions-- billions of equations, billions of unknowns. Don't try doing Gaussian elimination to solve that. In fact, anything that's going to give you n cubed operations, you're not going to live long enough to solve that problem that way. But they do still run a long time. Some of these simulations are running 24-7 for months at a stretch. And there you have to have systems that tolerate breakage of some of the processors or faults where it goes down, and you have to be able to restart. They're big simulations-- they're big systems. But it's all addition, subtraction, multiplication, and division that any idiot can do. TIM CHARTIER: Great. Thanks. DR. VAN HENSON: Sure. ",
                                        "unit_id":"10ef737c5bc34bc3a1fa9a9f215d1c54",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3e66a37a4dc349b7812e5b8a2a4c284b",
                                "vertical_name":"Lawrence Livermore National Laboratory (Part 2)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"cc66c6fcdf884bc191f15b5a80d6446e",
                        "sequential_name":"Lawrence Livermore National Laboratory (Part 3)",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mental activity",
                                            "Social activity",
                                            "Sleep patterns",
                                            "Film crew",
                                            "Vice president",
                                            "Social communication",
                                            "Heart rate",
                                            "Brain activity",
                                            "San jose",
                                            "Silicon valley",
                                            "Physical activity",
                                            "Aggregate data",
                                            "Data analysis",
                                            "Raw data",
                                            "Real time",
                                            "Table",
                                            "Pretty",
                                            "Measuring",
                                            "Experience",
                                            "Fairly",
                                            "Data",
                                            "Exhibit",
                                            "Museum",
                                            "Ll",
                                            "Sensor",
                                            "Time",
                                            "Learn",
                                            "Similar",
                                            "Bit",
                                            "Back",
                                            "Ve",
                                            "Case"
                                        ],
                                        "data":" TIM CHARTIER: You can wear a band around your wrist or run an app on your smartphone to collect personal data. From that, you can learn aspects of your health, stress and sleep patterns that might improve your life. Data analysis on personal analytics is a growing and important field. The Davidson X crew travelled to San Jose, California to visit the Tech Museum of Innovation. The museum is full of cutting edge exhibits. The museum has a set of exhibits that can collect information on you and then display the data in its findings with you. Let's learn about this work from Lath Carlson, the Vice President of Exhibits for the museum. LATH CARLSON: Hi, I'm Lee Carlson, Vice President of Exhibits here at the Tech Museum of Innovation in Silicon Valley. And we're in our new Body Metrics exhibit. In this exhibit, we're outfitting visitors with devices like this wearable head sensor that's doing EEG and measuring my brain activity. I've got a little sensor on my shoulder here that's measuring muscle tension and heart rate and they're streaming to the device around my neck, which is essentially like your smartphone. It's got a camera in it, accelerometer. This one also has RFID and additional microphones. And it's collecting all the data from these sensors, pushing it off to our servers, and here I can show you kind of the raw data here that it's collecting. And then in our servers, it's analyzing that against machine learning developed algorithms to push back six simple metrics that show me my mental activity, my social activity, and my physical activity. And these metrics will be changing in near real time as I wear these devices throughout the whole museum exhibit experience. So a visitor can take this for two or three hours and experience different things in the museum, see how that affects their metrics, and then at the end, come back to the exhibit take the device off and lay it on a very large multi-touch table where it will pull up all of their data as well as the data from all other visitors. And we'll go and do that next. Now we've gone around the museum a little bit wearing the sensors and collecting the data, I can come back here to what we call Data Pool. And this is a large multi-touch table where I can take my device off and place it on the table. And what it's going to do is pull the servers all the data I've collected during the visit. So in this case, this is the aggregate data so for my whole visit of having it on for half an hour or so, where my metrics are. So generally I was pleased, engaged, a little bit on the alone side, kind of quiet, fairly still, fairly tense. And then it gives me kind of this archetypes. In this case, a stunned team player is my archetype. And then I can actually go through and see the timeline. So you see myself going through, in this case, this exhibit area some of the film crew and then it'll highlight some moments, most aloof, most alone, and different things that are going on and showing me by there, you can see as I move this through my timeline, the metrics that are changing. So some stayed pretty consistent across the visit. Others, like social communication and social proximity, changed. And I could also, if I touch on there, I can see-- so there's the graph of social communication. So this is when I was quieter, talking a little bit more, quieter again. And social proximity-- and then see in this case-- is always fairly high but this certainly dipped right there for a minute or two. And you can see, I can overlaying and go OK, I was actually talking less when I was around fewer people as well. Others, like mental focus and mental attitude tended to be more similar. And then, see if can grab somebody. That person doesn't like to be grabbed. Or he's not there either. Come on, give me someone else. OK, I'm giving up. Here we go. Let's see. So here, I'm going to compare myself to another visitor, so someone else who came through the museum today. You can see, in this case 97% similar at that moment. But then it's going to change depending on-- I think I hit 100% at one point. So there it was 99%, but then down to 67%. So we obviously had pretty different reactions to something was going on in that particular time and space. ",
                                        "unit_id":"3b84792d800c4b05992751978f4a10fa",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7e5b8e55051b43c48ec642dff11eabb9",
                                "vertical_name":"Lawrence Livermore National Laboratory (Part 3)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"51af03db49b94ee495820670384ca035",
                        "sequential_name":"The Tech Museum",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mental activity",
                                            "Social activity",
                                            "Sleep patterns",
                                            "Film crew",
                                            "Vice president",
                                            "Social communication",
                                            "Heart rate",
                                            "Brain activity",
                                            "San jose",
                                            "Silicon valley",
                                            "Physical activity",
                                            "Aggregate data",
                                            "Data analysis",
                                            "Raw data",
                                            "Real time",
                                            "Table",
                                            "Pretty",
                                            "Measuring",
                                            "Experience",
                                            "Fairly",
                                            "Data",
                                            "Exhibit",
                                            "Museum",
                                            "Ll",
                                            "Sensor",
                                            "Time",
                                            "Learn",
                                            "Similar",
                                            "Bit",
                                            "Back",
                                            "Ve",
                                            "Case"
                                        ],
                                        "data":" TIM CHARTIER: You can wear a band around your wrist or run an app on your smartphone to collect personal data. From that, you can learn aspects of your health, stress and sleep patterns that might improve your life. Data analysis on personal analytics is a growing and important field. The Davidson X crew travelled to San Jose, California to visit the Tech Museum of Innovation. The museum is full of cutting edge exhibits. The museum has a set of exhibits that can collect information on you and then display the data in its findings with you. Let's learn about this work from Lath Carlson, the Vice President of Exhibits for the museum. LATH CARLSON: Hi, I'm Lee Carlson, Vice President of Exhibits here at the Tech Museum of Innovation in Silicon Valley. And we're in our new Body Metrics exhibit. In this exhibit, we're outfitting visitors with devices like this wearable head sensor that's doing EEG and measuring my brain activity. I've got a little sensor on my shoulder here that's measuring muscle tension and heart rate and they're streaming to the device around my neck, which is essentially like your smartphone. It's got a camera in it, accelerometer. This one also has RFID and additional microphones. And it's collecting all the data from these sensors, pushing it off to our servers, and here I can show you kind of the raw data here that it's collecting. And then in our servers, it's analyzing that against machine learning developed algorithms to push back six simple metrics that show me my mental activity, my social activity, and my physical activity. And these metrics will be changing in near real time as I wear these devices throughout the whole museum exhibit experience. So a visitor can take this for two or three hours and experience different things in the museum, see how that affects their metrics, and then at the end, come back to the exhibit take the device off and lay it on a very large multi-touch table where it will pull up all of their data as well as the data from all other visitors. And we'll go and do that next. Now we've gone around the museum a little bit wearing the sensors and collecting the data, I can come back here to what we call Data Pool. And this is a large multi-touch table where I can take my device off and place it on the table. And what it's going to do is pull the servers all the data I've collected during the visit. So in this case, this is the aggregate data so for my whole visit of having it on for half an hour or so, where my metrics are. So generally I was pleased, engaged, a little bit on the alone side, kind of quiet, fairly still, fairly tense. And then it gives me kind of this archetypes. In this case, a stunned team player is my archetype. And then I can actually go through and see the timeline. So you see myself going through, in this case, this exhibit area some of the film crew and then it'll highlight some moments, most aloof, most alone, and different things that are going on and showing me by there, you can see as I move this through my timeline, the metrics that are changing. So some stayed pretty consistent across the visit. Others, like social communication and social proximity, changed. And I could also, if I touch on there, I can see-- so there's the graph of social communication. So this is when I was quieter, talking a little bit more, quieter again. And social proximity-- and then see in this case-- is always fairly high but this certainly dipped right there for a minute or two. And you can see, I can overlaying and go OK, I was actually talking less when I was around fewer people as well. Others, like mental focus and mental attitude tended to be more similar. And then, see if can grab somebody. That person doesn't like to be grabbed. Or he's not there either. Come on, give me someone else. OK, I'm giving up. Here we go. Let's see. So here, I'm going to compare myself to another visitor, so someone else who came through the museum today. You can see, in this case 97% similar at that moment. But then it's going to change depending on-- I think I hit 100% at one point. So there it was 99%, but then down to 67%. So we obviously had pretty different reactions to something was going on in that particular time and space. ",
                                        "unit_id":"609c028754d543fea9c26f8ead7c469c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0cf65f13e2684e35a1b62c5e3f536846",
                                "vertical_name":"The Tech Museum"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"45e5198b3dec4b2a9dcf1f6d49a2cc99",
                "chapter_name":"Thank you!",
                "sequentials":[
                    {
                        "sequential_id":"1482e5406d734c8fa4c622f8dd5e0b8e",
                        "sequential_name":"Closing Survey",
                        "verticals":[]
                    }
                ]
            },
            {
                "chapter_id":"ef5a56b140bb449e954564a9929d7eed",
                "chapter_name":"Part One Content",
                "sequentials":[
                    {
                        "sequential_id":"59b738a7d8b94ae79e6f88c0defc8e6a",
                        "sequential_name":"About This Content",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Resource",
                                            "Part"
                                        ],
                                        "data":" For those who did not sign up for Part One and therefore do not have access, we've added a few relevant lectures and activities meant only as an extra resource. You do not need to do these activities or view these lectures to complete Part Two, but for those wanting extra help in this course, you may find them useful as supplemental materials. Please consider the Part One content as a help resource only. ",
                                        "unit_id":"5d90f47fc7b741df8ea53897ccb55ffb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"30c72e4b701f457f9ed446f465d30b61",
                                "vertical_name":"Part One Content Overview"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6cda75e4d9bc48138a61918cca37399b",
                        "sequential_name":"When Life is Linear",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Pixar movies",
                                            "Computer graphics",
                                            "Sci fi film",
                                            "Linear algebra",
                                            "Higher dimensions",
                                            "Data mining",
                                            "Approximate",
                                            "Linear",
                                            "Find",
                                            "Ll",
                                            "Read",
                                            "Close",
                                            "Standing",
                                            "Data",
                                            "Flat",
                                            "Printing",
                                            "Handwriting",
                                            "Wireframe",
                                            "Campus",
                                            "Building",
                                            "Shape",
                                            "World"
                                        ],
                                        "data":" TIM CHARTIER: I'm standing on the campus of Davidson college where I teach. Among many things, I see the beautiful facades of the buildings and the wonderful trees that fill the property. As we'll see in this MOOC, I like applications of linear algebra. I look at the world and think how life is linear or at least can be modeled by linear processes. In this MOOC, you'll learn applications of linear algebra in computer graphics and data mining. So in this first lecture, let's be focused on what I mean when I say that linear processes can model or approximate physical phenomenon. We'll do this by looking at this campus. First, when I'm talking linear, I mean lines in 2-D or planes and lines in 3-D. We can be in higher dimensions, too, and work in hyperplanes and 10, 50, or 100 dimensions. I can see lines and planes standing here. Take the bricks that decorate the buildings and decorate various parts of the Davidson campus. But even there, they usually aren't perfectly straight or flat. There is often some variation, but they are close enough to think of as consisting of planes or lines. But look toward the top of the main entrance of the Chambers Building that is behind me. You'll see the sculpture that since the 1930s has been called the Chamber Maidens. Are they created with planes? Probably not, but from this distance I can't tell. Really? They could be made of planes? How do I know that? Well, the world of 3-D printing makes this clear. Let's go to sketchfab.com. Here, we see all kinds of shapes, from cars to characters that could be in a sci-fi film. They're made of planes. You can tell when you view a shape's underlying wireframe. Here's a piece by Dr. Henry Segerman of Oklahoma State University. When we make its wire frame visible, we see the flat polygons that are stitched together to make the shape, even with its apparent smooth curvature. On Sketchfab, shape after shape is created in this way. This isn't distinct to 3-D printing. Characters in Pixar movies, for instance, use wireframes, too. Generally, the natural shape being modeled isn't comprised of polygons, but we can approximate it with these shapes. In this MOOC, we will use a linear process to read handwriting or find similar movies from a data set of user ratings. We will rank sports teams or create predictions of future games. Now, will our algorithms be perfect? Can we perfectly predict future sporting events? Will we read anyone's handwriting? No, our goal is to do well overall. If you zoom close enough in to a wireframe on Sketchfab, the underlying shape may not be recognizable. But from a distance, you may not know. Like the Chamber Maidens. They are stitched out of polygons? Well, from here we can postulate, but, again, we don't know. In this MOOC, our goal with linear processes is often to model the world or, loosely, to look at the world as if it is linear. So for this exploratory exercise, you will go to sketchfab.com and explore 3-D models. In the video with the activity, I'll show you how to find different models and view the associated wireframes. Find ones you like and look at the wireframe that creates the shape. Have fun exploring the site. In time, we'll be doing math with equations, but for now let's be sure that we see the power of approximating the world with linear processes. And then one last thing-- if I say, X minus 5 equals 10, what's X, that's easy enough. But can you think of an application of this type of problem? What type of applications can you think of that use this type of equation? We'll talk about these 1-D linear algebra problems next time. But for now, go to sketchfab.com and look at modeling the digital world using linear processes. ",
                                        "unit_id":"92b9738aae4a41669b56234fe219a056",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e020d5262e8d4278845e269aca4a35ba",
                                "vertical_name":"When Life is Linear (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"4c782441ff4249ada1adc49501cd0b69",
                        "sequential_name":"Spying Submatrices",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Grayscale images",
                                            "Online software",
                                            "Mathematical object",
                                            "Question marks",
                                            "Lion cub",
                                            "Everyday life",
                                            "Chosen",
                                            "Data",
                                            "Cub",
                                            "Size",
                                            "Important",
                                            "Plot",
                                            "White",
                                            "Life",
                                            "Matrix"
                                        ],
                                        "data":" TIM CHARTIER: The power of a matrix comes through its properties as a mathematical object, and not just as a structure for storage. Let's begin with the anatomy of a matrix. The matrix A that you see on the screen has two rows and three columns, and is said to be a two by three matrix. If you want to talk about the element in the first row, second column, which is a zero, then you refer to this as the 1, 2 element in the matrix. Sometimes matrices come from large data sets, and the best way to get a sense of the data is to plot it, sometimes called a spy plot. Let's work with the matrix that you see on the screen. Do you see structure in this matrix? Look carefully. Whether you see it or not, an easier way to see that structure is indeed to plot the matrix by putting a white square in the place of every zero element, and filling it with black otherwise. For this matrix M, the spy plot is what you see on the screen. Now compare that to the matrix. Can you see the structure now? Can you return to the matrix and quickly see the structure that you see in that spy plot? Can you imagine the structure in the matrix simply by looking at the plot of the matrix? These are important skills in working with data sets, and they can be what gives us insight on the underlying data. To see how we're doing this, let's try another plot of a matrix. How about this matrix? What structure would there be in the underlying matrix for this picture? In fact, could you write down the matrix that I used to produce this image? In many cases, this can be done much quicker by looking at the image than looking at the large matrix of numbers that produced the image. The matrix M that we saw earlier appears within the larger matrix that produced the image we just saw. We call M a sub-matrix. Pictures can be stored as matrices. For example, grayscale images are matrices with values between zero and 255. I think of zero as off or black. Essentially I'm standing in the dark. 255 is fully on or white. Everything in between is a gray value on the spectrum from black to white. With this in mind, for fun let's look at three more images. See if you can think of the matrix that I used to create the image. In each case, I literally did create a matrix of numbers and then graph it. So see if you can figure them out. In this case, I'm not going to tell you what I did. Why? I want you to come up with how you would do it. If you're not sure, then let it remain as something you can think about. That's important in life. Life has its question marks. And those are the areas where you make discoveries and gain new insight. Regarding these images, I programmed a computer, in each case, to create the matrix. What is the structure of the matrix? If you program, you might want to create your own version of the image. If you don't program, just have fun looking and thinking about it. Programming and just looking and thinking about the structure of images and the associated matrices are both good skills and can often be done in everyday life on the images that surround us. OK, how did you do? You may want to step through them again to see what you can figure out. Now let's create a graphic that uses sub matrices. We'll use the images of the lion cub and the adult lion that you see on the screen. Now remember, I'm somehow going to use a submatrix-- in fact, submatrices-- to produce a new image. So here's the image. Can you figure out how I produce them? Take a moment and consider it. You might want to pause the video, as I'm about to tell you how I created these new images. OK, these new images were created by randomly choosing a pixel location in the image of the lion cub. Then a random size of a submatrix was chosen within a particular range of options. Then each of the submatrices of the chosen size, with its upper right-hand corner at the chosen pixel location, were swapped between the images of the cub and the adult lion. Doing this several times formed the composite images that you see. So, here's your assignment. We'll use online software we've developed for this DavidsonX MOOC for you to create your own composite images. Remember, the images have to be the same size, and that's really about it. You'll have parameters that you can alter. So see what you can create through a bit of randomness, and by altering small pieces of a larger matrix. Have fun, and explore matrices and submatrices. ",
                                        "unit_id":"882b7f4279604d6182c7305ff9f61130",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"88d90d2b084a41e99f7b2261f0d979d1",
                                "vertical_name":"Spying Submatrices (Lecture & Questions)"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "White spots",
                                            "Pablo picasso",
                                            "Lion cub",
                                            "Graduate school",
                                            "President obama",
                                            "Instructional technology",
                                            "High school",
                                            "Good idea",
                                            "Linear algebra",
                                            "Friendship network",
                                            "Online code",
                                            "Image manipulation",
                                            "Picasso",
                                            "Large",
                                            "Code",
                                            "Reload",
                                            "Friendship",
                                            "Created",
                                            "Davidson",
                                            "Element",
                                            "Kristen",
                                            "Find",
                                            "Facebook",
                                            "Mooc",
                                            "Generate",
                                            "Size",
                                            "Create",
                                            "Row",
                                            "Ll",
                                            "Image",
                                            "Matrix"
                                        ],
                                        "data":" TIM CHARTIER: Plotting matrices, as we saw in the lecture, can enable us to graphically see the structure of a matrix. This can be important for large data sets and even interpreting the structure of a matrix in the context of an application. For example, here is a spy plot of a matrix containing the friendship network of my friends on Facebook. Every row corresponds to a person. So Row I, for instance, associates with someone, and Column I is associated with that same person. A specific element of the matrix has a 1 if the people associated with that element's row and column are friends on Facebook. So we are seeing dark spots in the matrix where there are friends and white spots where they are not. There doesn't appear to be much structure in my friendships. But suppose I re-order the rows and columns. Why? Well, the picture really indicates why. Take a look at the spy plot now. Now, we see sub-matrices with a lot of blue. These are groups of my Facebook friends that know each other. One group is from high school, another from graduate school, and another from here in Davidson, where I teach and live. How do I know how to re-order? That's actually a topic of Part 2 of this MOOC. The structure and nature of sub-matrices comes up in other applications, too. Given how important looking at graphical image of sub-matrices is, this activity looks at matrices in this manner and allows you and asks you to spot sub-matrices. In particular, our matrices come from pixel information of images. So we will look at images and work with sub-matrices of them. Using the online code we've made for you, you'll use two images of the same size. Then the code will swap random sub-matrices of those images. Once the new images are created, take a moment and find where the sub-matrices were swapped. As we discussed, seeing that structure of matrices visually can be a powerful tool. Here, we'll do this with image manipulation. We'll share our work in a gallery so we can learn from each other's creativity. A tutorial by Kristen Eshleman will show us how to use the gallery. Kristen is the Director of Instructional Technology here at Davidson College. On the MOOC page, you'll also find some materials addressing copyright, since we will be working with images. When you complete this activity, remember that the content of this MOOC is available all at one time. So you may want to return and see what others have done later. But first, let me show you the software that we've made to create images by swapping sub-matrices. So let's see the software that we've created for you to swap sub-matrices. You'll find the software at math365.org/lifeisli near/Picasso/Picasso.html. We called it Picasso because it reminds us of some of Pablo Picasso's artwork. We, of course, do it computationally using linear algebra. The first piece that you'll be able to create uses the adult lion that you see on the left and the lion cub that you see on the right. Then below that, you see that you can specify the minimum and maximum size of the sub-matrices. Sub-matrices can be a rectangular matrix, but in this case, we'll take them to be square. Then you specify how many sub-matrices you want swapped, and the default is 5. So hit generate. And then we'll see what we get. So there is our first image. If you like it, it's generally a good idea to Right Click and Save As, save the image as. Or you can just take the image and drag it, depending on your software. If you don't like what you got or you want to see something else, then just hit Reload and then continue and look at the image. So here's our second one. And I'll do it one more time. You can continue to look if you really think you have a nice idea. Now, you can also choose your own images. So here, I'm going to choose the White House portrait of former President Bush and the White House portrait of President Obama. And then, again, I can say please generate the swapped images. And there I go. Now, that one, I'm not very fond of that. And I also kind of notice that these sub-matrices are smaller because these images are rather large. So I'm going to go between 100 and 150 so they won't all be the same size. And I'll say, you know, I'm going to try 10 of them now. And I can say generate. There I go. And then I can say, you know, I'm going to try it again. So I can reload, and look again. And there's another one. And then try it one more time. You can look for ones that you particularly like, that give the kind of impression that you're trying to actually work with. So there you go. So when we go back, these are the various options you have so that you can become a computational Pablo Picasso using linear algebra. Have fun. I look forward to seeing what you create. ",
                                        "unit_id":"c7cd6ff42293416796c4e64dd067e652",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bf7b465dddfb4c48ab0b6b93b8bd353b",
                                "vertical_name":"Spying Submatrices: Activity"
                            }
                        ]
                    },
                    {
                        "sequential_id":"cd4b8ac40c5b4f20af218f024b30bebb",
                        "sequential_name":"Get Inverted",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mona lisa",
                                            "Scalar multiplication",
                                            "Blue channel",
                                            "Higher dimension",
                                            "Color image",
                                            "Matrix addition",
                                            "Red",
                                            "Equal",
                                            "Gray",
                                            "Scale",
                                            "Color",
                                            "Grayscale",
                                            "Scalar",
                                            "Intensity",
                                            "Blue",
                                            "Image",
                                            "Minus",
                                            "Ll",
                                            "Simply",
                                            "Addition",
                                            "Dimension",
                                            "Make",
                                            "Find",
                                            "Line",
                                            "Matrix",
                                            "Black",
                                            "Pixel",
                                            "White"
                                        ],
                                        "data":" TIM CHARTIER: We are now ready to do math on matrices. Our first operation will be addition. Let's see it in action. To add two matrices both matrices must have the same number of rows and columns. Then we add what's called element-wise This is easiest to see in an example. So consider the matrices that we have on the screen. We want to add A plus B. Now, first, we check those dimensions. Both matrices are two by three. So we can add them. The resulting matrix will also be two by three. The element in the first row and first column of the matrix that's the sum is 1 plus 0. The element in the first row and second column of the matrix that's the sum is 2 plus 4, which is 6. We simply continue this operation to find every element, as you see on the screen. That enables us to find the sum. Easy enough, it's almost too easy. This might seem like something that wouldn't result in interesting applications. We'll see a number of applications that use matrix addition, or scalar multiplication. For scalar multiplication, you are multiplying a matrix by a number like 4. To do that, you take the matrix and multiply each element by that scalar. If my matrix is 4, 3, and then the second row is 5, 1, and I'm interested in 4 times that matrix, then the resulting matrix would be-- the first row would be 4 times 4 and then 3 times 4. The second row would be 5 times 4 and then 1 times 4, which of course, is easy to do. And equals-- the first row is 16, 12 and the second row is 20, 4. What can we do with that? Let's look at a grayscale image of the eyes of the Mona Lisa. In a grayscale image, zero is black, or I think of it as off, the light is off. And 255 is white. The light is fully on. All the numbers between 0 and 255 are shades of gray between black and white. Suppose I take the matrix representing the gray scale values of the Mona Lisa's eyes. I add 40 to every element. What would that do? It would brighten the image, as you see on the screen. Now, that raises an important issue. In the software I use, if a pixel has a value of 250 and I add 40, then the new pixel has a value of 290. You could test for this and lower the value to 255. My software already knows this and treats 290 as 255, or white. So it's not like super white or something like that. You can also darken an image. You could subtract, but you could also use scalar multiplication. For example, suppose I take 0.8 times the matrix. Can you envision that? Let's look at that for the Mona Lisa's eyes. So now, let's do a bit more and invert the colors of a grayscale image. To do this, we want to change the pixel that's white, and that equals 255, and make it black, or 0. So we take white and we make it black. And we make black and make it white. That's inverting. Well, we can think of that as a line passing through two points. The point 255, 0, the pixel 255 becomes 0, and 0, 255. In other words, the point that's 0, or black, becomes 255. Well, we know how to find an equation of a line. You have two points. If you work it out, the slope would be minus 1. We already are given the y-intercept, which is 255. So the equation becomes y equals minus x plus 255. That's what I want to do for every pixel. I could do that, but I can also scale this up to a matrix that contains the intensity of all the pixels and use matrix arithmetic to do it all at one time. So let M equal the matrix of grayscale values that form the original image of the Mona Lisa. Let N equal the inverted image. Then we find N by computing N equals minus M plus 255 times the matrix 1. Now that 1 is a matrix the same size as M with all ones. Note how similar this is to the line we created. It's analogous, but now it's not simply a line, but in a way, it's a line, or a linear surface, in a higher dimension. Now let's play with this idea. In our formula, we have minus M. We can also look at this as minus 1 times M. To each element we are adding 255. Suppose we change those values. What if we change the minus 1 to a minus 0.5 and change 255 to something like 150. Now what happens? Soon, you'll have computer code online that you can test your hypothesis. But for now, what do you think would happen? Think about it and postulate. OK, now let's create another variation. We're working with grayscale as that enables us to work with just one matrix that contains the intensity of values from black to white. We can also work with color images. One way to store color is with three matrices, R, G, and B. Those matrices store the amount of red, blue, and green intensities that comprise a color pixel. Now, let's take this color image of the Mona Lisa. Again, we have three matrices. For our edited Mona Lisa, we'll let our new red intensities equal R minus 80 times that matrix that's of ones. This is the same as subtracting 80 from every element in the matrix R. This will darken the resulting red intensity of the pixels. For our edited Mona Lisa, we'll let the green intensities equal negative 0.75 times G plus 150. That is a lot like inversion, but now we have a slope of minus 0.75 rather than minus 1. And we add 150 rather than the 255 that we did earlier. Now finally, we have our blue channel. For the blue intensities, we'll compute minus 0.5 times the matrix B plus 200. What does that do? Well, when you combine that all together here's the resulting image. Well, what would you try? What values would you try? These are the ones I tried for an image that I liked what I got. But what would produce what you like? In fact, what image would you try? Rather than the Mona Lisa, what would you do? These are great questions that you can now explore. You'll find an application on the page for this MOOC to play around with these ideas. What images do you create? As we see each other's creations, do you get new ideas? What did they try that you haven't? It's time for us to learn that together. ",
                                        "unit_id":"b5f9a0e7f92c4d459334d8c1387db213",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8cc38002d7554527ba2b936a5a13e03c",
                                "vertical_name":"Get Inverted (Lecture)"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear transformations",
                                            "Mona lisa",
                                            "Mathematical operations",
                                            "Color channels",
                                            "Web address",
                                            "Computer graphics",
                                            "Bill gates",
                                            "Original idea",
                                            "Red channel",
                                            "Green channel",
                                            "Blue channel",
                                            "Color",
                                            "Red",
                                            "Green",
                                            "Input",
                                            "Create",
                                            "Channel",
                                            "Bit",
                                            "Idea",
                                            "Invert",
                                            "Perform",
                                            "Begin",
                                            "Blue",
                                            "Important",
                                            "Ll",
                                            "Image",
                                            "Grayscale"
                                        ],
                                        "data":" TIM CHARTIER: Matrix arithmetic is a relatively simple mathematical operation. In this activity and the overall unit, we'll see a variety of ways we can use this in computer graphics. In a moment, I'll show you how to use the software that we've developed to adapt images of your choosing. When you first begin, you may just input values and look at the resulting image. If you do, please stop and try to explain to yourself why the image looks the way it does, given the values you inputted. In time, I want you to begin guessing what the resulting image will look like from your inputted values before you click and then see what results. When the resulting graphic doesn't meet your expectations, you may want to change the input values. But before doing so, try and learn from what did result from your input. Can you see why the image differed from what you expected? Then, as you continue to work with the code, do your expectations more frequently or better match the results of the computation? As you work, think about the following question. If someone asked you for tips on using the software, what could you say to help them? You'll be asked to talk about this in the reflection for this particular activity. Anticipating the results of mathematical operations is an important skill. Here, we're working to gain a graphical sense of what will happen as we work with images. We can learn a lot from attempts that failed to match our expectations. But to do so, we must stop and learn from an unintended outcome. This reminds me of a quote of Bill Gates, in which he stated, \"it's fine to celebrate success. But it is more important to heed the lessons of failure\". So with all this in mind, let's learn how to use the software that can invert images and create linear transformations from the color channels of pictures. So now we're ready to do linear transformations of the images. In the tutorial, we saw that you might want to invert an image that's black and white, or you can change the color scale of the image. So the particular site that you want to go to is lifeislinear.davidso n.edu/inversion.html. We're really doing more than inverting the colors, but that is the original idea, and so that was the web address that we have. So here are the different parameters. Remember that you can think of this as a line, mx plus b. So here, the m for the red channel will be minus 1, and then I'm adding the 255. So that's inverting the red channel. Then I get the green channel and then the blue channel. So here, I see that I'm actually inverting the entire image. And then I can select which channels I actually want to be taking advantage of. You could also ask that it be turned to grayscale. So I'll just take this as the default. And there I have the color Mona Lisa actually inverted. Now, remember, you don't have to use all of them. So I could say, well, let me take the red one off. It'll just remain the same. And I'll perform this on the red and green channels-- red and blue-- or green and blue, I'm sorry, channels. And then let's just try it one more time, just with blue removed. And there we go. So then you can actually change the parameters that you have. So you could try, like 1.5, minus 50, 2.2, negative 20, negative 1.5, and then 55. There. Let's try that. Those are literally random values. So what do we get? Oh, that's not bad. Mona Lisa, if she'd been sitting out in the moss for a while. So that's that particular image. And then you might be a little too green. So you could say, well, that's a bit green. So I want to change that a little bit. And there you pick up a few other tones that you have. Now it is different if, maybe, you just remove the green channel entirely. Oh, that's why. I didn't have the blue selected. Yeah. So I went and just made the red redder. So let's add the blue in. That's part of the reason it was so green. And, well, yeah. You kind of have the blue and the green combined. You can turn it to a grayscale initially and then perform it on those three channels. In grayscale, the images will be the same. So there's the grayscale, and there's the inversion performed on the grayscale. So sometimes that has a nice visual effect. Again, you can select your own image. You can select something else and try that. And then see what you can create. We'll share these with each other and see what we create and see if we get ideas from the ways that we have linear color transformation of images. Have fun. ",
                                        "unit_id":"7feb5446496c45bbafc8f3d4da5d3341",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bacec3d3c98e433886f1f4eeee024676",
                                "vertical_name":"Get Inverted (Activity)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"b7e79296588b4adc8f61dd1d7a21bb66",
                        "sequential_name":"The Norm in Movies",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Empire strikes back",
                                            "Random number generator",
                                            "Mile high city",
                                            "City streets",
                                            "Snow white",
                                            "Pythagorean theorem",
                                            "Square root",
                                            "Curved surface",
                                            "Descriptive statistics",
                                            "Taxicab norm",
                                            "Star wars",
                                            "Flight paths",
                                            "Taxi driver",
                                            "Linear algebra",
                                            "Fourth dimension",
                                            "Euclidean norm",
                                            "Data analytics",
                                            "Data mining",
                                            "North carolina",
                                            "Euclidean distance",
                                            "Flew",
                                            "Total",
                                            "Fly",
                                            "Minus",
                                            "Quantity",
                                            "Preference",
                                            "West",
                                            "Mathematical",
                                            "Oscar",
                                            "Norm",
                                            "Measuring",
                                            "Create",
                                            "Called",
                                            "Ve",
                                            "Ll",
                                            "Data",
                                            "East",
                                            "Movie",
                                            "Application",
                                            "Notice",
                                            "Fun",
                                            "Step",
                                            "Emmy",
                                            "Point",
                                            "User",
                                            "Simply",
                                            "North",
                                            "Sense",
                                            "Important",
                                            "Element",
                                            "South",
                                            "Turn",
                                            "Distance",
                                            "Equal",
                                            "Gravity",
                                            "Find",
                                            "Work",
                                            "Closest",
                                            "Vector",
                                            "Denver",
                                            "Measure"
                                        ],
                                        "data":" TIM CHARTIER: Measurement is an important application in mathematics. We're interested in how much we weigh or, possibly how much weight we've lost, for instance. If an artist or a mathematician wants to 3D print a sculpture, the volume of the piece is important, as is the total size. We're also interested in distances. I received my PhD from the University of Colorado at Boulder, so let's consider a trip from Charlotte, North Carolina, where I live now, to Denver, Colorado. Suppose I start in Charlotte, charter a private plane, and fly straight west. After flying 1,290 miles, I'd be directly south of Denver. Then, if I could turn north and fly 310 miles, I'd arrive into Denver. Now, if I had started in Charlotte, pointed the plane directly at Denver, and flew straight until I reached the mile high city, I would have flown just over 1,300 miles. Let's think of Denver in Charlotte in the xy coordinate plane. Notice this is actually an abstraction since they exist on the curved surface of the Earth. I live in Davidson, North Carolina. That's my origin, so I'll let that be the point 0, 0. Charlotte is about 20 miles south and about two miles west of Davidson, so Charlotte is located at the point negative 2, negative 20. This places Denver at the point negative 1,292, 290, since the mile high city is west and north of Charlotte. Now let's think again about those two flight paths I took. First, I flew directly west, which took me from the point negative 2 to negative 1,292 on the x-axis. That's a total distance of 1,290 miles. Then I flew from negative 20 to 290 on the y-axis, which is a total of 310 miles, so my total distance traveled was 1,600 miles. Now alternatively, I could fly from the point negative 2, negative 20 straight to negative 1,292, 290. If you plot this, you're looking for the distance between the points, which equals negative 1,292 minus negative 2, that quantity squared, plus negative 20 minus 290, that quantity squared. You take that sum and you take the square root. Well, that's the Pythagorean Theorem because this distance can be seen as the length of the hypotenuse of a right triangle with the sides of lengths 1,290 and 310. That distance is about 1,330 miles. If you are flying, you want to make as direct a route as you can, so flying along that hypotenuse would be ideal. But if you're a taxi driver in Manhattan, then you need to drive along the grid of city streets, so driving east and west, north and south may be your only options. These are two ways of measuring distances and they have mathematical names, too. We might in various situations beyond traveling between locations want to measure distance in these ways. So let's look at the points x1, y1 and x2, y2. Then we can measure the distance between the points. First, we can use that distance along the hypotenuse. That equals x2 minus x1 squared plus y2 minus y1 squared. That whole quantity, that sum, we take the square root of. Here, we're measuring what is called the Euclidean Disance between the points. Now we'll turn to the other measure that we had, the one where we drive only east, west, north, and south. In this case, we're measuring distance using what can be called Taxicab Geometry. The distance between the points x1, y1 and x2, y2 equals the absolute value of x2 minus x1 plus the absolute value of y2 minus y1. This gives us two measures. In each case, we've been working with the distance between points. When we measure the distance from the origin, we are often thinking about the length of something. For instance, how far you stand from the ground is your height. In linear algebra, we also talk about length, but we often talk about it in the context of a vector or a matrix. Well, when we talk about these measurements, we talk about them as norms. We can talk about the Euclidean norm of a vector. Suppose we have a vector, x equal x1, x2, x3, which is a 3D vector. Then its Euclidean norm is x1 squared plus x2 squared plus x3 squared. That sum we take the square root of. Note that this also equals the distance between that point x1, x2, x3 and the origin. Similarly, we have the Taxicab norm, which is also called the one norm, and that equals the absolute value of x1 plus the absolute value of x2 plus the absolute value of x3. Interesting? Possibly. Powerful? Most certainly. And to get a sense of that, we're going to move into an application. We'll work with the Euclidean norm in a dimension higher than three. Let's see how we can use it to find a movie buddy for us. We'll step into the fourth dimension, something that we can't graph, and we'll find someone with similar tastes in movies. Every year, the Academy Award nominations come out, and I get a \"to see\" movie list. I've seen some of them, but quite a few of them I often just haven't had the time to see. So here are a few films that were nominated for a 2014 Academy Award for Best Picture-- American Hustle, Gravity, Her, and Philomena. Now, suppose you are thinking about seeing all four films with a friend, and you'll see it either with Oscar or Emmy. So you each rate the films between minus five and five. A rating of five correlates to wanting to see the film for the first time or again and a minus five means definitely not wanting to see it again. Oscar rates American Hustle with a zero, Gravity with a five, Her a minus three, and Philomena with a four. Emmy rates the films keeping the same order, five, two, five, four, and you rate the films minus three, three, five, minus four. Now, in order to use linear algebra, we're going to turn these into vectors. We're going to turn them into preference vectors. So your preference vector is minus 3, 3, 5, minus 4. We've simply taken your ratings and placed them as elements in a vector. We'll call your vector v. Easy enough. So we can do the same thing quite easily for Oscar. His vector would be 0, 5, minus 3, 4, and we'll call it o. Emmy's vector is 5, 2, 5, 4, and we'll denote that by e. So now we're ready to find distance. Who has the closest taste? Well, we're going to find that as the distance between those preference vectors. So the distance between your and Oscar's preference vectors is the length of the vector v minus o. Remember, we decided to use Euclidean distance, so this equals minus 3 minus 0, that quantity squared, plus 3 minus 5, that quantity squared, plus 5 minus minus 3, that quantity squared, plus minus 4 minus 4, that quantity squared. We take that sum and we take the square root. Well, when you work that out, the length is about 11.87. Similarly, the length of v minus e-- that's you and Emmy-- is about 12.08, and Emmy minus Oscar, e minus 0, is 9.95. In terms of seeing a movie with someone, Oscar has closer choices under this norm for these movies. But notice Oscar and Emmy may enjoy a movie together more, at least if their experience aligns with Euclidean distance. So now let's think about this a little bit more. What does a distance of zero mean in terms of preference? That would mean you have exactly the same choice as someone else in movies if those were each of your vectors. So we've found a mathematical way to do this, but what does it really mean? For those earlier movies, I just used a random number generator to create those ratings, but can it really glean helpful information? Can it help us find things that might otherwise be difficult to find? This is when we step into the arena of data analytics. So we're going to use the movie lens data set collected by the GroupLens Research Project at the University of Minnesota. This data set contains 100,000 ratings, where a rating is between one and five, from 943 users on 1,682 movies where each user rated at least 20 movies. The data was collected from September 1997 through April 1998. The dates are important, as it helps you think of movies that might be contained in the data set. For example, Gravity won't be in the data set since it came out after the data was collected. Now, what are we forming as our preference vectors, or just simply our vectors? Well in this case, we're going to create movie vectors, so each vector correlates to one movie and all of its ratings. So in this case, a vector contains the ratings of all 943 people in that data set when an element equals 0, it means that the user did not rate the movie. We will find the Euclidean norm of the vector that is the difference between two movie vectors. If we take a film, then the closest, or most similar films, at least according to this mathematical approach, are the movies that create the shortest vector, just like we did earlier with Emmy, Oscar, and you. So let's take a movie. Let's take one from my childhood, Star Wars from 1977. We take its vector containing all the ratings and then we take that minus every other movie, and which one is the closest? Well, it turns out that the top three in order is Return of the Jedi. That's the closest. Then comes Raiders of the Lost Ark, and then finally, The Empire Strikes Back. Well, let's try something else. How about Snow White and the Seven Dwarfs from 1937? Its top three are Pinocchio, Cinderella, and Dumbo. Well, those are films I decided to try. What films would you try? Do you agree with these results, or would you agree with the results that you find? Usually in data mining, algorithms can work well in some cases but not all cases. Can you determine when this particular measure does and doesn't work well, when you agree with it and when you don't? That is an important part of data mining. Would it be better to take the taxicab norm? We didn't even try that. You'll get to explore that later. Finally, note this idea could be applied to data sets that contain descriptive statistics on athletes or ratings data on cars, restaurants, or recipes. What comes to mind for you? If you can grab a data set in code, you might want to try it yourself and share what you've found with our MOOC community. It would be great fun to see what you find, to see what you mine out of data that interests you. So go onto our MOOC site and you'll be able to experiment with this movie lens data set and play around with movies that interest you. What do you find? Well, let the mathematical sense and measure of distance help you explore a very large data set. Have fun. ",
                                        "unit_id":"b99d3b408e5146ba83b5cba14a399d71",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"601976a8ff9249858f9a0413204d6cb5",
                                "vertical_name":"The Norm in Movies (Lecture & Questions)"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Swiss family robinson",
                                            "Linear algebra",
                                            "City block",
                                            "Vector norms",
                                            "Web page",
                                            "Euclidean norm",
                                            "Davy crockett",
                                            "Taxicab norm",
                                            "Escape characters",
                                            "Data",
                                            "Interesting",
                                            "Funny",
                                            "Mathematics",
                                            "User",
                                            "Movie"
                                        ],
                                        "data":" TIM CHARTIER: In this activity, it's your turn to try your hand at using linear algebra to find similar movies. To help with this, we've created computer codes to let you explore the movie lens data set like I used in the lecture. There are data sets of various sizes available for this. For example, the data set with 100,000 ratings contains ratings from 943 users on 1,682 movies, where each user rated at least 20 movies. The ratings are between one and five, and a zero means a user did not rate a movie. Now it's important to remember that the data was collected from 1997 to 1998, and that plays into what films are possible to search on. So pay careful attention to where the recommendations fit and where they may not. A recommendation is inherently an opinion. For example, I like the movie The Imitation Game. That's my opinion. You may or may not agree. In the same way, try and see where you agree with the opinion of the mathematics. Is there anywhere that the math might simply get it clearly wrong? Yes, it's an opinion, but one that virtually no human would ever have? That is important to recognize. Thinking about your results in this way can help pinpoint the limitations of the math. Explore and look where the mathematics works well, and possibly where it struggles or breaks down. So let me now show you the code that we've created for your activity. So now, we get to use this movie recommender, which uses vector norms to determine movies that are like other movies. So let's try one. Let's try 200,000 Leagues Under the Sea. You have a large selection of movies to try here, and there it is. So there we go. From 1954. We'll use the Euclidean norm on the data set containing 100,000 ratings. So we have a data set in a larger data set. Please note that all the movies are not in both data sets, so sometimes you'll try one and it won't be there, but it means it's generally in the other one. So there we go. So movies that are considered most like that movie are Swiss Family Robinson, Davy Crockett, and so forth. Well, let's try the City Block, the taxicab norm. And that gives us, huh, fairly similar results, which is interesting. Well, you could have tried it with both distances with that button there, and now you get to actually compare them side by side and see that there are indeed differences between the two. The other thing you can do is to try it with the two data sets. So this will compare both data sets against each other. So on the left, we have the 100,000 data set, and on the right, we have the 1,000,000 data set in terms of those differences. So there's quite significant differences between those, and you want to try films that you know. So, see how you do. Try films that you find interesting. Keep in mind that occasionally, we get kind of funny characters because sometimes the characters don't-- they are kind of escape characters or different types of characters that appear kind of funny on the web page. But this lets you use a large data set and mine some information. So where do you agree? Do you think one of these is better than the other one? Try it out and see the limits of this as a movie recommender. ",
                                        "unit_id":"0a4932dad0874ff2bace88f9e24beb4d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4fbb53da129e4840ac6cfa2c3d34a421",
                                "vertical_name":"The Norm in Movies (Activity)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"529ed9ceb1f941389987c3a49f29c24c",
                        "sequential_name":"Scaly Byproduct",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Empire strikes back",
                                            "Cosine similarity",
                                            "Angular distance",
                                            "Column vectors",
                                            "Euclidean distance",
                                            "Snow white",
                                            "Higher dimension",
                                            "Star wars",
                                            "American hustle",
                                            "Column vector",
                                            "Row vector",
                                            "Euclidean norm",
                                            "Commutative property",
                                            "Scalar multiplication",
                                            "Scalar product",
                                            "Dot product",
                                            "Length",
                                            "Cosine",
                                            "Movie",
                                            "Matrix",
                                            "Addition",
                                            "Distance",
                                            "Measure",
                                            "Taste",
                                            "Product",
                                            "Vector",
                                            "Transpose",
                                            "Similar",
                                            "Return",
                                            "Ll",
                                            "Scalar",
                                            "Pretty",
                                            "Helpful",
                                            "Rate",
                                            "Theta",
                                            "Suppose",
                                            "Property",
                                            "Mine",
                                            "Dot",
                                            "Minus",
                                            "Closest",
                                            "Norm",
                                            "Oscar",
                                            "Rating",
                                            "Multiply",
                                            "Emmy"
                                        ],
                                        "data":" TIM CHARTIER: In a past unit, we learned matrix addition. It's very intuitive. Scalar multiplication is also pretty easy. Now, what about multiplying two matrices together? Once we learn it, what can we even do with it? Well, to begin, let's learn to multiply. So we'll multiply a row vector by a column vector. Now, to even be able to multiply, the vectors must have the same number of elements. So a 1 by 5 row vector cannot be multiplied by a 4 by 1 column vector. So let's multiply the row vector 3 2 5 by the column vector 2 4 1. Now, they both have three elements, so we're OK. Now, the product will be a single number-- a scalar. To find the product, multiply the first elements of the vectors together, then add to this the product of the second elements of the vector. This process is continued for all elements of the vectors. For this example, we need only to add the sum of the product of the third elements of the vectors. So multiplying our row vector by our column vector equals 3 times 2 plus 2 times 4 plus 5 times 1, which equals 6 plus 8 plus 5, which equals 19. Now, we can perform a similar computation on two column vectors. Suppose both of our vectors in the previous example were column vectors. We'll let u equal 3 2 5, and we'll also let v equal 2 4 1. We find the scalar product, or dot product, by performing u transpose times v. Note that u transpose is the row vector 3 2 5 and v is the column vector in our previous example. So u transpose times v gives us 19, as we saw before. It can be helpful to know and use properties of the dot product. First, we get a commutative property. c dot v equals v dot u. I'm sorry, u dot v equals v dot u. The dot product also distributes over addition. So u dot the quantity v plus w equals u dot v plus u dot w. We can also easily deal with scalars. If k is a scalar, then k times the quantity u dot v equals k u dot v. Or we can move it on the other side and get u dot k v. We can also connect the dot product to norms. That will be important to us. u dot u equals the two norm, or the Euclidean norm, of u squared. And what happened there? What are we finding? Maybe another way to ask this is how can we use this to uncover things. Well, the dot product can be used to identify people with similar tastes. In a way, this isn't that surprising given the connection we just saw between the dot product and norms. In fact, the dot product leads to a different measure of distance. It can connect to Euclidean distance, but we're going to use it in another way. We again need to vectorize each person's tastes. So let's again use a questionnaire with numeric answers. We'll return to movie preferences selected by Oscar, Emmy, and this time we'll take me, but now only the film's \"American Hustle\" and \"Gravity.\" Well again rate movies between minus 5 and 5 with 5 correlating to really wanting to see the film and minus 5 being definitely not seeing it. So as before, Oscar rates \"American Hustle\" with a zero and \"Gravity\" with a five. Emmy rates the films five and two, and I rate the films minus 3 and 3. So Oscar's taste vector is 0 5. Emmy's is 5 2, and mine minus 3 3. Earlier, we found the norm of u minus v. The two vectors that result in the smallest value are identified as the most similar. This time, we'll measure similarity as the angle between the taste vectors, which is called cosine similarity. Euclidean distance measured length with a ruler. Cosine similarity measures length with a protractor, and it's called angular distance. The smaller the angle, the closer the vectors are in terms of angular distance. We compute cosine similarity between the vector u and v as the cosine of theta equals c dot v divided by the quantity-- that is the norm of u-- times the norm of v. If you want to find the angle, then you simply take cosine inverse of both sides, which will give you theta. The numerator is the scalar product of the vectors, and the denominator is the product of their lengths. So let's find the angle between Oscar's and my taste vectors. This is 45 degrees. Emmy's and my vectors form an angle of 113 degrees. So Oscar and I mathematically are matched up as movie buddies at least in terms of angular distance. It turns out that Oscar and my movie tastes are closest under the Euclidean norm, too. The two distances will not always be the same, though. Suppose Oscar's ratings were 1 1, Emmy's were 3 4, and mine were 4 4. Emmy and I are closest under Euclidean distance. But Oscar and my rating vectors have an angle of zero. Note, 1 1 and 4 4 are pretty different ratings, and cosine similarity is saying that they are the same. Is this not a helpful measure, then? Indeed, not always. But it can be, even for ratings data. To help us see this, let's move into a much higher dimension. Let's return specifically to that movie lens data set that we used before. Again, this contains 100,000 ratings from 943 users on 1,682 movies. Rather than a vector containing one person's ratings, like we just did for Oscar, Emmy, and me, we'll have movie vectors with the ratings of all users. So a movie preference vector consists of 943 ratings, which means that that vector is close to being in 1,000 dimensional space. So how does cosine similarity do in this case? Well, let's look at the films we looked at before. First, there's the 1977 film \"Star Wars.\" The three closest films under cosine similarity are \"Return of the Jedi,\" \"Raiders of the Lost Ark,\" and \"The Empire Strikes Back.\" These movies were the closest under Euclidean distance, too. But we do get a difference. And we see that with \"Snow White,\" that we again looked at before, now the closest films are \"Beauty and the Beast\" rather than \"Pinocchio.\" Then comes \"Cinderella,\" and then \"Pinocchio.\" So again, what movies would you try here? Which measure of distance do you prefer? You can explore these and your own questions in the exploratory assignment for this lecture. Have fun mining through the movie data using angles and Euclidean Distance. ",
                                        "unit_id":"b0d86fe8df3d4a85ab6ec520725700ba",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1b5494e110fa4e10a93d39bc44110731",
                                "vertical_name":"Scaly Byproduct (Lecture & Questions)"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "City block",
                                            "Angular distance",
                                            "Distance measures",
                                            "Euclidean norm",
                                            "Cosine similarity",
                                            "Cosine distance",
                                            "Vector norms",
                                            "Euclidean distance",
                                            "Similarity",
                                            "Cosine",
                                            "Distance",
                                            "Euclidean",
                                            "Algorithm",
                                            "Similar",
                                            "Vector",
                                            "Data",
                                            "Ll",
                                            "Movie",
                                            "Find",
                                            "Measure"
                                        ],
                                        "data":" TIM CHARTIER: In this activity, we again find movies that are similar using linear algebra. Now, we have a totally different way of determining when two movies are similar. With Euclidean distance, we find the distance between movies as if we were using a ruler to find the distance between two points. With cosine similarity, we find the angle between the points as if a line were drawn from the origin to the points. And then we use a protractor to find the angle between those lines, but keep in mind that we'll be working in higher dimensional space. In fact, we have 943 users, so we're comparing angles of vectors in 943rd dimensional space. Linear algebra helps us do this quickly. With the code, you'll be able to use the distance measures from our earlier lecture. You'll also be able to measure with cosine similarity. As before, you'll put in movies and see similar movies as determined by your selected measure of distance. Do you have a preference between the measures of distance? Do you always or sometimes have a preference of one over another? Again, look for the limits of the mathematics in this application. It could be that one measure is always better or possibly sometimes better. Euclidean distance and cosine similarity are not the only measures of distance, but they are common ones. Let's see how to use the codes so you can begin exploring the movies with mathematical distance. So now, we're ready to do our movie recommendations with the addition of cosine similarity-- the angle between the vectors. So just like before, you pick a film. So let's try Star Trek III: The Search for Spock from 1984. So we can ask for the Euclidean norm on the 100,000 data set, and there we have it. Not surprisingly, it's pretty similar to other Star Trek films. Well, what about cosine where we use the angle? And you can look there. Well, it can be kind of hard in a case like this to tell what the differences are. So again, you can click Distance, and you can look at all of them at one time. So we have a Euclidean and then cosine and then city block. And notice that there is a certain similarity between the city block and Euclidean because those are really distance measures, and then cosine distance is different because, again, it's an angular distance. If you want to compare them in the actual data set where you change the size of the data set, then you have something like this. So you can see the actual differences in the method as you have more ratings. So we have 100,000 ratings here and a million ratings over here, and you do see that those produce different results. So what movies interest you? What movie might you want a recommendation for? Remember, this is a simple algorithm. So where does it work and not work? Do you want to get a movie based on this? Well, it may depend in part what kind of movie you look up. So as is often the case in data-mining, look at the algorithm. See how it does. Push its limits and see where it succeeds and where maybe it fails and play around with getting recommendations with movies using vector norms and cosine similarity. ",
                                        "unit_id":"18a943ec25bb41f3a5636af0701f7f15",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e0435d30bbde479abd39bb04d947c5e6",
                                "vertical_name":"Scaly Byproduct (Activity)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"20b225bd28ac4a9ebf69a31de77637e6",
                        "sequential_name":"Spinning Out With Multiplication",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square root",
                                            "Column vector",
                                            "Gear wheel",
                                            "Mathematical art",
                                            "Geometric shape",
                                            "Scalar product",
                                            "Dot product",
                                            "Negative",
                                            "Matrix multiplication",
                                            "Square",
                                            "Thing",
                                            "Point",
                                            "Spirograph",
                                            "Rotate",
                                            "Column",
                                            "Multiply",
                                            "Type",
                                            "Ll",
                                            "Section",
                                            "Multiplication",
                                            "Matrix",
                                            "Product",
                                            "Find",
                                            "Shape",
                                            "Ring",
                                            "Create",
                                            "Equal"
                                        ],
                                        "data":" TIM CHARTIER: In the previous section, we multiplied vectors. Now, we're ready to multiply matrices which may or may not be row and column matrices. So first, it's very important to realize that a times b may not equal b times a. In fact, a times b may not even be computable even when b times a is. So we know when matrix multiplication is possible by looking at the dimensions of the matrices in the product. To compute a times b, the number of columns in a must equal the number of rows in b. So let's give this a try. Let's look at a, and we'll let that equal minus 1, 2, 0, 3, minus 2, 3, 1, 0, 4. Then we'll take b, and we'll let that equal 2, 1, minus 1, 3, 0, 4. Now, we're going to be interested in a times b. And first, we need to see if it's computable, so we check. a has three columns, and b has three rows. So we can compute a times b. The product will be a matrix with three rows and two columns. Now, how did I get that? This can be done by writing down the dimensions of a and b. a is three by three, and b is three by two. So if you write those dimensions side-by-side, you get three by three, three by two. Those inner dimensions-- the three and the three on the inside-- those have to match, but I like to just cross them out. And that gives me the outer dimensions, which are the dimensions of the product, which in this case is three by two. So we can multiply a times b, and the resulting matrix will be a three by two matrix. Now, we find that product one element at a time using multiplication that we already know how to do. Specifically, the element in row i in column j of c where we're finding c equal a times b is found by computing the scalar product of row i of j with the jth column of b. So let's do that for the a and the b that we're using in this example. When we find the element in the first row and first column of c, that equals the first row of a, which is minus 1, 2, 0, times the first column of b, which is 2, minus 1, 0. This is what we learned in the last section. We know how to find a scalar product and a dot product. So this equals minus 2 plus minus 2 plus 0, which is minus 4. We do this type of multiplication to calculate every element in c. And if you do this, you'll find that c equals minus 4, 5, 8, 9, 2, 17. Now, you may want to stop the video and actually verify that for yourself. But also notice that, if we flipped it and we looked at b times a, that's not computable since b has two columns and three rows. Now, on the MOOC page, you'll find a handout that lets you practice this type of multiplication on a few matrices. Well, now we know how to multiply matrices, but how can we use this? Well, we're going to use it to create shapes that remind me, at least, of a geometric drawing toy I had as a child called a \"spirograph.\" To use a spirograph, you pin a plastic ring to a piece of paper. The ring had geared teeth on the inside and the outside of its circumference. Then you placed a pen in a hole in the gear wheels. Then you spun that gear wheel in a ring to produce a geometric shape on the paper. Now, rather than gear wheels, we'll rotate a matrix-- I mean, we'll rotate with matrix multiplication. That's going to be, this time, how we actually create our shape. So if you have a point xy in two dimensions, you can rotate it about the origin by multiplying the column vector xy on the left by the matrix r which equals cosine theta, minus sine theta, sine theta, cosine theta. So let's try that. Specifically, we'll take the point 2, 0, and we'll rotate it by 60 degrees about the origin. The rotated point equals 1/2 negative the square root of 3 over 2, negative the square root of 3 over 2 1/2 times the column vector, 2, 0. This equals the column vector 1 square root of 3. So that's it. We rotated our point, and the point moved to the new point-- 1 square root of 3. OK. So how does that help us create a spirograph type thing? Well, to create my linear algebra spirograph, I'll follow the following steps. Step one. Begin with a square with the points at 0, 1; 1, 1; 0, 0; and 1, 0. We'll call this our current square. Step two. Create a rotated square by rotating the current square by 6 degrees. Step three. Draw this rotated square that we just found. Step four. Let the current square that we just found be defined as the current square. Then step five. Repeat Steps 2 through 4 60 times. Well, when I do that, here is my shape. This is where you can play with things. Rather than 6 degrees, try something else. Rather than 60 times, change it to some other number. What image can you create? What images do you prefer? Well, go to the MOOC page and this exploratory activity and play around with matrix multiplication to make some mathematical art. Have fun. ",
                                        "unit_id":"de0082eaaca042f29eb767511f4afa66",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2a33bd25119245b5be9162786f059145",
                                "vertical_name":"Spinning Out With Multiplication (Lecture & Questions)"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Screen capture",
                                            "Linear algebra",
                                            "Matrix rotation",
                                            "Artwork",
                                            "Underlying",
                                            "Move",
                                            "Spirograph",
                                            "Interactive",
                                            "Rotation",
                                            "Polygon",
                                            "Created",
                                            "Create"
                                        ],
                                        "data":" TIM CHARTIER: Growing up, I used a Spirograph to create pieces of art. In this exercise, you get to create artwork similar to what I created, but you'll be using linear algebra. You'll have parameters that you can vary. Play around with the parameters and see what you discover. Are you able to anticipate what the code produces? Maybe, but sometimes you may just input numbers for the parameters and see what you get and iterate to what you actually want. Both approaches are valid and important. Sometimes, we know where we're going and move directly to our destination. Other times, we essentially plop ourselves down and then journey ahead, discovering the path as we go. Which way works for you in this activity? Well, have fun. I look forward to seeing the artwork that we create, but now let's learn how to use the software that we've created for you. So let's see how we can create the computational artwork using linear algebra that we've discussed. So what we have is we have a nice, interactive code here made by friend and colleague David Borland. And it uses D3.js. What that means is it's interactive. So you can hold the handles and you can change the size of the underlying polygon. So the polygon that you see here is the one that is actually being rotated. Now, to get a better handle on that that's occurring, you can actually change the number of rotated quadrilaterals. So if you go down to one, you can see your underlying one and then increase it. Then you also have a sliding bar the lets you change the angle of rotation. So maybe I like having them tighter, and then I can move them over like that. So this is the tool that you have to create your artwork. When you get something you like, then take a screen capture and share it with the group. So enjoy playing around and using linear algebra in matrix rotation to create your computational Spirograph. ",
                                        "unit_id":"cd3596e741ee4ed39bc80a4e48dd4985",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e728addaad084a50bc003488292493ae",
                                "vertical_name":"Spinning Out With Multiplication (Activity)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"bf3aa4da1ec243dda6eea6f09150608c",
                        "sequential_name":"Getting Eliminated",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear equations",
                                            "Gaussian elimination",
                                            "Mathematical equations",
                                            "Computer graphics",
                                            "Great wall",
                                            "Web page",
                                            "Negative",
                                            "Matrix methods",
                                            "Minus",
                                            "Written",
                                            "Make",
                                            "Find",
                                            "Matrix",
                                            "Previous",
                                            "Solving",
                                            "Work"
                                        ],
                                        "data":" TIM CHARTIER: So far we've seen applications of linear algebra largely in modern applications like computer graphics and data science-- specifically finding preferences in movies. Applying linear algebra isn't new though. For example, such problems arose in 200 BC, which is the time when the Great Wall of China was completed-- again, 200 BC. In particular, a Chinese manuscript was written and contained 246 problems. The eighth chapter contained the first known example of matrix methods with a technique known as Fang Cheng. The technique became known centuries later as Gaussian Elimination and is the topic of this unit. In the last unit, we computed the vector b where Ax equals b. In this unit, we'll find x when Ax equals b. Let's look at an example from that ancient Chinese text. The document was intended to illustrate methods of solution for everyday problems in areas such as engineering, surveying, and trade. Here's the problem. There are three classes of grain of which three bundles of the first class, two of the second, and one of the third make 39 measures. Two of the first, three of the second, and one of the third make 34 measures and one of the first, two of the second, and three of the third make 26 measures. How many measures of grain are contained in one bundle of each class? Now our unknowns are the measure of each grain in one bundle of each class. So we need to transcribe this into mathematical equations. Sometimes that can be quite difficult. For this particular problem, we get x plus 2y plus 3z equals 26, 3x plus 2y plus z equals 39, and 2x plus 3y plus z equals 34. Now, in this type of question, we're asking what values of x, y, and z make all three equations true at the same time. That's the topic of this unit. In time, we'll work with the matrix, but for now let's stick with the linear systems written in the form we just saw. To solve such a system, we essentially eliminate variables by adding and subtracting appropriate multiples of one equation to another. So to eliminate the variable x from the second equation one could subtract three times the first equation from the second to obtain-- the first equation was 3x plus 2y plus z minus 3 times the second, which is 3 times the quantity x plus 2y plus 3z. So that equals minus 4y minus 8z and on the right hand side we get equals negative 39. Now to eliminate x from the third equation one could subtract two times the first equation from the third and in that case when you work it through you get negative y minus 5z equals negative 18. Now, we have two equations and two unknowns. They are negative 4y minus 8z equals negative 39 and minus y minus 5x or 5z equals negative 18. To eliminate y we multiply the last equation by 4 and subtract it from the previous one, which produces 12z equals 33. Well, that's easy to solve so we get z equals 2.75. We can easily substitute this value into the previous equations. So we can choose minus y minus 5z equals minus 18 and find that y equals 4.25. Knowing y and z makes it easy to find x by substituting these two values into one of our original equations, which again had all three presence-- all three equations present. For example, 3x plus 2y plus z equals 39. That becomes 3x plus 2 times 4.25 plus 2.75 equals 39. Solving for x we get x equals 9.25. In time, we'll explore these ideas in applications, but for now let's be sure we can get this math down. So you'll find a few more examples on the web page for our MOOC and have a quiz. Then we'll move ahead. So first let's work on solving systems of linear equations in this particular way. ",
                                        "unit_id":"2cd3e407567448148583cf23aa5bc65a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4f88b4ad118d4bfbba97a97c7d21a7c1",
                                "vertical_name":"Getting Eliminated (Lecture & Questions)"
                            }
                        ]
                    }
                ]
            }
        ],
        "course_id":"course",
        "course_name":"Applications of Linear Algebra Part 2"
    },
    {
        "course_chapters":[
            {
                "chapter_id":"d8a6192ade314473a78242dfeedfbf5b",
                "chapter_name":"Introduction",
                "sequentials":[
                    {
                        "sequential_id":"edx_introduction",
                        "sequential_name":"Demo Course Overview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Welcome to the edX Demo Course Introduction. This is where you can explore how to take an edX course (like this one). Most courses have an \"intro\" video that shows you how it all works. You can watch the introduction video (below) or scroll though the course studies and assignments using the toolbar (above). Just for fun, we'll keep track of your work in this demo course, and show you your progress in the toolbar just like in a real course. Watch the overview video (below), then click on \"Example Week One\" in the left hand navigation to get started. ",
                                        "unit_id":"030e35c4756a4ddc8d40b95fbbfff4d4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_0270f6de40fc",
                                "vertical_name":"Introduction: Video and Sequences"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"interactive_demonstrations",
                "chapter_name":"Example Week 1: Getting Started",
                "sequentials":[
                    {
                        "sequential_id":"19a30717eff543078a5d94ae9d6c18a5",
                        "sequential_name":"Lesson 1 - Getting Started",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Sequence"
                                        ],
                                        "data":" GETTING STARTED Welcome to the first week of the sample edX Course! We created this to give you &ldquo;the basics&rdquo; of how courses work at edX. Almost all edX courses have weeks, lessons, lectures, homework assignments, and exams. This demo course has three example weeks &ndash; most courses last 4 to 12 weeks. You are in Week 1, Lesson 1. Lessons typically include things like videos, readings, interactive questions, laboratories and more. These are presented from left to right, in the row of links above. At edX we call this a lesson or a learning sequence. Explore the lesson sequence by clicking on the icons above or the arrows below. We tried to make these fun, so make sure to check out each item. ",
                                        "unit_id":"82d599b014b246c7a9b5dfc750dc08a9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"867dddb6f55d410caaa9c1eb9c6743ec",
                                "vertical_name":"Getting Started"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Homeric epics",
                                            "Screen size",
                                            "Electronic circuits",
                                            "Transcript"
                                        ],
                                        "data":" Working with Videos Here are a couple of example edX lecture videos. They are taken from real courses, so unless you already know about Homeric epics, electronic circuits, and physics, you might not understand all of the content. However, you can use these examples to see what a typical lecture might be like. You can control the speed of the video, volume, screen size and captions, and pause it whenever you like. When captions are enabled, the transcript appears alongside the video. Click anywhere in the transcript to jump to that point. Typically you might be asked a few questions after watching a video segment - this helps you determine if you've understood the main points. You can watch the video lectures at any time of day or week that is convenient. While timing is flexible with most courses (especially if you are auditing a course), make sure you keep up to date on weekly activities so you don't get behind. ",
                                        "unit_id":"6bcccc2d7343416e9e03fd7325b2f232",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4f6c1b4e316a419ab5b6bf30e6c708e9",
                                "vertical_name":"Working with Videos"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Human face",
                                            "Written text",
                                            "Work"
                                        ],
                                        "data":" Videos on edx In this example, taken from The Ancient Greek Hero , a passage of The Odyssey is delivered verbally, as they were originally performed. Although much of modern scholarship around these works is based off of written transcripts of the poem, this video shows how much a human face and voice contributes to the ancient work of art. As you can see, edX instructors are able to do some really engaging things when presenting course material using video instead of in-person lecture or written text. ",
                                        "unit_id":"0a3b4139f51a4917a3aff9d519b1eeb6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3dc16db8d14842e38324e95d4030b8a0",
                                "vertical_name":"Videos on edX"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" The demonstrations that professors are able to put together for their edX videos can be extremely engaging and informative at the same time. Here is an example of another kind of presentation that you might encounter in a class. ",
                                        "unit_id":"ed5dccf14ae94353961f46fa07217491",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4a1bba2a403f40bca5ec245e945b0d76",
                                "vertical_name":"Video Demonstrations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" This is another video meant to illustrate a different style of presenting material that instructors might use. Again, this is taken from a real course, so don't feel like you have to understand the topic they are discussing. ",
                                        "unit_id":"c2f7008c9ccf4bd09d5d800c98fb0722",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"256f17a44983429fb1a60802203ee4e0",
                                "vertical_name":"Video Presentation Styles"
                            },
                            {
                                "units":[],
                                "vertical_id":"e3601c0abee6427d8c17e6d6f8fdddd1",
                                "vertical_name":"Interactive Questions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lewis carroll",
                                            "Good idea",
                                            "Reading"
                                        ],
                                        "data":" READING AssignmentS Some courses have readings you need to complete. We've included a sample below. It's a good idea to complete any required readings before attempting assignments or exams. Below, you will find a passage from \"Alice's Adventures in Wonderland\" by Lewis Carroll. You will find that some parts of the passage are highlighted, because there are questions about those passages. ",
                                        "unit_id":"e0254b911fa246218bd98bbdadffef06",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Golden key",
                                            "Great disappointment",
                                            "Simple rules",
                                            "Orange marmalade",
                                            "Wild beasts",
                                            "Red hot poker",
                                            "Good practice",
                                            "White rabbit",
                                            "Eat",
                                            "Ran",
                                            "Close",
                                            "Made",
                                            "Key",
                                            "Passage",
                                            "Dark",
                                            "Large",
                                            "Thought",
                                            "Nice",
                                            "Began",
                                            "Remember",
                                            "Hall",
                                            "Small",
                                            "Rabbit hole",
                                            "Table",
                                            "People",
                                            "Ve",
                                            "Hand",
                                            "Alice",
                                            "Marked",
                                            "Round",
                                            "Long",
                                            "Sort",
                                            "Rabbit",
                                            "Fell",
                                            "Ll",
                                            "Bottle",
                                            "Suddenly",
                                            "Time"
                                        ],
                                        "data":" Alice was beginning to get very tired of sitting by her sister on the bank, and of having nothing to do: once or twice she had peeped into the book her sister was reading, but it had no pictures or conversations in it, 'and what is the use of a book,' thought Alice 'without pictures or conversation?' So she was considering in her own mind (as well as she could, for the hot day made her feel very sleepy and stupid ), whether the pleasure of making a daisy-chain would be worth the trouble of getting up and picking the daisies, when suddenly a White Rabbit with pink eyes ran close by her. There was nothing so VERY remarkable in that; nor did Alice think it so VERY much out of the way to hear the Rabbit say to itself, 'Oh dear! Oh dear! I shall be late!' (when she thought it over afterwards, it occurred to her that she ought to have wondered at this, but at the time it all seemed quite natural); but when the Rabbit actually TOOK A WATCH OUT OF ITS WAISTCOAT-POCKET, and looked at it, and then hurried on, Alice started to her feet, for it flashed across her mind that she had never before seen a rabbit with either a waistcoat-pocket, or a watch to take out of it, and burning with curiosity, she ran across the field after it, and fortunately was just in time to see it pop down a large rabbit-hole under the hedge. In another moment down went Alice after it, never once considering how in the world she was to get out again. The rabbit-hole went straight on like a tunnel for some way, and then dipped suddenly down, so suddenly that Alice had not a moment to think about stopping herself before she found herself falling down a very deep well. Either the well was very deep, or she fell very slowly, for she had plenty of time as she went down to look about her and to wonder what was going to happen next. First, she tried to look down and make out what she was coming to, but it was too dark to see anything; then she looked at the sides of the well, and noticed that they were filled with cupboards and book-shelves; here and there she saw maps and pictures hung upon pegs. She took down a jar from one of the shelves as she passed; it was labelled 'ORANGE MARMALADE', but to her great disappointment it was empty: she did not like to drop the jar for fear of killing somebody, so managed to put it into one of the cupboards as she fell past it. 'Well!' thought Alice to herself, 'after such a fall as this, I shall think nothing of tumbling down stairs! How brave they'll all think me at home! Why, I wouldn't say anything about it, even if I fell off the top of the house!' (Which was very likely true.) Down, down, down. Would the fall NEVER come to an end! 'I wonder how many miles I've fallen by this time?' she said aloud. 'I must be getting somewhere near the centre of the earth. Let me see: that would be four thousand miles down, I think -' (for, you see, Alice had learnt several things of this sort in her lessons in the schoolroom, and though this was not a VERY good opportunity for showing off her knowledge, as there was no one to listen to her, still it was good practice to say it over) '- yes, that's about the right distance - but then I wonder what Latitude or Longitude I've got to?' (Alice had no idea what Latitude was, or Longitude either, but thought they were nice grand words to say.) Presently she began again. 'I wonder if I shall fall right THROUGH the earth! How funny it'll seem to come out among the people that walk with their heads downward! The Antipathies, I think-' (she was rather glad there WAS no one listening, this time, as it didn't sound at all the right word) '- but I shall have to ask them what the name of the country is, you know. Please, Ma'am, is this New Zealand or Australia?' (and she tried to curtsey as she spoke - fancy CURTSEYING as you're falling through the air! Do you think you could manage it?) 'And what an ignorant little girl she'll think me for asking! No, it'll never do to ask: perhaps I shall see it written up somewhere.' Down, down, down. There was nothing else to do, so Alice soon began talking again. 'Dinah'll miss me very much to-night, I should think!' (Dinah was the cat.) 'I hope they'll remember her saucer of milk at tea-time. Dinah my dear! I wish you were down here with me! There are no mice in the air, I'm afraid, but you might catch a bat, and that's very like a mouse, you know. But do cats eat bats, I wonder?' And here Alice began to get rather sleepy, and went on saying to herself, in a dreamy sort of way, 'Do cats eat bats? Do cats eat bats?' and sometimes, 'Do bats eat cats?' for, you see, as she couldn't answer either question, it didn't much matter which way she put it. She felt that she was dozing off, and had just begun to dream that she was walking hand in hand with Dinah, and saying to her very earnestly, 'Now, Dinah, tell me the truth: did you ever eat a bat?' when suddenly, thump! thump! down she came upon a heap of sticks and dry leaves, and the fall was over. Alice was not a bit hurt, and she jumped up on to her feet in a moment: she looked up, but it was all dark overhead; before her was another long passage, and the White Rabbit was still in sight, hurrying down it. There was not a moment to be lost: away went Alice like the wind, and was just in time to hear it say, as it turned a corner, 'Oh my ears and whiskers, how late it's getting!' She was close behind it when she turned the corner, but the Rabbit was no longer to be seen: she found herself in a long, low hall, which was lit up by a row of lamps hanging from the roof. There were doors all round the hall, but they were all locked; and when Alice had been all the way down one side and up the other, trying every door, she walked sadly down the middle, wondering how she was ever to get out again. Suddenly she came upon a little three-legged table, all made of solid glass; there was nothing on it except a tiny golden key, and Alice's first thought was that it might belong to one of the doors of the hall; but, alas! either the locks were too large, or the key was too small, but at any rate it would not open any of them. However, on the second time round, she came upon a low curtain she had not noticed before, and behind it was a little door about fifteen inches high: she tried the little golden key in the lock, and to her great delight it fitted! Alice opened the door and found that it led into a small passage, not much larger than a rat-hole: she knelt down and looked along the passage into the loveliest garden you ever saw. How she longed to get out of that dark hall, and wander about among those beds of bright flowers and those cool fountains, but she could not even get her head through the doorway; 'and even if my head would go through,' thought poor Alice, 'it would be of very little use without my shoulders. Oh, how I wish I could shut up like a telescope! I think I could, if I only know how to begin.' For, you see, so many out-of-the-way things had happened lately, that Alice had begun to think that very few things indeed were really impossible. There seemed to be no use in waiting by the little door, so she went back to the table, half hoping she might find another key on it, or at any rate a book of rules for shutting people up like telescopes: this time she found a little bottle on it, ('which certainly was not here before,' said Alice,) and round the neck of the bottle was a paper label, with the words 'DRINK ME' beautifully printed on it in large letters. It was all very well to say 'Drink me,' but the wise little Alice was not going to do THAT in a hurry. 'No, I'll look first,' she said, 'and see whether it's marked \"poison\" or not'; for she had read several nice little histories about children who had got burnt, and eaten up by wild beasts and other unpleasant things, all because they WOULD not remember the simple rules their friends had taught them: such as, that a red-hot poker will burn you if you hold it too long; and that if you cut your finger VERY deeply with a knife, it usually bleeds; and she had never forgotten that, if you drink much from a bottle marked 'poison,' it is almost certain to disagree with you, sooner or later. However, this bottle was NOT marked 'poison,' so Alice ventured to taste it, and finding it very nice, (it had, in fact, a sort of mixed flavour of cherry-tart, custard, pine-apple, roast turkey, toffee, and hot buttered toast,) she very soon finished it off. ",
                                        "unit_id":"2574c523e97b477a9d72fbb37bfb995f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"134df56c516a4a0dbb24dd5facef746e",
                                "vertical_name":"Reading Assignments"
                            }
                        ]
                    },
                    {
                        "sequential_id":"basic_questions",
                        "sequential_name":"Homework - Question Styles",
                        "verticals":[
                            {
                                "units":[],
                                "vertical_id":"2152d4a4aadc4cb0af5256394a3d1fc7",
                                "vertical_name":"Pointing on a Picture"
                            },
                            {
                                "units":[],
                                "vertical_id":"47dbd5f836544e61877a483c0b75606c",
                                "vertical_name":"Drag and Drop"
                            },
                            {
                                "units":[],
                                "vertical_id":"54bb9b142c6c4c22afc62bcb628f0e68",
                                "vertical_name":"Multiple Choice Questions"
                            },
                            {
                                "units":[],
                                "vertical_id":"vertical_0c92347a5c00",
                                "vertical_name":"Mathematical Expressions"
                            },
                            {
                                "units":[],
                                "vertical_id":"vertical_1fef54c2b23b",
                                "vertical_name":"Chemical Equations"
                            },
                            {
                                "units":[],
                                "vertical_id":"2889db1677a549abb15eb4d886f95d1c",
                                "vertical_name":"Numerical Input"
                            },
                            {
                                "units":[],
                                "vertical_id":"e8a5cc2aed424838853defab7be45e42",
                                "vertical_name":"Text input"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"graded_interactions",
                "chapter_name":"Example Week 2: Get Interactive",
                "sequentials":[
                    {
                        "sequential_id":"simulations",
                        "sequential_name":"Lesson 2 - Let's Get Interactive!",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Interactive"
                                        ],
                                        "data":" Lesson 2: Let's Get INTERACTIVE! Now that you know your way around an edX course let's look at some of the exciting interactive tools you may encounter. Use the learning sequence above to explore. Once you have tried the interactive tools in this lesson, make sure to check out the week 2 homework where we show you several of the really cool interactive labs we&rsquo;ve created for past courses. They&rsquo;re fun to play with. Many courses will have tools and labs that you need to use to complete homework assignments. ",
                                        "unit_id":"78d7d3642f3a4dbabbd1b017861aa5f2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d0d804e8863c4a95a659c04d8a2b2bc0",
                                "vertical_name":"Lesson 2 - Let's Get Interactive! "
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Solid state chemistry",
                                            "Learning process",
                                            " ",
                                            "Hex"
                                        ],
                                        "data":" AN INTERACTIVE REFERENCE TABLE This Interactive Periodic Table of the Elements is found in 3.091x: Introduction to Solid State Chemistry . The table reveals the detailed properties of each element as you mouse over them. By using digital tools such as this, the learning process is easier and more fun than by traditional learning! 1 H Hydrogen 1.00794 g/mol Atomic Weight 1.00794 g/mol Atomic Volume 14.1 cm\u00b3/mol Ionic Radius - pm Density 0.0899 g/cm\u00b3 Melting Point -259.34 C Boiling Point -252.87 C Polarizability 0.667 Electronegativity 2.2 First Ionization Potential 13.598 eV Crystal Structure Hex Oxidation States 1 Electronic Configuration 1s\u00b9 Enthalpy of Fusion 0.0586 kJ/mol Enthalpy of Vaporization 0.449 kJ/mol Covalent Radius 0.32 \u00c5 Thermal Conductivity 0.001815 W\u22c5cm\u207b\u00b9\u22c5K\u207b\u00b9 Specific Heat Capacity 14.304 J\u22c5g\u207b\u00b9\u22c5K\u207b\u00b9 Enthalpy of Atomization 217.57 kJ/mol Hydrogen H 1 1.00794 14.1 0.0899 -259.34 -252.87 13.598 2.2 1s\u00b9 1 0.667 - Hex 0.0586 0.449 0.32 0.001815 14.304 217.57 1 1 Helium He 2 4.002602 31.8 0.1785 -272.2 -268.93 24.587 - 1s\u00b2 - 0.205 - Hex - 0.0829 0.31 0.00152 5.193 - 1 18 Lithium Li 3 6.941 13 0.534 180.5 1342 5.392 0.98 [He]2s\u00b9 1 24.3 76 BCC 3.00 134.68 1.23 0.848 3.582 160.67 2 1 Beryllium Be 4 9.012182 4.88 1.8477 1287 2471 9.322 1.57 [He]2s\u00b2 2 5.6 27 Hex 11.72 294.66 0.89 2.01 1.825 326.35 2 2 Boron B 5 10.811 4.68 2.31 2075 4000 8.298 2.04 [He]2s\u00b2p\u00b9 3 3.03 11 Rhom 22.18 480 0.82 0.274 1.026 573.21 2 13 Carbon C 6 12.011 5.34 2.25 4492 3825 11.26 2.55 [He]2s\u00b2p\u00b2 2,+/-4 1.76 - Hex 104.60 716.72 0.77 1.2-1.5 0.709 - 2 14 Nitrogen N 7 14.00674 17.3 1.25046 -210 -195.79 14.534 3.04 [He]2s\u00b2p\u00b3 2,+/-3,4,5 1.1 146 Hex 0.3605 2.79 0.75 0.0002598 1.040 472.79 2 15 Oxygen O 8 15.9994 14 1.429 -218.79 -182.95 13.618 3.44 [He]2s\u00b2p\u2074 -2 0.802 138 SC 0.2224 3.41 0.73 0.0002575 0.918 249.37 2 16 Fluorine F 9 18.9984032 17.1 1.69 -219.62 -188.12 17.422 3.98 [He]2s\u00b2p\u2075 -1 0.557 131 SC 0.255 3.31 0.72 0.000279 0.824 79.08 2 17 Neon Ne 10 20.1797 16.8 0.9002 -248.59 -246.08 21.564 - [He]2s\u00b2p\u2076 - 0.396 - FCC 0.3347 1.71 0.71 0.000493 1.03 - 2 18 Sodium Na 11 22.989768 23.7 0.97 97.72 883 5.139 0.93 [Ne]3s\u00b9 1 23.6 102 BCC 2.594 89.04 1.54 1.42 1.228 108.37 3 1 Magnesium Mg 12 24.305 13.97 1.74 650 1090 7.646 1.31 [Ne]3s\u00b2 2 10.6 72 Hex 11.72 294.66 1.36 1.56 1.023 148.53 3 2 Aluminum Al 13 26.981539 9.99 2.702 660.32 2519 5.986 1.61 [Ne]3s\u00b2p\u00b9 3 6.8 54 FCC 10.669 293.72 1.18 2.37 0.897 322.17 3 13 Silicon Si 14 28.0855 12.05 2.33 1414 3265 8.151 1.9 [Ne]3s\u00b2p\u00b2 4 5.38 40 FCC 46.44 439 1.11 1.49 0.705 439.32 3 14 Phosphorus P 15 30.973762 17 1.82 44.15 277 10.486 2.19 [Ne]3s\u00b2p\u00b3 +/-3,4,5 3.63 17 Hex 0.628 12.43 1.06 0.00236 0.769 314.64 3 15 Sulfur S 16 32.066 15.5 2.07 115.21 444.6 10.36 2.58 [Ne]3s\u00b2p\u2074 +/-2,4,6 2.9 184 Ortho 1.72 9.62 1.02 0.00270 0.71 278.65 3 16 Chlorine Cl 17 35.4527 18.7 3.214 -101.5 -34.04 12.967 3.16 [Ne]3s\u00b2p\u2075 +/-1,3,5,7 2.18 181 Ortho 3.38 10.21 0.99 0.000089 0.479 121.75 3 17 Argon Ar 18 39.948 24.2 1.784 -189.35 -185.85 15.759 - [Ne]3s\u00b2p\u2076 - 1.64 - FCC 1.176 6.43 0.98 0.0001772 0.52 - 3 18 Potassium K 19 39.0983 45.46 0.86 63.38 759 4.341 0.82 [Ar]4s\u00b9 1 43.4 138 BCC 2.32 77.5 2.03 1.025 0.757 89.54 4 1 Calcium Ca 20 40.078 26.02 1.54 842 1484 6.113 1 [Ar]4s\u00b2 2 22.8 100 FCC 8.54 150 1.74 2.01 0.647 184 4 2 Scandium Sc 21 44.95591 15.04 2.989 1541 2830 6.54 1.36 [Ar]3d\u00b94s\u00b2 3 17.8 75 Hex 14.1 314.2 1.44 0.158 0.568 343 4 3 Titanium Ti 22 47.88 10.64 4.5 1668 3287 6.82 1.54 [Ar]3d\u00b24s\u00b2 3,4 14.6 67 Hex 15.481 429 1.32 0.219 0.523 468.61 4 4 Vanadium V 23 50.9415 8.55 5.96 1910 3407 6.74 1.63 [Ar]3d\u00b34s\u00b2 2,3,4,5 12.4 64 BCC 17.573 458.6 1.22 0.307 0.489 514.63 4 5 Chromium Cr 24 51.9961 7.78 7.2 1907 2671 6.766 1.66 [Ar]3d\u20754s\u00b9 2,3,6 11.6 62 BCC 15.31 348.8 1.18 0.939 0.449 397.48 4 6 Manganese Mn 25 54.93805 7.35 7.47 1246 2061 7.435 1.55 [Ar]3d\u20754s\u00b2 2,3,4,6,7 9.4 65 BCC 14.644 219.7 1.17 0.0781 0.479 280.33 4 7 Iron Fe 26 55.847 7.11 7.86 1538 2861 7.87 1.83 [Ar]3d\u20764s\u00b2 2,3 8.4 78 BCC 14.9 351.04 1.17 0.804 0.449 414.2 4 8 Cobalt Co 27 58.9332 6.61 8.92 1495 2927 7.86 1.88 [Ar]3d\u20774s\u00b2 2,3 7.5 75 Hex 15.23 382.4 1.16 1.00 0.421 426.77 4 9 Nickel Ni 28 58.6934 6.59 8.9 1455 2913 7.635 1.91 [Ar]3d\u20784s\u00b2 2,3 6.8 69 FCC 17.57 371.8 1.15 0.909 0.444 422.58 4 10 Copper Cu 29 63.546 7.11 8.94 1084.62 2562 7.726 1.9 [Ar]3d\u00b9\u20704s\u00b9 1,2 6.1 65 FCC 13.012 304.6 1.17 4.01 0.385 338.9 4 11 Zinc Zn 30 65.39 9.16 7.14 419.53 907 9.394 1.65 [Ar]3d\u00b9\u20704s\u00b2 2 7.1 74 Hex 7.32 115.5 1.25 1.16 0.388 129.7 4 12 Gallium Ga 31 69.723 11.44 6.095 29.76 2204 5.999 1.81 [Ar]3d\u00b9\u20704s\u00b2p\u00b9 3 8.12 62 Ortho 5.59 256.1 1.26 0.281 0.371 276.14 4 13 Germanium Ge 32 72.61 13.57 5.35 938.25 2833 7.899 2.01 [Ar]3d\u00b9\u20704s\u00b2p\u00b2 4 6.07 53 FCC 34.7 334.3 1.22 0.602 0.32 376.56 4 14 Arsenic As 33 74.92159 13.08 5.727 817 614 9.81 2.18 [Ar]3d\u00b9\u20704s\u00b2p\u00b3 +/-3,5 4.31 46 Rhom 24.44 34.76 1.2 0.502 0.329 301.25 4 15 Selenium Se 34 78.96 16.42 4.81 221 685 9.752 2.55 [Ar]3d\u00b9\u20704s\u00b2p\u2074 -2,4,6 3.77 198 Hex 6.69 26.3 1.17 0.048 0.321 205.85 4 16 Bromine Br 35 79.904 25.62 3.119 -7.2 58.8 11.814 2.96 [Ar]3d\u00b9\u20704s\u00b2p\u2075 +/-1,5 3.05 196 Ortho 5.285 15.46 1.14 0.00122 0.226 111.71 4 17 Krypton Kr 36 83.8 32.2 3.74 -157.36 -153.22 13.999 - [Ar]3d\u00b9\u20704s\u00b2p\u2076 - 2.48 - FCC 1.636 9.03 1.12 0.0000949 0.248 - 4 18 Rubidium Rb 37 85.4678 55.79 1.532 39.31 688 4.177 0.82 [Kr]5s\u00b9 1 47.3 152 BCC 2.19 69.2 2.16 0.582 0.363 82 5 1 Strontium Sr 38 87.62 33.7 2.6 777 1382 5.695 0.95 [Kr]5s\u00b2 2 27.6 118 FCC 9.16 150 1.91 0.354 0.301 163.2 5 2 Yttrium Y 39 88.90585 19.89 4.469 1526 3336 6.38 1.22 [Kr]4d\u00b95s\u00b2 3 22.7 - Hex 17.15 393 1.62 0.172 0.298 418 5 3 Zirconium Zr 40 91.224 14.06 6.49 1855 4409 6.84 1.33 [Kr]4d\u00b25s\u00b2 4 17.9 72 Hex 20.9 581.6 1.45 0.227 0.278 598 5 4 Niobium Nb 41 92.90638 10.84 8.57 2477 4744 6.9 1.6 [Kr]4d\u20745s\u00b9 3,5 15.7 68 BCC 27.2 696.6 1.34 0.537 0.265 745 5 5 Molybdenum Mo 42 95.94 9.41 10.2 2623 4639 7.099 2.16 [Kr]4d\u20755s\u00b9 2,3,4,5,6 12.8 59 BCC 27.61 594.1 1.3 1.38 0.251 653 5 6 Technetium Tc 43 97.9072 8.51 11.5 2157 4265 7.28 1.9 [Kr]4d\u20755s\u00b2 7 11.4 65 - 23.01 660 1.27 0.506 0.21 649 5 7 Ruthenium Ru 44 101.07 8.22 12.3 2334 4150 7.37 2.2 [Kr]4d\u20775s\u00b9 2,3,4,6,8 9.6 68 Hex 25.5 567.77 1.25 1.17 0.238 603 5 8 Rhodium Rh 45 102.9055 8.3 12.4 1964 3695 7.46 2.28 [Kr]4d\u20785s\u00b9 2,3,4 8.6 67 FCC 21.76 495.39 1.25 1.5 0.243 556.5 5 9 Palladium Pd 46 106.42 8.85 12.02 1554.9 2963 8.34 2.2 [Kr]4d\u00b9\u2070 2,4 4.8 86 FCC 16.74 376.6 1.28 0.718 0.244 393.3 5 10 Silver Ag 47 107.8682 10.27 10.5 961.78 2162 7.576 1.93 [Kr]4d\u00b9\u20705s\u00b9 1 7.2 115 FCC 11.3 255.1 1.34 4.29 0.235 284.5 5 11 Cadmium Cd 48 112.411 13.01 8.642 321.07 767 8.993 1.69 [Kr]4d\u00b9\u20705s\u00b2 2 7.2 95 Hex 6.19 100 1.48 0.969 0.232 113 5 12 Indium In 49 114.818 15.73 7.3 156.6 2072 5.786 1.78 [Kr]4d\u00b9\u20705s\u00b2p\u00b9 3 10.2 80 Tet 3.28 226.4 1.44 0.818 0.233 242.67 5 13 Tin Sn 50 118.71 16.31 7.28 231.93 2602 7.344 1.96 [Kr]4d\u00b9\u20705s\u00b2p\u00b2 2,4 7.7 69 Tet 7.03 290.4 1.4 0.668 0.228 301.25 5 14 Antimony Sb 51 121.757 18.22 6.684 630.63 1587 8.641 2.05 [Kr]4d\u00b9\u20705s\u00b2p\u00b3 +/-3,5 6.6 76 Rhom 19.87 67.9 1.4 0.244 0.207 263.59 5 15 Tellurium Te 52 127.6 20.42 6.25 449.51 988 9.009 2.1 [Kr]4d\u00b9\u20705s\u00b2p\u2074 -2,4,6 5.5 221 Hex 17.49 50.6 1.36 0.0338 0.202 190.37 5 16 Iodine I 53 126.90447 25.74 4.93 113.7 184.4 10.451 2.66 [Kr]4d\u00b9\u20705s\u00b2p\u2075 +/-1,5,7 5.35 220 Ortho 7.76 20.88 1.33 0.00449 0.145 106.7 5 17 Xenon Xe 54 131.29 42.9 5.89 -111.75 -108.04 12.13 - [Kr]4d\u00b9\u20705s\u00b2p\u2076 - 4.04 - FCC 2.3 12.64 1.31 0.0000569 0.158 - 5 18 Cesium Cs 55 132.90543 70.73 1.879 28.44 671 3.894 0.79 [Xe]6s\u00b9 1 59.6 167 BCC 2.1 65.9 2.35 0.359 0.242 78.24 6 1 Barium Ba 56 137.327 38.21 3.594 727 1897 5.212 0.89 [Xe]6s\u00b2 2 39.7 135 BCC 7.66 140 1.98 0.184 0.204 175.7 6 2 Lanthanum La 57 138.9055 22.6 6.146 920 3455 5.577 1.1 [Xe]5d\u00b96s\u00b2 3 31.1 103 Hex 6.2 399.6 1.69 0.134 0.195 431 6 3 Hafnium Hf 72 178.49 13.41 13.31 2233 4603 7 1.3 [Xe]4f\u00b9\u20745d\u00b26s\u00b2 4 16.2 71 Hex 25.1 661.1 1.44 0.23 0.144 703 6 4 Tantalum Ta 73 180.9479 10.9 16.6 3017 5458 7.89 1.5 [Xe]4f\u00b9\u20745d\u00b36s\u00b2 5 13.1 72 BCC 31.4 753.1 1.34 0.575 0.14 782 6 5 Tungsten W 74 183.84 9.5 19.35 3422 5555 7.98 2.36 [Xe]4f\u00b9\u20745d\u20746s\u00b2 2,3,4,5,6 11.1 42 BCC 35.23 799.1 1.3 1.73 0.132 837 6 6 Rhenium Re 75 186.207 9.07 20.5 3186 5596 7.88 1.9 [Xe]4f\u00b9\u20745d\u20756s\u00b2 -1,2,4,6,7 9.7 63 Hex 33.05 707.1 1.28 0.48 0.137 791 6 7 Osmium Os 76 190.23 8.41 22.61 3033 5012 8.7 2.2 [Xe]4f\u00b9\u20745d\u20766s\u00b2 2,3,4,6,8 8.5 63 Hex 29.3 627.6 1.26 0.876 0.13 669 6 8 Iridium Ir 77 192.22 8.49 22.65 2446 4428 9.1 2.2 [Xe]4f\u00b9\u20745d\u20776s\u00b2 2,3,4,6 7.6 68 FCC 26.4 563.6 1.27 1.47 0.131 628 6 9 Platinum Pt 78 195.08 9.09 21.45 1768.4 3825 9 2.28 [Xe]4f\u00b9\u20745d\u20796s\u00b9 2,4 6.5 80 FCC 19.7 510.5 1.3 0.716 0.133 565 6 10 Gold Au 79 196.96654 10.2 19.31 1064.18 2856 9.225 2.54 [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b9 1,3 5.8 137 FCC 12.55 324.4 1.34 3.18 0.129 364 6 11 Mercury Hg 80 200.59 14.81 13.546 -38.83 356.73 10.437 2 [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b2 1,2 5.7 102 Rhom 2.29 56.9 1.49 0.083 0.14 61.5 6 12 Thallium Tl 81 204.3833 17.25 11.85 304 1473 6.108 2.04 [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b2p\u00b9 1,3 7.6 150 Hex 4.27 162.1 1.48 0.461 0.129 179.9 6 13 Lead Pb 82 207.2 18.27 11.34 327.46 1749 7.416 2.33 [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b2p\u00b2 2,4 6.8 119 FCC 4.77 179.4 1.47 0.353 0.129 194.6 6 14 Bismuth Bi 83 208.98037 21.37 9.78 271.4 1564 7.289 2.02 [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b2p\u00b3 3,5 7.4 103 Rhom 10.9 151 1.46 0.0792 0.122 207.1 6 15 Polonium Po 84 208.9824 22.73 9.196 254 962 8.42 2 [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b2p\u2074 2,4 6.8 94 SC - 60.3 1.46 0.2 - 134 6 16 Astatine At 85 209.9871 - - 302 337 - 2.2 [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b2p\u2075 +/-1,3,5,7 6 62 - - - 1.45 0.017 - 92 6 17 Radon Rn 86 222.0176 50.5 9.73 -71 -61.7 10.748 - [Xe]4f\u00b9\u20745d\u00b9\u20706s\u00b2p\u2076 - 5.3 - FCC 2.89 16.4 - 0.0000364 0.094 - 6 18 Francium Fr 87 223.0197 - - 27 677 - 0.7 [Rn]7s\u00b9 1 48.7 180 BCC - - - 0.15 - 71 7 1 Radium Ra 88 226.0254 39 5.8 700 1140 5.279 0.9 [Rn]7s\u00b2 2 38.3 148 BCC - - - 0.186 - 163 7 2 Actinium Ac 89 227.0278 22.54 10.07 1051 3198 6.9 1.1 [Rn]6d\u00b97s\u00b2 3 32.1 112 FCC - - - 0.12 0.12 301 7 3 Rutherfordium Rf 104 261 - - - - - - [Rn]5f\u00b9\u20746d\u00b27s\u00b2 4 - - - - - - 0.23 - - 7 4 Dubnium Db 105 262 - - - - - - [Rn]5f\u00b9\u20746d\u00b37s\u00b2 - - - - - - - 0.58 - - 7 5 Seaborgium Sg 106 263 - - - - - - [Rn]5f\u00b9\u20746d\u20747s\u00b2 - - - - - - - - - - 7 6 Bohrium Bh 107 262 - - - - - - [Rn]5f\u00b9\u20746d\u20757s\u00b2 - - - - - - - - - - 7 7 Hassium Hs 108 265 - - - - - - [Rn]5f\u00b9\u20746d\u20767s\u00b2 - - - - - - - - - - 7 8 Meitnerium Mt 109 266 - - - - - - [Rn]5f\u00b9\u20746d\u20777s\u00b2 - - - - - - - - - - 7 9 Ununnilium Uun 110 269 - - - - - - [Rn]5f\u00b9\u20746d\u20797s\u00b9 - - - - - - - - - - 7 10 Unununium Uuu 111 272 - - - - - - [Rn]5f\u00b9\u20746d\u00b9\u20707s\u00b9 - - - - - - - - - - 7 11 Ununbium Uub 112 277 - - - - - - [Rn]5f\u00b9\u20746d\u00b9\u20707s\u00b2 - - - - - - - - - - 7 12 Ununtrium Uut 113 - - - - - - - - - - - - - - - - - - 7 13 Ununquadium Uuq 114 285 - - - - - - [Rn]5f\u00b9\u20746d\u00b9\u20707s\u00b27p\u00b2 - - - - - - - - - - 7 14 Ununpentium Uup 115 - - - - - - - - - - - - - - - - - - 7 15 Ununhexium Uuh 116 289 - - - - - - [Rn]5f\u00b9\u20746d\u00b9\u20707s\u00b27p\u2074 - - - - - - - - - - 7 16 Ununseptium Uus 117 - - - - - - - - - - - - - - - - - - 7 17 Ununoctium Uuo 118 293 - - - - - - [Rn]5f\u00b9\u20746d\u00b9\u20707s\u00b27p\u2076 - - - - - - - - - - 7 18 Cerium Ce 58 140.115 20.7 6.77 799 3424 5.466 1.12 [Xe]4f\u00b95d\u00b96s\u00b2 3,4 29.6 101 FCC 5.46 414 1.65 0.113 0.192 381 8 5 Praseodymium Pr 59 140.90765 20.8 6.773 931 3510 5.422 1.13 [Xe]4f\u00b36s\u00b2 3,4 28.2 99 Hex 6.89 296.8 1.64 0.125 0.193 368 8 6 Neodymium Nd 60 144.24 20.6 7 1016 3066 5.489 1.14 [Xe]4f\u20746s\u00b2 3 31.4 111 Hex 7.14 273 1.64 0.165 0.19 322 8 7 Promethium Pm 61 144.9127 19.95 7.264 1042 3000 5.554 1.13 [Xe]4f\u20756s\u00b2 3 30.1 97 Hex 7.5 - 1.63 0.179 - 310 8 8 Samarium Sm 62 150.36 19.95 7.536 1072 1790 5.631 1.17 [Xe]4f\u20766s\u00b2 2,3 28.8 96 Rhom 8.62 166.4 1.62 0.133 0.197 209 8 9 Europium Eu 63 151.965 28.98 5.244 822 1596 5.666 1.2 [Xe]4f\u20776s\u00b2 2,3 27.7 117 BCC 9.21 143.5 1.85 0.139 0.182 180 8 10 Gadolinium Gd 64 157.25 19.9 7.901 1314 3264 6.141 1.2 [Xe]4f\u20775d\u00b96s\u00b2 3 23.5 94 Hex 10.05 359.4 1.62 0.104 0.236 352 8 11 Terbium Tb 65 158.92534 19.31 8.23 1359 3221 5.842 1.2 [Xe]4f\u20796s\u00b2 3,4 25.5 92 Hex 10.8 330.9 1.61 0.111 0.182 314 8 12 Dysprosium Dy 66 162.50 19 8.551 1411 2561 5.927 1.22 [Xe]4f\u00b9\u20706s\u00b2 3 24.5 107 Hex 11.05 230 1.6 0.107 0.173 301 8 13 Holmium Ho 67 164.93032 18.74 8.8 1472 2694 6.018 1.23 [Xe]4f\u00b916s\u00b2 3 23.6 90 Hex 11.76 241 1.58 0.162 0.165 301 8 14 Erbium Er 68 167.26 18.45 9.066 1529 2862 6.101 1.24 [Xe]4f\u00b926s\u00b2 3 22.7 89 Hex 17.2 261 1.58 0.145 0.168 314 8 15 Thulium Tm 69 168.93421 18.12 9.321 1545 1946 6.18436 1.25 [Xe]4f\u00b936s\u00b2 2,3 21.8 103 Hex 16.8 191 1.58 0.169 0.16 247 8 16 Ytterbium Yb 70 173.04 24.84 6.966 824 1194 6.25394 1.1 [Xe]4f\u00b9\u20746s\u00b2 2,3 21 87 FCC 7.66 128.9 1.74 0.349 0.155 180 8 17 Lutetium Lu 71 174.967 17.78 9.84 1663 3393 5.42589 1.27 [Xe]4f\u00b9\u20745d\u00b96s\u00b2 3 21.9 86 Hex 18.7 355.9 1.56 0.164 0.154 398 8 18 Thorium Th 90 232.0381 19.8 11.72 1750 4788 6.08 1.3 [Rn]6d\u00b27s\u00b2 4 32.1 109 FCC 15.65 543.92 1.65 0.54 0.113 565 9 5 Protactinium Pa 91 231.03588 15.03 15.37 1572 - 5.89 1.5 [Rn]5f\u00b26d\u00b97s\u00b2 4,5 25.4 104 Ortho 12.34 - - - - - 9 6 Uranium U 92 238.0289 12.49 19.05 1135 4131 6.05 1.38 [Rn]5f\u00b36d\u00b97s\u00b2 3,4,5,6 27.4 100 Ortho 15.48 477 1.42 0.275 0.116 489.5 9 7 Neptunium Np 93 237.0482 11.59 20.45 644 - 6.19 1.36 [Rn]5f\u20746d\u00b97s\u00b2 3,4,5,6 24.8 110 Ortho 3.2 - - 0.063 0.12 - 9 8 Plutonium Pu 94 244.0642 12.32 19.816 640 3228 5.8 1.28 [Rn]5f\u20767s\u00b2 3,4,5,6 24.5 100 Mono 2.82 344 - 0.067 0.13 360 9 9 Americium Am 95 243.0614 17.78 13.67 1176 2607 5.993 1.3 [Rn]5f\u20777s\u00b2 3,4,5,6 23.3 97.5 Hex 14.39 - - 0.1 0.11 268 9 10 Curium Cm 96 247.0703 18.29 13.51 1345 - 6.02 1.3 [Rn]5f\u20776d\u00b97s\u00b2 3 23 97 Hex 15 - - 0.1 - - 9 11 Berkelium Bk 97 247.0703 - 14.78 1050 - 6.23 1.3 [Rn]5f\u20797s\u00b2 3,4 22.7 96 Hex - - - 0.1 - - 9 12 Californium Cf 98 251.0796 - - 900 - 6.3 1.3 [Rn]5f\u00b9\u20707s\u00b2 3 20.5 95 Hex - - - 0.1 - - 9 13 Einsteinium Es 99 252.083 - - 860 - 6.42 1.3 [Rn]5f\u00b9\u00b97s\u00b2 3 19.7 - Hex - - - 0.1 - - 9 14 Fermium Fm 100 257.0951 - - 1527 - 6.5 1.3 [Rn]5f\u00b9\u00b27s\u00b2 3 23.8 - - - - - 0.1 - - 9 15 Mendelevium Md 101 258.10 - - 827 - 6.58 1.3 [Rn]5f\u00b9\u00b37s\u00b2 2,3 18.2 - - - - - 0.1 - - 9 16 Nobelium No 102 259.1009 - - 827 - 6.65 1.3 [Rn]5f\u00b9\u20747s\u00b2 2,3 17.5 110 - - - - 0.1 - - 9 17 Lawrencium Lr 103 262.11 - - 1627 - - - [Rn]5f\u00b9\u20746d\u00b97s\u00b2 3 - - - - - - 0.1 - - 9 18 ",
                                        "unit_id":"html_07d547513285",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_2dbb0072785e",
                                "vertical_name":"An Interactive Reference Table"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Chemical structures"
                                        ],
                                        "data":" ZOOMING DIAGRAMS Some edX classes use extremely large, extremely detailed graphics. To make it easier to understand we can offer two versions of those graphics, with the zoomed section showing when you click on the main view. The example below is from 7.00x: Introduction to Biology and shows a subset of the biochemical reactions that cells carry out. You can view the chemical structures of the molecules by clicking on them. The magnified view also lists the enzymes involved in each step. // ",
                                        "unit_id":"700x_pathways",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_98cf62510471",
                                "vertical_name":"Zooming Diagrams"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square wave",
                                            "Sine wave",
                                            "Music",
                                            "Bias voltage",
                                            "Canvas element",
                                            "Input",
                                            "Circuit schematic",
                                            "Sound volume",
                                            "Signal",
                                            "Small",
                                            "Output",
                                            "Mosfet",
                                            "Peak to peak",
                                            "Baseline",
                                            "Amplifier",
                                            "Distortion",
                                            "Circuit",
                                            "Sound",
                                            "Setting",
                                            "Peak",
                                            "Plot",
                                            "Experiment",
                                            "Slider",
                                            "Parameter"
                                        ],
                                        "data":" MOSFET AMPLIFIER EXPERIMENT This demonstration is to develop your intuition about amplifiers and biasing, and to have fun with music! There are no responses that need to be checked. In the lab below, you will find: A circuit schematic of the MOSFET amplifier. You can use the sliders to the left of the circuit to control various parameters of the MOSFET and the amplifier. A plot (as a function of time) of selected voltages from the amplifier circuit. You can select the input waveform (e.g., sine wave, square wave, various types of music) by using the \\(v_\\mathrm{IN}\\) drop-down menu and the associated sliders. (The parameter \\(V_\\mathrm{MAX}\\) sets the maximum range on the plots.) The \"Play\" button which lets you listen to the selected voltage waveform as sound. Try it out! Listen to: v IN v OUT v R Graph: v IN v OUT v R v IN : Zero Input Unit Impulse Unit Step Sine Wave Square Wave Classical Music Folk Music Jazz Music Reggae Music Your browser must support the Canvas element and have JavaScript enabled to view this tool. Your browser must support the Canvas element and have JavaScript enabled to view this tool. Experiment 1: Distorted output Begin by selecting a sine wave input in the drop-down menu for \\(v_\\mathrm{IN}\\). Then, adjust the sliders to the baseline (default) setting shown below. Baseline setting of sliders: Peak to peak voltage: \\(v_\\mathrm{IN}=3~\\mathrm{V}\\), Frequency: \\(f = 1000~\\mathrm{Hz}\\), Supply voltage: \\(V_\\mathrm{S}=1.6~\\mathrm{V}\\), Input bias voltage: \\(V_\\mathrm{BIAS}=2.5~\\mathrm{V}\\), Pull-up resistor: \\(R = 10~\\mathrm{k}\\Omega\\), MOSFET parameter: \\(K=\\frac{1~\\mathrm{mA}}{\\mathrm{V}^2}\\), MOSFET threshold voltage: \\(V_\\mathrm{T} = 1~\\mathrm{V}\\), Vertical plot range: \\(V_\\mathrm{MAX} = 2~\\mathrm{V}\\). You should observe in the plot that with the baseline settings, the amplifier produces a distorted sine wave signal for \\(v_{OUT}\\). Next, go ahead and select one of the music signals as the input and listen to each of \\(v_{IN}\\) and \\(v_{OUT}\\), and confirm for yourself that the output sounds degraded at the chosen slider settings. You will notice that the graph now plots the music signal waveforms. Think about the reasons why the amplifier is producing a distorted output. Experiment 2: Linear regime We now study the amplifier's small signal behavior. Select a sine wave as the input signal. To study the small signal behavior, reduce the value of \\(v_{IN}\\) to 0.1V (peak-to-peak) by using the \\(v_{IN}\\) slider. Keeping the rest of the parameters at their baseline settings, derive an appropriate value of \\(V_{BIAS}\\) that will ensure saturation region operation for the MOSFET for the 0.1V peak-to-peak swing for \\(v_{IN}\\). Make sure to think about both positive and negative excursions of the signals. Next, use the \\(V_{BIAS}\\) slider to choose your computed value for \\(V_{BIAS}\\) and see if the observed plot of \\(v_{OUT}\\) is more-or-less distortion free. If your calculation was right, then the output will indeed be distortion free. Next, select one of the music signals as the input and listen to each of \\(v_{IN}\\) and \\(v_{OUT}\\), and confirm for yourself that the output sounds much better than in Experiment 1. Also, based on sound volume, convince yourself that \\(v_{OUT}\\) is an amplified version of \\(v_{IN}\\). Experiment 3: Your settings Now go ahead and experiment with various other settings while listening to the music signal at \\(v_{OUT}\\). Observe the plots and listen to \\(v_{OUT}\\) as you change, for example, the bias voltage \\(V_{BIAS}\\). You will notice that the amplifier distorts the input signal when \\(V_{BIAS}\\) becomes too small, or when it becomes too large. You can also experiment with various values of \\(v_{IN}\\), \\(R_{L}\\), etc., and see how they affect the amplification and distortion. ",
                                        "unit_id":"Lab_5B_Mosfet_Amplifier_Experiment",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_d32bf9b2242c",
                                "vertical_name":"Electronic Sound Experiment"
                            }
                        ]
                    },
                    {
                        "sequential_id":"graded_simulations",
                        "sequential_name":"Homework - Labs and Demos",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Labs and Demos Professors that create courses on edX are able to implement highly interactive experiences that allow you as a student to experiment using easy to use online web applications. These labs are customized to each class and subject area. We have collected a couple of the more popular lab environments here for you to experience and play with. Please be patient with yourself as you take a look around at these lab environments. You probably will not be able to answer these questions without taking a course on the topic first! ",
                                        "unit_id":"2bee8c4248e842a19ba1e73ed8d426c2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d6cee45205a449369d7ef8f159b22bdf",
                                "vertical_name":"Labs and Demos"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Jme molecular editor",
                                            "Formal charge",
                                            "Living systems",
                                            "Editor",
                                            "Molecule",
                                            "Structure"
                                        ],
                                        "data":" Molecule Editor Normal 0 false false false EN-US JA X-NONE /* Style Definitions */ table.MsoNormalTable {mso-style-name:\"Table Normal\"; mso-tstyle-rowband-size:0; mso-tstyle-colband-size:0; mso-style-noshow:yes; mso-style-priority:99; mso-style-parent:\"\"; mso-padding-alt:0in 5.4pt 0in 5.4pt; mso-para-margin:0in; mso-para-margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:Cambria; mso-ascii-font-family:Cambria; mso-ascii-theme-font:minor-latin; mso-hansi-font-family:Cambria; mso-hansi-theme-font:minor-latin;} A lot of students love the molecule builder. It makes creating and visualizing molecules rather easy. A chemistry professor may have you build and submit a molecule as part of an exercise. // Using the Molecule Editor + open In this problem you will edit a molecule using the molecular drawing program shown below: Are the molecules I've drawn chemically possible? + open The chemical editor you are using ensures that the structures you draw are correct in one very narrow sense, that they follow the rules for covalent bond formation and formal charge. However, there are many structures that follow these rules that are chemically impossible, unstable, do not exist in living systems, or are beyond the scope of this course. The editor will let you draw them because, in contrast to the rules of formal charge, these properties cannot be easily and reliably predicted from structures. If you submit a structure that includes atoms that are not possible or are beyond the scope of this course, the software will warn you specifically about these parts of your structure and you will be allowed to edit your structure and re-submit. Submitting an improper structure will not count as one of your tries. In general, you should try to use only the atoms most commonly cited in this course: C, H, N, O, P, and S. If you want to learn about formal charge, you can play around with other atoms and unusual configurations and look at the structures that result. The JME molecular editor is provided courtesy of Peter Ertl and Novartis; the licence can be found here. ",
                                        "unit_id":"2b94658d2eee4d85ae13f83bc24cfca9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_0fab6aa52165",
                                "vertical_name":"Molecule Editor"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Text box",
                                            "Code",
                                            "Grader"
                                        ],
                                        "data":" Code Grader The edX system is capable of reviewing computer code written in Python or Matlab. Try entering your code in the text box below and submitting it for grading. After the grader has finished running your code, you will get instant feedback. ",
                                        "unit_id":"891211e17f9a472290a5f12c7a6626d7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_aae927868e55",
                                "vertical_name":"Code Grader"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Circuit element",
                                            "Electronic",
                                            "Circuit"
                                        ],
                                        "data":" Electronic Circuit SImulator You can drag any of the circuit elements from the right hand toolbox onto the editing grid to create and experiment with your \"electronic\" circuit. To add a wire, click and drag in the editing area. To rotate a circuit element, by press the 'r' button on the keyboard. There are a lot of circuit elements and analysis techniques that you can learn about in 6.002x: Circuits and Electronics , all of which can be used to get automatic feedback using this online laboritory. ",
                                        "unit_id":"d5a5caaf35e84ebc9a747038465dcfb4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_c037f3757df1",
                                "vertical_name":"Electric Circuit Simulator"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Amino acids",
                                            "Building blocks",
                                            "Shape",
                                            "Protein"
                                        ],
                                        "data":" Protein BUILDER The protein builder allows you string together the building blocks of proteins, amino acids, and see how that string will form into a structure. You are presented with a goal protein shape, and your task is to try to re-create it. In the example below, the shape that you are asked to form is a simple line. ",
                                        "unit_id":"78e3719e864e45f3bee938461f3c3de6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_bc69a47c6fae",
                                "vertical_name":"Protein Creator"
                            }
                        ]
                    },
                    {
                        "sequential_id":"175e76c4951144a29d46211361266e0e",
                        "sequential_name":"Homework - Essays",
                        "verticals":[
                            {
                                "units":[],
                                "vertical_id":"fb79dcbad35b466a8c6364f8ffee9050",
                                "vertical_name":"Peer Assessed Essays"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"social_integration",
                "chapter_name":"Example Week 3: Be Social",
                "sequentials":[
                    {
                        "sequential_id":"48ecb924d7fe4b66a230137626bfa93e",
                        "sequential_name":"Lesson 3 - Be Social",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forums",
                                            "Discussion forum",
                                            "Engage",
                                            "Social"
                                        ],
                                        "data":" Be SOCIAL A big part of learning online includes &ldquo;being social.&rdquo; We encourage all students to communicate within the course discussion forums &ndash; a great place to connect with other students and to get support from the course staff. Some students and professors also engage through other social mediums like Meetup or Facebook. Recent research has found that if you take a class with a friend, or engage socially with other learners while taking a course, there is a higher likelihood that you will complete a course. If you haven&rsquo;t already, consider finding a study buddy! Check out more information about the discussion forum by navigating to the next item in this learning sequence. In the discussion forums, remember to be polite and respectful. Simply put, treat others the way you want to be treated. ",
                                        "unit_id":"f9f3a25e7bab46e583fd1fbbd7a2f6a0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3c4b575924bf4b75a2f3542df5c354fc",
                                "vertical_name":"Be Social"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum moderator",
                                            "Discussion forums"
                                        ],
                                        "data":" Discussion FORUMS The discussion forum for each course is found at the top of the course page. You might come across a subset of the discussion forum inside the course (see below), where you can talk with fellow students about the course in context. Go ahead and be social! Make your first post in this demo course. Keep an eye out for posts with a green check mark. The green check means the post has been recognized by a staff member or forum moderator as a great post. You can also actively upvote a post. Others can search on user &ldquo;upvoted&rdquo; posts. They tend to be very helpful. ",
                                        "unit_id":"html_49b4494da2f7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"vertical_3888db0bc286",
                                "vertical_name":"Discussion Forums"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Business day",
                                            "Discussion forum",
                                            "Question",
                                            "Forum"
                                        ],
                                        "data":" Getting Help If you're running into a technical problem with edX, check the Student FAQ . Most common issues are addressed there. If you have a problem or a question which directly relates to the course, the best place to go for answers is the course discussion forum. The forums are moderated and it is there that course staff can directly read and respond to your inquiry. This includes questions about grading, but please be sure not to reveal answers to other students! If you have a general question, suggestion, or problem you can use the \"help\" button on the left to report it to the edX support team. We strive to reply to all inquiries within one business day. ",
                                        "unit_id":"8bb218cccf8d40519a971ff0e4901ccf",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"312cb4faed17420e82ab3178fc3e251a",
                                "vertical_name":"Getting Help"
                            }
                        ]
                    },
                    {
                        "sequential_id":"dbe8fc027bcb4fe9afb744d2e8415855",
                        "sequential_name":"Homework - Find Your Study Buddy",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Find"
                                        ],
                                        "data":" Find Your Study Buddy Working with other students offline can help you get the most out of an online course and even increase the likelihood you will successfully complete the course. So, your homework is to find a study buddy. The course specific discussion forums are a great place to find neighbors or even new friends to invite to a Meetup you are looking to organize or even a virtual Google Hangout. ",
                                        "unit_id":"6018785795994726950614ce7d0f38c5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"26d89b08f75d48829a63520ed8b0037d",
                                "vertical_name":"Homework - Find Your Study Buddy"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6ab9c442501d472c8ed200e367b4edfa",
                        "sequential_name":"More Ways to Connect",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Google hangouts"
                                        ],
                                        "data":" It is also possible to hang out with your classmates using Google Hangouts. See who's in there now, or arrange to meet people at specific times. ",
                                        "unit_id":"d45779ad3d024a40a09ad8cc317c0970",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" ",
                                        "unit_id":"55cbc99f262443d886a25cf84594eafb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3f2c11aba9434e459676a7d7acc4d960",
                                "vertical_name":"Google Hangout"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"1414ffd5143b4b508f739b563ab468b7",
                "chapter_name":"About Exams and Certificates",
                "sequentials":[
                    {
                        "sequential_id":"workflow",
                        "sequential_name":"edX Exams",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Good idea"
                                        ],
                                        "data":" EDX EXAMS Not all edX courses have exams; many do, but not all. When choosing a course, it's a good idea to check the exam and study requirements, as well as any prerequisites. Of course - you can \"audit\" any edX course, which means you can study alongside other students using the same content, tools and materials, but you're not focused on grades and might skip the exams and assignments. Follow this learning sequence via the links above to understand more about how we grade your work and track your progress. ",
                                        "unit_id":"8293139743f34377817d537b69911530",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"934cc32c177d41b580c8413e561346b3",
                                "vertical_name":"EdX Exams"
                            },
                            {
                                "units":[],
                                "vertical_id":"vertical_f04afeac0131",
                                "vertical_name":"Immediate Feedback"
                            },
                            {
                                "units":[],
                                "vertical_id":"b6662b497c094bcc9b870d8270c90c93",
                                "vertical_name":"Getting Answers"
                            },
                            {
                                "units":[],
                                "vertical_id":"f91d8d31f7cf48ce990f8d8745ae4cfa",
                                "vertical_name":"Answering More Than Once"
                            },
                            {
                                "units":[],
                                "vertical_id":"vertical_ac391cde8a91",
                                "vertical_name":"Limited Checks"
                            },
                            {
                                "units":[],
                                "vertical_id":"vertical_36e0beb03f0a",
                                "vertical_name":"Randomized Questions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Show",
                                            "Grade",
                                            "Performance",
                                            "Percentage",
                                            "Cutoff"
                                        ],
                                        "data":" OVERALL GRADE PERFORMANCE The progress tab (selectable near the top of each page in your course) shows your performance. Click on it now, and you will see how you're doing in this demo course. The bar chart shows the overall percentage that you have earned on each assignment in the course, and how each of those assignments combine into your overall grade. Further down the page is a detailed breakdown of your score on every graded question in the class. You might notice that some of your assignments on the bar chart show an 'x'. The 'x's indicate the assignments that the edX system will NOT be counting toward your final grade, according to the course grading. The 'x's go to the assignments that you scored the lowest on. Each course has its own percentage cutoff for a Certificate of Mastery. You can see where those cutoffs are by looking at the vertical description. In this demo, a \"pass\" is considered 60%. When you \"pass\" a live edX course, you will receive a certificate after the class has closed. Sorry - the demo course does not grant certificates! ",
                                        "unit_id":"f4a39219742149f781a1dda6f43a623c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1b0e2c2c84884b95b1c99fb678cc964c",
                                "vertical_name":"Overall Grade Performance"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Passing a COurse After the last assignment in a class has been due, you will see the entry in your student profile change to show progress toward generating your certificate. After the certificate generation process has completed, you will be able to download it from your profile page. ",
                                        "unit_id":"5e009378f0b64585baa0a14b155974b9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c7e98fd39a6944edb6b286c32e1150ff",
                                "vertical_name":"Passing a Course"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Getting Your edX Certificate If you passed your edX course, your certificate will be delivered online through edx.org . Be sure to check your email in the weeks following the final grading &ndash; you will be able to download and print your certificate. Once the certificate generation process has completed, you will be able to download it from your profile page. ",
                                        "unit_id":"148ae8fa73ea460eb6f05505da0ba6e6",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":"",
                                        "unit_id":"6b6bee43c7c641509da71c9299cc9f5a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d6eaa391d2be41dea20b8b1bfbcb1c45",
                                "vertical_name":"Getting Your edX Certificate"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"9fca584977d04885bc911ea76a9ef29e",
                "chapter_name":"holding section",
                "sequentials":[
                    {
                        "sequential_id":"07bc32474380492cb34f76e5f9d9a135",
                        "sequential_name":"New Subsection",
                        "verticals":[]
                    }
                ]
            }
        ],
        "course_id":"course",
        "course_name":"edX Demonstration Course"
    },
    {
        "course_chapters":[
            {
                "chapter_id":"69c0be701a584a49ba420b3ed2602b4c",
                "chapter_name":"Unit 1: Due 25 January",
                "sequentials":[
                    {
                        "sequential_id":"0cda4c1d87b5410f868ff4ac6f6dbb6b",
                        "sequential_name":"1 Introduction to Differential Equations and Modeling",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Damped harmonic motion",
                                            "Differential equations",
                                            "Orange juice",
                                            "Cold",
                                            "Behavior"
                                        ],
                                        "data":" Differential equations can be used to describe just about every phenomenon that we encounter in the world. [PHONE RINGING] For example, the way this cell phone sends and receives signals. [PHONE RINGING] How the planets in our solar system orbit the sun. The way gossip flows through a large social network. Your ability to absorb vitamin C in orange juice to protect against a cold. [COUGHING] The way that cold virus spreads through the MIT math department. [COUGHING] And the notes and harmonics created when playing the guitar. [STRUMMING GUITARS] In this course, one phenomenon we will focus on is damped harmonic motion, which describes the behavior of anything that oscillates or vibrates. This is a valuable example for us because we see this behavior frequently. Scientists and engineers see the world through differential equations. And after you take this course, you can too. ",
                                        "unit_id":"609ab45b7b7e4f759d1301b70be287d4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ccf7d6bba3d14aa1ac5dc680b5addb1c",
                                "vertical_name":"1. Introduction to the course"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Unit analysis",
                                            "Physical system",
                                            "System",
                                            "Model"
                                        ],
                                        "data":" Identify linear first order differential equations. Model behavior of certain systems using first order linear differential equations. Use the input signal and system response paradigm to obtain an ODE for a physical system. Check reasonableness of models using unit analysis . ",
                                        "unit_id":"85ef67dc44a74234b737aebaace31cd4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7522410675654727a2a6af409efa8ee5",
                                "vertical_name":"2. Today's objectives"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Biological system",
                                            "Differential equation",
                                            "Initial condition",
                                            "Initial conditions",
                                            "Growth",
                                            "Initial",
                                            "Family",
                                            "Function"
                                        ],
                                        "data":" Example 3.1&emsp;&emsp; Can you guess my secret function y ( t ) ? Clue: It satisfies the differential equation y \u02d9 = 3 y , which could model population growth in some biological system, like the growth of yeast cells. Note that y \u02d9 is common notation for the derivative with respect to time; y \u02d9 , y &prime; , and d y d t all mean the same thing here. Maybe you guessed y = e 3 t . This is a solution to the differential equation above, because substituting it into the DE gives 3 e 3 t = 3 e 3 t . But it's not the function I was thinking of! Some other solutions are y = 7 e 3 t , y = &minus; 5 e 3 t , y = 0 , etc. From calculus we know that the family of functions y = c e 3 t is the general solution . Saying this means that for each number c , the function y = c e 3 t is a solution, and there are no other solutions besides these. So there is a 1 -parameter family of solutions to this DE. The constant c is a parameter . You still haven't guessed my secret function. Clue 2: My function satisfies the initial condition y ( 0 ) = 5 . See secret function There is a number c such that y ( t ) = c e 3 t holds for all t ; we need to find c . Plugging in t = 0 shows that 5 = c e 0 , so c = 5. Thus, among the infinitely many solutions to the DE, the solution satisfying the initial condition y ( 0 ) = 5 is y ( t ) = 5 e 3 t . Definition 3.2&emsp;&emsp; An initial value problem is a differential equation together with initial conditions. Important : Checking a solution to a DE is usually easier than finding the solution in the first place, so it is often worth doing. Just plug in the function to both sides, and also check that it satisfies the initial condition. In the solution to the DE, only one initial condition was needed, since only one parameter c needed to be recovered. ",
                                        "unit_id":"ea88f718fed24dc2a93b665fdf0fc7b1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c6a9cb3cc97845348c92b66402c36796",
                                "vertical_name":"3. A secret function"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial condition",
                                            "Differential equation",
                                            "Wikimedia commons",
                                            "Proportionality constant",
                                            "Population growth",
                                            "Cc by sa",
                                            "Growth rate",
                                            "Divide",
                                            "Packet",
                                            "Dough",
                                            "Derivative",
                                            "Rate"
                                        ],
                                        "data":" Here we will see how the differential equation for our secret function appears when modeling a natural phenomenon &ndash; the population growth of a colony of cells. In this example we'll model the number of yeast cells in a batch of dough. As we work through this example, pay careful attention to the assumptions we make, and how the initial condition plays a role in the resulting differential equation. The system For our system, we assume we have a colony of yeast cells in a batch of bread dough. The first step is to identify the variables, the units, and give them names. y number of cells t time measured in seconds We also need to set some initial condition, y 0 , the number of cells that we begin with at t = 0 . In this system, this might be the number of yeast cells in a yeast packet. Photo by Hellahulla, Wikimedia Commons. (CC BY-SA) 4.0 A differential model If y denotes the number of yeast cells, what can we say about the derivative y \u02d9 ? The derivative represents the rate at which the number of cells is growing. How should it depend on the number of cells? In nature, cells given plenty of space and food tend to divide through mitosis regularly. If we assume that each cell is dividing independently of all other cells, then doubling the number of cells should double the rate at which new cells are born. In fact, multiplying the number of cells by any scalar factor should do the same to the derivative. So this directly implies that the growth rate of cells is proportional to the number of cells: y \u02d9 &prop; y . We can make this into a true equation by simply inserting a proportionality constant a , such that y \u02d9 = a y . We say that 1 / a is a &ldquo;characteristic\" timescale for our problem, setting the rate at which the cells divide. A solution to the above differential equation is y = y 0 e a t , where y 0 is the number of yeast cells we started with at t = 0 . In our case, we assume that y 0 is the number of yeast cells in a packet, which is about 180 billion yeast cells. ",
                                        "unit_id":"dbf221555aba489c849c92e99099ad7d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f06c905c591e42f1a67e2b05c1929714",
                                "vertical_name":"4. Cell division"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ordinary differential equation",
                                            "Partial differential equation",
                                            "Fourier series",
                                            "Multivariable function",
                                            "Independent variable",
                                            "Dot notation",
                                            "Time derivative",
                                            "Equation",
                                            "Time",
                                            "Function",
                                            "Variable",
                                            "Notation",
                                            " ",
                                            "Derivative"
                                        ],
                                        "data":" There are two kinds: An ordinary differential equation (ODE) involves derivatives of a function of only one variable. A partial differential equation (PDE) involves partial derivatives of a multivariable function. Here we will study ordinary differential equations. In Fourier Series and PDEs , we will study partial differential equations. When we consider ODEs, we will often regard the independent variable to be time. Notation for higher derivatives of a function y ( t ) : first derivative: y \u02d9 &emsp;&emsp; y &prime; &emsp;&emsp; d y d t second derivative: y &uml; &emsp;&emsp; y &prime; &prime; &emsp;&emsp; d 2 y d t 2 third derivative: y ( 3 ) &emsp;&emsp; d 3 y d t 3 \u22ee n t h derivative: y ( n ) &emsp;&emsp; d n y d t n Warning: The dot notation y \u02d9 should only be used to refer to a time derivative. If for example y is a function of a spacial variable y = y ( x ) , we will only use the notation y &prime; to denote the derivative with respect to x . Definition 5.1&emsp;&emsp; The order of a DE is the highest n such that the n t h derivative of the function appears. Example 5.2&emsp;&emsp; Is 9375 cos ( t 5 ) y &uml; 4 + 982 ( y + t 3 ) 7 y \u02d9 &minus; 387 y ( 3 ) y ( 4 ) + 2 t y ( 5 ) = &minus; 30987 y + 4087 sin ( t / y ) + 7092 ln ( 1 &minus; t 7 ) + 3786 e y 8 &minus; t 3 + 18.031 an ODE or a PDE? Answer The equation is an ODE because it only involves derivatives with respect to one variable, the variable t . ",
                                        "unit_id":"c3b3cd502aa7486d8098375d899add76",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"957d0a7d240e4d55b9306d08d0a88e00",
                                "vertical_name":"5. Classification of differential equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Real numbers",
                                            "Open interval",
                                            "Homogeneous equation",
                                            "Cell division",
                                            "Laplace transform",
                                            "Constant function",
                                            "Inhomogeneous",
                                            "Linear",
                                            "Ode",
                                            "Homogeneous",
                                            "Nonlinear",
                                            "Equation",
                                            "Form",
                                            "Complicated",
                                            "Coefficient",
                                            "Function"
                                        ],
                                        "data":" A homogeneous linear ODE is a differential equation such as e t y &uml; + 5 y \u02d9 + t 9 y = 0 in which each summand is a function of t times one of y , y \u02d9 , y &uml; , &hellip; . Most general n t h order homogeneous linear ODE: p n ( t ) y ( n ) + p n &minus; 1 ( t ) y ( n &minus; 1 ) &hellip; + p 1 ( t ) y \u02d9 + p 0 ( t ) y = 0 for some functions p n ( t ) , &hellip; , p 0 ( t ) called the coefficients . An inhomogeneous linear ODE is the same except that it has also one term that is a function of t only . For example, e t y &uml; + 5 y \u02d9 + t 9 y = 7 sin t is a second-order inhomogeneous linear ODE. Most general n t h order inhomogeneous linear ODE: p n ( t ) y ( n ) + p n &minus; 1 ( t ) y ( n &minus; 1 ) \u22ef + p 1 ( t ) y \u02d9 + p 0 ( t ) y = q ( t ) for some functions p n ( t ) , &hellip; , p 0 ( t ) , q ( t ) . A linear ODE is an ODE that can be rearranged into either of the two types above. Either of the two forms above can be reduced further by dividing the entire DE by p n ( t ) , the coefficient of the highest derivative y ( n ) becomes 1 . A differential equation written in either of the two forms above but with leading coefficient 1 is said to be in standard linear form . y ( n ) + p n &minus; 1 ( t ) y ( n &minus; 1 ) \u22ef + p 1 ( t ) y \u02d9 + p 0 ( t ) y = 0 y ( n ) + p n &minus; 1 ( t ) y ( n &minus; 1 ) \u22ef + p 1 ( t ) y \u02d9 + p 0 ( t ) y = q ( t ) Remark 6.1&emsp;&emsp; We insist that solutions y ( t ) are defined on an entire open interval I , as opposed to disjoint intervals. We will always assume the functions p n ( t ) , p n &minus; 1 ( t ) , &hellip; , p 0 ( t ) , q ( t ) are well behaved, for example continuous, on I . (We'll look at more complicated functions in our class Transfer Functions and the Laplace Transform .) What is an open interval? An open interval is a connected set of real numbers without endpoints. The notation ( a , b ) denotes the open interval of all points x such that a &lt; x &lt; b . It is conventional to allow one or both end points to be infinite: ( a , b ) , ( &minus; &infin; , b ) , ( a , &infin; ) . The open interval ( &minus; &infin; , &infin; ) denotes the entire real line, which is often denoted by R . Hide Remark 6.2&emsp;&emsp; If you already know that an ODE is linear, there is an easy test to decide if it is homogeneous or not: Plug in the constant function y = 0 . If y = 0 is a solution, the ODE is homogeneous. If y = 0 is not a solution, the ODE is inhomogeneous. Remark 6.3&emsp;&emsp; The cell division example gives us a homogeneous equation. If you start with no yeast cells, the population stays at 0 . For an ODE to be nonlinear , the functions y , y \u02d9 , &hellip; must enter the equation in a more complicated way: raised to powers, multiplied by each other, or with nonlinear functions applied to them. ",
                                        "unit_id":"2481b370a5e34c0da8cc7dca99952ebf",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7461ac3372ac45519119912c426d90f7",
                                "vertical_name":"6. More terminology"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Bank accounts",
                                            "Radioactive decay",
                                            "Negative sign",
                                            "Equation"
                                        ],
                                        "data":" We've been introduced to a few basic forms of differential equations so far. The first equation we saw was a basic growth equation, y \u02d9 = a y , which, when a is a positive constant, governs systems like bank accounts and cell populations. If we put a negative sign in front of a we get the decay equation y \u02d9 = &minus; a y , which can be used to describe things like radioactive decay of materials. ",
                                        "unit_id":"8dc4a8f49aca42dcbf9acb439adcd82b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"379a494652bb45c288014fe820351cbc",
                                "vertical_name":"7. Natural growth and decay equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical equations",
                                            "Independent variable",
                                            "Mathematical modeling",
                                            "Identify",
                                            "Variable",
                                            "Real world",
                                            "Modeling",
                                            "Response"
                                        ],
                                        "data":" There are two kinds of modeling. We're not going to talk about the kind that involves fancy clothes and photographs. The other kind, mathematical modeling , is converting a real-world problem into mathematical equations. Guidelines: Identify relevant quantities, both known and unknown, and give them symbols. Find the units for each. Identify the independent variable(s). The other quantities will be functions of them, or constants. Often time is the only independent variable. Write down equations expressing how the functions change in response to small changes in the independent variable(s). Also write down any &ldquo;laws of nature\" relating the variables. As a check, make sure that all summands in an equation have the same units. Often simplifying assumptions need to be made; the challenge is to simplify the equations so that they can be solved but so that they still describe the real-world system well. (Once we have the language of input signals and system response, we'll refine these guidelines.) ",
                                        "unit_id":"46b2a6bda2064f5ebe3320cb88608cb7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"303f7dddf5a74286a18e7684b628c8a2",
                                "vertical_name":"8. Introduction to modeling"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equation",
                                            "Interest rate",
                                            "Continuous compounding",
                                            "Differential equation",
                                            "Initial condition",
                                            "Independent variable",
                                            "Interest",
                                            "Year",
                                            "Account",
                                            "Money",
                                            "Rate",
                                            "Frequent",
                                            "Equation",
                                            "Modeling",
                                            "Variable",
                                            " ",
                                            "Dollar",
                                            "Balance",
                                            "Time"
                                        ],
                                        "data":" Example 9.1&emsp;&emsp; I have a savings account earning interest compounded daily, and I make frequent deposits or withdrawals into the account. Find an ODE with initial condition to model the balance. Simplifying assumptions: Daily compounding is almost the same as continuous compounding, so let's assume that interest is paid continuously instead of at the end of each day. Similarly, let's assume that my deposits/withdrawals are frequent enough that they can be approximated by a continuous money flow at a certain rate, the net deposit rate (which is negative when I am withdrawing). Variables and functions (with units): Define the following: P the initial amount that the account starts with ( dollars ) t time from the start ( years ) x balance ( dollars ) I the interest rate ( year &minus; 1 ; for example 4 % / year = 0.04 year &minus; 1 ) q the net deposit rate ( dollars / year ). Here t is the independent variable, P is a constant, and x , I , q are functions of t . Equations: Now we want to decide how the balance changes as time changes. We'll estimate the change in the balance &Delta; x as time increases from some time t to a time t + &Delta; t . We can approximate the interest earned per dollar to be: interest earned per dollar &asymp; I ( t ) &Delta; t The balance in the account at time t is x ( t ) . Therefore, the total interest earned from time t to t + &Delta; t is approximately total interest earned &asymp; I ( t ) x ( t ) &Delta; t Meanwhile money is put into the account at a rate q ( t ) , so net amount deposited into the account &asymp; q ( t ) &Delta; t . Putting it all together, the change in balance is &Delta; x = &asymp; I ( t ) x ( t ) &Delta; t + q ( t ) &Delta; t \u27f9 &Delta; x &Delta; t &asymp; I ( t ) x ( t ) + q ( t ) . The smaller &Delta; t is, the better the approximation becomes, and in the limit as &Delta; t &rarr; 0 lim &Delta; t &rarr; 0 &Delta; x &Delta; t = d x d t . This yields the differential equation d x d t = I ( t ) x ( t ) + q ( t ) . Note that the units in each of the three terms are dollars / year . Also, there is the initial condition x ( 0 ) = P . Thus we have an ODE with initial condition: x \u02d9 = I ( t ) x + q ( t ) , x ( 0 ) = P . Now that the modeling is done, the next step might be to solve this DE, but we won't do that yet. Remark 9.2&emsp;&emsp; The notation we chose suggested that the interest rate I depended only on time. However, I could have depended on x as well. This would not change the modeling process. If I does not depend on x , we obtain a linear differential equation. If it does, the equation is nonlinear. ",
                                        "unit_id":"5167ee498d364775b1e5d21851286b69",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2ce861b8aee94bf681958427f3efe9bf",
                                "vertical_name":"9. Model of a savings account"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Cell biology",
                                            "Continuous flow",
                                            "Fresh water",
                                            "Living conditions",
                                            "Sea creatures",
                                            "Nervous system",
                                            "Research projects",
                                            "Mathematical expressions",
                                            "Salt water",
                                            "Ocean fish",
                                            "Salt concentration",
                                            "Mixing",
                                            "Complicated",
                                            "Order",
                                            "Equation",
                                            "Water",
                                            "Fluid",
                                            "Ll",
                                            "Salt",
                                            "Learn",
                                            "Fish",
                                            "Modeling",
                                            "Number",
                                            "Concentration",
                                            "Time",
                                            "Volume",
                                            "Liter",
                                            "Tank"
                                        ],
                                        "data":" In this Koch Institute facility, fish are used in a variety of research projects to learn more about cell biology and the nervous system. In one experiment, these fish are used to learn how cancer development affects metabolic pathways. In order to conduct these experiments, the living conditions of the fish need to be maintained. In particular, the salt concentration needs to be at an appropriate level. To achieve this, large tanks of fresh water are mixed with a concentrated salt water solution. Now suppose we want to set up an experiment on ocean fish. These fish typically live in saltwater that contains a salt concentration of 34 grams per liter. To make their environment, we're going to start with a tank that contains fresh water, with the volume going by v of t. We're going to hook up a pipe that allows a continuous flow of a concentrated salt solution to enter the tank. And then we'll also have a pipe that allows for drainage from the tank. So let's give some numbers to these quantities so we can solve this problem. We're going to start with a tank that contains 800 liters of fresh water. So v of 0 is 800 liters. We're then going to allow salt water to enter the tank at 5 liters per minute through this pipe and have a concentration of 75 grams per liter. The solution is then going to leave the tank at a rate of 3 liters per minute. And we're going to assume that the fluid inside the tank is instantaneously well mixed. This is an assumption that you'll see come up in a lot of these mixing problems. And you'll see where it comes into play and our modeling process. So we want to make this tank habitable for these sea creatures. So we'd like to model the change in the salt concentration over time. But before we do this, we need to think about what the word concentration means. If we let x of t denote the total number of grams of salt in the tank, and we let v of t, as I said before, denote the total number of liters of fluid in the tank, then concentration of the salt is given by the ratio of these two quantities. So the concentration is x of t over v of t. In this scenario, both the numerator and denominator are changing over time, which makes this quantity really complicated to model. Instead, it turns out it's much easier to just think about modeling x of t alone and then dividing by an expression for v of t. Since what we're given in this problem are rates, namely the rate of incoming fluid and the rate of outgoing fluid, and our solution is going to be a function, not just a number, we're hoping that we can write down a differential equation for this model. Namely, we're hoping to write down an equation for dx/dt. This is the rate of change of the amount of salt in the tank over time and is then given by the rate that salt enters the tank, rate in, minus the rate that salt exits the tank, rate out. dx/dt has units of x over t, so grams per minute. These units are somewhat our choice. I could have chosen seconds instead of minutes for time. And everything would work out fine. But once we do make a choice, we need to be consistent. So I'll choose minutes here. So now we need to translate these phrases into mathematical expressions. Let's start with the rate in. The rate that salt enters the tank can be written as follows. For every liter of water that enters the tank, 75 grams of salt also enter. So if 5 liter are entering per minute. The rate that salt enters is then 75 grams per liter times 5 liters per minute. When we multiply these, the units of liters cancel. And we're left with 375 grams per minute. And notice that these units are the same as the units of dx/dt, which is consistent. The same argument holds when we calculate the rate that salt exits the tank. This is going to be the concentration of exiting fluid multiplied by the rate at which that fluid exits, which we know is 3 liters per minute. But what is the concentration of exiting fluid? This is where we use the assumption that the fluid inside the tank is instantaneously well mixed. We said that concentration is x of t over v of t. And since we're ignoring complicated mixing dynamics, we're going to assume that this is true everywhere instantaneously in the tank. Specifically, it's true here where the fluid is exiting the tank. And so we can say that the concentration of the exiting fluid is x of t over v of t grams per liter. But we can also write down an expression for v of t. We can say that the volume of fluid in the tank is given by the initial volume in the tank, which for us is 800 liters, plus the rate at which fluid enters the tank, which is 5 liters per minute, minus the rate the fluid exist the tank-- for us is 3 liters per minute-- times time. This gives us 800 plus 2t. Let's make sure our units match up. We want the units for volume to be liters. Well, we know that 800 has units of liters because we're told it does here. 5 and 3 both have units of liters per minute. So this 2 also has units of liters per minute. And we're multiplying by time, which has units of minutes. So this expression has units of liters just like we wanted. So now if we substitute this into the denominator here, we get that the rate that salt exits the tank is 3 times x over v of t, which is 800 plus 2t grams per minute. So now we have these two components. And we want to just combine them into our model in the appropriate way. So we know that dx/dt is equal to the rate that salt enters the tank, which we found to be 375 grams per minute, minus the rate that salt enters the tank, which is this expression here. So 3x over 800 plus 2t. So this is a first order linear inhomogeneous equation for the rate of change of the amount of salt in the tank over time. In the next section, we'll learn techniques to solve this equation. And then once we have our function x, we can divide by our function for v, and answer the questions that we have about salt concentration in the tank. We can also answer questions like, will the tank overflow before we reach the appropriate concentration? Continue through the next units to find out. ",
                                        "unit_id":"2a909b85c1da402693e2dd1b49a3a57f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"047895c00f7940b78fb2089260303108",
                                "vertical_name":"10. Application: mixing salt water solution"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Financial planning",
                                            "Differential equation",
                                            "Economic market",
                                            "Electrical circuit",
                                            "Initial conditions",
                                            "Mechanical system",
                                            "Language",
                                            "Signal",
                                            "Called",
                                            "Function",
                                            "State",
                                            "System"
                                        ],
                                        "data":" Let's get back to the savings account model: x \u02d9 = I ( t ) x + q ( t ) . Maybe for financial planning I am interested in testing different saving strategies (different functions q ) to see what balances x they result in. To help with this, rewrite the ODE as x \u02d9 &minus; I ( t ) x controlled by bank = q ( t ) . controlled by me In the &ldquo;systems and signals\" language of engineering, q is called the input signal , the bank is the system , and x is the output signal . These terms do not have a mathematical meaning dictated by the DE alone; their interpretation is guided by the system being modeled. But the general picture is this: We'll see many examples that model phenomena using this input/system response language. The system may be a mechanical system such as an automobile suspension or an electrical circuit, or an economic market. It is impacted by some external signal. We are interested in understanding how the system responds to the external stimulus. The input signal is the external stimulus. It usually does not appear in as simple a way in the DE as it does in the example above. But it does always determine the right hand side of the DE (when written in standard linear form). The system response (also called output signal ) is the measurable behavior of the system that we are interested in. It is always the unknown function that we write a differential equation for. All differential equations have many solutions. The solution of interest is often determined by the state of the system at the beginning. This initial state is given by the initial conditions. ",
                                        "unit_id":"591b72abb58247cbb8bc94328f524812",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b219afbcf55d4471a4351eb0ddd8f91e",
                                "vertical_name":"11. Systems and signals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear model",
                                            "Differential equations",
                                            "Initial conditions",
                                            "Air resistance",
                                            "Differential equation",
                                            "Time derivative",
                                            "Neutral position",
                                            "Acceleration",
                                            "Positive displacement",
                                            "Force",
                                            "System",
                                            "Equation",
                                            "Depends",
                                            "Creating",
                                            "Cart",
                                            "Modeling",
                                            "Ve",
                                            "Model",
                                            "Spring",
                                            "Law",
                                            "Positive",
                                            "Time",
                                            "Mass",
                                            "Sail",
                                            "Displacement",
                                            "Position"
                                        ],
                                        "data":" One of the most important sources for differential equations comes from Newton's second law F = m a . That is, force equals mass times acceleration. This is a differential equation! For now we restrict our attention to 1-dimensional systems. The acceleration a is the second time derivative of position x , which is x &uml; . Thus we can rewrite the equation as F = m x &uml; What is creating that force? The force depends on the system we are modeling. We will start with a very simple toy model that will serve as the basis for almost every other model we will encounter in this course. Example 12.1&emsp;&emsp; Model a spring attached to a wall, with a mass on the other end sitting on a cart that moves without friction. We pull the cart back and release it. How does the mass on the cart behave? Solution: To begin the modeling process, let's draw a diagram . Next, let's label the elements of interest in the diagram. We have the mass m , and the strength of the spring k , which appears in Hooke's law. The variable of interest is the position of the mass. What do we mean by the position of the mass? The most natural way to record the position of the mass is to consider the displacement of the mass x away from the position when the spring is relaxed x = 0 . We also have to decide on the sign, so we choose x &gt; 0 when the spring is stretched, which is sensible given our picture. Let's try to put this into the input/ system response paradigm we've just introduced. The system response is the displacement of the mass. This is what we are interested in. What is the input signal? You could imagine that there are other forces acting on the mass, like there is a sail on the mass, and wind is blowing on the sail creating an input signal. But we are going to start by considering the case where the input signal is 0 . Note that pulling the cart back and releasing it specifies the initial state of the system, that is, it gives the initial conditions. Now we are ready to write down the differential equation . The equation is governed by Newton's second law F = m x &uml; . We need to identify the forces acting on the mass. There is the force due to the spring. For the moment, we assume that air resistance is negligible, and there is no friction on the cart. What is the spring force? When the displacement is positive, the spring is stretched, the force is negative. When the displacement is negative, the spring is compressed, the force is positive. Thus this force is modeled linearly by Hooke's law F = &minus; k x , which is a function of the displacement x away from the neutral position x = 0 . Note that this linear model is only valid for relatively small displacements. If we stretch the spring too far, the spring force won't obey this linear law anymore. The position at time t = 0 is x ( 0 ) = x 0 for some positive displacement x 0 &gt; 0 . From the problem statement, we assume that we release the cart with zero initial velocity, x \u02d9 ( 0 ) = 0 . Putting this all together, we get &minus; k x = m x &uml; with initial conditions x ( 0 ) = x 0 , x \u02d9 ( 0 ) = 0. The last step is to write this in standard linear form . We obtain the following differential equation m x &uml; + k x = 0 , x ( 0 ) = x 0 x \u02d9 ( 0 ) = 0. Example 12.2&emsp;&emsp; Now let's consider the same mass/spring system as above where we've add a sail to the mass. The mass now experiences an additional external force from the wind. How does this change the model? Solution: The model is exactly the same. The only difference is that the input signal is no longer zero, rather it is now the external force due to the wind on the sail. This external force F wind ( t ) depends on time in some complicated way that we will not try to write down. The differential equation for this system is m x &uml; + k x = F wind ( t ) , with initial conditions x ( 0 ) = x 0 , x \u02d9 ( 0 ) = 0. ",
                                        "unit_id":"03461b40625c4d3895a6e98d24dbf1a1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"aa10bf02635f4f4f947ba19dc3a6cdc3",
                                "vertical_name":"12. Newtonian mechanics"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial conditions",
                                            "Equation",
                                            "System"
                                        ],
                                        "data":" In the example on the previous page, we outlined a 5 step modeling process that we make explicit here. Draw a diagram of the system. Identify and give symbols for the parameters and variables of the system. Decide on the input signal and the system response. Identify any initial conditions. Write down a differential equation relating the input signal and the system response. Rewrite the equation in standard linear form with initial conditions. ",
                                        "unit_id":"c590931f421344aa9d9953eb388df4f9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3da6836710e1454da5ea2d6b2bf7b10e",
                                "vertical_name":"13. 5 step modeling process"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3a6ece4a063c4232b7272eab200919a1",
                        "sequential_name":"Recitation 1",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Doubling time",
                                            "Initial condition",
                                            "Discussion forum",
                                            "Oryx gazella",
                                            "Modeling",
                                            "Equation",
                                            "Constant",
                                            "Forum",
                                            "Oryx",
                                            "Population",
                                            "Policy",
                                            "Te",
                                            "Encourage",
                                            "Share",
                                            "Check"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. To encourage collaboration, we give only two attempts per answer box. 18.03 Recitation 1 Modeling: natural growth A certain African government is trying to come up with a good policy regarding the hunting of oryx in a specific game preserve. They are using the following model: the oryx population has a positive natural growth rate of k years&minus;1 , and there is assumed a constant harvesting rate of a oryxes/year. Photo by User: Rei on Wikimedia. (CC BY 2.5) Figure 1: A picture of Oryx gazella, popularly known as a Gemsbok. An inhabitant of southern Africa. 1. Write down a differential equation modeling the oryx population. [First step: choose symbols and units.] 2. Discuss this model using the language of signals and systems. 3. Suppose a = 0: no hunters. What is the doubling time (in terms of k)? What is the relation between the population now and the population after k &minus;1 years? 4. Find the general solution of the equation you found in (1). Check that the proposed solution satisfies the ODE. 5. There is a constant solution. Find it. Does the way the solutions depend upon k and a make sense? That is, do the units come out right? Does the solution behave right when a is large or small? When k is large or small? Sketch the graphs of some solutions. 6. Notice that for initial values less than the equlibrium, the solutions stop having meaning in terms of the real-world situation they are modeling when they become negative. In these cases, predict the time te at which oryxes will be extirpated from this area. For example, suppose that x(0) = x0 is less than the equilibrium population. For this initial condition what is te? Check units. 7. Would you recommend that the government base a policy on this idea, for any value of a? ",
                                        "unit_id":"cbb423330937432bbc4a4e5d5b48a9bf",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"793fab271d0d4ce4a3bd2000b3a06e1a",
                                "vertical_name":"1. Modeling: natural population growth"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Population",
                                            "Oryx"
                                        ],
                                        "data":" A certain African government is trying to come up with a good policy regarding the hunting of oryx in a specific game preserve which provides ample food and space for the population of oryx. Photo by User: Rei on Wikimedia. (CC BY 2.5) They are using the following model: the oryx population has a positive natural growth rate of k y e a r s &minus; 1 , and there is assumed a constant harvesting rate of a oryxes/year. Answer the following questions related to this problem. ",
                                        "unit_id":"6c0383681d6f46f0bcdf79cc94f7d3d5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5f03c88473e844ea9ed037cc7f37443d",
                                "vertical_name":"2. Modeling the oryx population"
                            }
                        ]
                    },
                    {
                        "sequential_id":"bb5e5a61b53f407c93dea02925c5c896",
                        "sequential_name":"2 Solving First-order ODEs",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Salt concentration",
                                            "Homogeneous function",
                                            "Order",
                                            "Linear",
                                            "Equation",
                                            "Ode",
                                            "Inhomogeneous",
                                            "Salt",
                                            "Homogeneous",
                                            "Concentration",
                                            "Solve",
                                            "Function",
                                            "Find",
                                            "Tank"
                                        ],
                                        "data":" Objectives Find the general solution to any homogeneous first order (linear) ODE using separation of variables . Find a particular solution to any inhomogeneous first order linear ODE using variation of parameters . Find the general solution to any inhomogeneous first order differential equation by first finding the solution to the associated homogeneous function, finding one particular solution, and applying superposition . Solve initial value problems for first order linear ODEs.salt exits the tank is 3 times x over v of t, which is 800 plus 2t grams per minute. So now we have these two components. And we want to just combine them into our model in the appropriate way. So we know that dx/dt is equal to the rate that salt enters the tank, which we found to be 375 grams per minute, minus the rate that salt enters the tank, which is this expression here. So 3x over 800 plus 2t. So this is a first order linear inhomogeneous equation for the rate of change of the amount of salt in the tank over time. In the next section, we'll learn techniques to solve this equation. And then once we have our function x, we can divide by our function for v, and answer the questions that we have about salt concentration in the tank. We can also answer questions like, will the tank overflow before we reach the appropriate concentration? Continue through the next units to find out. ",
                                        "unit_id":"71d6870194d04dd39c048621d2509fcf",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5ce54f8e4a8a4f6aafb5394190fac280",
                                "vertical_name":"1. Solving first-order linear ODEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Real numbers",
                                            "Real number",
                                            "Indefinite integrals",
                                            "Differential equations",
                                            "Differential equation",
                                            "Initial condition",
                                            "Implicitly defined",
                                            "Vertical asymptote",
                                            "Double check",
                                            "Dy",
                                            "Minus infinity",
                                            "Ln",
                                            "Real",
                                            "Lost",
                                            "Warning",
                                            "Equation",
                                            "Differential",
                                            "Condition",
                                            "Dt",
                                            "Initial",
                                            "Recover",
                                            "Left",
                                            "Ll",
                                            "De",
                                            "Reduces",
                                            "Defined",
                                            "True",
                                            "Express",
                                            "Separate",
                                            "Side",
                                            "Asymptote",
                                            "Form",
                                            "Infinity",
                                            "Give",
                                            "Step",
                                            "Integral",
                                            "Work",
                                            "General",
                                            "Method",
                                            "Point",
                                            "Constant",
                                            "Function",
                                            "Check",
                                            "Variable"
                                        ],
                                        "data":" Isolate the derivative and express in the form y\u02d9=h(t,y): y\u02d9=2ty. Write as dydt=g(t)f(y)=2ty,(g(t)=2t,f(y)=y). Separation: Put the terms involving y on the left and terms involving t on the right. dyf(y)=g(t)dt\u27fadyy=2tdt Warning: We divided by y, so at some point we will have to check y=0 as a potential solution. Integrate. &int;dyy = &int;2tdt ln|y|+C1 = t2+C2 ln|y| = t2+(C2&minus;C1) ln|y| = t2+C Note: The method reduces to evaluating two integrals separately, one in y and one in t. Observe that we combined the two constants C1 and C2 of integration into one constant C. We will combine the two constants to form C=C2&minus;C1 immediately from now on. Solve for y. |y| = et2+C y = &plusmn;eCet2. As C runs over all real numbers, the coefficient &plusmn;eC runs over all nonzero real numbers. Thus the solutions we have found so far are y=cet2,c&ne;0. Because we divided by y, there is possibly an exceptional solution y=0. Checking directly, it turns out that it is indeed a solution. It can be considered as the function cet2 for c=0. Conclusion: The general solution to y\u02d9&minus;2ty=0 is y=cet2,where c is any real number. (Optional) Double check your solution. Plugging in y=cet2 to y\u02d9&minus;2ty=0 gives cet2(2t)&minus;2tcet2=0, which is true, as it should be. Separation of variables, the systematic procedure: Check that the DE is a first-order ODE . (If not, give up and try another method.) Suppose that the function to be solved for is y=y(t). Rewrite y\u02d9 as dydt. Express dydt as a function of t and y only. dydt=h(t,y). If you are lucky, you can write h(t,y) as a product of two functions, one of which is purely a function of t; and the other purely a function of y: h(t,y)=g(t)f(y) Separate the y's and t's. Specifically, try to multiply and/or divide (and in particular move the dt to the right side) so that the equation ends up as an equality of differentials of the form dyf(y)=g(t)dt. Note: If there are factors involving both variables, such as y+t, then it is impossible to separate variables; in this case, give up and try a different method. Warning: Dividing by f(y) invalidates the calculation if f(y)=0, so at the end, check what happens if f(y)=0; this may add to the list of solutions. Integrate both sides to get an equation of the form F(y)=G(t)+C. These are implicit equations for the solutions, in terms of a parameter C. If possible (and if desired), solve for y in terms of t. Check for extra solutions coming from dividing by zero (see the warning in Step 5). The solutions in the previous step and this step comprise the general solution. (Optional, but recommended) Check your work by verifying that the general solution actually satisfies the original DE. A justification of separation of variables In the argument above, the step where we multiply by dt seems informal. To justify this step, we check that it works in reverse. If ddyH(y)=1f(y)ddtG(t)=g(t) and the function y=y(t) is implicitly defined by H(y)=G(t)+C. Implicitly differentiate this to see that we get the differential equation we started with. ddtH(y) = ddt(G(t)+C) dHdydydt = dGdt 1f(y)dydt = g(t) y\u02d9 = f(y)g(t) The technique of multiplying by differentials allows us to work backwards to the formula for the solution. What about the exceptional solution? When f(y0)=0, then y(t)=y0 and y\u02d9=f(y0)g(t)=0 holds true. Separation of variables is a technique that reduces the problem of solving certain first-order ODEs to evaluating two integrals. Separation of variables works when we can write the equation in the form dydt=g(t)f(y). Here's an example. Example 2.1&emsp;&emsp; Solve y\u02d9&minus;2ty=0. Solution: Welcome to the session on separable equations. So in this problem, you were asked in the first question to solve the initial value problem, dy dx equals y squared with initial condition y of 0 equals 1. In the second part of the problem, you're asked to find the general solution where no initial condition is imposed. So here, you need to remember your method of separation of variables to tackle the first question. And then, in the second part of the problem, remember all the types of solutions and conditions that you applied in the first part to recover the last solutions. So why don't you take a minute, pause the video. Work through the questions A and B, and then we'll continue together when I come back. Welcome back. So in the first part of the problem, we'll be solving the equation dy dx equals y squared. So here, the method of separation of variables tells us that we should regroup the variables of the same kind. So all the y variables in one side, and dx variable on the other side of the equation. And then integrate from this point. So here, for this step, notice that I divided by y squared, which means that we need to impose the condition y not equal to 0 from now on. So from this step, we just use indefinite integrals to integrate both sides of the equation. So the left hand side is the integral of dy over y squared. So integral of this gives us minus 1 over y. And the right hand side, integral dx, is just x. Both sides would give us constants of integrations. But we only need one, because this is a first order differential equation. And so, we group them together on the right hand side with constant c. So from this point, given that we're interested in the variable y, we need just to inverse the expression. And that gives us partial answer, which is y of x equals minus 1 over x plus c. So now we need to use our initial condition, y of 0 equals to 1, to determine the value of c for this particular initial value problem. So our initial condition was y of 0 equals to 1. So if we substitute this in the expression that we just obtained, we just have 0 plus c-- which then only gives us c equals to 1. So we end up with a value for our constant of integration, c is equals to minus 1. And so, the solution to this problem is y of x equals 1 over 1 minus x. So if you examine this expression, you see right away that we have a problem for x equals to 1. Because if x equals to 1, we have 1 over 0-- which means that then the solution blows up and we have a vertical asymptote. So let me draw this here. So we're going to have an asymptote x equals to 1. And a solution that passes through our initial condition, y equals to one, going to infinity when approaching x equals to 1. But then, on the right side of the value x equals to 1, we have another part of the solution that goes to 0 as x goes to infinity. And that diverges to minus infinity when x approaches 1. So by convention, the solutions of differential equations are defined in one single interval. So we need here to realize that the solution we had is basically two parts-- the parts on the left of the asymptote, and the part on the right of the asymptote. So the solution to our initial value problem needs to be the solution that passes through the imposed initial condition, which was y of 0 equals to 1-- so it needs to be this solution. So now if we move on to the solution of the second part of the problem B, we were asked to find the general solution of the problem, which means that we need to account now for all the solutions regardless of their initial condition. So we already answered this partially during the solution of part A, where we solved using indefinite integrals and arrived to the solution minus 1 over x plus c-- where here, we had basically an undetermined constant of integration. So this is one general solution, but remember that we need to give all the solutions of the problem. So when we arrived to this solution, we excluded the solution that y equal to 0, which was basically a lost solution-- because we had to impose the condition y not equal to 0. So we need when we give the general solution to this differential equation to recover the lost solution. And then we basically have one kind of solution, minus 1 over x plus c that excludes y equals to 0. And another kind of solution that is simply the zero solution. So to summarize-- the important point of this problem is to remember the separation of variables and how to use it, and the fact that using it imposes conditions that require us to recover lost solutions at the end of the problem if we're asked to give general solutions. Another point to remember is that even a simple ODE can lead to relatively complex behavior, such as the presence of this vertical asymptote that you need to then know how to deal with. And determine which part of the solutions that you obtain is the real solution to the initial value problem that you are given. ",
                                        "unit_id":"cef5da535c684fc1bc81cb5e4ca94e58",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"152194fb58c04ecba5dab2541ebf837e",
                                "vertical_name":"2. Separation of variables for first order ODEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Simple",
                                            "Standard form",
                                            "Linear equation",
                                            "High school",
                                            "Independent variable",
                                            "Linear",
                                            "Standard",
                                            "Called",
                                            "Ll",
                                            "Homogeneous",
                                            "Equal",
                                            "Equation",
                                            "Call",
                                            "Word",
                                            "Write",
                                            "Prime",
                                            "Variable",
                                            "Common"
                                        ],
                                        "data":" Once you learn separation of variables, which is the most elementary method that there is, I think the single most important equation is the one that's called the first order linear equation. Both because it occurs frequently in models, because it's solvable, and I think that's enough. If you drop the course after today, you'll still have learned the most two important methods-- separation of variables and first order linear equations. So what does such an equation look like? Well, I'll write it. And there are several ways of writing it, but I think the most basic is this. I'm going to use x as the independent variable because that's what your book does. But in the applications, it's often t, time, that's the independent variable. And I'll try to give you examples which show that. So the equation looks like this. Some function of x times y prime plus some other function of x times y is equal to yet another function of x. Obviously, the x doesn't have the same status here that y does. So y is extremely limited how it can appear in the equation. But x can be pretty much arbitrary in those places. So that's the equation we're talking about. And I'll put it up. This is the first version of it. And we'll call them purple. Now, why is that called the linear equation? The word linear is a very heavily used word in mathematics, science, and engineering. For the moment, the best simple answer is because it's linear in y and y prime, the variables y and y prime. Well, y prime is not a variable. Well, you'll learn, in a certain sense, it helps to think of it as one. Not right now, perhaps, but think of it as linear by-- the most closely analogous thing would be the equation-- a linear equation that looked like-- a real linear equation, the kind you studied in high school, which would look like this. It would have two variables and, I guess, constant coefficients-- equal c. Now, that's a linear equation. That's the sense in which this is linear. It's linear in y prime and y, which are the analogs of the variables y1 and y2. A little bit of terminology-- if c is equal to zero, it's called homogeneous the same way this equation is called homogeneous, as you know from 18.02, if the right hand side is 0. So c of x, I should write here but I won't. That's called homogeneous. Now this is a common form for the equation, but it's not what is called standard form. The standard form for the equation-- and since this is going to be a prime course-- the prime course of confusion, which is probably completely correct, but a prime source of confusion is what I meant-- the standard linear form, and I'll underline linear, is the first coefficient of y prime is taken to be 1. So if I divide-- you can always convert that to a standard form by simply dividing through by it. And if I do that, the equation will look like y prime plus-- now it's common to not call it b anymore, the coefficient, because it's really b over a. And therefore it's common to adopt yet a new letter for it. And the standard one that many people use is p. How about the right hand side? We need a new letter for that too. It's c over a, but we'll call it q. So when I talk about the standard linear form for a linear first order equation, it's absolutely that that I'm talking about. Standard linear form Every first-order linear ODE can be written in standard linear form as follows: y\u02d9+p(t)y=q(t), where p(t) and q(t) can be any functions of t. When the right hand side q(t) is zero, we call the equation homogeneous. An equation that is not homogeneous is inhomogeneous . Homogeneous: y\u02d9+p(t)y = 0 Inhomogeneous: y\u02d9+p(t)y = q(t) Models that use first order linear ODEs First-order linear equations are common in modeling. Here are some examples. Temperature conduction Concentration diffusion Radioactive decay Bank account interest Simple population growth In this lecture we will focus in on the first example, and use a model for conduction called Newton Cooling. ",
                                        "unit_id":"42bc297975a4455cb4a99e367bc9e50c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fd825fdc67b142f2848134f79ffc6df9",
                                "vertical_name":"3. First order linear differential equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Standard form",
                                            "Water bath",
                                            "Differential equations",
                                            "Differential equation",
                                            "Diffusion equation",
                                            "Single stroke",
                                            "Independent variable",
                                            "Initial conditions",
                                            "Perfect vacuum",
                                            "Initial condition",
                                            "Physical law",
                                            "Minestrone soup",
                                            "Salt concentration",
                                            "Degrees celsius",
                                            "Hard time",
                                            "Positive numbers",
                                            "Ode",
                                            "Diffusion",
                                            "Water",
                                            "Form",
                                            "Membrane",
                                            "Concentration",
                                            "Model",
                                            "Equation",
                                            "Put",
                                            "Side",
                                            "Insulation",
                                            "Condition",
                                            "Ll",
                                            "Soup",
                                            "Inside",
                                            "Salt",
                                            "Conduction",
                                            "Input",
                                            "Draw",
                                            "Negative",
                                            "Determined",
                                            "System",
                                            "Situation",
                                            "Metal",
                                            "Order",
                                            "Temperature",
                                            "Celsius",
                                            "Constant",
                                            "Time",
                                            "Newton",
                                            "Wall",
                                            "Call",
                                            "Expect",
                                            "Law",
                                            "Response",
                                            "Thermos",
                                            "Positive",
                                            "Smaller",
                                            "Write",
                                            "Conductivity",
                                            "Cooling",
                                            "Difference",
                                            "Rate"
                                        ],
                                        "data":" Let's talk about the temperature/concentration model. Except I'm going to change its name to the conduction/ diffusion model. I'll put conduction over there, and diffusion over here, let's say. Since as you'll see, the similarities-- or they're practically the same model. All that's changed from one to the other is the name of the ideas. In one case, you call it temperature, and in the other case, you call it concentration. But the actual mathematics is identical. So let's begin with conduction. I need a simple physical situation that I am modeling. So imagine a tank of some liquid. Water will do as well as anything. And on the inside, suspended somehow, is a chamber. A metal cube will do. And let's suppose that its walls are partly insulated-- not so much that no heat can get through. There is no such thing as perfect insulation anyway, except maybe a perfect vacuum. Now inside-- so here on the outside is liquid. On the inside, what I'm interested in is the temperature of this thing. I'll call that T. Now that's different from the temperature of the external water bath. So I'll call that T sub e. T for temperature, measured in Celsius, let's say for the sake of definiteness. But this is the external temperature, so I'll indicate that with an e. What is the model? In other words, how do I set up a differential equation to model this situation? It's based on a physical law, which I think you've had simple examples like this-- the so-called Newton's law of cooling. Which says that the rate of change-- the rate the temperature, the heat, goes from the outside to the inside by conduction only. Heat, of course, can travel in various ways-- by convection, by conduction as here, or by radiation are the three most common. Of these, I only want one-- namely, transmission of heat by conduction. And that's the way it's probably a little better to call it the conduction model rather than the temperature model, which might involve other ways for the heat to be traveling. So dt-- the independent variable is not going to be x, as it was over there. It's going to be t for time. So maybe I should write that down. t equals time. Capital T equals temperature in degrees Celsius. You put in the degrees Celsius if you want. So it's proportional to the temperature difference between these two. Now, how shall I write the difference? Write it this way, because if you don't, you'll be in trouble. Now, why do I write it that way? Well, I write it that way because I want this constant to be positive-- a positive constant. In general, any constants or parameters which have some physical significance, one always wants to arrange the equation so that they are positive numbers, the way people normally think of these things. This is called the conductivity. The conductivity of what? Well, I don't know-- of the system, of the situation, the conductivity of the wall. Or if the metal were just by itself, it would-- at any rate, it's a constant. It's thought of as a constant. And why positive? Well, because if the external temperature is bigger than the internal temperature, I expect T to rise-- the internal temperature to rise. That means dT dt, its slope, should be positive. So in other words, if T_e is bigger than T, I expect this number to be positive. And that tells you that k must be a positive constant. If I had turned it the other way, expressed the difference in the reverse order, k would then have to be negative in order that this turn out to be positive in that situation I described. And since nobody wants negative values of k, you have to write the equation in this form, rather than the other way around. So here's our differential equation. It will probably have an initial condition. So it could be the temperature at the starting time should be some given number, T_0. But the condition could be given another way. One could ask, what's the temperature as time goes to infinity, for example? There are different ways of giving that initial condition. That's the conduction model. What would the diffusion model be? The diffusion model, mathematically, would be word for word the same. The only difference is that now, what I imagine is I'll draw the picture the same way. Except now I'm going to label the inside, not with a T, but with a C-- C for concentration. It's in an external water bath, let's say. So there is an external concentration. And what I'm talking about is some chemical-- let's say salt will do as well as anything. So C is equal to salt concentration inside. And C_e would be the salt concentration outside in the water bath. Now, I imagine some mechanism. So this is a salt solution. That's a salt solution. And I imagine some mechanism by which the salt can diffuse-- so diffusion model now-- diffuse from here into there, or possibly out the other way. And that's usually done by vaguely referring to that the outside is a semi-permeable membrane-- semi-permeable so that the salt will have a little hard time getting through, but permeable so that it won't be blocked completely. So there's a membrane. You write the \"semi-permeable\"-- membrane outside-- outside the inside. Well, I give up-- membrane somewhere, sorry. Membrane wall, how's that? Now what's the equation? Well, the equation is the same, except it's called the diffusion equation. I don't think Newton got his name on this. The diffusion equation says that the rate at which the salt diffuses across the membrane, which is the same-- up to a constant-- as the rate at which the concentration inside changes, is some constant, usually called k, still. Do I contradict? Yeah, OK, let's call it k1. Now it's different-- times C_e minus C. And for the same reason as before, if the external concentration is bigger than the internal concentration, we expect salt to flow in. That will make C rise. It will make this positive. And therefore, we want k1 to be positive, for the same reason it had to be positive before. So in each case, the model that I'm talking about is the differential equation. So maybe let's make that clear. Or I would say that this first-order differential equation models this physical situation. And the same thing is true on the other side over here. This is the diffusion equation. And this is the conduction equation. Now, if you are in any doubt about the power of differential equations, the point is, when I talk about this thing, I don't have to say which of these I'm following. I'll use neutral variables like y and x to solve these equations. But clearly, with a single stroke, I will be handling both situations together. And that's the power of the method. Example 4.1&emsp;&emsp; My minestrone soup is in an insulating thermos. Model its temperature as a function of time. Simplifying assumptions: The insulating ability of the thermos does not change with time. The rate of cooling depends only on the difference between the soup temperature and the external temperature. Draw a picture: Identify variables and parameters (with units): t time (minutes) x external temperature (\u2218C) y soup temperature (\u2218C) k conduction of thermos (to be determined by equation) Here t is the independent variable, and x and y are functions of t. The conduction k is a parameter of the system determined by the conductivity of the thermos. Identify input, response, and any initial conditions: The system is the thermos full of soup. The input is x, the temperature outside of the thermos. The response is y, the temperature of the soup inside of the thermos. We are not given initial conditions in this problem. Write differential equation: y\u02d9=k(x&minus;y) This is Newton's law of cooling : the rate of cooling of an object is proportional to the difference between its temperature and the external temperature. It's very important to get the sign right. When the temperature outside the thermos is smaller than the temperature of the soup, the soup is cooling. We set up the equation this way so that the conductivity constant k is positive. y\u02d9 &lt; 0 x&minus;y &lt; 0 k &gt; 0 The units of k must be minutes&minus;1 for the units of y\u02d9, which is Celsius per minute, to agree with the right hand side, which has units of k times units of Celsius. Smaller k means better insulation, because smaller k leads to smaller rate of change of temperature. The case k=0 is perfect insulation; the temperature inside the thermos doesn't change at all. Put into standard linear form: This ODE can be rearranged into standard form: y\u02d9+ky=kx. It's a first-order inhomogeneous linear ODE! Note: Notice that the factor of k is essential in the differential equation for the units to work out. In standard linear form p(t) = k q(t) = kx(t). Note that the right hand side q(t)=kx(t) is not the input. The input signal is x(t). The system response is y(t). ",
                                        "unit_id":"2fa4046a258d43b6a52886b6da505b23",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7469c1913f184677ba04cd5f576ef119",
                                "vertical_name":"4. Modeling conduction and diffusion"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Open interval",
                                            "Initial condition",
                                            "Real number",
                                            "Continuous function",
                                            "Choose",
                                            "Function",
                                            "Number"
                                        ],
                                        "data":" Homogeneous first-order linear ODEs can always be solved by separation of variables: y\u02d9+p(t)y = 0 dydt+p(t)y = 0 dydt = &minus;p(t)y dyy = &minus;p(t)dt Choose any antiderivative P(t) of p(t). Then ln|y| = &minus;P(t)+C |y| = e&minus;P(t)+C y = &plusmn;e&minus;P(t)+C y = ce&minus;P(t), where c is any number (we brought back the solution y=0 corresponding to c=0). Note: If you choose a different antiderivative, it will have the form P(t)+d for some constant d, and then the new e&minus;P(t) is just a constant e&minus;d times the old one, so the set of all scalar multiples of the function e&minus;P(t) is the same as before. Conclusion: General solution to first-order homogeneous linear ODE. Let p(t) be a continuous function on an open interval I. This ensures that p(t) has an antiderivative P(t). The general solution to y\u02d9+p(t)y=0 is y=ce&minus;P(t), where c is any real number. The parameter c can be determined from an initial condition. ",
                                        "unit_id":"b9d470916a8f47f991c05aaf01cc1858",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"72fcacb2dc9a4679ab88f4e9328c8b71",
                                "vertical_name":"5. Solving homogeneous first-order linear ODEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear ordinary differential equation",
                                            "Homogeneous differential equation",
                                            "Inhomogeneous equation",
                                            "Right hand side",
                                            "Product rule",
                                            "Initial conditions",
                                            "Initial condition",
                                            "Left hand side",
                                            "Homogeneous equation",
                                            "Constant coefficients",
                                            "Left side",
                                            "Ode",
                                            "Solving",
                                            "Ty",
                                            "Equation",
                                            "Find",
                                            "General",
                                            "Initial",
                                            "Homogeneous",
                                            "Side",
                                            "Step",
                                            "Dt",
                                            "Previously",
                                            "Cancel",
                                            "Function",
                                            "Today",
                                            "Ln",
                                            "Part",
                                            "Left",
                                            "Solve",
                                            "Minus",
                                            "Yh",
                                            "Ll",
                                            "Found",
                                            "Substitution",
                                            "Integrate",
                                            "Constant",
                                            "Method",
                                            "Equal"
                                        ],
                                        "data":" Variation of parameters is a method for solving inhomogeneous linear ODEs. Recall a first-order inhomogeneous linear ODE in standard linear form: y\u02d9+p(t)y=q(t). Let's see how variation of parameters works in the following example. Example 6.1&emsp;&emsp; Solve ty\u02d9+2y=t5 on the interval (0,&infin;). Solution: Step 1. The associated homogeneous equation is ty\u02d9+2y=0, or equivalently, y\u02d9+2ty=0. Solve by separation of variables: dydt = &minus;2ty dyy = &minus;2tdt ln|y| = &minus;2lnt+C(since t&gt;0) y = ce&minus;2lnt y = ct&minus;2. (Here, we have recovered the y=0 solution by allowing c=0.) Choose one nonzero solution, say yh=t&minus;2. Step 2. Substitute y=ut&minus;2 into the inhomogeneous equation: the left side is ty\u02d9+2y = t(u\u02d9t&minus;2+u(&minus;2t&minus;3))+2ut&minus;2 = t&minus;1u\u02d9. Note: Observe the cancellation of two terms after the substitution. If you do not observe such a cancellation, you know you have made an computational error. The reason behind this cancellation will be explained shortly. Using the result of our substitution, the inhomogeneous equation becomes t&minus;1u\u02d9 = t5 Step 3. Solve for u. u\u02d9 = t6 u = t77+c. Step 4. The general solution to the inhomogeneous equation is y=ut&minus;2=(t77+c)t&minus;2=t57+ct&minus;2. (If you want, check by direct substitution that this really is a solution.) Variation of parameters general procedure Find a nonzero solution, say yh, of the associated homogeneous ODE yh\u02d9+p(t)yh=0. Substitute y=uyh into the inhomogeneous equation, &thinsp; y\u02d9+p(t)y=q(t) to find an equation for the unknown function u=u(t). ddt(uyh)+puyh = q \u27fau\u02d9yh+uy\u02d9h+puyh = q \u27fau\u02d9yh+u(y\u02d9h+pyh)\u23df=0 = q \u27fau\u02d9yh = q Note that the term in parentheses is zero because yh is a solution to the homogeneous differential equation. Solve u\u02d9=qyh for u(t) by integration. Once the general u(t) is found, don't forget to multiply it by the homogeneous solution yh(t) to find y=u(t)yh(t), the general solution to the inhomogeneous equation. The idea is that the functions of the form cyh are solutions to the homogeneous equation; maybe we can get solutions to the inhomogeneous equation by allowing the parameter c to vary, i.e., if we replace it by a non-constant function u(t). Hello. So today we'll be solving a linear ODE with initial conditions. This is also known as an initial value problem. The equation of interest today is y dot plus ty is equal to t. And the initial condition is y of 0 is equal to 3. This equation does not have constant coefficients. There is a t multiplying y on the left-hand side. So the method to solve this is the variation of parameters method. The first step in solving with variation of parameters is finding one homogeneous solution. So we'll find just the specific homogeneous solution. So to find a homogeneous solution, we set the right-hand side equal to 0. So y dot plus ty is equal to 0. And since this is a linear ordinary differential equation, we can solve this using the method of separation of variables. So in the method of separation of variables, we put all the variables that depend on y to one side. So we would get dy over y in the left-hand side and minus t dt on the right-hand side. And we can integrate both sides. When we integrate both sides, we get ln of y is equal to minus t squared over 2 plus a constant c. Now, for the method a variation of parameters, we only need one homogeneous solution. So we can take c to be anything we'd like. The most convenient choice for c is c equal to 0. This will make our algebra much easier in the next steps. So when we exponentiate both sides, we get that y homogeneous is equal to e to the minus t squared over 2. Now we'll do the method of variation of parameters. For this method, we introduce the parameter u, which is a function of time, and we multiply that by the homogeneous solution that we found previously. So in this case, we have u of t times e to the minus t squared over 2. We plug this solution into our original ODE. So we have d dt of u e to the minus t squared over 2 plus t u e to the minus t squared over 2 equal to t. To solve this, we need to use the product rule to compute this derivative, which gives us du dt e to the minus t squared over 2 minus tue to the minus t squared over 2 plus t u e to the minus t squared over 2. And everything is equal to t. Now, as we always see in the method a variation of parameters, these two terms cancel. So the product rule that we did previously gives us a term that cancels the homogeneous part of the problem. So this is a feat of the variation of parameters method. Now we're only left with du dt is equal to t e to the t squared over 2. Well, we've multipled both sides of the equation by e to the t squared over 2, so this term goes away. Now, if we integrate this-- and this can be done using u substitution-- we would get that u is equal e to the t squared over 2 plus a constant c. We plug this back into our solution for y. So y is equal to u, which we just found to be e to the t squared over 2 plus c, multiplied by the homogeneous solution, which was e to the minus t squared over 2. So we have y is equal to 1 plus c e to the minus t squared over 2. The final step in an initial value problem-- and it's a very important step because we're looking for a very specific solution-- is to use the initial condition. So this is part three of this problem-- use initial condition. So we know that at t equal to 0-- so if we plug in t equal to 0 into this equation, we need y to be equal to 3. So we have 3 is equal to 1 plus c e to the 0, or c is equal to 2. With this, we have a full solution that is y is equal to 1 plus 2e to the minus t squared over 2. And note that this satisfies both the ODE and the initial condition. And with this, we're done with this problem ",
                                        "unit_id":"db6a5649d5854c48a4be0fb7770cc929",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fa29df2ff25d400d967c8938aa2022e1",
                                "vertical_name":"6. Solving inhomogeneous equations: variation of parameters"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Natural log",
                                            "Fresh water",
                                            "Inhomogeneous equation",
                                            "Linear equation",
                                            "Differential equation",
                                            "Product rule",
                                            "Steady state",
                                            "Full equation",
                                            "Linear function",
                                            "Homogeneous equation",
                                            "Ocean fish",
                                            "Initial condition",
                                            "Right hand side",
                                            "Left hand side",
                                            "Double check",
                                            "Standard form",
                                            "Decreasing function",
                                            "Approximately equal",
                                            "Salt concentration",
                                            "Dx",
                                            "Equation",
                                            "Homogeneous",
                                            "Prediction",
                                            "Ve",
                                            "Solving",
                                            "Fish",
                                            "Initial",
                                            "Side",
                                            "Salt water",
                                            "Number",
                                            "Live",
                                            "Integrate",
                                            "Made",
                                            "Habitable",
                                            "Check",
                                            "Hand",
                                            "Exponent",
                                            "Time",
                                            "Ll",
                                            "Salt",
                                            "Fluid",
                                            "Expression",
                                            "Function",
                                            "Form",
                                            "Concentration",
                                            "Found",
                                            "Cancel",
                                            "Amount",
                                            "Carry",
                                            "Dot",
                                            "Solve",
                                            "Equal",
                                            "Term",
                                            "Tank"
                                        ],
                                        "data":" We just learned the method of variation of parameters for solving differential equations. Now, we're going to apply that method to solve this differential equation, which describes the rate of change of the amount of salt over time inside this tank. We derived this equation in an earlier video. Let's recall that x of t is the total number of grams of salt in the tank at time t, and v of t is the total liters of fluid in the tank, which we found to be equal to 800 plus 2t. Also recall that this first term denoted the rate at which salt enters the tank, and this term denoted the rate at which salt exited the tank. We were also told that initially, this tank contains fresh water and that gives us an initial condition. We know that x at 0, so the number of grams of salt in the tank at time equals 0 is equal to 0, because there is no salt in the tank. So in this video, we'll be solving this initial value problem. Before we get into solving this, we can actually make some predictions about what will happen in the long-term behavior. So we're going to make a long-time prediction. Recall that we said that the concentration of salt in the tank is equal to x of t over v of t. For us, this means x of t over 800 plus 2t. After a long time, we expect that the concentration of the fluid inside the tank is equal to the concentration of the fluid that we're continuously pouring into the tank. So that means that this expression will be approximately equal to 75 grams per liter for large t. So if we solve for x of t by multiplying both sides by this denominator, we can predict that x of t is going to be approximately 75 times 800 plus 150t for large t. So this is our long-time prediction of the solution. And you might be wondering, well, if we know what the solution is going to look like after a long time, why are we solving this equation? Well, we wanted to make this tank habitable for fish that we will use in the experiment. These fish live in a salt concentration of 34 grams per liter, which is not really close to 75 grams per liter, and we were looking for a specific time at which this happened. So we do need to solve the full equation in order to find out when that would be. So this looks like it might be a linear equation, and if so we need to put it in standard form. So we're going to put it in the form x dot plus function of time, I'll call p of t, times x is equal to another function of time, which I'll call q of t. In our case, if we move this term to the left-hand side, this is the same as dx dt plus 3 over 800 plus 2t times x is equal to 375 where this is p of t and this is q of t. Since q of t is not identically 0, this is an inhomogeneous equation. So we'll need to use the method of variation of parameters to solve this. Let's start with that method. And there's four steps. Let's start with Step One, which is to solve the associated homogeneous equation. This is simply solving the equation where the right hand side is equal to 0. So that amounts to solving dx dt plus 3x over 800 plus 2t equals 0. This is a linear homogeneous equation, which means that it's separable, so we're going to use separation of variables. If we separate variables, we get that dx over x is equal to minus 3dt over 800 plus 2t. Now we integrate both sides. On the left-hand side, we get natural log of x, and on the right-hand side we can factor out a minus 3 from the numerator and a 2 from the denominator. Integrate dt over 400 plus t, which gives us minus 3/2 times the natural log of 400 plus t plus C1, where C1 is an arbitrary constant. So now there's a couple of things to note. First, the left-hand side should also have an arbitrary constant, but we can just subtract that from both sides and absorb it into this constant C1. Also, notice that I do not have the absolute value signs around the arguments in the natural log, and that's because we're not really interested in scenarios where those terms are less than zero. So we keep that in mind and just use parentheses. I've also written x here, but just remember that this is not the same as the x that solves the full equation, this is just for the homogeneous part. So we have natural log of x equals minus 3/2 times natural log of 400 plus t plus C1. And then we exponentiate to get that our homogeneous solution is e to the C1 times 400 plus t to the minus 3/2. Now, for the method of variation of parameters, we only need to choose one non-zero solution to the homogeneous equation. So we're going to choose the solution where e to the C1 is equal to 1. This gives us the homogeneous solution of 400 plus t to the minus 3/2. And notice here that I've chosen to write this as x of h, because this is just one homogeneous solution. Now I'm going to rewrite this equation up on the next board, and we'll continue through Step Two. Now, we're going to move on to Step Two in the method of variation of parameters. We're still solving this differential equation, and in the last step we found that this is a solution to the homogeneous equation. Now, our next step is to substitute a form of the solution x that looks like a function u of t times the solution to the homogeneous equation. We don't know what this function u of t is just yet, but we're going to make the substitution and come up with an ODE for u, we'll solve for u, and then that will give us the two pieces we need to reconstruct our solution x. So let's do that now. So substituting u times xh into this equation gives us d dt times u times x sub h plus 3 over 800 plus 2t times y times x sub h. And this is equal to 375, which I'm going to write on this side. So now, remember that both u and x sub h depend on t, so we need to do a product rule for this term. So you get that this equals u dot times x sub h, which we know is 400 plus t to the 3/2-- minus 3/2, excuse me-- plus u times the derivative of x sub h, which gives us minus 3/2 times 400 plus t to the minus 5/2, plus this term. Which gives us 3 over 800 plus 2t times u times x sub h, which is 400 plus t to the minus 3/2. Now, if you simplify you'll see that these two terms actually cancel with each other. And that's because we said that this term is x sub h dot, from the product rule and this term is x sub h. So if you factored out u from this expression, you would see that we just had u times x sub h dot plus 3 over 800 plus 2t times x sub h. But we know that x sub h satisfies the homogeneous equation, which means this is equal to 0. As a double check, you can actually make out this computation and see that these terms do indeed cancel. If they don't cancel while you're doing these computations, it means that we've made a mistake. And it was probably in the computation of x sub h. So it's good to go back and check your work in Step One. So now that these terms cancel, we're left with an ODE for u given by the left-hand side here, is equal to this. I'm going to rewrite this so it's little more clear. So we have that u dot is equal to I'm going to move this term to the other side. So we get 375 times 400 plus t to the 3/2. Now, when you carry out the step to solve for u and you get an ODE, this ODE will always be separable. In our case it's even easier because it's just an integration. So if we carry out this integration, we'll see that u of t is equal to 150 times 400 plus t to the 5/2 plus C2, where C2 is an arbitrary constant. So from Step One and Step Two, we now have both pieces that we need to find the solution to our original inhomogeneous equation. So that brings us to Step Three, where we just multiply these pieces together. So Step Three tells us that x of t is equal to u of t, which we just found to be 150 times 400 plus t to the 5/2 plus an arbitrary constant-- this is u-- times x sub h, which is 400 plus t to the minus 3/2. Now I'm just going to distribute this term to these two terms, and we'll see that x of t is equal to-- when I multiply these two terms, the exponents go to one, and so I'm left with 60,000, which is 150 times 400, plus 150t plus C2 times x sub h. So we get C2 over 400 plus t to the 3/2. So this is our general solution to the differential equation, but remember we also had an initial condition that x at time 0 is 0. So in Step Four we can apply that initial condition and that will let us determine what C2 is. So if we plug in 0, we know that x is equal to 0 at time 0. So 0 is equal to 60,000 plus 150 times 0 plus C2 over 400 to the 3/2. And if you work out what this is, you see that C2 is equal to minus 4.8 times 10 to the 8. So now we can put this all together and get that x of t is equal to 60,000 plus 150 t minus 4.8 times 10 to the 8 over 400 plus t to the 3/2. So this is our solution to the differential equation, but it looks a little fishy. Let's see if we can make some sense of this. So we said before we made a long-time prediction that, after a long time, x of t would be approximately equal to 75 times 800 plus 150t. Well, after a very long time, t is going to be very large. And it's being raised to a power that is greater than 1, so this denominator is going to be huge as t gets huge. So this term is going to go to 0. That means that after a long time, we'll be left with this, the steady state solution. And this is called the transient. But if you carry out this multiplication, you'll see that we correctly predicted the steady state solution in our long-time prediction. So now we've found the explicit expression for the amount of salt in the tank, and remember, we were thinking about the concentration. Because we wanted to have the tank be habitable for sea fish so that we can do our experiments. So in the next exercises, you'll carry out more analysis on this solution and find out when we'd be able to put the fish into the tank. Recall that our task at hand is to prepare a salt-water solution with salt concentration of 34 g/L for ocean fish to live in. We do so by pumping a concentrated salt-water solution, of concentration 75 g/L, at a rate of 5 L/min into a tank that initially contains 800L of pure fresh water, and allowing the mixed solution to flow out of a drain at a rate of 3L/min. According to the discussion in the videos, the initial value problem that describes the total amount of salt x(t) (in grams) in the tank is dxdt = 375&minus;3x800+2tx(0)=0. By variation of parameters, we then obtained the solution x(t) = (60000+150t)&minus;(4.8&times;108(400+t)3/2), where the linear function in first bracket is the long time (or steady state) solution. The decreasing function in the second bracket tends to 0 as t&rarr;&infin; and is the transient solution. In order for the term in the second bracket to tend to 0, the exponent 3/2 of the denominator only needs to be positive (rather than greater than 1 as stated in the video). ",
                                        "unit_id":"b3fe4c3e59324e8585bb7ad1260d0210",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ca90d72aaa904e938c748797bec33a46",
                                "vertical_name":"7. Application of variation of parameters"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Left side",
                                            "Standard form",
                                            "Integrating factor",
                                            "Indefinite integral",
                                            "Linear equation",
                                            "Differential equations",
                                            "Real life",
                                            "Product rule",
                                            "Negative sign",
                                            "Homogeneous equation",
                                            "Product formula",
                                            "Linear",
                                            "Factor",
                                            "Integrating",
                                            "Simple",
                                            "Form",
                                            "Side",
                                            "Term",
                                            "Equation",
                                            "Formula",
                                            "Integral",
                                            "Prime",
                                            "Reasonable",
                                            "Ep",
                                            "Equivalent",
                                            "Step",
                                            "Log",
                                            "General",
                                            "Trick",
                                            "Constant",
                                            "Ve",
                                            "Ode",
                                            "Multiply",
                                            "Integrate",
                                            "Thing",
                                            "Ll",
                                            "Dx",
                                            "Equal",
                                            "Squared",
                                            "Method",
                                            "Work"
                                        ],
                                        "data":" This method is exactly the same as variation of parameters. It is algebraically equivalent, but comes at the approach from a slightly different angle. We are adding it here because some texts and courses will refer to the term integrating factor, and we want you to be familiar with it. The set up is the same, we start with a first order, linear, inhomogeneous ODE: y\u02d9+p(t)y=q(t) To find an integrating factor : Find an antiderivative P(t) of p(t). The integrating factor is eP(t). Multiply both sides of the ODE by the integrating factor eP(t). eP(t)y\u02d9+eP(t)p(t)y = q(t)eP(t) We do this multiplication because it is now possible to express the left side as the derivative of something: eP(t)y\u02d9(t)+eP(t)p(t)y(t) = ddt(eP(t)y(t)). Now we can carry out the integration. ddt(ePy) = qeP ePy = &int;qePdt y = e&minus;P&int;qePdt. The indefinite integral &int;q(t)eP(t)dt represents a family of solutions because there is a constant of integration. If we fix one antiderivative, say R(t), then the others are R(t)+C for a constant C. So the general solution is y=R(t)e&minus;P(t)+Ce&minus;P(t). Remark 8.1&emsp;&emsp; The integrating factor eP(t) is the reciprocal of a solution to the homogeneous equation. Remark 8.2&emsp;&emsp; This process is equivalent to variation of parameters. The connection between the methods is that the unknown in variation by parameters is u=yyh=yeP. So let's take our equation in the form y prime plus p of x y-- the general form using the old variables-- equals q of x. Solve me. Hmm. Well, there are different ways of describing the solution process. No matter how you do it, it amounts to the same amount of work. And there's always a trick involved in each one of them since you can't suppress a trick by doing the problem some other way. The way I'm going to do it, I think, is the best. That's why I'm giving it to you. It leads to-- it's the easiest to remember-- least of the least work. But I have colleagues who would fight with me on that point. So since they're not here to fight with me, I am free to do whatever I like. One of the main reasons is that-- of doing it the way I'm going to do-- is because I want you to get one more word into your consciousness. And that's the word-- two words-- integrating factor. I'm going to solve this equation by finding an integrating factor of the form u of x. What's an integrating factor? Well, I'll show you not by writing an elaborate definition on the board, but showing you what its function is. It's a certain function-- u of x. I don't know what it is. But here's what I want it to do. I want to multiply-- I'm going to drop the x's just so that the thing looks less complicated. So what I want to do is multiply this equation through by u of x. That's why it's called a factor, because you're going to multiply everything through by it. So it's going to look like u y prime plus p u y equals q u. And now this thing is-- so far it's just a factor. What makes it an integrating factor is that this-- after I do that, I want this to turn out to be the derivative of something with respect to x. You see the motivation for that. If this turns out to be the derivative of something because I've chosen u so cleverly, then I'll be able to solve the equation immediately just by integrating this with respect to x and integrating that with respect to x. You just then integrate both sides with respect to x and the equation is solved. Now the only question is what should I choose for u. Well, when I'm-- if you think of the product formula, there might be many things to try here. But there's only one reasonable thing to try. Try to pick u so that it's the derivative of u times y. See how reasonable that is. If I use the product rule on this, the first term is u times y prime. The second term would be u prime times y. Well, I've got the y there. So this will work. Works if -- what's the condition that u must satisfy in order for that to be true? Well, it must be that after I do the differentiation, u prime turns out to be p times u. So is it clear? We want-- this is something we want to be equal to. And the thing I'll try to do-- is by choosing u in such a way that this equality will take place. And then I'll be able to solve the equation. And now so here's what my u prime must satisfy. Hey, we can solve that. But please don't forget that p is p of x. It's a function of x. So if you separate variables-- I'm going to do this. So what is it-- d u over u equals p of x times dx. If I integrate that-- so separate variables, integrate, and you're going to get d u over u integrate to be the log of u. And the other side integrates to be the integral of p of x dx. And you can put an arbitrary constant there, or you can think of it as already implied by the indefinite integral. Well, that doesn't tell us yet what u is. What should u be? Notice I don't have to find every possible u which works. All I'm looking for is one. All I want is a single u which satisfies that equation. Well, u equals the integral e to the integral of p dx. That's not too beautiful looking. But by differential equations, things can get so complicated that by the-- in a week or two-- you will think of this as an extremely simple formula. So there's the formula for our integrating factor. We found it. We will always be able to write an integrating factor. Don't worry about the arbitrary constant, because you only need one such u. So no arbitrary constant since only one u needed. And that's the solution-- the way we solve the linear equation. OK. Let's take over and actually do it. I think it would be better to summarize it as a clear-cut method. So let's do that. So what's our method? It's a method for solving y prime plus py equals q. Well, the first place, make sure it's in standard linear form. If it isn't, you must put it in that form. Notice the formula for the integrating factor. The formula for the integrating factor involves p-- the integral of p dx-- so you better get the right p. Otherwise you're sunk. OK. So put it in standard linear form. That way you'll have the right p. Notice that if you wrote it in that form and all you remembered was integral-- e to the integral pdx-- the p would have the wrong sign. If you're going to write-- that p should have a negative sign there. So do it this way and no other way. Otherwise you'll get confused and get wrong signs. And as I say, that will produce wrong answers-- and not just slightly wrong answers-- but disastrously wrong answers from the point of view of the modeling if you really want answers to physical problems. So here's a standard linear [INAUDIBLE] Then find the integrating factor. So calculate e to the integral pdx-- the integrating factor. And then multiply both-- I'm putting that this is both-- underline that as many times as you have room in your notes. Multiply both sides by this integrating factor-- by e to the integral pdx-- And then integrate. OK. Let's take a simple example. Suppose we started with the equation xy prime minus y equals-- I had a x squared-- x cubed-- something like that-- x cubed I think. Yeah, x cubed. OK. What's the first thing to do? Put it in standard form. So step 0 will be to write it as y prime minus 1 over x times y equals x squared. There are two standard-- let's do the work first, and then I'll talk about this x. And now what? Well, we now calculate the integrating factor. So that's-- I would do it in steps. You can integrate negative 1 over x. That integrates to minus log x. So the integrating factor is e to the integral of this dx. So its e to the negative log x. Now in real life, that's not the way to leave that. What is e to the negative log x? Well, think of it as e to the log x to the minus 1. Or in other words, it is e to the log x is x. So it's x to the minus-- so it's 1 over x. So the integrating factor is 1 over x. OK. Multiply both sides by the integrating factor. Both sides of what? Both sides of this-- the equation written in standard form and both sides. So it's going to be 1 over x y prime minus 1 over x squared y is equal to x squared times 1 over x, which is simply x. Now if you have done the work correctly, you should be able now to integrate the left hand side directly. So I'm going to write it this way. I always recommend that you put in as an extra step-- well, I won't. Put in as an extra step the reason for using that integrating factor. In other words, the left hand side is supposed to be now 1 over x times y prime. I always put in that, because there's always a chance you made a mistake or forgot something. Look at it. Mentally differentiate it using the product rule just to check that, in fact, it turns out to be the same as the left hand side. So what do we get? 1 over x times y prime plus y times the derivative of 1 over x, which indeed is negative 1 over x squared. And now finally, that's 3 a. Continue-- do the integration. So you're going to get-- let's see if we can do it all on one board. 1 over x times y is equal to x plus a constant-- sorry-- x squared over 2 plus a constant. And the final step will be therefore, I now want to isolate y by itself. So y will be equal to-- multiply through by x-- x cubed over 2 plus c times x. And that's the solution. ",
                                        "unit_id":"78f7255d972644838bb1ee32f9ee855a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"71336d7436a54deebfa7bdbc80c27421",
                                "vertical_name":"8. Optional: Solving inhomogeneous equations by integrating factor"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear combinations",
                                            "Linear combination",
                                            "Scalar multiplication",
                                            "Number"
                                        ],
                                        "data":" A linear combination of a list of functions is any function that can be built from them by scalar multiplication and addition. linear combinations of f(t): the functions cf(t), where c is any number linear combinations of f1(t) and f2(t): the functions of the form c1f1(t)+c2f2(t), where c1 and c2 are any numbers. \u22ee Examples 9.1&emsp;&emsp; 2cost+3sint is a linear combination of the functions cost and sint. 9t5+3 is a linear combination of the functions t5 and 1. ",
                                        "unit_id":"5c05621d32cb4eb1bb344513137db75e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7d8797cd0fab40bf990b606f29136ff5",
                                "vertical_name":"9. Linear combinations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Linear combination",
                                            "Homogeneous equation",
                                            "Superposition principle",
                                            "Linear combinations",
                                            "General"
                                        ],
                                        "data":" Let's compare the solutions to a homogeneous equation and some inhomogeneous equations with the same left hand side: general solution to ty\u02d9+2y=0: ct&minus;2 one solution to ty\u02d9+2y=t5: t57 general solution to ty\u02d9+2y=t5: t57+ct&minus;2 one solution to ty\u02d9+2y=1: 12 general solution to ty\u02d9+2y=1: 12+ct&minus;2. From each &ldquo;one solution\" above, scalar-multiply to get one solution to ty\u02d9+2y=9t5: 9t57 one solution to ty\u02d9+2y=3: 32 and add to get one solution to ty\u02d9+2y=9t5+3: 9t57+32. The general principle, which works for all linear ODEs, is this: Superposition principle. Multiplying a solution topn(t)y(n)+\u22ef+p0(t)y =aq(t)by a number a gives a solution topn(t)y(n)+\u22ef+p0(t)y =aq(t). Adding a solution of pn(t)y(n)+\u22ef+p0(t)y =q1(t) to a solution ofpn(t)y(n)+\u22ef+p0(t)y =q2(t) gives a solution ofpn(t)y(n)+\u22ef+p0(t)y =q1(t)+q2(t). Together these two properties show that linear combinations of y's solve the ODE with the corresponding linear combination of q's. ",
                                        "unit_id":"69a10280898a40fb91356ec70f335b9e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e3b43aedf87e4b0db00efdf9b068f5a2",
                                "vertical_name":"10. Superposition"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Homogeneous",
                                            "Yp",
                                            "General"
                                        ],
                                        "data":" To understand the general solution y(t) to an inhomogeneous linear ODE inhomogeneous:y\u02d9+p(t)y=q(t), do the following: Find the general solution to the associated homogeneous equation homogeneous:y\u02d9+p(t)y=0; i.e., write down the general solution yh. Find (in some way) any one particular solution yp to the inhomogeneous ODE. Add yp to the general solution of the homogeneous ODE to get the general solution to the inhomogeneous ODE. Summary: ygeneral inhomogeneous solution=ypparticular solution+yhgeneral homogeneous solution. (Note that here we are using yh for the general homogeneous solution rather than a specific homogeneous solution.) Why does this work? Superposition says that adding yp to a homogeneous solution gives a solution with the DE with right hand side q(t)+0=q(t). All solutions to the DE with right hand side q(t) arise this way, since subtracting yp from any solution gives a solution to the DE with right hand side 0. The result of this section is the key point of linearity in the inhomogeneous case. It allows us to combine solutions efficiently. ",
                                        "unit_id":"23986023167845f58a89e53c40af9927",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4ba7f94a396a4862886f5b14caf1890c",
                                "vertical_name":"11. Consequence of superposition for first order linear ODEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear equations",
                                            "Right hand side",
                                            "Left hand side",
                                            "Independent variable",
                                            "Dy dx",
                                            "Differential equation",
                                            "Bernoulli equation",
                                            "Linear equation",
                                            "Superposition principle",
                                            "Constant function",
                                            "Negative",
                                            "Linear",
                                            "Principle",
                                            "Ode",
                                            "Dot",
                                            "Equation",
                                            "General",
                                            "Superposition",
                                            "Squared",
                                            "Satisfy",
                                            "Form",
                                            "Point",
                                            "Minus",
                                            "Constant",
                                            "Rewrite",
                                            "Part",
                                            "Function",
                                            "Ll",
                                            "Term",
                                            "Cubed"
                                        ],
                                        "data":" Hi, everyone. So today I'd like to take a look at linear equations, linear first order differential equations. And specifically, we're going to look at just exactly what is a linear equation? So for example, which of these equations are linear? And then second of all, we're going to take a look at superposition. And we ask to consider the differential equation y dot plus y squared equals some function q of t, and just to demonstrate that this equation does not satisfy the superposition principle. So I'll let you take a look at this problem and try and work it out for yourself and I'll be back in a minute. Hi, everyone. Welcome back. All right, so we're asked to figure out which of these equations are linear. So just to recap, what does it mean for an equation to be linear? What does it mean for a first order equation to be linear? Well, it means that we can write it in the general form. So if it's a function of x, dy dx plus some general function of x-- and this could be anything-- but the point is that it's multiplied just by y. And then it can equal some arbitrary function q of x on the right-hand side. So every first order linear equation can be rewritten in this form. So let's tackle Part A. All right, y dot plus ky equals-- or y dot equals ky. We can just rewrite it as y dot plus negative ky equals zero. Note that just some constant k is a function of time. It's a constant function of time but it can just be thought of as a function of time. Same with the right-hand side, it's 0. And so this equation has the same form as our general first order linear equation. So this is a linear equation. Take a look at question two, Part 2. We have y dot plus y squared t. I'll bring the y to the left-hand side. If we do that, we get this. And just by comparing this to our generic first order linear ODE we note that it's not of this form. So specifically, this is the bad term in question. You see that it's y squared times t. Notice how we're not allowed to have any term that's y squared in our first order linear equation. Now I will say this just as an aside, this equation is also known as a Bernoulli equation. And as an aside, if you were to make a substitution u equals 1/y and rewrote this equation in terms of u as the independent variable, you'd find out that this equation would be linear in terms of u. But as it's written now in terms of y, it's not linear. So this is kind of an interesting point. That sometimes we can get lucky and do a non-linear transformation and convert a non-linear equation into a linear one. OK. So for Part 3 we have y prime plus cos x y equals x cubed. So again, we see that this is a linear equation, because we can identify p of x with cosine x; q of x with x cubed. So this equation has the general form of a linear ODE. For Part 4-- well, if we take a look at it right away. y dot divided by y is equal to t squared. It doesn't appear to be linear but, of course, we can multiply through by y and rewrite things. And of course, this equation is equivalent to y dot minus t squared y equals 0. Which again, is linear because p of t can be identified with negative t squared and q of t can be identified with 0. And then lastly, for Part 5 we have x squared y y prime plus 4x equals x cubed. And again, if we were to try to write it in the general form of a linear ODE, which we have here, it would look like 4x divided by x squared y minus x cubed divided by x squared y equals 0. And because there's a y on the denominator here, this equation doesn't have the general form of a first order linear equation. Now again, I note that if you were to make a substitution of u equal y squared, that substitution would make this equation linear. So this concludes Part A. So for Part B, we're given a differential equation y dot plus y squared is equal to q of t. And we want to show that this equation doesn't satisfy the superposition principle. Now, you might note that this equation is not linear . And second of all, we know that linear equations satisfy the superposition principle. So we need to exploit the fact that it's a non-linear equation to make it fail the superposition principle. And just as an example, what we can do is I can just pick a couple right-hand sides q as examples of this ODE. So we can imagine we have a solution y1, which solves the ODE, y1 dot plus y1 squared equals-- I'm just going to say 1 on the right-hand side. And I can also take another function y2 which, say, satisfies this differential equation, say, t. So all I've done is I've just picked one q1 on the right-hand side and another function q too. And I imagine that I have a solution y1, which satisfies this differential equation, and y2, which satisfies this differential equation. So what does the superposition principle say? Well, superposition says that if y1 solves this equation and y2 solves this equation, then the function y equals y1 plus y2 must solve the equation y dot plus y squared equals the sum of the right-hand side, 1 plus t. So if we try and substitute in y1 plus y2 into this equation we're going to come to a contradiction. So let's do that now. So we take d by dt of y1 plus y2. And I'm going to add it to y1 plus y2 quantity squared. And now what I can do is I can just simplify this. So I get y1 dot plus y2 dot. And I can expand out this square. So I get y1 squared plus y2 squared plus 2y1y2. And now what I'm going to do is I'm going to combine the term y1 with y1 squared. And by construction y1 dot plus y1 squared is equal to 1, because I assume that it satisfied this differential equation. And then in addition, by construction y2 dot plus y2 squared satisfies the right-hand side of the second equation with t. So I get 1 plus t. But I'm left over with this other piece 2y1y2. So in general, if I take a function which solves this differential equation and another function which solves this differential equation, and I add them together and plug it into the left-hand side of this differential equation, I get something which is 1 plus t plus some other stuff. And if it did satisfy the principle of superposition it must equal 1 plus t. So we arrive at a contradiction because it doesn't equal 1 plus t. In fact, it fails to equal 1 plus t by this term, 2y1y2. And this term comes directly from the fact that we had a non-linearity in the equation. So this is just one illustration of the fact that a non-linear equation doesn't necessarily satisfy the superposition principle. Whereas, every linear equation satisfies the superposition principle. This is one reason we love linear equations and we study them extensively. OK. So I'd just like to conclude here and I'll see you next time. ",
                                        "unit_id":"12438dd9c22e49d4b7e0fe245bd9a194",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"395405e5b6f84101992e9dccdaa002a6",
                                "vertical_name":"12. How superposition fails for nonlinear ODEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Crime scene investigation",
                                            "Core temperature",
                                            "Ambient temperature",
                                            "Body temperature",
                                            "Law enforcement",
                                            "Temperature",
                                            "Scene",
                                            "Cooling",
                                            "Time",
                                            "Write",
                                            "Murder",
                                            "Law",
                                            "Case",
                                            "Body",
                                            "Te"
                                        ],
                                        "data":" We are using Newton Cooling to solve a problem in a crime scene investigation (CSI). If we write Newton's Law of cooling as dTdt=k(Te&minus;T), where T(t) is temperature as a function of time and Te is the ambient temperature, the solution takes the form T(t)=Te+(T0&minus;Te)e&minus;kt, where T0=T(0) is the initial temperature. The equation above does a surprisingly good job of modeling real world temperature changes over time. For example it's used by law enforcement in criminal cases to determine the time of death in a murder case. We assume that up until a person is murdered the body temperature is constant at 38\u2218C. After the murder, the body cools, via Newton cooling, to the ambient temperature. When investigators arrive at the scene to find a corpse, one of the first things done is to measure of the core temperature of the body and the ambient temperature. This gives two immediate pieces of information: T(t1), where t1 is the (unknown) time since the murder, and Te, the ambient temperature. We also assume that the starting temperature T0 is the average human core temperature of 38\u2218C. Question 13.1&emsp;&emsp; Is this enough information to determine the time since the murder t1? Answer No. When we evaluate the solution at time t1, we get T(t1)=Te+(T0&minus;Te)e&minus;kt1 Every quantity is known except for k and t1. In general, the constant k is the conductivity, determined by many factors to do with the heat flow properties of the body and its surroundings. However, we can assume, if the body is not disturbed, that for a given case the value of k will not change over time. If so, we can determine k by taking a second measurement at a later time t2. We can then write a system of equations using our data, T(t1) =Te+(T0&minus;Te)e&minus;kt1 T(t2) =Te+(T0&minus;Te)e&minus;kt2 We can solve the system above because we know the time difference t2&minus;t1. ",
                                        "unit_id":"e71090df9e8e42ad90b1c32825605b7a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"33f0dda30e3149b5a63d53d656f74539",
                                "vertical_name":"13. Newton's Law of Cooling and CSI"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Homogeneous differential equation",
                                            "Differential equation",
                                            "Proportionality constant",
                                            "Yeast",
                                            "Dough",
                                            "Bread"
                                        ],
                                        "data":" In the last lecture we derived a differential equation governing yeast growth. In particular, we showed that if y is the number of yeast cells and t is the time in seconds, y satisfies the homogeneous differential equation y\u02d9(t)=ay for a known proportionality constant a. Recall that yh(t)=y(0)eat is a solution to the differential equation. Let's extend this model to a more complex and realistic scenario. Suppose that the yeast cells are living in bread dough. A baker usually doesn't keep one batch of yeast growing indefinitely, but instead will remove portions of dough over time to bake into bread, while maintaining some of the original yeast in the batch so that this so-called &ldquo;mother\" can grow again for the next day's bread. To model the amount of yeast in a batch using the differential equation method, let us express this process in terms of a rate, the rate at which yeast is being removed from the batch, with units Millions of cells/hour. Suppose the rate of removal is b(t). Then we can just modify our differential equation to read dydt=ay&minus;b(t). ",
                                        "unit_id":"97d80c8387f84eddbae2ed59d0862649",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0c4c34681c624e9e95ad9a4e4f0880ce",
                                "vertical_name":"14. Cell division revisited"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Open interval",
                                            "Uniqueness theorem",
                                            "Initial condition",
                                            "Continuous functions",
                                            "Family",
                                            "Existence"
                                        ],
                                        "data":" Using separation of variables (in the homogeneous case) and variation of parameters (in the inhomogeneous case), we showed that every first-order linear ODE has a 1-parameter family of solutions. To nail down a specific solution in this family, we need one initial condition, such as y(0). You may wonder if there are other solutions. Here is a general result which says that there aren't and confirms that our methods find all the solutions. Existence and uniqueness theorem for a linear ODE. Let p(t) and q(t) be continuous functions on an open interval I. Let a&isin;I, and let b be a given number. Then there exists a unique solution defined on the entire interval I to the first order linear ODE y\u02d9+p(t)y=q(t) satisfying the initial condition y(a)=b. Existence means that there is at least one solution. Uniqueness means that there is only one solution. ",
                                        "unit_id":"27370b38ae1c467c88d9b765f47c52d7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"386addef4c3b45c6b2997985e3107665",
                                "vertical_name":"15. Existence and uniqueness of solutions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear combinations",
                                            "Linear combination",
                                            "Uniqueness theorem",
                                            "Continuous functions",
                                            "Open interval",
                                            "Scalar multiplication",
                                            "Integrating factors",
                                            "Initial condition",
                                            "Homogeneous",
                                            "Number",
                                            "Concentration",
                                            "Conduction",
                                            "Diffusion"
                                        ],
                                        "data":" Standard linear form Every first-order linear ODE can be written in standard linear form as follows: Homogeneous: y\u02d9+p(t)y = 0 Inhomogeneous: y\u02d9+p(t)y = q(t) Conduction and diffusion We have a model called Newton Cooling law which gives us a differential equation model for temperature conduction or concentration diffusion as a first order linear ODE: y\u02d9+ky=kx. where x is the external temperature or concentration and y is the temperature/concentration of interest. Solutions to homogeneous linear equations All first order homogeneous equations can be solved using separation of variables. Solutions to inhomogeneous linear equations We have two equivalent methods for solving first order linear inhomogeneous equations: Variation of parameters. Integrating factors. Linear combinations A linear combination of a list of functions is any function that can built from them by scalar multiplication and addition. linear combinations of f(t): the functions cf(t), where c is any number linear combinations of f1(t) and f2(t): the functions of the form c1f1(t)+c2f2(t), where c1 and c2 are any numbers. \u22ee Superposition principle. Multiplying a solution topn(t)y(n)+\u22ef+p0(t)y = aq(t)by a number a gives a solution topn(t)y(n)+\u22ef+p0(t)y = aq(t). Adding a solution of pn(t)y(n)+\u22ef+p0(t)y = q1(t) to a solution ofpn(t)y(n)+\u22ef+p0(t)y = q2(t) gives a solution ofpn(t)y(n)+\u22ef+p0(t)y = q1(t)+q2(t). Existence and uniqueness theorem for a linear ODE. Let p(t) and q(t) be continuous functions on an open interval I. Let a&isin;I, and let b be a given number. Then there exists a unique solution to the first order linear ODE y\u02d9+p(t)y=q(t) satisfying the initial condition y(a)=b. ",
                                        "unit_id":"fb642e04aa614c1db999cbe8dc732512",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2083b73b77244cdf89f2b923fa56a9ec",
                                "vertical_name":"16. Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"4eed716e9c69454183a26345ce34de0c",
                        "sequential_name":"Recitation 2",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Integrating factor",
                                            "Dependent variable",
                                            "Leonhard euler",
                                            "Independent variable",
                                            "Left hand side",
                                            "Integrating factors",
                                            "Homogeneous equation",
                                            "Discussion forum",
                                            "Equation",
                                            "Forum",
                                            "Share",
                                            "Encourage"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. To encourage collaboration first, we give you only 2 attempts per answer box. 18.03 Recitation 2 Linear equations 1. (a) Using x for the independent variable and y for the dependent variable, what is standard linear form? Is the equation y 0 &minus; (tan x)y = 1 linear? Is it separable? In (b) and (c), find the general solution of this equation by variation of parameters: (b) Find a basic solution yh of the associated homogeneous equation. [18.01 reminder: Z tan x dx = Z sin x cos x dx suggests the substitution y = cos x.] (c) Find u(x) such that y = uyh is a solution. Write down the general solution of y 0 &minus; (tan x)y = 1. (d) There is an alternative to variation of parameters which is sometimes fun; it&rsquo;s called the &ldquo;method of integrating factors,&rdquo; and like so much else it was invented by Leonhard Euler. In it, you multiply your inhomogeneous linear equation through by some function (called an integrating factor) chosen by insight or calculation so that in the resulting equation the two terms on the left-hand side are the two terms in the formula for the derivative of a product. In this example, try multiplying through by cos x. Find the general solution this way. (e) Solve y 0 &minus; xy = 1 by the method of integrating factors. ",
                                        "unit_id":"50fe85750386478ebbb2f79399313b29",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f9b9e63d011946739d69556c8648dc76",
                                "vertical_name":"1. Linear equations"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"ae818b1070ed47b8a383b020fa85430c",
                "chapter_name":"Unit 2: Due 15 February",
                "sequentials":[
                    {
                        "sequential_id":"612979e894414a8ab4544b8618473bba",
                        "sequential_name":"3 Introduction to Complex Numbers",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Complex plane",
                                            "Complex exponential",
                                            "Polar form",
                                            "Real variable",
                                            "Cartesian",
                                            "Real"
                                        ],
                                        "data":" Objectives Represent complex numbers geometrically as points on the complex plane . Represent complex numbers algebraically in cartesian form and polar form as a complex exponential using Euler's Formula . Differentiate (and integrate) complex-valued functions of a real variable by breaking up such functions into their real and imaginary parts, and differentiating (and integrating) component-wise. Perform basic operations on complex numbers: conjugation , taking the real and imaginary parts , finding the modulus , and determining the argument . Perform arithmetic on complex numbers : addition, subtraction, multiplication, division, roots and powers in both cartesian and polar forms. ",
                                        "unit_id":"e28ad71233414326b8a29cf1a93b6a4d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8558f005daf74a24b824d304a310f2ba",
                                "vertical_name":"1. Complex numbers"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Quadratic equations",
                                            "Complex numbers",
                                            "Cubic equations",
                                            "Real numbers",
                                            "Complex number",
                                            "Algebraic system",
                                            "Real number",
                                            "Electrical engineers",
                                            "Scalar multiplication",
                                            "Complex plane",
                                            "Complex",
                                            "Form",
                                            "Plane"
                                        ],
                                        "data":" Complex numbers are expressions of the form a+bi, where a and b are real numbers, and i is a new symbol. Just as real numbers are points on a line, complex numbers are points in a plane: plot a+bi at the point (a,b). Figure : A point in the complex plane. A complex number of the form 0+ib is called purely imaginary. A complex number of the form a+0i is called real. Complex numbers form an algebraic system. Basic vector addition and scalar multiplication are the same as usual on the plane (R2). The new feature here is that we can multiply two complex numbers using the rule i2=&minus;1. (Electrical engineers sometimes write j instead of i, because they want to reserve i for current, but everybody else thinks that's weird.) Just as the set of all real numbers is denoted R, the set of all complex numbers is denoted C. Historical origin of complex numbers Most people think that complex numbers arose from attempts to solve quadratic equations, but actually they first appeared in connection with cubic equations. Everyone knew that certain quadratic equations, like x2+1=0 or x2+2x+5=0 had no solutions. The problem was with certain cubic equations, for example . x3&minus;6x&minus;2=0. This equation was known to have three real roots, given by simple combinations of the expressions A=1+&minus;73 B=1&minus;&minus;73 Check that one of the roots is A+B; it may not look like a real number, but it turns out to be one! Note that the word complex does not mean complicated. Instead, it refers to a complex of real numbers. ",
                                        "unit_id":"dfacac6b901b4d178adde3b3ad6b860e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"945e5b5ae40e408e8578bc2aa5f79bb1",
                                "vertical_name":"2. Complex numbers and the complex plane"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Imaginary part",
                                            "Complex numbers",
                                            "Real numbers",
                                            "Real part",
                                            "Complex number",
                                            "Complex conjugate",
                                            "Differential equations",
                                            "Differential equation",
                                            "Square root",
                                            "Elementary school",
                                            "High school",
                                            "Linear equations",
                                            "Mathematical jargon",
                                            "Real axis",
                                            "Real number",
                                            "Arithmetic operations",
                                            "Scalar multiplication",
                                            "Vector addition",
                                            "Real",
                                            "Im",
                                            "Top",
                                            "Made",
                                            "Vector",
                                            "Zw",
                                            "Negative",
                                            "Write",
                                            "Arithmetic",
                                            "Usual",
                                            "Multiply",
                                            "Squared",
                                            "Multiplying",
                                            "Stuff",
                                            "Ll",
                                            "Divided",
                                            "Bi",
                                            "Multiplication",
                                            "Addition"
                                        ],
                                        "data":" real part Re(a+bi):=a Re(2&minus;i)=2 imaginary part Im(a+bi):=b Im(2&minus;i)=&minus;1 complex conjugate a+bi&macr;:=a&minus;bi 2&minus;i&macr;=2+i Note: Im(a+bi)=b is a real number. It is not bi. Note: To find the complex conjugate, negate the imaginary component. This is equivalent to reflecting the complex number across the real axis. Complex numbers can be added , subtracted , multiplied , and divided (except for division by 0). The usual properties of addition and multiplication by real numbers hold and are the same as vector addition and scalar multiplication of vectors. addition (a+bi)+(c+di)=(a+c)+(b+d)i (2&minus;2i)+(3+i)=5&minus;i multiplication by a real number c(a+bi)=(ca)+(cb)i 3(&minus;2&minus;i)=&minus;6&minus;3i The only new operation is that we can now multiply two complex numbers using the rule: i2=&minus;1. Example 3.1&emsp;&emsp; Multiply 2+3i and 1&minus;5i. (2+3i)(1&minus;5i) =2&minus;7i&minus;15i2 =17&minus;7i. Example 3.2&emsp;&emsp; To divide z by w, we &ldquo;realify\" the denominator by multiplying top and bottom by the complex conjugate of the denominator w&macr;/w&macr;. (Note that &ldquo;realification\" is the same as rationalizing the denominator since i=&minus;1 is a square root.) 2+3i1&minus;5i=2+3i1&minus;5i&sdot;1+5i1+5i=2+13i+15i21&minus;25i2=&minus;13+13i26=&minus;12+12i. Properties of arithmetic on complex numbers The arithmetic operations on complex numbers satisfy the same properties as for real numbers (zw=wz etc). The mathematical jargon for this is that C, like R, is a field . What properties? Closure under addition and multiplication: if z and w are complex numbers, so are z+w and zw. Commutativity of addition and multiplication: &thinsp; z+w=w+z and zw=wz. Associativity of addition and multiplication: &thinsp; v+(z+w)=(v+z)+w and v(zw)=(vz)w. Distribution of multiplication over addition: &thinsp; v(z+w)=vz+vw. Additive inverses: &thinsp; z+(&minus;z)=0. Multiplicative inverses: &thinsp; z(1/z)=1 if z&ne;0. Hide Example 3.3&emsp;&emsp; In particular, for any complex number z and integer n, the nth power zn can be defined in the usual way. (We need z&ne;0 if n&lt;0.) z3 := zzz, z0 := 1, z&minus;3 := 1/z3. Well. I guess what I'll try to do today is just hit the highlights of the stuff on complex numbers. The stuff you're least likely to have been prepared with in high school-- from high school. And this time, at the end of the period, I'll speak a little bit about the notes. But I'm only asking you to read two and a half pages of them and in my opinion, it's very simple and partly a repetition of something we said earlier about linear equations. So if there's no time, I'll spend all the time on complex numbers-- what I think is the most important stuff for you that we're going to need in differential equations. So I assume you, from high school, know how to add and multiply complex numbers using the relation i squared equals negative 1. I'm a little less certain that you remember how to divide them. I hope you read last night by way of preparation for that, since that's something we're going to have to do a lot of differential equations. So remember that the division is done by making use of the complex conjugate. So if z is equal to a plus bi-- some people write a plus ib and sometimes I'll do that too if it's more convenient-- then the complex conjugate is what you get by changing i to negative i. And the important thing is that the product of those two is a real number. The product of these is a squared minus the quantity, ib, all squared, which makes i squared a plus b squared because i squared is negative 1. So the product of those-- that's what you multiply if you want to multiply this by something to make it real. You always multiply it by its complex conjugate. And that's the trick that underlines the doing of division so that, for example-- I better hang on to the these since I'll never remember all the examples that I've made. Suppose for example, we wanted to calculate 2 plus i divided by 1 minus 3i. Calculate it means I want to do the division. I want to express the answer as in the form a plus bi. What you would do is multiply the top and bottom by the complex conjugate of the denominator in order to make it real. So it's 1 plus 3i divided by 1 plus 3i. As they taught you in elementary school, that is 1 in a rather odd notation and therefore, multiplying by it doesn't change the value of the fraction. And so the denominator now becomes 1 squared plus 3 squared, which is 10. And the numerator is-- learn to do this without multiplying out four terms. You must be able to do this in your head and you always do it by grouping of post office method-- whatever you want to call it. Namely, first put down the real part, which is made out of 2 times 1 minus 3 times 1. So that's negative 1. And then the imaginary part, which is i times 1-- that's 1, coefficient 1-- plus 6i. So that makes 7i. Now some people feel this still doesn't look right, if you wish. And for some places in differential equation, it'll be useful to write that is minus 1/10 plus 7/10i. And now it's perfectly clear that it's in the form a plus bi. ",
                                        "unit_id":"685243c521fa47e285c7f5f7b80bd948",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fab204be6044401c94937ce61dd8024b",
                                "vertical_name":"3. Operations on complex numbers"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex conjugation",
                                            "Real numbers",
                                            "Real"
                                        ],
                                        "data":" Complex conjugation respects addition and multiplication by real numbers. This makes sense because all complex conjugation does is to change every i to a &minus;i. z+w&macr;=z&macr;+w&macr; az&macr;=az&macr; for a real. What is more surprising is that multiplication is respected by complex conjugation: zw&macr;=z&macr;w&macr;. Proof. (a+ib)(c+id)&macr; = (ac&minus;bd)+(ad+bc)i&macr; = (ac&minus;bd)&minus;(ad+bc)i = (ac&minus;bd)+(&minus;ad&minus;bc)i = (a&minus;bi)(c&minus;di) = a+bi&macr;c+di&macr; \u25fb ",
                                        "unit_id":"90c858bd55854e648364049c40a88ef4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fa270671d6bd4334aa7104c879aefc62",
                                "vertical_name":"4. Complex conjugation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Open disk",
                                            "Complex number",
                                            "Complex plane",
                                            "Complex conjugate",
                                            "Real number",
                                            "Disk"
                                        ],
                                        "data":" The absolute value (or magnitude or modulus ) |z| of a complex number z=a+bi is its distance to the origin: |a+bi|:=a2+b2(this is a real number). We know that when we multiply a complex number by its complex conjugate, we get a real number. This real number is the square of the distance to the origin: zz&macr;=a2+b2=|z|2. For a complex number z, inequalities like z&lt;3 do not make sense, but inequalities like |z|&lt;3 do, because |z| is a real number. The complex numbers satisfying |z|&lt;3 are those in the open disk of radius 3 centered at 0 in the complex plane. (Open disk means the disk without its boundary.) ",
                                        "unit_id":"cae49fd759cc45f0950ef2e86bd14627",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c49d714dfb724a69989564f7e6b2beb3",
                                "vertical_name":"5. Modulus"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Complex number",
                                            "Real number",
                                            "Real"
                                        ],
                                        "data":" The following are true for all complex numbers z: Rez=z+z&macr;2,Imz=z&minus;z&macr;2i,z&macr;&macr;=z,zz&macr;=|z|2. Proof. For the first identity, write z as a+bi. Then Rez=a and z+z&macr;2=(a+bi)+(a&minus;bi)2=a too. The proofs of the others are similar. It is easiest to see these identities by drawing a picture! z+z&macr;=2Rez z&minus;z&macr;=2iImz \u25fb Also, for any real number c and complex number z, Re(cz)=cRez,Im(cz)=cImz. Warning : it is very important here that c be real. To see this let's consider what multiplication by i does to a complex number. ",
                                        "unit_id":"d94864a4b86a4bec825a748df78572ad",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2f35421e96444a57a8cef6ca0353d39c",
                                "vertical_name":"6. Some useful identities"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex number",
                                            "Polar coordinates",
                                            "Slope formula",
                                            "Period",
                                            " ",
                                            "Called",
                                            "Tan",
                                            "Angle",
                                            "Argument",
                                            "Arctan"
                                        ],
                                        "data":" Given a nonzero complex number z=a+bi, we can express the point (a,b) in polar coordinates r and &theta;: a=rcos&theta;,b=rsin&theta;. Then a+bi=(rcos&theta;)+(rsin&theta;)i=r(cos&theta;+isin&theta;). One has r=|z|; here r must be a positive real number (assuming z&ne;0). Any possible &theta; for z (a possible value for the angle or argument of z) may be called argz, but this is dangerously ambiguous notation since there are many values of &theta; for the same z. Example 7.1&emsp;&emsp; Suppose that z=&minus;3i. So z corresponds to the point (0,&minus;3). Then r=|z|=3, but there are infinitely many possibilities for the angle &theta;. One possibility is &minus;&pi;/2; all the others are obtained by adding integer multiples of 2&pi;: argz=&hellip;,&minus;5&pi;/2,&minus;&pi;/2,3&pi;/2,7&pi;/2,&hellip;. To specify a preferred polar form, we would have to restrict the range for &theta; to some interval of width 2&pi;. The most common choice is to require &minus;&pi;&lt;&theta;&le;&pi;. This special &theta; is called the principal value of the argument , and is denoted in various ways: &theta;=Arg(a+bi)=Arg[a+bi]Mathematica=ArcTan[a,b]Mathematica=atan2(b,a)MATLAB. Warning: In MATLAB, be careful to use (b,a) and not (a,b). Example 7.2&emsp;&emsp; Consider arctan(b/a) for 1+i and &minus;1&minus;i. Both lead to &theta;=arctan(1)=&pi;/4. But the principle argument for &minus;1&minus;i is &minus;3&pi;/4. How do we find &theta;, the principal value of the argument? Note that while &theta; satisfies the &ldquo;slope formula\" tan&theta;=b/a whenever a&ne;0, the formula &theta;=arctan(b/a) does not determine the principal value of &theta;. Why? Because tan has a period of &pi;, where as we are looking for the argument &theta;, which has period 2&pi;. Take a complex number z=a+bi. The principal value of the argument, &theta;, can be found as follows. if a&gt;0 &theta;=arctan(b/a) if a&lt;0 and b&ge;0 &theta;=arctan(b/a)+&pi; if a&lt;0 and b&lt;0 &theta;=arctan(b/a)&minus;&pi; Draw a picture to verify that the value of &theta; you obtain in this manner places the point in the appropriate quadrant. Finishing the example, the number &minus;1&minus;i satisfies a&lt;0 and b&lt;0, so &theta;=arctan(1)&minus;&pi;=&pi;/4&minus;&pi;=&minus;3&pi;/4. ",
                                        "unit_id":"f945497032664f198e9eec151756f49f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1d031e7471d34ed0822c2a8730e31886",
                                "vertical_name":"7. Polar form"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Polar form",
                                            "Polar coordinates",
                                            "Complex number",
                                            "Polar representation",
                                            "Differential equations",
                                            "Infinite series",
                                            "High school",
                                            "Exponential notation",
                                            "Constant factor",
                                            "Exponential law",
                                            "Differential equation",
                                            "Power series",
                                            "Exponential function",
                                            "Part",
                                            "Taylor",
                                            "Exponential",
                                            "Law",
                                            "Constant",
                                            "Important",
                                            "Euler",
                                            "Ll",
                                            "Flash",
                                            "Worth",
                                            "People",
                                            "Power",
                                            "Equation",
                                            "Calculus",
                                            "Theta",
                                            "Thing",
                                            "Satisfy",
                                            "Definition",
                                            "Function",
                                            "Called"
                                        ],
                                        "data":" The polar representation, of course, is nominally just the switch to polar coordinates. If here is a plus bi, then this is r, and that's theta. And therefore, this can be written as in the polar form, that would be r cosine theta plus i. For r cosine theta, that's the a part. And the b part is-- the imaginary part is-- r sine theta times i. Now, it would be customary at this point to put the i in front, just because it looks better. The complex numbers are commutative, satisfy the commutative of law of multiplication, which means it doesn't matter in multiplication whether you put i in front or behind. It's still the same answer. So this will be r cosine theta plus i times r sine theta, which of course, we'll factor out and make it cosine theta plus i sine theta. Now it was Euler who took the decisive step and said, hey, look. I'm going to call that e to the i theta. Now, why did he do that? Well, because everything seemed to indicate that it should, but that's certainly worth the best color we have, which is what? Getting low here. OK. Nonetheless, it's worth pink. I'll even give him his due, Euler. Sometimes it's called Euler's formula, but it really shouldn't be. It's not a formula. It's a definition. So in some sense, you can't argue with it. He said, well, if you want to call, putting a complex number in a power and calling it that, you know can, but one can certainly ask why he did it. And the answer, I guess, is that all the evidence seemed to point to the fact that it was the thing to do. Now, I think it's important to talk about that a little bit because it's-- in my opinion, if you're seeing this for the first time, even if you read about it last night, it's-- it's a mysterious thing. And the one needs to see it from every possible point of view. It's something you get used to. You will never see it in a flash, sudden flash of insight. It will just get as familiar to you as more common arithmetic and algebraic and calculus processes are. But look, what is it we demand-- if you're going to call something an exponential, what is it we want an exponential to do? What gives something the right, an expression like this, the right to be called e to the i theta? The answer is -- you know, I can't creep inside Euler's mind. It must have been a very big day in his life. He had a lot of big days, but when he realized that that was the thing to write down as the definition of e to the i theta. But what, what is it one wants of an exponential? Well, the high school answer surely is, you wanted to satisfy the exponential law. Now, to my shock, I realize a lot of people don't know-- in my analysis class, you know, these are some math majors or graduate engineers in various subjects. If I say, prove such and such using the exponential law, I'm sure to get at least half a dozen emails asking me, what's the exponential law? OK. The exponential law is a to the x times a to the y equals a to the x plus y. The law of exponents. That's the most important reason why when, that's the single most important thing about exponents and the way one uses them. And this is the exponential function, called the exponential function because all the significant stuff is in the exponents. All right. So it should satisfy. We want, first of all, the exponential law to be true. Well, that's not all. That's a high school answer. An MIT answer would be, what is the role of-- I mean, why is e to the x such a popular function? Well, of course, it does satisfy the exponential law but for us an even more reasonable thing. It's the function which, when you differentiate it, you could get the same thing you started with. And it's, apart from a constant factor, the only such function. Now in terms of differential equations, it means that it's the solution that e to the-- let's be a little generous. Make it e to the a x. Better not to use x, because x, complex numbers tend to be called x plus iy. Let's use t, as a more neutral variable which is standing outside the fray, as it were. It satisfies the relationship that-- it's the solution, if you like, to the differential equation (that's a fancy way of saying it) -- dy dt equals a times y. Now, of course, that's not unique. We could make it unique by putting in an initial value. So if I want to get this function and not a constant times it, I should make this an initial value problem and say that y of 0 should be 1. And now I will get only the function e to the a t. So in other words, that characterizes this function. It's the only function in the whole world which has that property. Now if you're going to call something e to the i theta, we want that to be true. So here are my questions. Is it true that e to the i theta one-- let's use that-- times e to the i theta 2. I see I'm on a collision course here, but that's easily fixed. Is that equal to e to the i theta 1 plus theta 2? If that turns out to be so, that's a big step. What would we like to be true here? Well, will it be true that the derivative with respect to t of e to the i theta? I would like that to come be equal to i times e to the i theta. So question, question. I think those are the two most significant things. Now the notes do a third thing, talk about infinite series. Since we haven't done infinite series, anyway. It's not officially part of the syllabus, the kind of power series that are required. But I will put it down for the sake of completeness, as people like to say. So it should behave right with-- the infinite series should be nice. Infinite series should work out, should work out, should be-- there is no word for this. Should work out, let's say. (Small error in video above: ddtei&theta;=iei&theta; should be ddteit=ieit.) For students in science and engineering, you will often use exponential notation to abbreviate the polar form cos(&theta;)+isin(&theta;) of a complex number of modulus 1. This equation is known as Euler's Formula : ei&theta;=cos(&theta;)+isin(&theta;). Let's justify Euler's formula by applying what we've learned about differential equations thus far. The function et is defined to be the solution of the initial value problem x\u02d9=x, x(0)=1. More generally, the chain rule implies the For any constant a,eat is the solution of x\u02d9=ax,x(0)=1. In addition to solving this initial value problem, for Euler's formula to be a good definition, we want eit to satisfy exponential properties we know from Calculus. That is to justify Euler's formula, we expect to have Exponential law: eit1eit2=ei(t1+t2) Initial value problem: ddteit=ieit, &emsp;ei0=1. Taylor's formula: eit=&sum;n=0&infin;(it)nn!. The next videos justify the first two properties of the exponential eit. You may enjoy verifying Taylor's formula yourself. ",
                                        "unit_id":"803eefa70a73413baffa9c3139341a34",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f47244eba52248e08c8fff7d7ad44a9d",
                                "vertical_name":"8. Euler's formula"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Trigonometric addition formulas",
                                            "Trigonometric identities",
                                            "Exponential law",
                                            "Real part",
                                            "High school",
                                            "Minus sign",
                                            "Sine",
                                            "Cosine",
                                            "Ll",
                                            "Space",
                                            "Blah",
                                            "Factor",
                                            "Thing"
                                        ],
                                        "data":" So, let's look at the first one. What will it say? It's asking the question-- it says, please, calculate the product of these two things. OK. I do what I am told. I will calculate the product of cosine theta 1 plus i cosine theta 2-- sine-- sine theta 1. That's e to the i theta 1, right? So that corresponds to this. The other factor-- times the other factor, cosine theta 2 plus i sine theta 2. OK. What does that come out to be? Well, again, we'll use the method of grouping. What's the real part of it? The real part of it is cosine theta 1, cosine theta 2. And then there's a real part which comes from these two factors. It's going to occur with a minus sign, because of the i squared. And what's left is sine theta 1, sine theta 2. And then the imaginary part-- I'll factor out the i. And then what's left, I won't have to keep repeating the i. So it will be sine theta 1 cosine theta 2. And the other factor will be cosine theta 1 sine theta 2. Plus sine theta 2 cosine theta 1. Well, it looks like a mess. But, again, high school to the rescue. What is this? The top thing is nothing but a disguised form of cosine of theta 1 plus theta 2. And the bottom is sine of theta 1 plus theta 2. So the product of these two things is this. And that's exactly the formula. In other words, this formula is a way of writing those two trigonometric identities for the cosine of a sum and the sine of a sum. Instead of the two identities taking up that much space written one after the other, they take up this much space and they say exactly the same thing. Those two trigonometric identities are exactly the same as saying that e to the i theta satisfies the exponential law. Now, that's how-- you know, people ask, you know, what's beautiful in mathematics? To me, that's beautiful. I think that's great. Something long turns into something short. And it's just as good. And moreover, it connects with all these other things in the world-- differential equations, infinite series-- blah, blah, blah, blah, blah, blah. OK. We show that &thinsp;&thinsp; eit=cost+isint &thinsp;&thinsp; satisfies the exponential law. eit1eit2 = (cost1+isint1)(cost2+isint2) Multiplying out and collecting real and imaginary parts, this is equal to eit1eit2 = (cost1cost2&minus;sint1sint2)\u23dfcos(t1+t2)+i(sint1cost2+sint2cost1)\u23dfsin(t1+t2) = cos(t1+t2)+isin(t1+t2) = ei(t1+t2) Note that this gives a handy way to remember the trigonometric addition formulas! ",
                                        "unit_id":"7245e4f32b7c49bfa3b5f698a3de48ad",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"31a4f87ba6904c799bae4af136d61aff",
                                "vertical_name":"9. Exponential law"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Imaginary part",
                                            "Complex number",
                                            "Exponential law",
                                            "Exponential notation",
                                            "Infinite series",
                                            "Polar form",
                                            "Real variable",
                                            "Real part",
                                            "Complex function",
                                            "Initial condition",
                                            "Variable",
                                            "Real",
                                            "Initial",
                                            "Dt",
                                            "Ddt",
                                            "Standpoint",
                                            "Function",
                                            "Justify",
                                            "Euler",
                                            "Cosine",
                                            "Sine",
                                            "Theta"
                                        ],
                                        "data":" So what's the derivative let's go back to t, our generic variable. I want to emphasize that these functions, when we write them as functions, that theta will almost never be the variable outside of these notes on complex numbers. It will normally be time or something like that, or x, a neutral variable like x. So what's the derivative of e to the i theta? I'm hoping that it will turn out to be ie to the i theta. And that the yellow law may be true just as the green one was. OK, let's calculate it. It's the derivative with respect-- unfortunately, I can convert t's to thetas, but not thetas to t's. C'est la vie. OK. Times cosine t plus i sine t, and what's that? Well, the derivative of cosine t, differentiating the real and imaginary parts separately and adding them up. It's negative sine t plus i times cosine t. Now let's factor out the i, because it says-- if I factor out the i, what do I get? Well, now the first, the real part of what's left will be cosine t. And how about the imaginary part? You see it will be i sine t, because i times i gives me that negative 1. And what's that? e to the it. i times e to the it. So that works, too. What about the initial condition? No problem-- what is y of 0? What's the function at 0? Well, don't say right away i times 0 is 0, so it must be 1. That's illegal, because-- and why is that illegal? It's because you're not exactly, in that formula you're not multiplying i times theta. I mean sort of, you are. But that formula is the meaning of e to the i theta. Now it will be very nice if this is like-- well, you can't-- anyway, you can't do that. So you have to do it by saying it's the cosine of 0 plus i times the sine of 0. And how much is that? This is the sine of 0 is 0. Now it's OK to say i times 0 is 0, because that's the way complex numbers multiply. What is the cosine of 0? That's 1. So the answer indeed turns out to be 1. So this checks, really, from every conceivable standpoint down, as I indicated. Also from the standpoint of infinite series. So we're definitely allowed to use this. In order to justify Euler's formula, we want to show that eit satisfies the exponential principle. To do this, we need to explain how to take the derivative of a complex-valued function of a real variable. Complex-valued functions of a real variable Suppose that y(t) is a complex-valued function of a real variable t. Then y(t)=f(t)+ig(t) for some real-valued functions of t. Here f(t):=Rey(t) and g(t):=Imy(t). Differentiation and integration can be done component-wise: y&prime;(t) =f&prime;(t)+ig&prime;(t) &int;y(t)dt =&int;f(t)dt+i&int;g(t)dt. This is exactly same as for vector-valued functions. Justification of Euler's formula: We justify the Euler's formula by showing eit satisfies the initial value problem y&prime;=iy,y(0)=1. ddteit = ddt(cost+isint) Recall that to differentiate a complex function of a real variable, we differentiate the real and imaginary parts. ddt(cost+isint) = &minus;sint+icost = i(isint+cost) = ieit Last we need to check the initial condition, which works out as expected ei&sdot;0=cos0+isin0=1. Together with the exponential law, this proves Euler's genius in using the exponential notation to simplify the polar form of a complex number with modulus 1. Euler's formula:eit=cos(t)+isin(t) ",
                                        "unit_id":"ab13570bf4d84e768393443fb6ddd9fd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5b2e4c8e5d7a4cd4864570ac7e1236b9",
                                "vertical_name":"10. Differential equation for exponential"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Absolute values",
                                            "Complex numbers",
                                            "Real numbers",
                                            "Complex conjugation",
                                            "Real line",
                                            "Complex number",
                                            "Differential equations",
                                            "Exponential law",
                                            "Unit circle",
                                            "High school",
                                            "Smiley face",
                                            "Polar form",
                                            "Arithmetic operations",
                                            "Delayed gratification",
                                            "Polar representation",
                                            "Complex multiplication",
                                            "Polar angle",
                                            "Number",
                                            "Multiply",
                                            "Clear",
                                            "Easy",
                                            "Apply",
                                            "Product",
                                            "Multiplication",
                                            "Inside",
                                            "Add",
                                            "Modulus",
                                            "Angle"
                                        ],
                                        "data":" You should at least realize when you should look at polar form. The great advantage of polar form is, particularly once you've master the exponential law, the great advantage of polar form is it's good for multiplication. Now, of course, you know how to multiply complex numbers even when they're in the Cartesian form. You know, that's the first thing you learn in high school, how to multiply a plus bi times c plus di. But as you'll see, when push comes to shove, you'll see this very clearly on Friday. And that's when we talk about trigonometric inputs to differential equations, that the changing to complex numbers makes all sorts of things easy to calculate and the answers come out extremely clear. Whereas, if we had to do it any other way, it's a lot more work. And worst of all, when you finally slog through to the end, you feel you're none the wiser. Those are two things definitely to be avoided. So it's sort of funny, I'm sort of interposing this lecture. Why is he suddenly starting to talk about complex numbers? And so I ask you, delayed gratification. You won't ask me on Friday. You'll say oh, thank you, Professor Mattuck, for teaching us about complex numbers and polar representation. Gifts will be humbly accepted. Well, no, not really. OK. It's good for multiplication because the product of-- so here's any number in its polar form. That's a general complex number. It's modulus times the e to the i theta times r2 e to the i theta2. Well, you just multiply them as ordinary numbers. So the part out front will be r1r2. And e to the i theta parts gets multiplied by the exponential law and becomes e to the i theta1 plus theta2. Which makes very clear that to multiply geometrically two complex numbers, you multiply the moduli, the r's, the absolute values, how long the arrow is from 0 to the complex number. Multiply the moduli by and add the arguments. So the new number, it's modulus is the product of r1 and r2. And its argument, it's angle, polar angle, is the sum of the old two angles. And you add the angles. And you put down in your books angles, but I'm being photographed, so I'm going to write arguments. In other words, it makes the geometric content of multiplication clear in a sense in which this is extremely unclear. From this law-- you know, blah, blah, blah, blah, blah, whatever it turns out to be-- you have not the slightest intuition that this is true about the complex numbers. It's that first thing is just a formula, whereas this thing is an insightful representation of complex multiplication. Now we can write complex numbers z=a+bi in polar form as rei&theta;=rcos(&theta;)+irsin(&theta;). Test for equality of two nonzero complex numbers in polar form: r1ei&theta;1=r2ei&theta;2if and only ifr1=r2 and &theta;1=&theta;2+2&pi;k for some integer k. (This assumes that r1 and r2 are nonnegative real numbers, and that &theta;1 and &theta;2 are real numbers.) Some arithmetic operations on complex numbers are easy in polar form: multiplication: (r1ei&theta;1)(r2ei&theta;2) = r1r2ei(&theta;1+&theta;2) (multiply absolute values, add angles) reciprocal: 1rei&theta; = 1re&minus;i&theta; division: r1ei&theta;1r2ei&theta;2 = r1r2ei(&theta;1&minus;&theta;2) (divide absolute values, subtract angles) nth power: (rei&theta;)n = rnein&theta; for any integer n complex conjugation: rei&theta;&macr; = re&minus;i&theta;. Taking absolute values gives identities: |z1z2|=|z1||z2|,|1z|=1|z|,|z1z2|=|z1||z2|,|zn|=|z|n,|z&macr;|=|z|. Example 11.1&emsp;&emsp; How do you turn a smiley face into the emoticon &thinsp; :) &thinsp;? Answer Since i=ei&pi;/2, multiplying by i adds &pi;/2 to the angle of each point; that is, it rotates counterclockwise by 90\u2218 (around the origin). For example, one eye was originally on the real line, a at 1.5, so multiplying it by i produces an eye at 1.5i. Hide Example 11.2&emsp;&emsp; How do you trap a lion? Answer Build a cage in the shape of the unit circle |z|=1. Get inside the cage. Make sure that the lion is outside the cage. Apply the function 1/z to the whole plane. Voil&agrave;! The lion is now inside the cage, and you are outside it. Only problem: There's a lot of other stuff inside the cage too. Also, don't stand too close to z=0 when you apply 1/z. Hide Example 11.3&emsp;&emsp; Why not always write complex numbers in polar form? Answer Because addition and subtraction are difficult in polar form! ",
                                        "unit_id":"b6655a80f521459c9852ae31ca15ab12",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"04741168b38f40f291984b8094f94a41",
                                "vertical_name":"11. Operations in polar form"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Binomial theorem",
                                            "Polar form",
                                            "Change",
                                            "Express"
                                        ],
                                        "data":" Example 12.1&emsp;&emsp; Express: (1+i)6 in Cartesian form. Worked Solution Multiplication and powers are easiest in polar form. So we change to polar form, take the power, then change back to Cartesian form: (1+i)6=(2ei&pi;/4)6=(2)6ei6&pi;/4=8ei3&pi;/2=&minus;8i. You can check the answer by applying the binomial theorem to (1+i)6 and collecting the real and imaginary parts. Hide Example 12.2&emsp;&emsp; Express 1+i33+i in polar form. Worked Solution Change numerator and denominator into polar form, 1+i33+i=2ei&pi;/32ei&pi;/6=ei&pi;/6, use the division rule. Alternatively, you can plot to see that both points have the same magnitude, and determine the difference in the angle. ",
                                        "unit_id":"04680d4c65df4f57995093835ebdfe4b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"088660eb77f04b418768ad22e4cff2a3",
                                "vertical_name":"12. Worked Examples"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Real numbers",
                                            "Complex numbers",
                                            "Real number",
                                            "Complex number",
                                            "Real axis",
                                            "Complex conjugate",
                                            "Polar coordinates",
                                            "Complex plane",
                                            "Polar form",
                                            "Im",
                                            "Form",
                                            "Bi",
                                            "Plane"
                                        ],
                                        "data":" Complex numbers are expressions of the form a+bi, where a and b are real numbers, and i is a new symbol. Just as real numbers are points on a line, complex numbers are points in a plane: plot a+bi at the point (a,b). Figure : A point in the complex plane. Operations on complex numbers real part Re(a+bi):=a Re(2&minus;i)=2 imaginary part Im(a+bi):=b Im(2&minus;i)=&minus;1 complex conjugate a+bi&macr;:=a&minus;bi 2&minus;i&macr;=2+i Note: Im(a+bi)=b is a real number. It is not bi. Note: To find the complex conjugate, negate the imaginary component. This is equivalent to reflecting the complex number across the real axis. The absolute value (or magnitude or modulus ) |z| of a complex number z=a+bi is its distance to the origin: |a+bi|:=a2+b2(this is a real number). Some useful identities The following are true for all complex numbers z: Rez=z+z&macr;2,Imz=z&minus;z&macr;2i,z&macr;&macr;=z,zz&macr;=|z|2. Also, for any real number c and complex number z, Re(cz)=cRez,Im(cz)=cImz. Polar form of a complex number Given a nonzero complex number z=a+bi, we can express the point (a,b) in polar coordinates r and &theta;: a=rcos&theta;,b=rsin&theta;. Then a+bi=(rcos&theta;)+(rsin&theta;)i=r(cos&theta;+isin&theta;). Any possible &theta; for z (a possible value for the angle or argument of z) may be called argz, but this is dangerously ambiguous notation since there are many values of &theta; for the same z. Euler's formula:eit=cos(t)+isin(t) ",
                                        "unit_id":"5ee7091f3e534d6ebe777e500f8c234b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"75baac3c659d45a39415e8548be5d081",
                                "vertical_name":"13. Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3aa1a1dcb9174f178c6793bbc0be8235",
                        "sequential_name":"Recitation 3",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polar coordinates",
                                            "Discussion forum",
                                            "Positive integer",
                                            "Forum",
                                            "Share",
                                            "Positive",
                                            "Encourage",
                                            "Describe"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. To encourage collaboration, we give only two attempts per answer box. 18.03 Recitation 3 Complex numbers 1. (a) Compute the product (1 + &radic; 3i)(a + bi) (where a, b are real). (b) What are the polar coordinates of 1 + &radic; 3i? Express 1 + &radic; 3i in the form rei&theta; , r &gt; 0. (c) What are the polar coordinates of (1 + &radic; 3i)(a + bi) in terms of the polar coordinates of a + bi = rei&theta;? (d) Describe geometrically what multiplying by 1 + &radic; 3i does. (e) Describe the sequence of powers of 1 + &radic; 3i, positive and negative. 2. Explain why |z n | = |z| n and arg(z n ) = n arg(z) for n a positive integer. 3. Find an expression for sin(4t) in terms of powers of cost and sin t, using (e it) 4 = e 4it and Euler&rsquo;s formula. ",
                                        "unit_id":"3204dc7d57f44cd99d4f56c4bb1dbc7a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"42a977ef02894b33988477f2d6f69282",
                                "vertical_name":"1. Complex numbers"
                            }
                        ]
                    },
                    {
                        "sequential_id":"613daaa4ba6d4adcb06c6c92a1b7eed7",
                        "sequential_name":"4 The Complex Exponential Function",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Real variable",
                                            "Special case"
                                        ],
                                        "data":" Objectives Extend Euler's formula to define the complex exponential function ezt of a real variable t for all complex numbers z. Describe the trajectory of a complex exponential function depending on a real variable t. Find complex roots of polynomials, including the special case of roots of unity . ",
                                        "unit_id":"e667776ffc8444cea878845eae592217",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"65d8d931adfa472d9cd5875186673552",
                                "vertical_name":"1. Complex exponential function"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex exponential function",
                                            "Complex number",
                                            "Complex numbers",
                                            "Uniqueness theorem",
                                            "Real variable",
                                            "Real number",
                                            "Taylor series",
                                            "Real numbers",
                                            "Initial condition",
                                            "Equation",
                                            "Side",
                                            "Euler",
                                            "Function",
                                            "Ez",
                                            " ",
                                            "Mz",
                                            "Initial",
                                            "Proof"
                                        ],
                                        "data":" In the last lecture, we used Euler's formula to write a complex number a+bi in polar form rei&theta;. In solving ODEs, it is going to be useful to define the complex exponential ez for any complex number z=a+ib. Moreover: Definition 2.1&emsp;&emsp; For any complex number z, the complex function ezt of a real variable t is defined as the solution to the initial value problem ddtezt=zezt,ez0=1. Properties of eit For every real number t, eit=cost+isint &emsp;&emsp;( Euler's formula ), e&minus;it=eit&macr;=cost&minus;isint, |eit|=1. Proof. 1. (This is the justification from the previous lecture.) The calculation ddt(cost+isint) =&minus;sint+icost =i(cost+isint) shows that the function F(t)=cost+isint is the solution to the DE with initial condition F\u02d9(t)=iF(t),F(0)=1. But by definition G(t)=eit also satisfies G\u02d9(t)=iG(t),G(0)=1. The Existence and Uniqueness theorem for (first order) differential equations applies to complex-valued functions of a real variable. The uniqueness theorem tells us that F(t)=G(t), or eit=cost+isint. The proof of 2. and 3. follow using 1. \u25fb Properties of the complex exponential ez ea+ib=ea(cosb+isinb) for all real numbers a and b (Generalized Euler equation ). ez+w=ezew for all complex numbers z and w. (ez)n=enz for every complex number z and integer n. The n=0 case says (ez)0=e0+i0=cos0+isin0=1. The n=&minus;1 case says 1ez=(ez)&minus;1=e&minus;z. (Optional) Taylor series The Taylor series for ez is given by ez=1+z+z22!+z33!+\u22ef. This formula can be deduced by multiplying z by t, which gives ezt=1+zt+(zt)22!+(zt)33!+\u22ef. and showing that the right hand side satisfies the initial value problem &thinsp; F\u02d9=zF, &thinsp; F(0)=1. Uniqueness guarantees that the two sides are then equal. By setting t=1, the original statement is shown. Hide Remark 2.2&emsp;&emsp; Some books use the generalized Euler equation or the Taylor series for ez as the definition of the complex exponential function. The definition we gave in terms of the initial value problem ddtezt=zezt and ez0=1 focuses on what makes the function useful. (Optional) Proof of the properties Proof. The proofs of these facts are similar to the proof of Euler's formula above. We show that ea+ib=eaeib=ea(cosb+isinb) by showing that e(a+ib)t=eat(cos(bt)+isin(bt)) for real numbers. ddteat(cosbt+isinbt) =aeat(cosbt+isinbt)+eat(&minus;bsinbt+ibcosbt) =aeat(cosbt+isinbt)+eatib(cosbt+isinbt) =(a+ib) eat(cosbt+isinbt) This shows that eat(cosbt+isinbt) is a solution to the initial value problem F\u02d9=(a+ib) F,F(0)=1. But e(a+ib)t is a solution to this initial value problem by definition. The Uniqueness theorem for differential equations tells us that for all real values of t, e(a+ib)t=eat(cos(bt)+isin(bt)). In particular, this equation is true when t=1. Let z=a+ib, and w=c+id, then ezew =ea+ibec+id =eaeibeceid =eaeceibeid =ea+ceibeid So all we need to show is that eibeid=eib+id. We know that ebit solves the ODE F\u02d9=ib F,F(0)=1 Notice that ddteibteidt =ibeibteidt+ideibteidt =(ib+id) eibteidt Thus both eibteidt and e(ib+id)t solve F\u02d9=(ib+id) F,F(0)=1. The Uniqueness theorem for differential equations implies that these two functions must be equal for all real values of t. In particular, they are equal when t=1. If n=0, then this is 1=1 by definition. If n&gt;0, (ez)n=ezez\u22efez\u23den copies=item 2 repeatedlyez+z+\u22ef+z\u23den copies=enz. If n=&minus;m&lt;0, then (ez)&minus;m=1(ez)m=(just shown)1emz=e&minus;mz since emze&minus;mz=emz+(&minus;mz)=e0=1. ",
                                        "unit_id":"eb03490df87c44fa8bf2bbb2258fb6b6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"86c3dc5fb6924b46a705dc58f387738d",
                                "vertical_name":"2. The complex exponential function"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex exponential function",
                                            "Real number",
                                            "Unit circle",
                                            "Function",
                                            "Circle"
                                        ],
                                        "data":" One of the ways we understand a function is to understand its graph. Our goal is to understand the complex exponential function e(a+bi)t by plotting its trajectory as t varies. Fundamental case: the function eit As t increases, the complex number eit=cost+isint travels counterclockwise around the unit circle. Here are some important values of eit and their locations on the unit circle. The function e(a+bi)t Fix a nonzero complex number a+bi. As the real number t increases, e(a+bi)t moves along part of a line, a circle, or a spiral, depending on the value of a+bi. You can see this in the mathlet below. ",
                                        "unit_id":"e526721f0d5e4caba4bd38e5cd5024e3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"07c5587bf36042249e76f84a9dd97e45",
                                "vertical_name":"3. Graphing the complex exponential function"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Complex exponential",
                                            "Complex domain",
                                            "Complex systems",
                                            "Complex exponentials",
                                            "Real part",
                                            "High school",
                                            "Pocket calculator",
                                            "Desert island",
                                            "Complex number",
                                            "Complex",
                                            "Real",
                                            "Part",
                                            "Exponential",
                                            "Involve",
                                            "Write",
                                            "Product",
                                            "Immediately",
                                            "Bi",
                                            "Type",
                                            "End",
                                            "Tricky",
                                            "Original",
                                            "Cosine",
                                            "Factor",
                                            "Integration",
                                            "Number",
                                            "Calculus",
                                            "Multiply",
                                            "Negative",
                                            "Sine",
                                            "Minus",
                                            "Time"
                                        ],
                                        "data":" So let me just indicate how just the exponential notation enables you to do things in calculus. Formulas that are impossible to remember from calculus, it makes them very easy to derive. A typical example of that is suppose you want to, for example, integrate e to the negative x, cosine x. Well, number one, you spend a few minutes running through a calculus textbook and try to find out the answer because you know you're not going to remember how to do it. Or you run to a computer and type in Matlab and something, or you fish out your little pocket calculator which will give you a formula, and so on. So you have aides for doing that. But the way to do it if you're on a desert island, and the way I always do it because I never have any of these little aides around -- and I cannot trust my memory. Probably a certain number of you remember how you did it in high school or how you did it in 18.01, if you took it here. You have to use integration by parts, but it's one of the tricky things that's not required on an exam because you have to use integration by parts twice in the same direction, and then suddenly by comparing the end product with the initial product, and writing an equation. Somehow the value falls out. Well, that's tricky. And it's not the sort of thing you can waste time stuffing into your head, unless you're going to be in the Integration Bee during IAP or something like that. Instead, use complex numbers as the way to do this. How do I think of this, cosine x? What I do is I think of that e to the negative x cosine x is the real part-- the real part of what? Well, cosine x is the real part of e to the ix. So this thing-- this is real. This is real too, but I'm thinking of it as the real part of e to the ix. Now if I multiply these two together, this is going to turn out to be, therefore, the real part of e to the minus x. I'll write it out very pompously and then I'll fix it. I would never write this, but you are you. OK. It's e to the minus x times-- when I write cosine x plus i sine x, the real part of that is cosine x. So it's the real part of-- write it this way for real-- part of e to the factor out the x. And what's up there is negative 1 plus i times x. OK. So the idea is the same thing is going to be true for the integral. This is going to be the real part of that, the integral of e to the minus 1 plus all i times x, dx. In other words, what you do is-- this procedure is called complexifying the integral. Instead of looking at the original real problem, I'm going to turn it into a complex problem by turning this thing into a complex exponential. This is the real part of that complex exponential. Now what's the advantage of doing that? Simple. It's because nothing is easier to integrate than an exponential. And though you may have some doubts as to whether the familiar laws work also with complex exponentials, I assure you they all do. It would be lovely to sit and prove them. On the other hand, I think after a while you'd find it rather dull. So I'm going to do the fun things and assume that they are true because they are. So what's the integral of e to the minus 1 plus i x dx? Well, if there is justice in heaven it must be e to the minus 1 plus i times x divided by minus 1 plus i. Now in some sense, that's the answer. This does, in fact, give that. That's correct. I want the real part of this-- I want the real part because that's the way the original problem was stated. I want the real part only. So I want the real part of this. Now this is where what separates the girls from the women. This is why you have to know how to divide complex numbers. So watch how I find the real part. I write it this way, 1 over-- normally when I do the calculation for myself, I would skip a couple of these steps, but this time I'll write everything out. You're going to have to do this a lot in this course, by the way, both over the course of the next few weeks and especially, toward the end of the term when we get into complex systems. Systems, which involve complex numbers, is a lot of this. So now is the time to learn to do it and feel skillful at it. So it's this times e to the negative x times e to the ix, which is cosine x plus i sine x. Now I'm not ready yet to do the calculation to find the real part because I don't like the way this looks. I want to go back to the thing I did right at the very beginning of the hour and turn it into an a plus bi type of complex number. In other words, what we have to do is the division. So the division is going to be, I multiply the-- now I'm going to ask you to do it in your head. When I multiply the top and bottom by negative 1 minus i, what does that put in the denominator? 1 squared plus 1 squared, 2. And in the numerator, negative 1 minus i. This is the same as that. But now it looks in the form a plus bi. It's negative 1 over 2 minus i times 1/2. So this is multiplied by e to the x and cosine x. So if you're doing it and practice a little bit, please don't put in all these steps. Well, I would go from here to here by myself, maybe you shouldn't. Practice a little before you do that. And now what do we do with this? Now this is in a form to pick out the real part. We want the real part of this. So you don't have to write the whole thing out -- in other words, you don't have to do all the multiplications. You only have to find the real part of it, which is what? Well, e to the negative x will be simply a factor. That's a real factor which I don't have to worry about. And in that category I can include the 2 also. So I only have to pick out the real part of this times that. And what's that? It's negative cosine x. And the other real part comes from the product of these two things, i times negatively i is 1 and what's left is sine x. So that's the answer to the question. That's the integral of e to the negative x cosine x. Notice that it's a completely straightforward process. It doesn't involve any tricks, unless you call going to the complex domain a trick, but I don't. As soon as you see in this course the combination of e to a x times cosine bx or sine bx, you should immediately think-- and you're going to get plenty of it in the couple of weeks after the exam. You're going to get plenty of it and you should immediately think of passing to the complex domain. That will be the standard way we solve such problems. So you're going to get lots of practice doing this, but this was the first time. ",
                                        "unit_id":"e6a8a93ec2654d0aa6182bb9e3a31e7e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4e6601bd5ddb46728ad33d84b38cbba4",
                                "vertical_name":"4. Application of complex exponential to integration"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex analysis",
                                            "Real polynomial",
                                            "Distinct roots",
                                            "Constant coefficients",
                                            "Fundamental theorem",
                                            "Fourth root",
                                            "Degree",
                                            "Complex",
                                            "Polynomial",
                                            "Real",
                                            "Algebra",
                                            "Root"
                                        ],
                                        "data":" Example 5.1&emsp;&emsp; How many roots does the polynomial z3&minus;3z2+4 have? It factors as (z&minus;2)(z&minus;2)(z+1), so it has only two distinct roots (2 and &minus;1). But if we count 2 twice, then the number of roots counted with multiplicity is 3, equal to the degree of the polynomial. Some polynomials with real coefficients, like z2+9, cannot be factored completely into degree 1 real polynomials, but do factor into degree 1 polynomials with complex coefficients: (z+3i)(z&minus;3i). Real polynomial : polynomial with real coefficients. Complex polynomial : polynomial with complex coefficients. In fact, every complex polynomial factors completely into degree 1 complex polynomials&mdash;this is proved in advanced courses in complex analysis. This implies the following: Fundamental Theorem of algebra. Every degree n complex polynomial f(z) has exactly n complex roots, if counted with multiplicity. Since real polynomials are special cases of complex polynomials, the fundamental theorem of algebra applies to them too. For real polynomials, any complex roots will occur with their complex conjugate pairs. Example 5.2&emsp;&emsp; The degree 3 polynomial z3+z2&minus;z+15 factors as (z+3)(z&minus;1&minus;2i)(z&minus;1+2i), so it has three distinct roots: &minus;3, 1+2i, and 1&minus;2i. Of these roots, &minus;3 is real, and 1+2i and 1&minus;2i form a complex conjugate pair. Example 5.3&emsp;&emsp; Want a fourth root of i? The fundamental theorem of algebra guarantees that z4&minus;i=0 has a complex solution (in fact, four of them). We'll learn how to find them next. The fundamental theorem of algebra will be useful for constructing solutions to higher order linear ODEs with constant coefficients, and for discussing eigenvalues. ",
                                        "unit_id":"a00395975ef44e5083c3e0e1991295e1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f7bebcf1c4bf469b837623209da1eaba",
                                "vertical_name":"5. Complex roots of polynomials"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polar form",
                                            "Original position",
                                            "Fundamental theorem",
                                            "Satisfy",
                                            "Number",
                                            "Equation"
                                        ],
                                        "data":" Example 6.1&emsp;&emsp; What are the complex solutions to z5=&minus;32? Solution: Whenever we want to find roots, we write the equation in polar form z=rei&theta; (r&gt;0): (rei&theta;)5 = 32ei&pi; r5ei(5&theta;) = 32ei&pi; The modulus or absolute value of the roots must satisfy the equation r5=32. The angles must satisfy 5&theta;=&pi;+2&pi;k for some integer k. Thus r=2 and &theta;=&pi;+2&pi;k5 for some integer k. In other words, z=2ei(&pi;+2&pi;k)/5 for some integer k. These are numbers on a circle of radius 2; to get from one to the next (increasing k by 1), rotate by 2&pi;/5. Increasing k five times brings the number back to its original position. So it's enough to take k=0,1,2,3,4. Answer: 2ei(&pi;/5),2ei(3&pi;/5),2ei(5&pi;/5),2ei(7&pi;/5),2ei(9&pi;/5). Remark 6.2&emsp;&emsp; The fundamental theorem of algebra predicts that the polynomial z5+32 has 5 roots when counted with multiplicity. We found 5 roots, so each must have multiplicity 1. ",
                                        "unit_id":"ef5f2f7e70194540a43c3524628ea68d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"eb0e40ed11b8493bb1c6784844ccf28d",
                                "vertical_name":"6. Finding roots"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Positive real axis",
                                            "Unit circle",
                                            "Complex number",
                                            "Complex plane",
                                            "Nth roots",
                                            "Root",
                                            "Modulus"
                                        ],
                                        "data":" The mathlet below allows you to visualize a complex number and its roots in the complex plane. Observe the following: If a complex number z has modulus |z|=1, then its nth roots also have modulus |z1/n|=1; if |z|&gt;1, then |z1/n|&gt;1; if |z|&lt;1, then |z1/n|&lt;1. If a complex number z has modulus greater than 1, then the roots lie on a circle closer to the unit circle than z. If a complex number z has modulus less than 1, then the roots lie on a circle closer to the unit circle than z. Place the complex number z on the positive real axis. For what values n does z have a positive real root? Place the complex number z on the negative real axis. For what values n does z have a negative real root? ",
                                        "unit_id":"3ac20b5f2adb4ea6abf87f7dc675bef4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ec5d6b18a982483ca00d16835f4d1aa5",
                                "vertical_name":"7. Complex roots activity"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Complex plane",
                                            "Complex domain",
                                            "Exponential law",
                                            "Nth roots",
                                            "Odd number",
                                            "Unit circle",
                                            "Lie",
                                            "Multiply",
                                            "Number",
                                            "Circle",
                                            "Write",
                                            "Calculate",
                                            "Zeta",
                                            "Geometrically",
                                            "Root"
                                        ],
                                        "data":" So the basic problem is to calculate the nth roots of 1. Now in the real domain, of course, the answer is sometimes there's only one of these-- 1 itself. And sometimes there are two, depending on whether n is an even number or an odd number. But in the complex domain there are always n answers-- as complex numbers. 1 Always has n, nth roots. Now where are they? Well, geometrically, it's easy to see where they are. Here's the unit circle. Here's the unit circle. Oh-- one of the roots is right here at 1. Because 1 is the-- yeah. Now where are the others? Well, do you see that if I place-- let's take n equal 5, because that's a nice dramatic number. If I place these at five equally spaced points around the unit circle-- so in other words, this angle is alpha. Alpha should be the angle. What would be the expression for that? If there are five such equally spaced, it would be 1/5 of all the way around the circle. All the way around the circle is 2 pi. So it will be 1/5 of 2 pi in radians. Now it's geometrically clear that those are the 5 5th roots. Because how do I multiply complex numbers? I multiply the moduli. Well, they all have moduli 1. So if I take this guy, let's call that complex number-- oh, I hate to give you that. They're always giving Greek notation. Well, all right. Why not torture you? Zeta-- at least you'll learn how to make a zeta in this period-- small zeta. So that's zeta. There's our fifth root of unity. It's the first one that occurs on the circle that isn't the trivial one-- 1. Now I want-- do you see that how would I calculate zeta to the 5th? Well, if I write zeta in polar notation, what will it be? The modulus will be 1, and therefore, it will be simply-- the r will be 1 for it. Because its length is 1. Its modulus is 1. What's up here? i times that angle. And that angle is 2 pi over 5. So there's-- just geometrically, I see where zeta is. And if I translate that geometry into the e to i theta form for the formula, I see that it must be that number. Now, let's say somebody gives you that number and says, hey. Is this a 5th root of 1? I forbid you to draw any pictures. What would you do? You, say, well, I'll raise it to the 5th power. What's zeta to the 5th power? Well, it's e to the i, 2 pi 5. And now if I think of raising that to the 5th power, by the exponential law, that's the same thing as putting a 5 in front of the exponent. So this times 5-- now what's that? That's e to the i times 2 pi. And what's that? Well, it's the angle-- if the angle is 2 pi-- if the angle is 2 pi, I've gone all the way around the circle and come back here again. I've got the number 1. So this is 1. Since the angle-- the argument 2 pi is the same-- is the same as an angle. It's the same as the-- well-- let's not write it that way. That's not-- I have to-- that's-- bad. No. It's wrong. It's just wrong-- since 2 pi and 0 are the same angle. So I could replace this by 0. The same method shows that the nth roots of unity (the solutions to zn=1) are the numbers ei(2&pi;kn) for k=0,1,2,&hellip;,n&minus;1. Taking k=1 gives the number &zeta;:=e2&pi;i/n. In terms of &zeta;, the complete list of nth roots of unity is 1,&zeta;,&zeta;2,&hellip;,&zeta;n&minus;1 (after that they start to repeat: &zeta;n=1). This shows there are n complex n-th roots of unity. Geometrically, they all lie on the unit circle in the complex plane. Each root has the form ei&theta;, which has absolute value 1. The roots are evenly spaced around the unit circle, starting with the root z=1, and the angle between two consecutive roots is 2&pi;/n. These facts are illustrated for the case n=6 in the figure below. Figure : The six solutions to the equation z6=1 lie on a unit circle in the complex plane. ",
                                        "unit_id":"1ffdf288cf064c58af89f649fa4ca1f3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0d233c3f1ddb47298743f7f2d6514991",
                                "vertical_name":"8. Roots of unity"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex conjugate",
                                            "Polar angle",
                                            "Cube roots",
                                            "Quadratic equation",
                                            "Polar form",
                                            "Unit circle",
                                            "Quadratic formula",
                                            "Cube root",
                                            "Fourth root",
                                            "Ei",
                                            "Quadratic",
                                            "Omega",
                                            "Root",
                                            "Worked"
                                        ],
                                        "data":" 9. Worked ExamplesExample 9.1&emsp;&emsp; Find in Cartesian form all values of 13 Worked Solution The cube roots of 1 are 1,&omega;, and &omega;2, where &omega; = e2&pi;i/3=cos(2&pi;/3)+isin(2&pi;/3)= &minus;12+i32 &omega;2 = e&minus;2&pi;i/3=cos(&minus;2&pi;/3)+isin(&minus;2&pi;/3)= &minus;12&minus;i32. The greek letter &omega; (&ldquo;omega\") is traditionally used for this cube root. Note that for the polar angle of &omega;2 we used &minus;2&pi;/3 rather than the equivalent angle 4&pi;/3, in order to take advantage of the identities cos(&minus;x)=cos(x)sin(&minus;x)=&minus;sin(x). Note that &omega;2=&omega;&macr;. Another way to do this problem would be to draw the position of &omega;2 and &omega; on the unit circle and use geometry to figure out their coordinates. Hide Example 9.2&emsp;&emsp; Find all values of i4. Worked Solution In polar form, i=ei&pi;/2. Therefore the fourth roots are i4=ei(&pi;/8+2&pi;k/4). You might notice that ei(&pi;/8+2&pi;k/4) = ei&pi;/8ei2&pi;k/4 where ei2&pi;k/4 are the 4th roots of unity 14=1,i,&minus;1,&minus;i. Therefore one fourth root of i is z0=ei&pi;/8, and all of the fourth roots of i are given by i4 = z0,iz0,&minus;z0,&minus;iz0. Notice that multiplying z0=ei&pi;/8 by i is the same as a 90 degree rotation of z0. Hide Example 9.3&emsp;&emsp; Solve the equation x6&minus;2x3+2=0. Worked Solution Treating this as a quadratic equation in x3, we solve the quadratic by using the quadratic formula; the two roots are 1+i and 1&minus;i (check this!), so the roots of the original equation satisfy either x3=1+i or x3=1&minus;i. This reduces the problem to finding the cube roots of the two complex numbers 1&plusmn;i. We start with 1+i and the first step is to write it in polar form: 1+i=2e&pi;i/4. (1+i)1/3 = (21/2ei&pi;/4)1/3 = 21/6ei(&pi;/4+2&pi;k)/3 = 21/6ei(1+8k)&pi;/12 There are 3 choices for k to find all 3 cube roots 21/6ei&pi;/12,21/6ei9&pi;/12,21/6e&minus;i7&pi;/12. Note that 1&minus;i is the complex conjugate of 1+i. Since we started out with a real equation, all roots must occur as complex conjugate pairs. Therefore the cube roots of 1&minus;i must be the complex conjugates of the cube roots of 1+i: 21/6e&minus;i&pi;/12,21/6e&minus;i9&pi;/12,21/6ei7&pi;/12. You may notice that 21/6ei(&pi;/4+2&pi;k)/3 = 21/6ei&pi;/12ei2&pi;k/3 where ei2&pi;k/3=&omega; where &omega; is one of the cube roots of unity, &omega;3=1. The cube roots can also be described as z1,z1&omega;,z1&omega;2 and z2,z2&omega;,z2&omega;2 where z1=21/6e&pi;i/12,z2=z1&macr;=21/6e&minus;i&pi;i/12, and &omega;=ei2&pi;/3. ",
                                        "unit_id":"b65b6cdd4b324717b512fc5b56ead5bc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a2b6e5cbc0474c009d510e510bdfa024",
                                "vertical_name":"9. Worked Examples"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In part (a) of the video above, Lydia correctly pointed out that the polar angle &theta; of &minus;2+3i lies in the second quadrant, but incorrectly stated that &theta;=arctan(&minus;3/2). The correct formula is &theta;=arctan(&minus;3/2)+&pi;. The same mistake was repeated in part (d). ",
                                        "unit_id":"62d3649cafd84d039b19c94c928e6343",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bf3181264a97424ba8062f87f7aa4758",
                                "vertical_name":"10. Review and worked examples"
                            }
                        ]
                    },
                    {
                        "sequential_id":"22ccad59e3dc48e8ba84fd49485f193f",
                        "sequential_name":"Recitation 4",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex exponential",
                                            "Complex number",
                                            "Java applet",
                                            "Cube roots",
                                            "Discussion forum",
                                            "Real part",
                                            "Complex",
                                            "Circle",
                                            "Forum",
                                            "Real",
                                            "Dt",
                                            "Heading",
                                            "Encourage",
                                            "Share"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. To encourage collaboration, we give only two attempts per answer box. 18.03 Recitation 4 Complex exponential 1. (a) Suppose z n = 1. What must |z| be? What are the possible values of arg(z)? (b) Do the examples n = 4 and n = 6: that is, find the fourth and the sixth roots of 1. (c) Find the cube roots of i. 2. Trajectories of e (a+bi)t can vary a lot, depending upon the value of the complex number a+bi. The &ldquo;Complex Exponential&rdquo; Mathlet shows this clearly. Invoke this java applet if you can. You can use it to gain insight into the following questions. (a) Sketch the trajectory of the complex-valued function e (&minus;1+2&pi;i)t , and the graphs of its real and imaginary parts. For each of the following shapes, decide on all the values of a + bi for which the trajectory of e (a+bi)t has this shape. (b) A circle centered at 0, traversed counterclockwise. What circles are possible? (c) A circle centered at 0, traversed clockwise. (d) A ray (straight half line) heading away from the origin. (e) A curve heading to zero as t &rarr; &infin;. 3. Since you differentiate a vector-valued function coordinatewise, you should also integrate a vector-valued function coordinatewise. (a) What is R e rt dt? (Here r is a constant, perhaps complex.) (b) Integrals like Z e 2t cos(3t) dt are memorably annoying to compute. Do this integral by writing e 2t cos(3t) as the real part of a complex exponential and invoking (a). ",
                                        "unit_id":"099ff64b695749139243634cfc7d2789",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1d170d05733a4d0185d0c622833cc30a",
                                "vertical_name":"1. Complex exponential"
                            }
                        ]
                    },
                    {
                        "sequential_id":"b8d02f906dfa45caa3f750e28daf683d",
                        "sequential_name":"5 Homogeneous 2nd Order Linear ODEs with Constant Coefficients",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Constant coefficients",
                                            "Characteristic polynomial",
                                            "Superposition principle",
                                            "General",
                                            "Find"
                                        ],
                                        "data":" Objectives Model spring-mass-dashpot systems using 2nd order homogeneous linear ODEs. Apply the superposition principle to find solutions to the unforced spring-mass-dashpot using 2nd order homogeneous linear ODEs. Use the characteristic polynomial to find the exponential solutions for 2nd order homogeneous linear ODEs with constant coefficients . Find the general solution and the general real solution to 2nd order linear homogeneous constant coefficient DEs with distinct characteristic roots . ",
                                        "unit_id":"6efdeef835d04243b40f5ed295c0b9d5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cb9848e071874e0db30cec07c2c64b46",
                                "vertical_name":"1. Second order homogeneous linear ODEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Spring mass system",
                                            "Mass"
                                        ],
                                        "data":" Recall the spring mass system from Lecture 1: Using Newton's second law, we found a second order linear homogeneous DE that describes the displacement x of the mass: mx&uml;+kx = 0. Let us now look at the solutions to this equation. For simplicity, let m=k=1, so the equation becomes x&uml;+x = 0. We will use this example to discuss some properties of the solutions before diving into the technique of solving this kind of equation. Question 2.1&emsp;&emsp; From your experience with calculus, what functions satisfy x&uml;=&minus;x? Answer: The trigonometric functions cos(t) and sin(t) both have the property x&uml;=&minus;x: cos(t)&prime;&prime; = &minus;cos(t) sin(t)&prime;&prime; = &minus;sin(t). ",
                                        "unit_id":"5a8f1993c4c744419c971957d6701556",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2d7b65414f1e4fb29ffa90598b620d6f",
                                "vertical_name":"2. Modeling"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear combinations",
                                            "Linear combination",
                                            "Vector space",
                                            "Superposition principle",
                                            "Superposition",
                                            " "
                                        ],
                                        "data":" The general principle behind the problem you just solved is that any linear combination of cosine and sine x(t)=c1cos(t)+c2sin(t)(c1,c2any real numbers), is a solution to x&uml;+x=0. This is a consequence of the superposition principle for linear homogeneous differential equations. Superposition for linear homogeneous differential equations: The solutions to a homogeneous linear second order ODE, p2(t)y&uml;+p1(t)y\u02d9+p0(t)y=0, or more generally, the solutions to a linear homogeneous order n equation pn(t)y(n)+pn&minus;1(t)y(n&minus;1)+\u22ef+p0(t)y=0, have the following properties: The zero function 0 is a solution. Multiplying any one solution by a scalar gives another solution. Adding any two solutions gives another solution. In summary, all linear combinations of homogeneous solutions are homogeneous solutions. This is why homogeneous linear ODEs are so nice. If you know some solutions, you can form linear combinations to build new solutions, with no extra work. We will use it over and over again in applications throughout the course. Later on, we'll see that the list of properties above means that the collection of all homogeneous solutions forms what is known as a vector space. ",
                                        "unit_id":"a0ff6a458a024a868be7fb90889cc183",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2d36cd48733f41f59dc6290fe75b80b1",
                                "vertical_name":"3. Superposition for homogeneous solutions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Spring mass system",
                                            "Linearly independent",
                                            "Linear independence",
                                            "Initial conditions",
                                            "Initial condition",
                                            "Order",
                                            "De",
                                            "Family",
                                            "Case",
                                            "Constant",
                                            "Basis"
                                        ],
                                        "data":" Let us get back to our spring mass system, modelled by the DE x&uml;+x=0. We have found that x(t) = c1cos(t)+c2sin(t) is a solution for any values of the two parameters c1 and c2. It turns out that this 2-parameter family of solutions comprise all the solutions to the given second order DE. All solutions to a second order linear homogeneous DE: The collection of all solutions to any second order linear homogeneous DE is x(t) = c1x1(t)+c2x2(t), where x1(t) and x2(t) are solutions to the second order DE, and the two parameters c1 and c2 can take any constant values. This two-parameter family of solutions is also called the general solution to the second order linear DE. Important: x1(t) and x2(t) must be linearly independent! This means x1 and x2 cannot be a constant multiple of the other. In particular, this means neither x1 nor x2 can be zero. In this case, we say that x1 and x2 form a basis for the set of all homogeneous solutions. The definition of linear independence of more than two elements is more complicated, and we will come back to it in a later lecture. Remark 4.1&emsp;&emsp; This means that the problem of solving a second order linear ODE is reduced to finding only two linearly independent solutions, since all others can be built by taking linear combinations of these. Remark 4.2&emsp;&emsp; There are two parameters in the general solution to a second order DE roughly because to solve a second order DE, in one way or another (and it may be concealed), we need to integrate twice, and with each integration comes a constant of integration. Later on, we will find that in general, the number of arbitrary constants in the general solution corresponds to the order of a linear ODE. Initial conditions: Every second-order linear ODE has a 2-parameter family of solutions. To nail down a specific solution, we need to specify two pieces of data for the solution. It is a beautiful fact that this data can be provided always by two initial conditions at the same starting time, such as y(0) and y\u02d9(0). The starting time could also be some number a other than 0. Once we have found a basis x1 and x2 for the solutions, the initial conditions are satisfied by choosing the values for the two parameters c1 and c2. Compare this with what we have learned for first order linear equations. Using separation of variables (in the homogeneous case) and variation of parameters (in the inhomogeneous case), we showed that every first-order linear ODE has a 1-parameter family of solutions. To nail down a specific solution in this family, we need only one initial condition, such as y(0). ",
                                        "unit_id":"12dd1c26e35941f2be7a77e6058ae8e6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2705cfaf64a3472288ec49de3ef055d1",
                                "vertical_name":"4. All solutions to a second order linear homogeneous ODE"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear functions",
                                            "Standard form",
                                            "Independent variable",
                                            "Final result",
                                            "Damping constant",
                                            "Constant coefficients",
                                            "Everyday life",
                                            "Dependent variable",
                                            "Differential equation",
                                            "Spring constant",
                                            "Force",
                                            "Piston",
                                            "System",
                                            "Resists",
                                            "Door",
                                            "Car",
                                            "Equation",
                                            "Hooke",
                                            "Back",
                                            "Moving",
                                            "Dashpot",
                                            "Spring",
                                            "Pushing",
                                            "Thing",
                                            "Attached",
                                            "Called",
                                            "Position",
                                            "Mass"
                                        ],
                                        "data":" So here's my system. That's some fixed thing. Here's a little spring. And there's a little car on a track here, I guess. So there's the mass, some mass in the little car. And the motion is damped by what's called a dashpot. A dashpot is like the sort of thing that-- you see them in everyday life as door closers. They're the things up above that you never notice that prevent the door from slamming shut. So if you take one apart, it looks something like this. So that's the dashpot. It's a chamber with a piston. This is a piston moving in and out. And the air-- compressing the air and releasing it is what damps the motion of the thing. So this is a dashpot it's usually called. Here's our mass in that little truck. And here is the spring. And then the equation, which governs it, is, let's call this x. I'm already going to change the dependent variable from y to x, but that's just for the sake of example. And because the track is horizontal, it seems more natural to call it x. There's some equilibrium position somewhere. Let's say here. That's the position at which the mass wants to be if the spring is not pulling on it or pushing on it, and the dashpot is happy. I guess we better have a longer dashpot here. So this is the equilibrium position where nothing's happening. When you depart from that position, then the spring-- if you go that way, the spring tries to pull the mass back. If it goes on this side, the spring tries to push the mass away. The dashpot, meanwhile, is doing its thing. And so the force is mx double prime. That's by Newton's law, the force. Comes from where? Well, there's the spring pushing and pulling on it. That force is opposed. If x gets to be beyond zero, then the spring tries to pull it back. If it gets to the left of zero, if x gets to be negative, then that spring force is pushing it this way, wants to get rid of it, get rid of the mass. So it should be minus kx. And this is from the spring. The fact that it's proportional to the amount by which x varies, that's called Hooke's law. If-- never mind that. This is a law. That's a law, Newton's law. OK, Newton, Hooke, with an E. And the dashpot damping is proportional to the velocity. It's not doing anything if the mass is not moving, even if it's stretched way out of its equilibrium position. So it resists the velocity. If the thing is trying to go that way, that dashpot resists it. If it's trying to go this way, the dashpot resists that too. It's always opposed to the velocity. And so this is a dashpot damping. I don't know whose law this is. So it's the force coming from the dashpot. And when you write this out, the final result, therefore, is that it's mx double prime plus cx prime-- it's important to see where the various terms are-- plus kx equals 0. And now, that's still not in standard form. To put it in standard form, you must divide through by the mass. And it will now read like this-- plus k divided by m times x equals 0. And that's the equation governing the motion of the spring. Problem 5.1&emsp;&emsp; A mass that sits on a cart is attached to a spring attached to a wall. The mass is also attached to a dashpot, a damping device. (A dashpot could be a cylinder filled with oil that a piston moves through. Door dampers and car shock absorbers often actually work this way.) Find the differential equation for the position of the mass. Solution: Define variables with units: t time (seconds s) x position of the mass (meters m), with x=0 being where the spring exerts no force m the mass (kg) Fspring force exerted by the spring on the mass (N) Fdashpot force exerted by the dashpot on the mass (N) F total force on the mass (N). The independent variable is t; the position x and the forces are functions of the independent variable t. Physics tells us that Fspring is a function of the position x, and has the opposite sign of x; Fdashpot is a function of the velocity x\u02d9, and again of opposite sign of x\u02d9. To simplify, approximate these by linear functions (probably OK if x and x\u02d9 are small): Fspring=&minus;kxHooke's law,Fdashpot=&minus;bx\u02d9, where k is the spring constant (in units N/m) and b is the damping constant (in units Ns/m); here k,b&gt;0. Substituting this and Newton's second law F=mx&uml; into F =Fspring+Fdashpot gives mx&uml; =&minus;kx&minus;bx\u02d9, a second order linear ODE, which we would usually write as mx&uml;+bx\u02d9+kx=0. This is a second order linear homogeneous ODE with constant coefficients. In the input/system/response language: input signal: 0 (no external force on the mass) system: spring, mass, and dashpot system response: x(t). Remark 5.2&emsp;&emsp; We have assumed that the mass m, the damping constant b, and the spring constant k do not vary with time. One can imagine this model still applies with m, b and k being functions of time, but we will not solve such DEs in this course. (There can also be an external force acting directly on the mass, but we will leave that analysis for later.) Remark 5.3&emsp;&emsp; Note we can divide by m to get standard linear form: &thinsp; x&uml;+bmx\u02d9+kmx=0. &thinsp; But this is not as common for this equation. The differential equation that arises in this model is fundamental for all oscillatory behavior. ",
                                        "unit_id":"9c4f1a53665849028334164dcfa27425",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e1a4d818291245d4b8d2a859d2cdb328",
                                "vertical_name":"5. Modeling: a spring-mass-dashpot system"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Spring mass system",
                                            "Quadratic equations",
                                            "Double prime",
                                            "High school",
                                            "Extra power",
                                            "Positive number",
                                            "Dependent variable",
                                            "Characteristic polynomial",
                                            "Independent variable",
                                            "Constant coefficients",
                                            "Characteristic equation",
                                            "Ll",
                                            "Solve",
                                            "Real",
                                            "Polynomial",
                                            "System",
                                            "Differentiate",
                                            "Constant",
                                            "Independent",
                                            "Equation",
                                            "Find",
                                            "Term",
                                            "Rt"
                                        ],
                                        "data":" OK. Now what I'd like to talk about is the solution. What is it I have to do to solve the equation? So to solve that equation that I outlined in orange on the board, the ODE, our task is to find two solutions. Now, don't make it too trivial. There is a condition that solutions should be independent. All that means is that y2 should not be a constant multiple of y1. I mean, if you've got y1, then 2 times y1 is not an acceptable value for this, because as you can see, you've really only got one there. You're not going to be able to make up a two parameter family. So the solutions have to be independent, which means, to repeat, that neither should be a constant multiple of the other. They should look different. And that's an adequate explanation. OK. Now, what's the basic method for finding those solutions? Well, it's what we're going to use all term long, essentially, studying equations of this type, even systems of this type with constant coefficients. The basic method is to try y equals an exponential. Now, the only way you can fiddle with an exponential is in the constant that you put up on top. So we're going to try y equals e to the rt. So I'll use t as the -- notice you can't tell from that what I'm using as the independent variable, but this tells you I'm using t. And I'm switching back to using y as the dependent variable. So t is the independent variable. Why do I do that? The answer is because somebody thought of doing it, probably Euler. And it's been a tradition that's handed down for the last 300 or 400 years. Some things we just know. All right. So now, if I do that, as you learned from the exam, it's very easy to differentiate exponentials. That's why people love them. It's also very easy to integrate exponentials. And half of you integrated it instead of differentiating. So we'll try this and see if we can pick r so that it's a solution. OK. Well, I'll plug in then. So I'll plug in-- substitute in other words. And what do we get? Well, for y double prime, I get r squared e to the rt. That's y double prime, because each time you differentiate it, you put an extra power of r out in front, but otherwise, do nothing. The next term will be r times-- sorry, I forgot the constant. Capital A times r e to the rt. And then there's the last term, B times y itself, which is B e to the rt. And that's supposed to be equal to 0. So I have to choose r so that this becomes equal to 0. Now you see, the e to the rt occurs as a factor in every term. And the e to the rt is never 0. And therefore, you can divide it out, because it's always a positive number regardless of the value of t. So I can cancel that from each term. And what I'm left with is the equation r squared plus Ar plus B equals 0. We're trying to find values of r that satisfy that equation. And that, dear hearts, is why you learned to solve quadratic equations in high school. In order that, at this moment, you would be now ready to find how spring mass systems behave when they are damped. This is call the characteristic equation. The characteristic equation of the ODE, or of the system, of the spring mass system which it's modeling. The characteristic equation of the system. Question 6.1&emsp;&emsp; What are the solutions to mx&uml;+bx\u02d9+kx=0 where m, b, and k are real constants? Solution: Try x=ert, where r is a constant to be determined. Then x\u02d9=rert and x&uml;=r2ert, so the ODE becomes mr2ert+brert+kert =0 (mr2+br+k)ert =0. This holds as an equality of functions if and only if mr2+br+k =0. The polynomial p(r)=mr2+br+k is known as the characteristic polynomial of the given DE, and the equation p(r)=0 is the characteristic equation . As usual for quadratic equations, there are three scenarios of the roots depending on the the value of b2&minus;4km. In this lecture, we will discuss the general solution to the DE in the cases when the two roots are distinct, whether real or complex, and leave the case when the roots are repeated to a later lesson. ",
                                        "unit_id":"77ba57e69e9f4ab1800794c6e862805a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cf620db8aa214636bad2a699863920fb",
                                "vertical_name":"6. Characteristic polynomial"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Simultaneous linear equations",
                                            "High school",
                                            "Characteristic polynomial",
                                            "Quadratic formula",
                                            "God forbid",
                                            "Initial conditions",
                                            "Characteristic equation",
                                            "Damping constant",
                                            "Left side",
                                            "Spring constant",
                                            "Satisfy",
                                            "Push",
                                            "Initial",
                                            "Negative",
                                            "Immediately",
                                            "Curve",
                                            "Damping",
                                            "Specific",
                                            "Side",
                                            "Spring",
                                            "Notice",
                                            "Change",
                                            "Direction",
                                            "Numerical",
                                            "Left",
                                            "Ll",
                                            "Constant",
                                            "Real",
                                            "Equation",
                                            "Write",
                                            "Assume",
                                            "Case",
                                            "Put",
                                            "Substitute",
                                            "Mass"
                                        ],
                                        "data":" OK. Now, we solve it, but now from high school you know there are several cases. And each of those cases corresponds to a different behavior. And the cases depend upon what the roots look like. The possibilities are the roots could be real and distinct. That's the easiest case to handle. The roots might be a pair of complex conjugate numbers. That's harder to handle, but we're ready to do it. And the third case, which is the one most in your problem set, is the most puzzling, when the roots are real and equal. And I'm going to talk about those three cases in that order. So the first case is the roots are real and unequal. If I tell you they're unequal, and I'll put down real to make that clear. Well, that is, by far, the simplest case, because immediately, one sees we have two roots. They're different. And therefore, we get our two solutions immediately. So the solutions are-- the general solution to the equation, I write down without further ado as y equals c_1 e to the r_1 t plus c_2 e to the r_2 t. There's our solution. Now, because that was so easy and we didn't have to do any work, I'd like to expand this case a little bit by using it as an example of how you put in the initial conditions, how to put in the c. So let me work a specific numerical example since we're not going to try to do this theoretically until next Wednesday. Let's just do a numerical example. So suppose I take the constants to be-- the damping constant to be 4, and the spring constant-- I'll take the mass to be 1-- and the spring constant to be 3. So there's more damping here, damping force here. You can't really talk that way, since the units are different. But this number is bigger than that one. That seems clear at any rate. OK. Now, what's the characteristic equation? Look, now watch. Please do what I do. I've found in the past, even by the middle of the term, there are still students who feel that they must substitute y equals e to the rt and go through that whole little derivation to find it. You don't do that. It's a waste of time. I did it that you might not ever have to do it again. OK? Immediately write down the characteristic equation. That's not very hard. r squared plus 4r plus 3 equals 0. And if you can write down its roots immediately, splendid. But let's not assume that level of competence. So it's r plus 3 times r plus 1 equals 0. OK. You factor it. This being 18.03, a lot of the times the roots will be integers. When they're not, God forbid, you'll have to use the quadratic formula. OK. But here, the roots were integers. It's, after all, only the first example. So the solution, the general solution, is y equals c_1 e to the negative-- notice the root is minus 3 and minus 1-- minus 3t plus c_2 e to the negative t. Now, suppose it's an initial value problem, so I gave you initial conditions. Suppose the initial conditions were that y of 0 were 1. So at the start, the mass has been moved over to the position 1 here. Well, we expect it then to start doing that. But this is fairly heavily damped. This is heavily damped. I'm going to assume that the mass starts at rest. So the spring is distended. The mass is over here, but there's no motion at time 0 this way or that way. In other words, I'm not pushing it. I'm just releasing it and letting it do its thing after that. OK. So y prime of 0 I'll assume is 0. So it starts at rest, but in the extended position one unit to the right of the equilibrium position. Now, all you have to do is use these two conditions. Notice I have to have two conditions because there are two constants that I have to find the value of. All right. So let's substitute a-- well, we're going to calculate the derivatives, so why don't we do that right away? So this is minus 3c_1 e to the minus 3t minus c_2 e to the negative t. And now, if I substitute in at 0, when t equals 0, what do I get? Well, the first equation, the left says that y of 0 should be 1. And the right says this is 1, that's 1, so it's c_1 plus c_2. That's the result of substituting t equals 0. How about substituting-- what should I substitute in the second equation? Well, y prime of 0 is 0, so for the second equation, when I put in t equals 0, the left side is 0 according to that initial value. And the right side is negative 3c_1 minus c_2. You see what you end up with, therefore, is a pair of simultaneous linear equations. And this is why you learn to study linear pairs of simultaneous linear equations in high school. These are among the most important-- solving problems of this type are among the most important applications of that kind of algebra and this kind of algebra. All right. What's the answer, finally? Well, if I add the two of them, I get minus 2c_1 equals 1. So c_1 is equal to minus 1/2. And if c_1 is minus 1/2, then c_2 is minus 3c_1, so c_2 is 3/2. The final question is, what does that look like as a solution? Well, in general, these combinations of two exponentials aren't very easy to plot by yourself. That's one of the reasons you're being given this little visual which plots them for you. All you have to do is, as you'll see, set the damping constant, set the constants, set the initial conditions, and by magic, the curve appears on the screen. And if you change either of the constants, the curve will change nicely right along with it. So the solution is y equals minus 1/2 e the minus 3t plus 3/2 e to the negative t. How does it look? Well, I don't expect you to be able to plot that by yourself, but you can at least get started. It does have to satisfy the initial conditions. That means it should start at 1 and be-- it's starting slope is 0. So it starts like that. These are both declining exponentials. This declines very rapidly. This somewhat more slowly. It does something like that. If this term were a lot more negative-- I mean, that's the way that particular solution looks. How might other solutions look? I'll draw a few other possibilities. If the initial term-- if for example, the initial slope were quite negative, well, then it would have to start like this. Now, just your experience of physics or of the real world suggests that if I start the thing at 1 but give it a strongly negative push, it's going to go beyond the equilibrium position and then come back again. But because the damping is big, it's not going to be able to get through that equilibrium position a second time. It's going to look something like that. Or if I push it in that direction, the positive direction, then it starts off with a positive slope, but it loses its energy because the spring is pulling. And it does something like that. So in other words, it might go down. Could it cross the equilibrium position, come back again and do that? No, that it cannot do. I was considering giving you a problem to prove that, but I thought I-- I got tired of making out the problem set and decided I tortured you enough already, as you'll see. Example 7.1&emsp;&emsp; What is the general solution to y&uml;+5y\u02d9+6y=0? Solution: The function y=ert is a solution to the DE exactly when r is a roots of the characteristic polynomial. Since the characteristic polynomial of the DE is p(r) = r2+5r+6=(r+2)(r+3), the two functions e&minus;2t and e&minus;3t are solutions. Therefore, the general solution to the DE is c1e&minus;2t+c2e&minus;3t, where c1 and c2 are arbitrary constants. Example 7.2&emsp;&emsp; What is the specific solution to the DE above that also satisfies the initial conditions y(0)=0; y\u02d9(0)=1? Solution: We use the two initial conditions to determine the two parameters in the general solution y(t)=c1e&minus;2t+c2e&minus;3t. y(0) = 0 \u27f9 c1+c2 = 0 y\u02d9(0) = 1 \u27f9 &minus;2c1&minus;3c2 = 1 Solving these two equations simultaneously, we have c1=1, and c2=&minus;1. So the solution that satisfies the initial conditions is y(t)=e&minus;2t&minus;e&minus;3t. Here is a sketch of the graph of the solution: Graph of y(t)=e&minus;2t&minus;e&minus;3t Here are the graphs of solutions to the DE above that satisfy other initial conditions: Graphs of solutions to y&uml;+5y\u02d9+6y=0 and different initial conditions. The initial positions y(0) are different for the different curves. Blue curves satisfy y\u02d9(0)&gt;0; green curves satisfy y\u02d9(0)&lt;0; orange curve satisfy y\u02d9=0. ",
                                        "unit_id":"ec2ffd9cecd946cb932864d660293be3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7a047172aeae445485d0355f8c5275ca",
                                "vertical_name":"7. Two distinct real roots"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Linear combinations",
                                            "Double prime",
                                            "Real numbers",
                                            "Independent variable",
                                            "Characteristic polynomial",
                                            "Imaginary part",
                                            "Minus sign",
                                            "Real world",
                                            "Real functions",
                                            "Complex numbers",
                                            "Real part",
                                            "Complex conjugate",
                                            "Complex exponentials",
                                            "Damping constant",
                                            "Constant coefficients",
                                            "Spring constant",
                                            "Real number",
                                            "Real function",
                                            "Complex function",
                                            "Linear",
                                            "Cosine",
                                            "Arbitrary",
                                            "Reasoning",
                                            "Part",
                                            "Minus",
                                            "Real",
                                            "De",
                                            "Number",
                                            "Negative",
                                            "Equation",
                                            "Bi",
                                            "Bt",
                                            "Sine",
                                            "Complex",
                                            "Function",
                                            "General",
                                            "Constant",
                                            " ",
                                            "Iv",
                                            "Ib",
                                            "Give"
                                        ],
                                        "data":" The roots are complex, and this is why. Let's call the roots-- In that case, we know that the roots are of the form a plus or minus bi. There are two roots, and they're complex conjugate. All right. Let's take one of them. What does it correspond to in terms of the exponential? Well, remember, the function of the r was-- it's this r when we tried our exponential solution. So formally, this means we get a complex solution. The complex solution y equals e to this-- let's use one of them. Let's say a plus bi times t. The question is, what do we do with that? We're not really interested-- I don't know what a complex solution to that thing means. It doesn't have any meaning. What I want to know is how y behaves or how x behaves in that picture. And that better be a real function, because otherwise, I don't know what to do with it. So we're looking for two real functions, the y1 and the y2. But in fact, what we've got is one complex function. All right. Now, a theorem to the rescue. This I'm not going to save for Wednesday because it's so simple. So the theorem is that if you have a complex solution, u plus iv-- so each of these is a function of time. u plus iv is a complex solution to a real differential equation with constant coefficients. Well, it doesn't have to constant-- it has to be linear. Let me just write it out, to y double prime plus Ay prime plus By equals 0. Suppose you've got a complex solution to that equation. These are understood to be real numbers. They're the constants, the damping constant and the spring constant. Then conclusion is that u and v are real solutions. In other words, having found a complex solution, all you have to do is take its real and imaginary parts, and voila, you've got your two solutions you were looking for for the original equation. Now, that might seem like magic, but in fact, it's easy. It's so easy it's the sort of theorem I can spend one minute proving for you now. What's the reason for it? Well, the main thing I want you to get out of this argument is to see that it absolutely depends upon these coefficients being real. You have to have a real differential equation for this to be true. Otherwise, it's certainly not. So the proof is-- what does it mean to be a solution? It means when you plug in A u plus iv prime plus B times u plus iv, what am I supposed to get? Zero. Well now, separate these into the real and imaginary parts. What does it say? It says u double prime plus Au prime plus Bu. That's the real part of this expression when I expand it out. And I've got an imaginary part too, which all has the coefficient i. So from here I get v double prime plus i times Av prime plus i times Bv. So this is the imaginary part. Now, here I have something with the real part plus the imaginary part-- i times the imaginary part-- is 0. Well, the only way that can happen is if the real part is 0 and the imaginary part is separately 0. So the conclusion is that, therefore, this part must be 0, and therefore, this part must be 0, because the two of them together make the complex number 0 plus 0i. Now, what does it mean for the real part to be 0? It means that u is a solution. This, the imaginary part 0, means v is a solution. And therefore, just what I said, u and v are solutions to the real equation. Where did I use the fact that A and B were real numbers and not complex numbers? In knowing that this is the real part, I had to know that A was a real number. If A were something like 1 plus i, I'd be screwed. I mean, because then I couldn't say this was the real part any more. So saying that's the real part and this is the imaginary part, I was using the fact that these two numbers, constants, were real constants. Very important. Well, so then how do I solve my-- so what is the Case 2 solution? Well, what are the real and imaginary parts of a plus b i t? Well, y equals e to the a t plus i b t. OK. You've had experience so you know how to do this now. That's e to the a t times-- well, the real part is-- let's write it this way. The real part is e to the a t times cosine bt. Notice how the a and b enter into the expression. That's the real part. And the imaginary part is e to the a t times the sine of bt. And therefore, the solution-- both of these must, therefore, be solutions to the equation. And therefore, the general solution to the ODE is y equals-- now, you've got to put in the arbitrary constants. It's a nice thing to do to factor out the e to the at. It makes it look a little better. And so the constants are c1 cosine bt and c2 sine bt. Case 2: Two distinct complex roots Example 8.1&emsp;&emsp; Suppose that the equation y&uml;+Ay\u02d9+By=0 where A,B are real, has characteristic roots a&plusmn;ib. Give the general real solution. Solution: Since the roots of characteristic polynomial are a&plusmn;ib, the two complex exponentials e(a+ib)t,e(a&minus;ib)t form a basis of the collection of all solutions. Now, because all the coefficients in the DE (and in the characteristic polynomial) are real, the real and imaginary parts of either exponential solution, Re(e(a+ib)t) = eatRe(e+ibt) = eatcos(bt) Im(e(a+ib)t) = eatIm(e+ibt) = eatsin(bt), are also solutions to the DE. (Check that yourselves!) These two solutions are real and linearly independents, and give the general real solution y(t) = c1eatcos(bt)+c2eatsin(bt) where c1 and c2 are arbitrary real numbers. Below are the graphs of the two functions eatcos(bt) and eatsin(bt) when a&lt;0: Graph of eatcos(bt) for a&lt;0 Graph of eatsin(bt) for a&lt;0 In the next lecture, we will study these in more detail. We all also find that the graphs of linear combinations of these look very similar. Why are the real and imaginary parts of a complex solution also solutions? If y(t)=u(t)+iv(t) is a solution to a second order homogenous linear DE with real coefficients: y&uml;+Ay\u02d9+By = 0whereA,Breal. Then plugging y into the equation, we have (u+iv)&uml;+A(u+iv)\u02d9+B(u+iv) = 0 \u27f9 (u&uml;+Au\u02d9+Bu)+i(v&uml;+Av\u02d9+Bv) = 0. Since the coefficients A and B are real, the real and imaginary parts of left hand side of this DE are respectively enclosed in the two brackets above, and therefore both u and v are solutions to the original DE. Note that it is crucial in this last step that all coefficients of the DE are real. Remark: The same reasoning would work even if A and B vary with the independent variable t. Also, analogous reasoning works for higher order linear homogeneous DEs with real coefficients. What is the problem? The complex roots, of course, there will be two roots. And they occur-- they're complex conjugates of each other, so they'll be of the form a plus or minus bi. Last time I showed you, I took the root r equals a plus bi, which leads to the solution-- the corresponding solution is a complex solution which is e to the a plus ib t. What we did was, the problem was to get real solutions out of that. We needed two real solutions. And the way I got them was by separating this into its real part and its imaginary part. And I proved a little theorem for you that said both of those give solutions. So the real part was e to the at times cosine bt. And the imaginary part was e to the at sine bt. And those were the two solutions. So here was y1. And the point was those, out of the complex solutions, we got real solutions. We have to have real solutions because we live in the real world. The equation is real. Its coefficients are real. They represent real quantities. That's the way the solutions, therefore, have to be. So the point is, these are now real solutions. These two guys, y1 and y2. Now, the first question almost everybody has, and I was pleased to see that at the end of the lecture, a few people came up and asked me, yeah well, you took a plus bi. But there was another root, a minus bi. You didn't use that one. That would give two more solutions, right? Of course, they didn't say that. They were too smart. They just said, what about that other root? Well, what about it? The reason I don't have to talk about the other root is because although it does give two solutions, it doesn't give two new ones. Maybe I could indicate that most clearly here, even though you won't be able to take notes, by just using colored chalk. Suppose instead of a plus bi, I used a minus bi. What would have changed? Well, this would now become minus here. Would this change? No, because e to the minus ib t is the cosine of minus bt, but that's the same as the cosine of bt. How about here? This would have become the sine of minus bt, but that's simply the negative of the sine of bt. So the only change would have been to put a minus sign there. Now, I don't care if I get y2 or negative y2, because what am I going to do with it? When I get it, I'm going to write y, the general solution, as c1y1 plus c2y2. So if I get negative y2, that just changes that arbitrary constant from c2 to minus c2, which is just as arbitrary a constant. So in other words, there's no reason to use the other root, because it doesn't give anything new. ",
                                        "unit_id":"dca5ac2af6e54211b0a63a139483ecad",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b6bdaab223cb48868a23a21dbed5366e",
                                "vertical_name":"8. Complex roots"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Physical system",
                                            "Characteristic polynomial",
                                            "Spring mass system",
                                            "Linearly independent",
                                            "Linear combinations",
                                            "Complex function",
                                            "Complex conjugate",
                                            "Real",
                                            "General",
                                            "Complex",
                                            "Im",
                                            "Formula",
                                            "Basis",
                                            "Function",
                                            "Conjugate",
                                            "Cost",
                                            "De"
                                        ],
                                        "data":" Let us now use the characteristic polynomial to solve the DE that we started with in this lecture, the one that models a spring-mass system with no dashpot: y&uml;+y=0. The characteristic polynomial is r2+1, which factors as (r&minus;i)(r+i). Its roots are i and &minus;i. Thus, the exponential solutions eit,e&minus;itform a basis for the collection of all solutions. Since the coefficients of the DE are real (the DE models a real life situation), the real and imaginary parts of eit (or equivalently of e&minus;it) Re(eit) = cos(t) Im(eit) = sin(t) are two real solutions to the DE. These are linearly independent and so cost,sintform {another} basis for the same collection of all solutions. The general real solution is all (real) linear combinations of these two real basis functions: y(t) = c1cost+c2sint,wherec1,c2&isin;R. This is the same as we have guessed from experience in the beginning, without using the characteristic polynomial. Question 9.1&emsp;&emsp; The general solution given by the exponential solutions eit and e&minus;it corresponding to the roots of the characteristic polynomial is y(t) = C1eit+C2e&minus;it. However, this is complex since e&plusmn;it are complex. Can the real solutions we found above, c1cost+c2sint, be obtained from this general complex solution? Answer: Yes. Since the roots i and &minus;i of the characteristic polynomial are complex conjugates of one another, the exponential solutions eit and e&minus;it corresponding to these roots are also complex conjugate of one another. Now, recall that the real and imaginary parts of any complex function z can be obtained by linear combinations, with complex coefficients, of z and its conjugate z&macr;: Re(z)=z+z&macr;2 ; Im(z)=z&minus;z&macr;2i. Applying these formulas to our example, we have: cost=Re(eit) = eit+e&minus;it2 sint=Im(eit) = eit&minus;e&minus;it2i. (This is Euler's formula backwards.) To get the general real solution, we take linear combinations of the expressions on the right above for cos(t) and sin(t). Therefore, the real solutions can be written as C1eit+C2e&minus;it, provided that the coefficients C1 and C2 can take complex values. Question 9.2&emsp;&emsp; Which basis should be used? Answer It depends: The basis e&minus;it, eit is easier to calculate with, but we need to be careful which linear combinations of these functions are real-valued. The basis cost, sint consisting of real-valued functions is useful for interpreting solutions in a physical system. So convert back and forth as necessary. ",
                                        "unit_id":"a3c07fb76de34802a3512d7d597c9cd2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4a5461d8792343218ccd81aaba541006",
                                "vertical_name":"9. Undamped system revisited"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Imaginary part",
                                            "Complex numbers",
                                            "Complex function",
                                            "Magic formulas",
                                            "Complex number",
                                            "Complex functions",
                                            "Complex exponentials",
                                            "Complex conjugate",
                                            "Characteristic equation",
                                            "Green solutions",
                                            "Complex exponential",
                                            "Capital letters",
                                            "Real numbers",
                                            "Complex form",
                                            "Minus sign",
                                            "Real part",
                                            "Bt",
                                            "Id",
                                            "Complex",
                                            "Minus",
                                            "Part",
                                            "Arbitrary",
                                            "Negative",
                                            "Cosine",
                                            "Hack",
                                            "Constant",
                                            "Bar",
                                            "Put",
                                            "Ia",
                                            "Equal",
                                            "Equation",
                                            "Green",
                                            "Bi",
                                            "Ll",
                                            "Find",
                                            "Board",
                                            "Capital",
                                            "Exponential",
                                            "General",
                                            "Conclusion",
                                            "Expression",
                                            "Write",
                                            "Form",
                                            "Thing",
                                            "Real",
                                            "Sign",
                                            "Ve",
                                            "Give",
                                            "Formula",
                                            "Coefficient"
                                        ],
                                        "data":" So there's another way of proceeding, which is what you might have thought. Hey, look, we got two complex roots, that gives us two solutions, which are different. They're not-- neither one is a constant multiple of the other. So the other approach is use, as the general solution, y equals-- now I'm going to put a capital C here, you'll see why in just the second-- times e to the a plus bi times t. And then I'll use the other solution. C2 times e to the a minus bi t. These are two independent solutions and therefore can't I get the general solution in that form? Now in a sense you can, the whole problem is the following, of course, that I'm only interested in real solutions. This is a complex function. This is another complex function-- it's got an i in it, in other words, when I write it out as u plus iv. If I expect to be able to get a real solution out of that, that means I have to allow these coefficients to be complex numbers and not real numbers. So in other words, what I'm saying is that an expression like this, where the a plus bi and a minus bi are the roots of that are complex roots of that characteristic equation is formally a very general complex solution to the equation. And therefore, the problem becomes, how from this expression do I get the real solutions? So the problem is, I accept these as the complex solutions. My problem is to find among all these guys, where C1 and C2 are allowed to be complex. The problem is which of the green solutions are real? Now there are many ways of getting the answer. There's a super hack way. The super hack way is to say well this one is c1 plus i d1. This is c2 plus i d2. And I'll write all this out in terms of what it is-- cosine, plus sign, and cosine plus i sign, and don't forget the e to the at. And I'll write it all out, and it will take an entire board. And then I'll just see what the condition is. I'll write its real part, and its an imaginary part. And then I'll say the imaginary part has got to be 0. And then I'll see what it's like. That works fine. It just takes too much space. And also, it doesn't teach you a few things that I think you should know. I'm going to give another. So let's say we can answer this two ways by hack-- in other words, multiplied everything out. Multiply all out, make the imaginary part equal zero. Now, here's a better way, in my opinion. What I'm trying to do is this is some complex function-- u plus iv. How do I know when a complex function is real? I want this to be real. Well, the hake method corresponds to saying v must be equal to zero. It's real if v is 0, so expand it out, and see what v is 0. There's a slightly more subtle method, which is to change i to minus i, and what? And see if it stays the same. And see if it stays the same. Because if I change i to minus i, and it turns out the expression doesn't change, then it must have been real. See that? V must have been 0 if this expression doesn't change when I change i to minus i. Well, sure but, well, you'll see it work. All right, now that's what I'm going to apply to this. If I want this to be real, I phrase the question-- I rephrase the question for the green equation, the green solution, as change-- so I'm going to change i to minus i in the green thing. And that's going to give me what conditions? And that will give conditions on the C's. Well let's do it. In fact, it's easier done than talked about. Let's take the green solution and change-- so I don't want to, well, I'd better recopy it. C1-- so these are complex numbers, that's why I wrote them as capital letters, because little letters you tend to interpret as real numbers. So C1, e to the a plus bi t-- I'll recopy it quickly-- plus C2 e to the a minus bi t. OK, we're going to change i to negative i. Now, here's a complex number. What happens when you change i to negative i? You change it into it's? Class, what do we change it into? Its complex conjugate, right? And the notation for complex conjugate is you put a bar over it. So in other words, when I do that, the C1 changes to C1 bar, complex conjugate. The complex conjugate of C1. What happens to this guy? This guy changes to e-- sorry. This guy changes to e to the a minus bi t. This changes to the complex conjugate of C2 now times e to the a plus bi t. Well, I want these two to be the same. I want the two expressions the same. Why do I want them the same? Because if there's no change, that will mean that it's real. Now when is that going to happen? That happens if, well, here is this, that. If C2 should be equal to C1 bar-- that's only one condition. There's another condition, C2 bar should equal C1. So I get two conditions, but there's really only one condition there, because if this is true, that's true too. I simply put bars over both things. And two bars cancel each other out. If you take the complex conjugate and do it again, you get back where you started with. Change i to minus i, and then i to minus i again-- well, never mind. Anyway, these are the same. This equation doesn't say anything that the first one didn't say already. So this one is redundant. And our conclusion is-- the conclusion is that the real solutions to the equation are in their entirety, I now don't need both C2 and C1, one of them will do. And since I'm going to write it out as a complex number, I'll write out in terms of its coefficient. So it's C1-- oh, let's just re-write-- c plus i times d. That's the coefficient, that's what I called C1 before. And that's times e to the a plus bi t. There's no reason why I would bi here and ib here, in case you're wondering. Shear caprice. And what's the other term? Now the other term is completely determine. Its coefficients must be c minus id times e to the a minus bi t. In other words, this thing is perfectly general. Any complex number of times that first group you used exponentiated. And the second term can be described as the complex conjugate of the first. The coefficient is the complex conjugate. And this part is the complex conjugate of that. Now it's in this form some, many, engineers write the solution this way, and physicist, too-- so scientists and engineers we'll include-- write the solution this way, write the real solution is this way in that complex form. Well, why do they do something so perverse? You'll have to ask them. But in fact, when we study Fourier series, we'll probably have to do something-- have to do that at one point. If you work a lot with complex numbers, it turns out to be in some ways a more convenient representation than the one I've given you in terms of sines and cosine. Well, from this, how would I get-- suppose I insisted, well, if someone gave it to me in that form, I don't see how I would convert it back into sines and cosines. And I'd like to show you how to do that efficiently too, because, again, it's one of the fundamental techniques that I think you should know. And I didn't get a chance to say it when we studied complex numbers that first lecture. It's in the notes. But that doesn't prove anything, since I don't think I made you use it in an example. So the problem is now, by way of finishing this up, to change this to the old form. I mean, the form involving sines and cosines. Now, again, there are two ways of doing it. The hack way is, you write it all out. Well, the e to the at, e to the a plus bi t turns into e to the at times cosine this plus i sine that. And the other term does too. And then you've got stuff out front. And you know, the whole thing stretches over two boards, but you group all the terms together, you finally get it. By the way, when you do it, you'll find that the imaginary part disappears completely. It has to, because that's the way we chose the coefficients. So there's the hack method, write it all out, blah, blah, blah, blah, blah, blah, blah, blah, and nicer-- nicer and teach you something you're supposed to know. Write it this way. First of all, you notice with both terms have an e to the at factor. Let's get rid of that right away. I'm pulling it out front, because that's automatically real and, therefore, isn't going to affect the rest of the answer at all. So let's pull out that. And what's left, well what's left, you see, involves just the two parameters c and d. So I'm going to have a c term. And I'm going to have a d term. What multiplies the arbitrary constant c? Answer, after I've removed e to the at, what multiplies it is e to the bit-- let's write it ibt. And the other term is plus e to the negative ibt. You see how I got that? Pulled it out. And how about the d? What goes with d? d goes with-- well, first of all, there's an i in front that I better not forget. And then the rest of it is i-- so it's id times-- it's e to the bit-- e to the ibt minus, now, e to the minus ibt. So that's the way the solution looks. It doesn't look a lot better. But now, you must use the magic formulas, which I want you to know as well as you know Euler's formula, even better than you know Euler's formula. They're a consequence of Euler's formula. They're Euler's formula read backwards. Euler's formula says, you got a complex exponential. Here is how to write it in terms of sines and cosine. The backwards thing says, you got a sine or a cosine. Here's the way to write it in terms of complex exponentials. And remember, the way to do it is cosine a is equal to e to the ia plus e to the negative ia divided by 2. And sine of a is almost the same thing, except you use a minus sign. And what everybody forgets, you have to divide by i. So this is the backward version of Euler's formula. The two of them taken together are equivalent to Euler's formula. If I took cosine a, multiplied this through by i and added them up, on the right hand side, I'd get exactly e to the ia. I'd get Euler's formula, in other words. So what is this come out to be, finally? This particular sum of exponentials, you should always recognize as real. You know it's real, because when I change i to minus i, the two terms switch. And therefore, it's real. The expression doesn't change. What is it? This part is twice the cosine of bt. What's this part? This part is 2i times the sine of bt. And so what is the whole thing come out to be? It is e to the at times 2c cosine bt plus i times-- did I lose possibly a-- no, it's OK-- minus-- i times i is minus, so minus 2d times the sine of bt. Should I write that out? So in other words, it's e to the at times 2c cosine bt minus 2d times the sine of bt, which is, since 2c and negative 2d are just arbitrary constants, just as arbitrary as the constants of c and d themselves are, this is our old form of writing the solution, real solution. So here's the way using sines and cosines. And there's the way that uses complex numbers and complex functions throughout. Notice they both have two arbitrary constants in them, c and d. Two arbitrary constants, that you expect. But that has two arbitrary constants in it too, just the real and imaginary parts of that complex coefficient, c plus id. ",
                                        "unit_id":"40af82cd296f4d63bea7a3e593353a8d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"378e830fc7654954bae28553dc8beb90",
                                "vertical_name":"10. Optional: explicit relation between the real and complex solutions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex conjugate",
                                            "Linearly dependent",
                                            "De",
                                            "Basis"
                                        ],
                                        "data":" We have been interchanging between a complex basis and a real basis for the solutions to a second order homogenous linear DE with two distinct complex characteristic roots. The general principle, which applies to more complicated ODEs, is summarized below. Complex basis vs. real-valued basis. Let y(t) be a complex-valued function of a real-valued variable t. If y and y&macr;, the complex conjugate of y, are a basis of the solutions to a second order homogeneous linear ODE with real coefficients, then replacing y,y&macr; by Re(y),Im(y) gives a new basis. Taking all real linear combinations of the real basis Re(y),Im(y) then gives all the real solutions to the DE. Question 11.1&emsp;&emsp; Would it be okay to replace y, y&macr; instead by Re(y), iIm(y)? Answer Yes, but this would be less useful, because the whole point is to obtain a basis consisting of real-valued functions. Hide Question 11.2&emsp;&emsp; Would it be okay to replace y, y&macr; instead by Re(y), Re(y&macr;). Answer No, because if y=f+ig, then y&macr;=f&minus;ig, so Re(y), Re(y&macr;) are both f! They are linearly dependent, so they can't be part of a basis. ",
                                        "unit_id":"c0594fcc871341ad85e9b76ad2c88ad3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7e8c3d993eef420693c1970c2084e6d6",
                                "vertical_name":"11. Summary on complex solutions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Real part",
                                            "Characteristic polynomial",
                                            "Imaginary part",
                                            "Linear combination",
                                            "Quadratic formula",
                                            "Characteristic equation",
                                            "Real",
                                            "General",
                                            "Equation",
                                            "Basis"
                                        ],
                                        "data":" Example 12.1&emsp;&emsp; Solve the x&uml;+5x\u02d9+4x=0. Worked Solution The characteristic equation is r2+5r+4=0, which factors as (r+1)(r+4)=0. The roots are &minus;1, &minus;4. A basis for the solutions are &thinsp; x1(t)=e&minus;t &thinsp; and &thinsp; x2(t)=e&minus;4t. Therefore, the general solution is the span of these two basis solutions, which in general form can be written as a linear combination x(t)=c1e&minus;t+c2e&minus;4t. Hide Example 12.2&emsp;&emsp; Solve the equation x&uml;+4x\u02d9+5x=0. Worked Solution The characteristic polynomial is r2+4r+5. Using the quadratic formula the roots are r=&minus;4&plusmn;16&minus;202=&minus;2&plusmn;&minus;1=&minus;2&plusmn;i. So a basis for the the solutions are z(t)=e(&minus;2+i)t and z&macr;(t)=e(&minus;2&minus;i)t. We use the letter z here to indicate the functions are complex valued. The general solution is a linear combination of these two basis solutions. But, because the DE has real coefficients, we were expecting real valued solutions. Instead, we can take the basis formed by the real and imaginary parts of z(t): z(t)=e(&minus;2+i)t=e&minus;2tcost+ie&minus;2tsint. The real part of e&minus;2tcost+ie&minus;2tsint is &thinsp; e&minus;2tcost &thinsp; and the imaginary part is &thinsp; e&minus;2tsint. We now have a basis of two real valued functions, and can use superposition to find the general real valued solution x(t)=c1e&minus;2tcos(t)+c2e&minus;2tsin(t). As discussed previously in a video, we can find the basis of solutions by taking the real and imaginary parts of z&macr;(t) instead: z&macr;(t)=e(&minus;2&minus;i)t=e&minus;2t(cos(&minus;t)+isin(&minus;t)) then the real-valued basis solutions would be e&minus;2tcos(&minus;t)=e&minus;2tcos(t) and e&minus;2tsin(&minus;t)=&minus;e&minus;2tsin(t). Up to a sign these are the same basic solutions as was obtained from z(t), so z&macr;(t) would have work just as well. Hide Example 12.3&emsp;&emsp; Solve x&uml;+x\u02d9+x=0. Worked Solution Characteristic equation: r2+r+1=0. Roots: &minus;1&plusmn;1&minus;42=&minus;12&plusmn;i32. Basis of complex exponential solutions: z(t)=e(&minus;1+i3)t/2, &thinsp; z&macr;(t)=e(&minus;1&minus;i3)t/2 Basis of real solutions: x1(t)=Re(z(t))=e&minus;t/2cos(3t/2),Im(z(t))=e&minus;t/2sin(3t/2). General real solution: x(t)=e&minus;t/2(c1cos(3t/2)+c2sin(3t/2)). ",
                                        "unit_id":"6eb2e9b06e394c41bcb5148f25a0a1a4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e033fcb23bbc40b88fd5b6b7c359956f",
                                "vertical_name":"12. Review: worked examples"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0be3413be0a6478a85d3c257fd8f7614",
                        "sequential_name":"Recitation 5",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Characteristic equation",
                                            "Real part",
                                            "Characteristic polynomial",
                                            "Damping constant",
                                            "Discussion forum",
                                            "Previous question",
                                            "Initial",
                                            "Distinct",
                                            "Real",
                                            "System",
                                            "Time",
                                            "Forum",
                                            "Position",
                                            "Previous",
                                            "Encourage",
                                            "Share",
                                            "Mass",
                                            "Question"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. To encourage collaboration, we give only two attempts per answer box. 18.03 Recitation 5 Spring-mass-dashpot with different damping conditions 1. Spring Mass Dashpot Consider the spring-mass-dashpot system in which m = 1 (kg), and k = 16 (Newton per meter). The position x(t) (meters) of the mass at t (seconds) is governed by the DE x&uml; + bx\u02d9 + 16x = 0. (1) We will investigate the effect of b, the damping constant, on the solutions to the DE. (a) What is the characteristic polynomial? (b) For what values of b are the roots of the characteristic equation real and distinct? (c) Assume b is within the range you found in the previous problem. Write down the exponential solutions, x1(t) and x2(t), corresponding to the two smaller and larger roots respectively. (d) Find the position x(t) of the mass at t (seconds) if at t = 0, the mass is 1 meter to the right of the equilibrium position and is moving to the left at b/2 meters per second. (Use x &gt; 0 when the mass is to the right of the equilibrium position.) (e) As above, assume a value b such that the characteristic polynomial has two distinct real roots. How many times can the mass pass through the equilibrium position x = 0? (f) For what values of b are the roots of the characteristic equation not real? (g)Assume a value of b such that the characteristic polynomial has two distinct non-real roots. Find the position x(t) of the mass at t (seconds) for the same initial conditions considered previously: at t = 0, the mass is 1 meter to the right of the equilibrium position and is moving to the left at b/2 meters per second. (h) Consider the solution x(t) for the initial value problem in the previous question. What is the length of the time interval &tau; (in seconds) between each time the mass returns to the equilibrium position? This fixed time interval is known as the pseudoperiod of the oscillation of the mass. 2. Recall that in a general spring-mass-dashpot system, the position of the mass is modeled by mx&uml; + bx\u02d9 + kx = 0, m &gt; 0, k, b &ge; 0. (2) What can you say about the real part of the roots of the characteristic polynomial of the system? ",
                                        "unit_id":"47041afdfc414e76b2800411227672e0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b7938c83f6cb42859d8424808d0dec4d",
                                "vertical_name":"1. Exponential solutions, damping conditions"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"8022af38d1b24316a8cfcc1fd384113f",
                "chapter_name":"Unit 3: Due 09 March",
                "sequentials":[
                    {
                        "sequential_id":"1087172162d3493da9cb1fd9af844d65",
                        "sequential_name":"6 Sinusoidal Functions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Sinusoidal function",
                                            "Linear combination",
                                            "Graph"
                                        ],
                                        "data":" Objectives Represent a linear combination of a sine and cosine with the same frequency as a sinusoidal function . Describe and graph sinusoidal functions in terms of amplitude and phase angles . Write the equation for a sinusoidal function from a graph. Graph oscillatory solutions to spring-mass systems with no external force. Optional: Understand how two sinusoids of close frequencies create beats . ",
                                        "unit_id":"fa10e6c80e2a4b02956e844705b2593d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b20c220048484c7aa92103781317b1cf",
                                "vertical_name":"1. Sinusoidal Functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear combinations",
                                            "Natural frequency",
                                            "Polar form",
                                            "Reduces",
                                            "System"
                                        ],
                                        "data":" In the last lecture, we modeled the spring-mass-dashpot system with no external force by the second order linear homogenous DE mx&uml;+bx\u02d9+kx=0m,k&gt;0,b&ge;0. When there are two distinct characteristic complex roots, that is, when the discriminant b2&minus;4km&lt;0, the real basis that you found in the previous problem gives the general real solution: x(t) = e(&minus;b/2m)t(c1cos(&omega;dt)+c2sin(&omega;dt))c1,c2&isin;R, where &omega;d=km&minus;b24m2 is called the damped frequency of the system. It is useful to contrast the solutions of the general spring-mass-dashpot system with the solutions to the system with no dashpot (damping), i.e. b=0(&lt;4km) If the system has no damping, the DE reduces to mx&uml;+kx=0m,k&gt;0, and the general real solution reduces to x(t) = c1cos(&omega;nt)+c2sin(&omega;nt)c1,c2&isin;R, where &omega;n=km is called the natural frequency of the system. We will continue to call the value of &omega;n the natural frequency of the system even if damping is present (b&gt;0). Question 3.1&emsp;&emsp; What do these general solutions look like? Both of these general solutions involve linear combinations of cos(&omega;t) and sin(&omega;t) for some angular frequency &omega; that is the same for both the sine and cosine functions. What do the graphs of such linear combinations look like? To make graphing these solutions easy, we will first rewrite the linear combination acos(&theta;)+bsin(&theta;) in polar form. ",
                                        "unit_id":"bed8aafd8a3d406eb4534e3a3afc9b9b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"11152228199349baa11da8ae11b42438",
                                "vertical_name":"3. Real solutions to spring-mass-dashpot system"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Rectangular coordinates",
                                            "Polar form",
                                            "Square root",
                                            "Polar coordinates",
                                            "Polar coordinate",
                                            "Sinusoidal function",
                                            "Acos",
                                            "Angle",
                                            "Term",
                                            "Sum",
                                            "General",
                                            "Phi",
                                            "Theta",
                                            "Ll",
                                            "Minus",
                                            "Cosine",
                                            "Side",
                                            "Formula",
                                            "Thing",
                                            "Amplitude",
                                            "Constant",
                                            "Remember",
                                            "Omega"
                                        ],
                                        "data":" So the formula is the famous trigonometric identity, which is-- So the problem is to convert this into the other guy. And the thing which is going is to do that, enable one to combine the sine and the cosine terms, is the famous formula that A times the cosine-- I'm going to use theta to make it as neutral as possible. So theta you can think of as being replaced by omega t in this particular application of the formula. But I'll just use a general angle theta which doesn't suggest anything in particular. So the problem is you have something which is a combination with real coefficients of cosine and sine. And the important thing is that these numbers be the same. In practice, that means that the omega t, you're not allowed to have omega one t here and some other frequency omega two t here. That would correspond to using theta one here and theta two here. And though there is a formula for combining that, nobody remembers it. And it's in general less universally useful than the first. If you're going to memorize a formula, learn this one. It's best to start with the ones where the two are equal. That's the basic formula. The others are variations of it. But they're sizable variations. All right. So the answer is that this is equal to some other constant, real constant, times the cosine of theta minus phi. Of course, most people remember this vaguely. What they don't remember is what the C and the phi are, how to calculate them. I don't suggest you memorize the formulas for them. But you can if you wish. Instead memorize the picture which is much easier. Memorize that A and B are the two sides of a right triangle. Phi is the angle opposite the B side. And C is the length of the hypotenuse. OK. That's worth putting up. I think that's a pink formula. It's even with two of those. But I'll thrift. Now let's apply it to this case to see that it gives the right answer. All right. So to use this formula, how will I use it? Well, I should take-- I'll reproduce the left hand side. So that part I just copy. And now how about the right? Well, the amplitude, it's combined into a single cosine term whose amplitude is-- well, the two sides of the right triangle are one and omega over k. The hypotenuse in that case is going to be-- well, why don't we write it here? So we have one and omega over k. And here's phi. So the hypotenuse is going to be the square root of one plus omega over k squared. And that's going to be multiplied by the cosine of omega t minus this phase lag angle phi. You can write, if you wish, phi equals the arctangent of-- but you're not learning a lot by that. There are two ways of expressing any sinusoidal function, in rectangular form and in polar form. They are related as follows: acos(&theta;)+bsin(&theta;)\u23dfrectangular form = Acos(&theta;&minus;\u03d5)\u23dfpolar forma,b,\u03d5&isin;R, A&ge;0&isin;R, = Acos\u03d5\u23dfacos&theta;+Asin\u03d5\u23dfbsin&theta;by the trig sum formula where A and \u03d5 in terms of a and b are given implicitly by the following diagram: That is, A = a2+b2 \u03d5 : Angle between the positive horizontal axis and the ray to the point (a,b). Note that (A,\u03d5) are polar coordinates of the point with rectangular coordinates (a,b). We will use the convention A&ge;0. As usual for polar coordinate, the angle \u03d5 is well-defined only up to addition of integer multiples of 2&pi;. It is amazing that the sum of two sinusoids is another sinusoid! And while graphing the sinusoid in rectangular form is a mystery, graphing the polar form is easy. We will do this shortly. ",
                                        "unit_id":"730c50703b2a4b73a6b020999eeb904d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3ccfe81d83304ae3a913680cd681810e",
                                "vertical_name":"4. From rectangular to polar form"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polar coordinates",
                                            "Polar form",
                                            "Rectangular coordinates"
                                        ],
                                        "data":" In practice, the argument of the cosine and sine terms is often a function rather than a constant angle. In this course, we usually have &theta;=&omega;tfor some &omega;&gt;0. Example 5.1&emsp;&emsp; Convert &minus;cos(5t)&minus;3sin(5t) to polar form. Solution: Given: a=&minus;1,b=&minus;3,&theta;(t)=&omega;t where &omega;=5. Want: A,\u03d5. These are polar coordinates of the point with rectangular coordinates(a,b). Using the diagram above, A = (&minus;1)2+(&minus;3)2=2 \u03d5 = &minus;2&pi;3. Therefore, the answer is Acos(&omega;t&minus;\u03d5)=2cos(5t+2&pi;/3). Note that 4&pi;/3 (or &minus;2&pi;3+2&pi;n for any integer n) also works since \u03d5 is well-defined up to addition of 2&pi;. ",
                                        "unit_id":"b5f308270e7a4a63b7f51ef45d47a91c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"42612159f9fc43bd9bd9a4547f39f15f",
                                "vertical_name":"5. Worked Example"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Left side",
                                            "Square root",
                                            "Complex numbers",
                                            "Complex form",
                                            "Real numbers",
                                            "Pythagorean theorem",
                                            "Polar coordinates",
                                            "Polar representation",
                                            "Real part",
                                            "Scalar product",
                                            "Dot product",
                                            "Unit vector",
                                            "Included angle",
                                            "Number",
                                            "Phi",
                                            "Side",
                                            "Theta",
                                            "Part",
                                            "Sine",
                                            "Cosine",
                                            "Minus",
                                            "Ll",
                                            "Direction",
                                            "Product",
                                            "Acos",
                                            "Bi",
                                            "Write",
                                            "Angle",
                                            "Hope",
                                            "Minute",
                                            "Vector",
                                            "Positive",
                                            "Form",
                                            "Argument",
                                            "Proof",
                                            "Squared",
                                            "Negative"
                                        ],
                                        "data":" Because of the importance of this formula, I wanted to take a couple of minutes out for proof of the formula. Just to give you a chance to stare at it a little more. Now there are three proofs I know. I'm sure there are 27. The Pythagorean theorem now has several hundred. But there are three basic proofs. There is the one I will not give you. I'll call it the high school proof, which is the only one one normally finds in books. Physics textbooks or other textbooks. The high school proof takes the right hand side, applies the formula for the cosine of the difference of two angles, which it assumes you had in trigonometry, and then converts into this that shows you that-- once you've done that-- that A turns out to be C cosine phi and the number B is C sine phi. And therefore it identifies the two sides. Now that's of course correct. And it's the simplest possible argument. The thing that's no good about it is that the direction in which it goes is from here to here. Well, everybody knew that. If I gave you this and told you write it out in terms of cosine and sine, I would assume and dearly hope that practically all of you could do that. Unfortunately, when you want to use the formula, it's this way you want to use it in the opposite direction. You're starting with this and want to convert it to that. Now the proof, therefore, will not be of much help. It requires you to go in the backwards direction and match up coefficients. It's much better to go forwards. Now there are two proofs that go forwards. There is the 18.02 proof. Since I didn't teach most of you 18.02, I can't be sure you had it. So I'll spend one minute giving it to you. What does the 18.02 proof? It is the following picture. I think this requires deep colored chalk. This is going to be pretty heavy. All right. First of all, the A and the B are the given. So I'm going to put in that vector. So there is the vector whose components are A and B. I'll write it without the i and j, and just with the-- I hope you had it from Jerison in that form for the vector. If you don't like that, write Ai plus Bj. OK? Now, there's another vector lurking around. It's the unit vector whose-- I'll write it this way, u because it's a unit vector and theta to indicate that its angle is theta. Now the reason for doing that is because you see that the left hand side is a dot product of two vectors. The left hand side of the identity is the dot product of the vector (A, B) with the vector whose components are cosine theta and sine theta. That's what I'm calling this unit vector. It's a unit vector because cosine squared plus size squared is one. Now all this formula is is saying that scale of product, the dot product of those two vectors, can be evaluated if you know their components by the left hand side of the formula. And if you don't know their components, it can be evaluated in another way. The geometric evaluation, which goes-- What is it? It's the magnitude of one times the magnitude of the other times the cosine of the included angle. Now what's the included angle? Well, theta is this angle from the horizontal to that unit vector. The angle phi is this angle from this picture here. And therefore the included angle between theta and my pink vector is theta minus phi. That's the formula. It comes from two ways of calculating the scalar product of the vector whose coefficients are (A, B) and the unit vector whose components are cosine theta and sine theta. All right. Well, that was 18.02. There must be an 18.03 proof also. Yes. What's the 18.03 proof? The 18.03 proof uses complex numbers. It says, look. Take the left side. Instead of viewing it as the dot product of two vectors, there's another way. You can think of it as part of the product of two complex numbers. So the 18.03 argument, really the complex number argument, says look. Multiply together A minus Bi and the complex number cosine theta plus i sine theta. There are different ways of explaining why I want to put the minus i there instead of i. But the simplest is because, when I take the real part to get the left hand side, I will. If I take the real part of this, I'm going to get A cosine theta plus B sine theta because negative i and i make one multiplied together. All right. That's the left hand side. And now the right hand side, I'm going to use polar representation instead. What's the polar representation of this guy? Well, if (A, B) has the angle theta, then (A, negative B), A minus Bi, goes down below. It has the angle minus phi. So this has magnitude. In its polar representation, its magnitude is A squared plus B squared. And its angle is negative phi, not positive phi because of this. A minus Bi goes below the axis if A and B are positive. So it's e to the minus i phi. That's the first guy. How about the second guy? Well, the second guy is e to the i theta. So what's the product? It is A squared plus B squared, the square root times e to the i times theta minus phi. And now what do I want? The real part of this. And I want the real part of this. So let's just say take the real parts of both sides. If I take the real part of the left hand side, I get A cosine theta plus B sine theta. If I take the real part of this side, I get square root of A squared plus B squared times the cosine. That's the real part of theta minus phi, which is just what it's supposed to be. Well, with three different arguments, I'm really pounding the table on this formula. But I think there's something to be learned from at least two of them. And you know, for a while I'll never miss an opportunity to bang complex numbers into your head. Because in some sense, you have to reproduce the experience of the race. As I mentioned in the notes, it took mathematicians 300 or 400 years to get used to complex numbers. So if it takes you three or four weeks, that's not too bad. There are three ways to write a sinusoid function: amplitude-phase form : Acos(&omega;t&minus;\u03d5) complex form : Re(cei&omega;t), where c is a complex number linear combination : acos&omega;t+bsin&omega;t, where a and b are real numbers Different forms are useful in different contexts, so we'll need to know how to convert between them. The following proposition explains how. Proposition 6.1&emsp;&emsp; If c&macr;=Aei\u03d5=a+bi,c&isin;C,A&ge;0,a,b,\u03d5&isin;R, then Re(cei&omega;t)=Acos(&omega;t&minus;\u03d5)=acos&omega;t+bsin&omega;t,&omega;&gt;0&isin;R. Use these key equations to convert between the three forms! Warning: Don't forget that it is c&macr; and not c itself that appears in the key equations. An equivalent form of the key equations (obtained by taking complex conjugates) is c=Ae&minus;i\u03d5=a&minus;bi. If you ever forget the key equations above, you can do the conversion manually by going through the steps in the proofs below. Proofs: Re(cei&omega;t) =Re(Ae&minus;i\u03d5ei&omega;t) =Re(Aei(&omega;t&minus;\u03d5)) =Acos(&omega;t&minus;\u03d5). Re(cei&omega;t) =Re((a&minus;bi)(cos&omega;t+isin&omega;t)) =Re(acos&omega;t+bsin&omega;t+i(\u22ef)) =acos&omega;t+bsin&omega;t. Using cos(x&minus;y)=cosxcosy+sinxsiny, we have Acos(&omega;t&minus;\u03d5) =Acos&omega;tcos\u03d5+Asin&omega;tsin\u03d5 =acos&omega;t+bsin&omega;t. The last step follows from a=Acos\u03d5 and b=Asin\u03d5, since A,\u03d5 are polar coordinates of (a,b). acos&omega;t+bsin&omega;t =(a,b)&sdot;(cos&omega;t,sin&omega;t) =|(a,b)||(cos&omega;t,sin&omega;t)|cos(angle between the vectors (a,b)and(cos&omega;t,sin&omega;t)) (by the geometric interpretation of the dot product) =Acos(&omega;t&minus;\u03d5). ",
                                        "unit_id":"208767923df14e4699c05ff2b29ff08e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e873a0654c474782bb3c9e174d75ebcd",
                                "vertical_name":"6. The equivalence of the three forms"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase lag",
                                            "Time lag",
                                            "Angular frequency",
                                            "Polar form",
                                            "Phase shift",
                                            "Cosine curve",
                                            "Sinusoidal function",
                                            "Frequency",
                                            " ",
                                            "Factor",
                                            "Time",
                                            "Curve",
                                            "Result",
                                            "Shift",
                                            "Function",
                                            "Cycle",
                                            "Graph"
                                        ],
                                        "data":" In polar form, it is easy to see that the graph of the sinusoidal function f(t)=Acos(&omega;t&minus;\u03d5) is a rescaled and shifted version of the cosine graph, as shown below: Graph of f(t)=Acos(&omega;t&minus;\u03d5) This graph of f(t) can be described geometrically in terms of A, its amplitude , how high the graph rises above the t-axis at its maximum; P (in seconds or seconds per cycle ), its period , the time for one complete oscillation, or equivalently the width between successive maxima; t0 (in seconds ), its time lag (relative to the cosine curve), a t-value at which a maximum is attained. The time lag is well defined up to the addition of integer multiples of a period. Question 7.1&emsp;&emsp; How are the parameters describing the graph, P and t0, related to the parameters, &omega; and \u03d5, in the function f(t) ? Answer: P=2&pi;&omega;, since adding 2&pi;&omega; to t increases the angle &omega;t&minus;\u03d5 by 2&pi;. t0=\u03d5&omega;, since t0 is the t-value for which the angle &omega;t&minus;\u03d5=0,. There is also frequency &nu;:=1P (in Hertz =cycles per second ), the number of complete oscillations per second. To convert from frequency &nu; to angular frequency &omega;, multiply by 2&pi; radians1 cycle; thus &omega;=2&pi;&nu;=2&pi;/P, which is consistent with the formula P=2&pi;/&omega; above. Steps to graph f(t)=Acos(&omega;t&minus;\u03d5): Start with the curve y(&theta;)=cos&theta;. Then &ldquo;work from the outside in.\" Amplify (stretch vertically) by a factor of A, the amplitude . You now have the graph of y(&theta;)=Acos(&theta;). Shift the graph by \u03d5 (in radians ) to the right. You now have the graph of y(&theta;)=Acos(&theta;&minus;\u03d5). The angle \u03d5 is called the phase lag or phase shift (relative to the cosine curve). The first maximum of the graph of Acos(&theta;&minus;\u03d5) is at &theta;=\u03d5, shifted from &theta;=0 in the graph of Acos(&theta;). Compress the result horizontally by dividing by the scale factor &omega; (in radians/second ), the angular frequency . The result is the graph of f(t)=Acos(&omega;t&minus;\u03d5). With this horizontal rescaling, the horizonal axis changes from the &theta;-axis (in radians) to the t-axis (in seconds). The first maximum of the rescaled graph is at t0=\u03d5/&omega; instead of at &theta;=\u03d5, and one complete oscillation takes 2&pi;/&omega; instead of 2&pi;. Remark: The phase lag \u03d5 tells us by what fraction of a cycle the graph of f(t) is shifted from a cosine graph of the same frequency. For example, the graph of f(t)=Acos(&omega;t&minus;&pi;/2) is shifted by 1/4 of a cycle to the right from the graph of Acos(&omega;t). On the other hand, the time lag t0 tells us by how much time the graph of f(t)=Acos(&omega;t&minus;&pi;/2)=Acos(&omega;(t&minus;t0)) is shifted to the right from the graph of Acos(&omega;t). Also note that \u03d52&pi;=t0P. ",
                                        "unit_id":"29a008264fd04544b96b0f721182c646",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a5b024de3ab84e9392bffa957a49e838",
                                "vertical_name":"7. Graphing sinusoidal functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex functions",
                                            "Complex numbers",
                                            "Time lag",
                                            "Phase lag",
                                            "Circular frequency",
                                            "Complex number",
                                            "Complex exponentials",
                                            "Complex conjugate",
                                            "Beautiful thing",
                                            "Imaginary number",
                                            "Curly bracket",
                                            "Polar form",
                                            "Real number",
                                            "Real form",
                                            "Angular frequency",
                                            "Sinusoidal function",
                                            "Real part",
                                            "Complex function",
                                            "Cosine function",
                                            "Square root",
                                            "Time",
                                            "Complex",
                                            "Form",
                                            "Phase",
                                            "Cosine",
                                            "Real",
                                            "Frequency",
                                            "Part",
                                            "Omega",
                                            "Sine",
                                            "Theta",
                                            "Maximum",
                                            "Phi",
                                            "Write",
                                            "Quick",
                                            "Square",
                                            "Specifically",
                                            "Calculation",
                                            "Ll",
                                            "Angle",
                                            "Function",
                                            "Term",
                                            "Note",
                                            "Recall",
                                            "Handle",
                                            "Euler",
                                            "Sketch"
                                        ],
                                        "data":" In the video below, the term circular frequency is used synonymously as angular frequency. At around 13:40, David at first mistakenly stated the value of the time lag, but corrected himself shortly by stating that the time lag is \u03d5/&omega;. So, today we're going to take a look at sinusoidal functions. And specifically we're going to use complex numbers to get a handle on sinusoidal functions. The reason is, complex numbers provide a robust way of analyzing sinusoidal functions. So, specifically, we're interested in this function, e to the i omega t, divided by 2 plus 3i. And we're asked to write the real part of this function using polar form and then rectangular form. And then, secondly, we're asked several properties of this function, the real part of this function. What's the circular frequency? What's the amplitude? And what's the phase lag? And then, lastly, we're asked to sketch the real part of this function versus time. So I'll let you take a look at this and try it for yourself. And I'll come back in a moment. Hi, everyone. Welcome back. OK, so, let's take a look at this problem. So we're asked to write e to the i omega t divided by 2 plus 3i. We're asked to write the real part of this function using polar form and then also rectangular form. So I'll first start off with polar form. And, if we take a look at this function, we see that the numerator is already written in polar form. So, just recall that polar form is of the form r e to the i phi. Meanwhile, the denominator is written in Cartesian form, or rectangular form. So we need to convert this into polar form. So what we can do is we can write 2 plus 3i. We can combine these two into a modulus. And the modulus is going to be the square root of 2 squared plus 3 squared. So this is the modulus of the complex number. And then we have e to the i phi. And the angle phi we can deduce by writing a triangle which is over to the right by two units. And then it's up two units. And this is the angle phi. So we see, from the triangle, that the tangent of phi is equal to 3/2. OK, so, putting the pieces together, we have e to the i omega t, divided by root 13 e to the i phi. And the beautiful thing about polar form is that, when we divide and multiply these complex exponentials, it just turns into a simple addition or subtraction of the phases. So we have 1 over root 13, e to the i omega t minus phi. So we have successfully combined all the terms into one polar term. And then now we're asked to compute the real part. And here we use Euler's formula. So, just to recall Euler's formula, if we have e to the i theta, then this is equal to cosine theta plus i sine theta. OK? So, at the end of the day, we're interested in the real part. And I'm going to use this notation \"Re,\" with the curly bracket, to denote the real part of one over root 13. And I'll use Euler's formula on e to the i omega t minus phi. So we have cosine omega t minus phi plus i sine omega t minus phi. Sorry. One over root 13 is multiplying both the sine and the cosine. And we see that the second term is purely imaginary. So, when we take the real part of a real number plus an imaginary number, we just are left with the real number, at the end of the day. So the answer we're looking for is 1 over root 13 cosine omega t minus phi, where, from before, phi is the arctangent of 3/2. And phi can also be thought of, the angle being between 0 and pi/2. OK. So this concludes the polar-form computation. Secondly, we also have to compute this using a rectangular-form calculation. So let's do the calculation in rectangular form. And for this I'm going to use Euler's formula to expand out the numerator. So, first, we want to take the real part of the numerator is cosine omega t plus i sine omega t. The denominator was 2 plus 3i. And typically what we'd want to do is we want to turn the denominator into an entirely real number. So what we do is we multiply the top and bottom by the complex conjugate of the denominator. So, for example, I have 2 plus 3i, so I'm going to multiply the top and bottom by 2 minus 3i. OK. And when I do this, you'll note that, when we multiply out 2 plus 3i and 2 minus 3i, we have a difference of squares. So we're left with 2 times 2 is 4. The cross terms cancel, and then we have 3i times negative 3i. That's going to give us negative 9i squared, which is plus 9. So the denominator is going to be 4 plus 9. And then the numerator-- I'll write out all the terms, just for completeness, but it'll be 2 times cosine omega t plus 3 sine omega t. And then now we have some imaginary terms, which are negative 3 cosine omega t and plus 2 sine omega t. OK? But now we're going to take the real part of this complex function. And, if we take a look at it, this first term is entirely real. This second term is entirely complex, because we're multiplying by an i. So, when we take the real part, at the end of the day, this second term is going to drop out. So, when the dust settles, we have 1/13 2 times cosine omega t plus 3 sine omega t. OK? So this concludes part A. For part B, we're asked several questions about this sinusoidal function, when written in its real form. Specifically, what's the circular frequency? The circular frequency is just the frequency that this function oscillates at. And we can get this from looking at the rectangular form or the polar form. And it's simply just going to be omega. So note how this function oscillates with frequency omega. Secondly, we're asked about the amplitude. And, if we take a look at it, the amplitude is a little tricky to get from the rectangular form. But it's completely apparent from the polar form. So, if we take a look at the polar form, we have 1 over root 13 cosine omega t minus phi. And cosine oscillates between plus 1 and minus 1. So this function takes on a maximum value of plus 1 over root 13 and a maximum negative value of negative 1 over root 13. So the amplitude of this function is just going to be 1 over root 13. And then, lastly, the phase lag. This is the angle that the cosine is picked up and shifted over. So, again, we can get this directly from the polar form. Meanwhile, it's a little less obvious what this angle is, when we take a look at the rectangular form. So, in our case, the phase lag is just going to be phi, which is tan inverse 3/2. OK? So this concludes part B. And then, lastly, for part C, we're just asked to sketch this diagram. And again, this function's going to be-- or, the most direct way at sketching this function is through the polar form. So I'll write time on this axis. And if we just recall that a cosine might look something like this. So, this is a cosine function. And, in our case, we're looking at plotting 1 over root 13 cosine omega t minus phi. So we're interested in a cosine which has an amplitude of 1 over root 13 at a maximum negative value of minus 1 over root 13, whose frequency is omega. So, there's a quick way on finding zeros. So, if the zero of a regular cosine is at pi/2, then, if we have an angular frequency of omega, the 0, here, is going to be pi over 2 omega. And this zero's going to be at 3 pi over 2 omega. And, lastly, this is not necessarily the cosine of our function. Our function is this cosine. However it must be picked up and shift it over by some phase lag phi. So, in our case, the function we're actually looking for is some shifted cosine which looks like this. And this distance, here, is phi. Phi over omega. OK? So this just gives us a quick sketch of this function. And again, we note that we were able to plot this using the polar form very quickly. And the reason is because the polar form gives us the amplitude, the circular frequency, and the phase leg. Whereas, if we were to take a look at the equivalent rectangular form, it's a little less obvious. The rectangular form is actually the sum of a sine and a cosine. And, unless you can just add sines and cosines in your head very quickly, it's a little less obvious on how to come up with this picture. OK. So, just to summarize, we've used complex functions to analyze sinusoidal functions. And we've used polar form and rectangular form to get a handle on the complex functions. And specifically complex functions are a very good way to represent sinusoidal functions. And, just to reiterate, the reason is that they contain a lot of information that we can graphically handle and turn into a sketch. So I'll just conclude there, and I'll see you next time. ",
                                        "unit_id":"d3971269f37c48ad8e154d30dc0b6ca8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3bc0b72a824f44ed996c1738aa465049",
                                "vertical_name":"9. Worked example"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Cosine curve",
                                            "Phase lag",
                                            "Trigonometric identity",
                                            "Initial conditions",
                                            "Square root",
                                            "Angular frequency",
                                            "Cosine",
                                            "Frequency",
                                            "Phi"
                                        ],
                                        "data":" In a video from the last lecture, we found the solution of a spring-mass-dashpot system with m=1,b=4,k=5 and initial conditions y(0)=1,y&prime;(0)=0. Recall the solution is y(t) = e&minus;2t(cost+2sint). In the video below, we will start with this solution, convert it into amplitude-phase form and sketch its graph. OK. I want to know, but what does that look like? Well, use that trigonometric identity. What's the-- the e to the negative 2t is just a real factor which is going to reproduce itself. The question is what is cosine t plus 2 sine t look like? What's its amplitude as a pure oscillation? It's the square root of 1 plus 2 squared. Remember, it depends on looking at that little triangle, which is 1, 2. This is a different scale than that. And here is the square root of 5 right? And here is phi the phase lag. So it's equal to the square root of 5. So it's square root of 5 times e to the negative 2t. And this stuff inside is the cosine of, the frequency is 1. Angular frequency is 1. So it's t minus phi where phi is this angle. How big is that? 1 and 2. Well, if this were the square root of 3, which is a little less than 2, it would be 60 degrees. So this must be 70 degrees. So phi is 70 degrees plus or minus 10, 5 let's say. So it looks like a slightly delayed cosine curve, but the amplitude is falling. Looks something like-- so it has to start. So if I draw, here's 1. Here is, let's say the square root of 5 up about here, then the square root of 5 times e to the negative 2t looks may maybe something like this. So that's square root of 5 e to the negative 2t. How about this is cosine t but shoved over by not quite pi over 2. It starts at 1 and with slope 0. So the solution starts like this. It has to be guided in its amplitude by that, by this function out there, and in between it's the cosine curve, but it's moved over so. If this is pi over 2, the first time it crosses is 72 degrees to the right of that. So if this is pi over 2. It's pi over 2 plus 70 degrees where it crosses so it must be doing something like this. And now on the other side, it's got to stay within the same-- and so it must be doing something like this. ",
                                        "unit_id":"a10850ab3c514b4c8fc8e34e352a42f0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d4a88e2cfe144124ba14dfbfcb7d6292",
                                "vertical_name":"11. Amplitude phase forms of solutions to spring-mass-dashpot system"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Time difference",
                                            "Local extrema",
                                            "Period"
                                        ],
                                        "data":" The system response for an unforced spring-mass-dashpot system with small damping term (b2&lt;4km) is called a damped sinusoid and is of the form x(t) = (Ae(&minus;b/2m)t)cos(&omega;t&minus;\u03d5). In the last problem, we have just seen that the exponential factor does not affect the frequency of the oscillations: x(t) crosses the equilibrium whenever the pure sinusoid cos(&omega;t&minus;\u03d5) does. Therefore, the period P and the time lag t0 still make sense and have the same formulas as for the pure sinusoid cos(&omega;t&minus;\u03d5): t0 = \u03d5/&omega; P = 2&pi;/&omega;. Because the graph of x(t) is not truly periodic&ndash;its amplitude is decreasing, we call P the pseudo-period . For damped sinusoids, the time lag t0 is easier to see from the shifts of zeros. The value of t0 is the time difference between a zero of x(t) and a corresponding zero of cos(&omega;t). (You can check using calculus that the local extrema of x(t) are no longer at the same t-values as those of the pure sinusoid cos(&omega;t&minus;\u03d5). However, they are still equally spaced. Consecutive local maxima of a damped sinusoid are still a full period P apart.) A series of exercises in recitation will take you through the steps of graphing a damped sinusoid. ",
                                        "unit_id":"e231582afa104786a5ec71caeee2292b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b27af7b199f042e3b52e7fce070f795e",
                                "vertical_name":"12. Damped sinusoid revisited"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Slowly varying function",
                                            "Sound wave",
                                            "Phase",
                                            "Hear",
                                            "Frequency",
                                            "Ei"
                                        ],
                                        "data":" Beats occur when two very nearby pitches are sounded simultaneously. Problem 13.1&emsp;&emsp; Consider two sinusoid sound waves of angular frequencies &omega;+\u03f5 and &omega;&minus;\u03f5, say cos((&omega;+\u03f5)t) and cos((&omega;&minus;\u03f5)t), where \u03f5 is much smaller than &omega;. What happens when they are superimposed? Solution: The sum is cos((&omega;+\u03f5)t)+cos((&omega;&minus;\u03f5)t) =Re(ei(&omega;+\u03f5)t)+Re(ei(&omega;&minus;\u03f5)t) =Re(ei&omega;t(ei\u03f5t+e&minus;i\u03f5t)) =Re(ei&omega;t(2cos\u03f5t)) =(2cos\u03f5t)Re(ei&omega;t) =2(cos\u03f5t)(cos&omega;t). The function cos&omega;t oscillates rapidly between &plusmn;1. Multiplying it by the slowly varying function 2cos\u03f5t produces a rapid oscillation between &plusmn;2cos\u03f5t, so one hears a sound wave of angular frequency &omega; whose amplitude is the slowly varying function |2cos\u03f5t|. Figure : A plot of 2(cos\u03f5t)(cos&omega;t) for \u03f5=1/8 and &omega;=4. Practical application You hear beats when tuning the strings of an instrument, or in tuning one instrument to another. The waa waa waa sound you hear is exactly these beats. The higher the frequency of the beats, the more out of tune. As the instruments or strings become closer and closer in tune, the frequency of the beats diminish until you cannot hear them at all. Observe that changing the phase of one signal with respect to the other doesn't change the frequency of the beats! This is important. If you could hear phase shifts, it would be very difficult to tune your instrument by ear. ",
                                        "unit_id":"42d876e8d3cd485baf775780f78b626a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5be726a3480a4cc2a946840e139b2b97",
                                "vertical_name":"13. Optional: Beats"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6cc750e875364c70a56d7984487f332d",
                        "sequential_name":"Recitation 6",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Due date",
                                            "Spring constant",
                                            "Discussion forum",
                                            "Damping constant",
                                            " ",
                                            "Time",
                                            "Form",
                                            "Share",
                                            "Position",
                                            "Equilibrium",
                                            "Sin",
                                            "Mass"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! Solutions to this worksheet will be shown after the due date. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. 18.03 Recitation 6 Sinusoids 1. Write (a) and (b) in the form A cos(&omega;t &minus; &phi;). Write (c) in the form a cos(&omega;t) + b sin(&omega;t). In each case, begin by drawing a right triangle with sides a and b, angle &phi;, hypotenuse A. (a) cos(2t) + sin(2t). (b) cos(&pi;t) &minus; &radic; 3 sin(&pi;t). (c) 5 cos 3t + 3&pi; 4 2. The spring-mass-dashpot system is set up with mass m = 1(kg), spring constant k = 17 16 (N/m), and damping constant b = 1 2 (N s /m). The mass is pulled to 1 m to the right of the equilibrium and then pushed and released at a velocity of 0.75m/s to the right. (a) What is the position x(t) of the mass at time t seconds after being released? Answer in amplitude phase form x(t) = Ae&minus;pt cos(&omega;t &minus; &phi;). (b) What are the values of the (pseudo)-period P, (in seconds) the (pseudo)- frequency &nu;, (in cycles per second) and the time lag t0 (in seconds) for x(t), ? (c) When are the first 4 times that the mass crosses the equilibrium position? (d) Sketch x(t) (use the data you found above). ",
                                        "unit_id":"c8b939e3cdd94d52bc6e65fa8aa7b3b7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4820a9d7bef8409b982c6280e473e1bb",
                                "vertical_name":"1. Sinusoidal functions"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ccf46aaf516d495e89ddc5eb9d7465e7",
                        "sequential_name":"7 Damped Harmonic Oscillators",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Damped harmonic oscillator",
                                            "Characteristic equation",
                                            "Root",
                                            "Damping"
                                        ],
                                        "data":" Objectives Translate properties of the roots of the characteristic equation for a second order mass/spring/dashpot system into corresponding damping conditions . Solve second order homogeneous linear ODE with a repeated characteristic root . Graph the solutions to a damped harmonic oscillator. Compare different qualitative behaviors of an underdamped , overdamped , and a critically damped spring-mass-dashpot system. Understand the effects of damping on both the frequency and amplitude of oscillations. ",
                                        "unit_id":"3f85720a71954553b4b5542de3ac3099",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c49c466fcc354bf89a0e1562f0e75f18",
                                "vertical_name":"1. Objectives"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Simple harmonic oscillator",
                                            "Natural frequency",
                                            "Resonant frequency",
                                            "Characteristic polynomial",
                                            "Oscillator",
                                            "System",
                                            "Basis",
                                            "Nt"
                                        ],
                                        "data":" Let us review what we have learned about the spring-mass-dashpot system with no external force. We will first review the cases where oscillations are present. If there is no damping, the DE that models the position of the mass is mx&uml;+kx = 0(m,k&gt;0) standard linear form: x&uml;+kmx = 0 or x&uml;+&omega;n2x = 0where &omega;n:=km Summary of results: Characteristic polynomial: P(r)=mr2+k (defined up to a constant multiple) Roots: &plusmn;i&omega;n, where &omega;n=km. Basis of solution space: ei&omega;nt, e&minus;i&omega;nt. Real-valued basis: cos&omega;nt, sin&omega;nt. General real solution: acos&omega;nt+bsin&omega;nt, where a,b are real constants =Acos(&omega;nt&minus;\u03d5), where A&gt;0 and \u03d5 are real constants. In other words, the real-valued solutions are all the sinusoidal functions of angular frequency &omega;n. This system, or any other system governed by the same DE, is also called a simple harmonic oscillator . The angular frequency &omega;n is also called the natural frequency (or resonant frequency ) of the oscillator. ",
                                        "unit_id":"a471202f5a3146e7bec2c64951440e81",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8a5bb477c31142b18b8bec1afbe87213",
                                "vertical_name":"2. Simple harmonic oscillator"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Quadratic formula",
                                            "Characteristic polynomial"
                                        ],
                                        "data":" When damping is present, the DE that models the position of the mass is mx&uml;+bx\u02d9+kx = 0m,b,k&gt;0 Summary of results: Characteristic polynomial: mr2+br+k Roots: &minus;b&plusmn;b2&minus;4mk2m (by the quadratic formula) =&minus;b2m&plusmn;(b2m)2&minus;&omega;n2 There are three cases, depending on the sign of b2&minus;4mk. The behavior of the solutions in these 3 cases are qualitatively different in these 3 cases. ",
                                        "unit_id":"baacd5961e7c4cdd9087782f90a32a08",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7ac2a86f55d041ec92e90f3462f3b689",
                                "vertical_name":"3. Damped Harmonic Oscillator"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Quotation marks",
                                            "Real part",
                                            "Imaginary part",
                                            "Phase lag",
                                            "Angular frequency",
                                            "Negative sign",
                                            "Circular frequency",
                                            "Low frequency",
                                            "High frequency",
                                            "Fake foot",
                                            "Square root",
                                            "Natural frequency",
                                            "Negative number",
                                            "Squared",
                                            "Exponential function",
                                            "Initial condition",
                                            "Periodic function",
                                            "Pt",
                                            "Angular",
                                            "Real",
                                            "Remember",
                                            "Minus",
                                            "Pseudo",
                                            "Negative",
                                            "Complex",
                                            "Frequency",
                                            "Ll",
                                            "Period",
                                            "Axis",
                                            "Natural",
                                            "Question",
                                            "Decay",
                                            "Sinusoid",
                                            "Formula",
                                            "Terrible",
                                            "Point",
                                            "Number",
                                            "Fake",
                                            "Curve",
                                            "Root",
                                            "Called",
                                            "Thing",
                                            "Condition",
                                            "Exponential",
                                            "Oscillation",
                                            "Periodic",
                                            "Basis",
                                            "Picture",
                                            "Call",
                                            "Dt",
                                            "Term",
                                            "Cosine",
                                            "Damping"
                                        ],
                                        "data":" Case 1:&thinsp;&thinsp; b2&lt;4mk underdamped There are two complex roots, and we will give names to the real and imaginary parts. Since the real part is always negative, we call it &minus;p, with p=b2m. The imaginary part is either positive or negative of the damped frequency &omega;d, given by &omega;d := 4mk&minus;b22m = &omega;n2&minus;p2 ,where &omega;n=kmis the natural frequency. Note that both p and &omega;d are positive. Summary of results: Roots: &minus;p&plusmn;i&omega;d Basis of solution space: e(&minus;p+i&omega;d)t, e(&minus;p&minus;i&omega;d)t Real-valued basis: e&minus;ptcos(&omega;dt), e&minus;ptsin(&omega;dt). General real solution: e&minus;pt(acos(&omega;dt)+bsin(&omega;dt)), where a,b are real constants. =Ae&minus;ptcos(&omega;dt&minus;\u03d5) for some A and \u03d5. This is a sinusoid multiplied by a decaying exponential. Each nonzero solution tends to 0, but changes sign infinitely many times along the way. The system is called underdamped , because there was not enough damping to eliminate the oscillation completely. The damping not only causes the solution to decay exponentially, but also changes the frequency of the sinusoid. The new angular frequency, &omega;d, is called damped (angular) frequency (or sometimes pseudo (angular) frequency as in the video). The damped frequency &omega;d is less than the natural (undamped) frequency &omega;n, as evident from the formula &omega;d=&omega;n2&minus;p2. When b=0,&thinsp; &omega;d is the same as &omega;n. The damped solutions are not actually periodic: they don't repeat exactly, because of the decay. Therefore,2&pi;/&omega;d is called the pseudo-period . Note on video: In the following video, Prof Mattuck uses &omega;1 instead of &omega;d for the damped frequency, and &omega;0 instead of &omega;n for the natural frequency. By circular frequency he means angular frequency. So here is my question. So in the damped case how do I get-- I want to be sure that I'm getting oscillations. When do I get oscillations if-- well, we get oscillations if those roots are really complex and not masquerading. Now, when are the roots going to be really complex? This has to be-- the inside has to be negative. P squared minus omega squared must be negative. P squared minus omega naught squared must be less than 0, so that we're taking the square root of a negative number, and we're getting real complex roots, really complex roots. In other words, now this says, remember these numbers are all positive. P and omega naught are positive. So the condition is that P should be less than omega naught. In other words, the damping should be less than the frequency, the angular frequency. Except P is not the damping. It's 1/2 the damping or twice-- it's 1/2 the damping. And it's not really the damping either, because it involved the n, too. You better just call it P. Naturally, I could write the condition out in terms of C, M, and K. So your book does that, but I'm not going to. It gives it in terms-- gives us-- it gives it in terms of C, M, and K-- which somebody might want to know, but we don't have to do everything here. OK. So let's assume that this is true. Then what does a solution look like? Well, we already experimented with that last time. I'm going to first draw it-- remember, there was some guiding thing which was an exponential. And then down here we wrote the negative. So this was an exponential. In fact, it was the exponential e to the negative PT. And in between that, the curve tried to do its thing. So the solution then looks sort of like this. It oscillated, but it had to use that exponential function as its guidelines, as its amplitude, in other words. Now, this is a really, truly, terrible picture. It's so terrible, it's unusable. OK. This picture never happened. Unfortunately, this is not my forte, along with a lot of other things. All right. Let's try better. Here's our better picture. OK. There's the exponential. At this point, I'm supposed to have a lecture demonstration. It's supposed to go up on the thing so you can all see it. But then you wouldn't be able to copy it. So at least we're on even terms now. OK. How does the actual curve look? Well, I'm just trying to be fair. That's all. OK, after a while, the point is-- let's try to-- so just so we have something to aim at, let's say, OK, here we're going to go [GROANING]. We're going to get down through there. Then this is our better curve. OK. So I am a solution, a particular solution satisfying this initial condition. I started here, and that was my initial velocity. The slope of that thing gave me the initial velocity. Now, the interesting question is-- the first, in some ways the most interesting question, though there'll be others, too, is-- what is this spacing? Well, that's a period. And now the period would be-- it's 1/2 a period. I clearly ought to think of this as the whole period, so let's call that a-- I'm going to call this pi over-- so this spacing here, from there to there, I'll call that pi divided by omega 1, because this, from here to here, should be, I hope, twice that, 2 pi over omega 1. Now, my question is-- so this, for a solution, in fact, is going to cross the axis regularly in that way. My question is, how does this period-- so this is going to be its 1/2 period. I'll put period in quotation marks, because this isn't really a periodic function, because it's decreasing all the time in amplitude. But it's trying to be periodic. At least it's doing something periodically. It's crossing the axis periodically. So this is the 1/2 period. 2 pi over omega 1 would be its full period. What I want to know is, how does that 1/2 period-- or how does-- omega 1 is called its pseudo frequency. This should really be called its pseudo period. Everything's pseudo. Everything is fake here, like the amoeba has its fake foot, and stuff like that. OK. So this is its pseudo period, pseudo frequency, pseudo angular frequency-- but that's hopeless. I guess it should be angular pseudo frequency or pseudo-- I don't know how you say that. I don't think pseudo is a word all by itself, not even in 18.03. OK. Here's my question. If the damping goes up-- this is the damping term. If the damping goes up, what happens to the pseudo frequency? The frequency is how often the curve cross-- this is high frequency, and this is low frequency, OK? So my question is, which way does the frequency go? If the damping goes up, does the frequency go up or down? Down. Down. I mean, I'm just asking you to answer intuitively, on the basis of your intuition, about how this thing explains-- how this thing goes. And now let's get the formula. What, in fact, is omega 1? What is omega 1? The answer is, when I solve the equation-- so R is now-- so in other words, if omega 1 is-- sorry, if I have P, if P is no longer 0, as it was in the undamped case, what is the root now? OK, well, the root is minus P plus or minus the square root of P squared. Now, I'm going to write it this way. Minus-- to indicate that it's really a negative number-- omega squared minus P squared. Now, I'm going to call this-- because, you see, when I change this to sines and cosines, the square root of this number is what's going to become that new frequency. I'm going to call that minus P plus or minus the square root of minus omega 1 squared. That's going to be the new frequency. And therefore, the root is going to change, so that the corresponding solution then is going to look how? Well, it's going to be e to the negative PT times-- let's write it out first in terms of sines and cosines-- times the cosine of-- well, the square root of omega 1 squared is omega 1. But there's an i out front because of the negative sign in front of that. So it's going to be the cosine of omega 1 T plus C 2 times the sine of omega 1 T. Or if you prefer to write it out in the other form, it's e to the minus PT times some amplitude-- which depends on C1 and C2-- times the cosine of omega 1 T minus the phase lag. Now, when I do that, you see the omega 1 is this pseudo frequency. In other words, this number omega 1 is the same one as I've identified here. And why is that? Well, because what are two successive times-- suppose it crosses-- suppose the solution crosses the x-axis for the first-- or the y-- sorry, the T axis-- for the first time at the point T1, what's the next time it crosses at T2? Let's jump to the two times it crosses. So I want this to be a whole period, not a half period. What's T2? Well, I say that T2 is nothing but 2 pi divided by omega 1. And you can see that, because when I plug in-- if it's 0-- if I have a point where it's 0 at-- so omega 1T minus phi, when will it be 0 for the first time? Well, that will be when the cosine has to be 0. So it'll be some multiple of-- it will be, say, pi/2. Then the next time this happens will be-- if that happens at T1, then the next time it happens will be at T1 plus 2 pi divided by omega 1. That will also be pi over-- that will be pi/2 plus how much? Plus 2 pi, which is the next time the cosine gets around and is doing its thing, becoming 0 as it goes down, not as it's coming up again. In other words, this is what you should add to the first time to get this second time that the cosine becomes 0, coming in the direction from top to the bottom. So this is, in fact, the frequency with which it's crossing the axis. ",
                                        "unit_id":"1c134f9d7e2a4665984f56c11c745a82",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"11de3b588698440ab967ee092d29505f",
                                "vertical_name":"4. Case 1: underdamped"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial conditions",
                                            "Characteristic polynomial",
                                            "Initial condition",
                                            "Spring",
                                            "Mass",
                                            "Equilibrium point",
                                            "Exponential",
                                            "Eventually",
                                            "Damped",
                                            "Equation",
                                            "Root",
                                            "Constant",
                                            "Position",
                                            "Equilibrium",
                                            "Negative",
                                            "Positive",
                                            "Velocity",
                                            "Basically",
                                            "General",
                                            "Real",
                                            "Attracted",
                                            "Maximum",
                                            "Time",
                                            "Point",
                                            "End",
                                            "Reach",
                                            "Star",
                                            "Form",
                                            "Case",
                                            "Starting",
                                            "Back",
                                            "System"
                                        ],
                                        "data":" Case 2: b2&gt;4mk overdamped . In this case, the roots &minus;b&plusmn;b2&minus;4mk2m are real and distinct. Both roots are negative, since b2&minus;4mk&lt;b. Call them &minus;s1 and &minus;s2. General real solution: ae&minus;s1t+be&minus;s2t, where a,b are real constants. As in all the other damped cases, all solutions tend to 0 as t&rarr;+&infin;. The term corresponding to the less negative root eventually controls the rate of return to equilibrium. The system is called overdamped ; there is so much damping that it is slowing the return to equilibrium. Welcome to this recitation on damped harmonic oscillators. So here you're asked to assume an unforced overdamped spring mass dashpot that is started at x dot of 0 equals to 0. So rest. And to show that it never crosses the equilibrium position x equals to 0 for t larger than 0. The second part of the problem asks you to show that regardless of the initial condition this overdamped oscillator can not cross the equilibrium position more than one time, more than once. So why don't you pause the video, try to think about this problem. And I'll be right back. Welcome back. So the system that we're looking at is a spring mass dashpot. That would be written in this form, second order differential equation. Let's assume that we have positive constant coefficients here. And basically to solve this you would be considering the methods that we saw before. And the general solution would just be written in the form of C1 exponential lambda 1, the C2 exponential lambda 2. With C1, C2 just two constants that would be determined by the initial condition. Lambda 1, lambda 2 would be here the roots of the characteristic polynomial that you would have found there. Given that we're looking at an overdamped unforced spring mass dashpot, you can actually show that lambda 1 and lambda 2 would be both real and negative. And here we can just right away just say that basically lambda 1 and lambda 2 would be less than 1. And we'll keep that aside for now. And I'll use this later. So this is just setting up the problem. So now, what was the question? The question was to show that if we start this system with initial condition x dot of 0 equals to 0, which corresponds to lambda 1 C1 less lambda 2 C2 equals to 0, then the system cannot cross the equilibrium position x equal to 0 for t larger than 0. So let's just start by assuming that the system crosses the equilibrium position. So for example, let's look for t star such that x of t star is equal to 0. So x of t star, we know its form already. We have the general form of x of t star. That's basically C1 exponential lambda 1 t star plus C2 equilibrium lambda 2 t star. And so we can massage this equation-- going to do this here-- and so basically end up with minus C2 over C1 equals to exponential of lambda 1 minus lambda 2 t star. So now let's just find our t star by applying the log to both sides of this equation. So we get t star equals to the log of minus C2 over C1 and we divide by this lambda 1 minus lambda 2. So here, this tells us that if t star exists, which mean that if the log is defined and these minus C2 over C1 basically is positive, then we only have one value of t star possible. So here we actually are answering the second part of this question, number two, which was telling us that regardless of the initial conditions, so regardless of coefficients C1 and C2 that we would have, if a t star exists, there is only one. And so that means that the system would not cross this equilibrium position more than once. But I'll come back on that. But now let's go back to what we were asked to do in the first part, where we basically now go back to our x dot of 0 equals to 0, which basically gave us that minus C2 over C1 was equal to lambda 1 one over lambda 2. And the way we define lambda 1 over lambda 2 here gives us that minus C2 over C1 is less than 1, which means that the log is going to be negative. What happens in the denominator? Lambda 1 minus lambda 2 would be positive. So with this initial condition, we would end up with a t star that would be negative. So basically x is never equal to 0 again for t larger than 0, given these initial conditions. So that finishes the first part of the problem. So I'll go back on the physics of it in a moment with a graph. So starting from this initial condition, x can never be equal to 0 because the only t star we can find it would be negative. So for t larger than 0, it does not cross the equilibrium point. The second part of the problem-- so this was one-- the second part of the problem just comes from the fact that if I labeled this star, star tells us that if minus C2 over C1 is equal to or larger than 0, then only one t star exists. So if we have a solution, there is only one. And this is regardless of the initial condition that we would be given. So the system cannot cross the equilibrium position more than once. So now let's look at what we're doing here graphically. So let's assume that we are for example, starting with initial condition here, where we're stretching our spring. But we start with 0 velocity. So x dot of 0 equals to 0. That was the system that we had. Then this is an overdamped case where both basically exponentials are decaying to 0. And so we would have a solution that would go to 0 quickly. It would be damped. And so this would be part 1. Now let's look at what would happen if we start with other initial conditions. So for example, starting with a velocity-- starting from the same point with a much bigger velocity. Than the system will basically go up, but eventually it has to go down. It wouldn't have this shape. It basically would have to go down and not to 0's position. And when it reaches, you can show that again, the derivative of x can reach 0 only once. And at that point, you're then back to the initial conditions that you had in the first part of the question. And so you can then from here argue again that you cannot cross the 0 equilibrium point after reaching a maximum. Now what if we had a stretch that would be giving a negative velocity to the mass? And a very strong negative velocity. Then the system also want to go back to 0, but could overshoot. And the overshoot would also generate a unique time at which the derivative would be equal to 0. And after that point, you would be back to the same argument we had before, where the solution would have to go towards 0, but never crosses it. So we can have various configuration. And here I start with this point, where you could also start other initial conditions where you could have as well something that would be, for example, a very strong positive where again here you would have an overshoot. But then a solution would be attracted by the x equal to 0 solution. And of course you can also start from the equilibrium if you're not imposing any initial velocity, it would you stay there. Because it's not forced. But if you're imposing a velocity, then you would have other trajectories of the kind. For example, where again, it would go up, but then be attracted back by the 0 solution. So that's the typical behavior for a damped oscillator where basically there is no oscillation. But this solution is just attracted to rest. And you could have cases of overshoot. But it can show that after the over shoot, the velocity would reach 0 maximum, and then would be attracted back to the 0 solution with never crossing it. And that ends this recitation. ",
                                        "unit_id":"b7626f93b6e54a27905c374ca55778b1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"39331324ea15418eb5c046c1012fd8be",
                                "vertical_name":"6. Case 2: overdamped"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Critically damped",
                                            "Linear combination",
                                            "Spring constant",
                                            "Double prime",
                                            "Left hand side",
                                            "Product rule",
                                            "Positive number",
                                            "Differential equation",
                                            "Characteristic equation",
                                            "Negative numbers",
                                            "Characteristic polynomial",
                                            "Double root",
                                            "Real root",
                                            "Differentiate",
                                            "Prime",
                                            "Real",
                                            "Case",
                                            "Ode",
                                            "Equation",
                                            "Notice",
                                            "Negative",
                                            "Polynomial",
                                            "Repeated",
                                            "Ar",
                                            "Special",
                                            "Equal",
                                            "Minus",
                                            "Term",
                                            "Basis",
                                            "General",
                                            "Root",
                                            "Squared",
                                            "Pt"
                                        ],
                                        "data":" Case 3:&thinsp; b2=4mk critically damped . The critically damped case happens when b2=4mk, at the border between the underdamped case when b2&lt;4mk, and the overdamped case, when b2&gt;4mk. There is a repeated (negative) real root, which we denote by &minus;p with p=b2m as before. The repeated root gives only one exponential solution e&minus;bt/2m. What is another solution? For a second order (homogeneous linear constant coefficient) ODE with repeated (real) characteristic roots r, a basis of the solutions is ert, tert, giving the general (real) solution c1ert+c2tert. Example 7.1&emsp;&emsp; Solve x&uml;+4x\u02d9+4x=0. Worked Solution The characteristic polynomial is p(r)=(r+2)2 has r = -2 as a repeated root. The only exponential solution is e&minus;2t. Another solution, which is not a constant multiple of e&minus;2t, is given by te&minus;2t . We will not check this for now, you know how to do it: plug in and use the product rule. So the general solution is the linear combination of these two basis solutions: x(t)=c1e&minus;2t+c2te&minus;2t or x(t)=e&minus;2t(c1+c2t). Hide Summary of results for the critically damped case: Basis of solution space: e&minus;pt, te&minus;pt. General real solution: e&minus;pt(a+bt), &thinsp; where a,b are real constants. What happens to the solutions as t&rarr;+&infin;? The solution e&minus;pt tends to 0. So does te&minus;pt=tept: even though the numerator t is tending to +&infin;, the denominator ept is tending to +&infin; faster (in a contest between exponentials and polynomials, exponentials always win). Thus all solutions eventually decay. This case is when there is just enough damping to eliminate oscillation. The system is called critically damped. Now, what's critically damped? It must be the case just in between these two. Neither complex, nor the root's different. It's the case of two equal roots. So r squared plus Ar plus B equals 0 has two equal roots. Now, that's a very special equation. Suppose we call the root-- since all of these-- notice these roots in this physical case-- the roots always turn out to be negative numbers or have a negative real part. I'm going to call the root a. So r equals negative a, the root. a is understood to be a positive number. I want that root to be really negative. Then the equation looks like-- the characteristic equation is going to be r plus a if the root is negative a, squared because it's a double root. And that means the equation is of the form r squared plus 2 times ar plus a squared equals 0. In other words, the ODE looked like this. The ODE looked like y double prime plus 2a y prime plus-- in other words, the damping and the spring constant were related in this special way that for a given value of the spring constant, there was exactly one value of the damping which produced this in between case. Now, what's the problem connected with it? Well, the problem, unfortunately, is staring us in the face. When we want to solve it, the problem is that we have a solution, but it is y equals e to the minus a t. I don't have another root to get another solution with. And the question is, where do I get that other solution from? So the way to do it is-- the solution we know is e to the minus at. So we're going to look for a solution to this differential equation. That's the differential equation. And the solution we're going to look for is of the form e to the negative a t times u. Now, you're going to have to make a calculation like this several times in the course of the term so that what-- do it this way. y prime equals-- differentiate minus ae to the minus a t u plus e to the minus a t u prime. And then differentiate again. The answer will be a squared-- you differentiate this-- a squared e to the negative a t. I'll have to do this a little fast. But the next term will be minus-- so this times u prime. And from this, you're going to get another minus. So combining what you get from here and here, you're going to get minus 2a e to the minus a t u prime. And then there's a final term which is-- comes from this e to the minus a t u double prime-- two of these because a piece here and a piece here combine to make that. And now to plug into the equation, you multiply this by 1. In other words, you don't do anything to it. You multiply this line by 2a. And you multiply that line by a squared. And you add them. On the left-hand side, I get 0. What do I get on the right? Notice how I've arranged the work so it adds nicely. This is a squared times this plus 2a times that plus 1 times that makes 0. 2a times this plus 1 times this makes 0. All that survives is e to the a t u double prime, and therefore e to the minus a t u double prime is equal to 0. So please tell me, what's u double prime? It's 0. So please tell me, what's u? It's c1t plus c2. Now, that gives me a whole family of solutions. Just t would be enough because all I'm doing is looking for one solution that's different from e to the minus a t. And that solution, therefore, is y equals e to the minus a t times t. And there's my second solution. ",
                                        "unit_id":"318cc81ecf0b4beeb04fddcc6cd2d99a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f3b9d0ef1e5241d88750719c17b6e0b1",
                                "vertical_name":"7. Case 3: critically damped"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Simple harmonic oscillator",
                                            "Critically damped",
                                            "Characteristic polynomial",
                                            "Root",
                                            "Complex",
                                            "Case",
                                            "Ode",
                                            "System",
                                            "Table",
                                            "Basis"
                                        ],
                                        "data":" The DE that models the position of the mass in a spring-mass-dashpot system is mx&uml;+bx\u02d9+kx = 0m,b,k&gt;0, The following table summarizes the various damping conditions for a spring-mass-dashpot system. Case Roots Situation b=0 two complex roots &plusmn;i&omega;n undamped (simple harmonic oscillator) b2&lt;4mk two complex roots &minus;p&plusmn;i&omega;d underdamped (damped oscillator) b2=4mk repeated real root &minus;p,&minus;p critically damped b2&gt;4mk distinct real roots &minus;s1,&minus;s2 overdamped In the table above, p=b2m, and &omega;d and &omega;n are related as follows: &omega;d = 4mk&minus;b22m = &omega;n2&minus;p2 ,where &omega;n=km. Problem 8.1&emsp;&emsp; Analyze the spring-mass-dashpot system with m=1, b=2, k=4. Note: An analysis of a second order (homogenous linear constant coefficient) ODE includes determining whether the system is underdamped, overdamped, or critically damped, and if the system is underdamped, determining the damped frequency &omega;d. But sometimes you may only be interested in the qualitative behavior of a solution. In this case, you could save the effort of computing the damped frequency! Solution: The ODE is x&uml;+2x\u02d9+4x=0. Characteristic polynomial: P(r)=r2+2r+4=(r+1)2+3. Roots: &minus;1&plusmn;i3. These are complex, so the system is underdamped . Basis of the solution space: e(&minus;1+i3)t, e(&minus;1&minus;i3)t. Real-valued basis: e&minus;tcos(3t), e&minus;tsin(3t). General real solution: e&minus;t(acos(3t)+bsin(3t)), where a,b are real constants. The damped frequency is 3. ",
                                        "unit_id":"83778580a4d7420ba35c988a8abfdf7c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d56d1b1a70c5436eaaf66c46f0a97073",
                                "vertical_name":"8. Summary"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial conditions",
                                            "System",
                                            "Case",
                                            "Compare"
                                        ],
                                        "data":" Now let's try to qualitatively compare the different cases of damping by comparing the plots of solutions to x&uml;+bx\u02d9+x=0 with initial conditions x(0)=1, x\u02d9(0)=0. We'll consider the three cases b=1, 2, 3 and write xb(t) for the solution to x&uml;+bx\u02d9+x=0 with the given initial conditions. By this point you should be able to work out the solutions to the system and find that x1(t) =e&minus;t/2(cost32+13sint32), x2(t) =e&minus;t(1+t), x3(t) =(12+325)e&minus;3+52t+(12&minus;325)e&minus;3&minus;52t. Looking at these solutions it's easy to see that x1 is the solution to an underdamped system, x2 is the solution to a critically damped system, and x3 is the solution to an overdamped system. Now let's compare the graphs of each of these solutions. Figure : Plots of the solutions to x&uml;+bx\u02d9+x=0 with initial conditions x(0)=1, x\u02d9(0)=0. The underdamped case where b=1 is black , the critically damped case where b=2 is blue , and the overdamped case where b=3 is orange . Notice that the graphs of the overdamped and critically damped cases are qualitatively similar. ",
                                        "unit_id":"2f5f8605878a4e689d8be8a44adf1aaa",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"eb368d2b46e142b5bb84f0158b4f5ba9",
                                "vertical_name":"13. Comparing damping qualitatively"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d9f7cb2de86349f790bcd2de08257128",
                        "sequential_name":"Recitation 7",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial conditions",
                                            "Due date",
                                            "Mechanical systems",
                                            "Critical damping",
                                            "Damping constant",
                                            "Discussion forum",
                                            "Vibration",
                                            "Forum",
                                            "Damping",
                                            "Equilibrium",
                                            "Share",
                                            "System",
                                            "Settle"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will post solutions after the due date, but we encourage you to endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. 18.03 Recitation 7 Damped harmonic oscillators 1. (a) An important use of damping is to bring a system into equilibrium. In many mechanical systems, vibrations are a noisy nuisance or even dangerous. For example if your airplane wing starts to vibrate, then you want it to settle down promptly. The spring-mass-dashpot mx&uml; + bx\u02d9 + kx = 0 is our basic way of modeling vibrations. We will study how the damping constant b affects the rate at which vibrations settle down in the mathlet Damped Vibration. Use the sliders to set the values of m = 1/2, b = 1 and k = 1/2 and drag the point to change the initial conditions to x(0) = 1, x\u02d9(0) = &minus;1. Use the crosshairs by mousing over the graph to see x and t values; report to two decimals the time it takes before the value settles to equilibrium. For this purpose we will define &ldquo;reaching equilibrium\" to mean when the system reaches the range &plusmn;.005. (Look at the system at scale x = 1 to get the overall picture and then zoom in to scale .01 to get a more accurate view of the behavior near x = 0.) Try this for b = 0.6, 0.8, 1.0, 1.2, and 1.4. Note that the value b = 1.0 is the case of critical damping. (b) Which value of b brings the system to equilibrium fastest? For this purpose we will define &ldquo;reaching equilibrium\" to mean when the system reaches the range &plusmn;.005. Report this &ldquo;best&rdquo; value of b for the initial conditions (x(0), x\u02d9(0)) = (1, &minus;1) above and also for (x(0), x\u02d9(0)) = (0, &minus;1) and (x(0), x\u02d9(0)) = (1, 0). By what percentage do the best values of b differ for the given initial conditions? 2. A series of problems related to oscillations of a boat in the water can be found interspersed between a series of videos that introduce the problem, context, and model. ",
                                        "unit_id":"c77642312cd74fe6bc993f7a2016f3cb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4e4f9689e44f40b68b91096939ef037e",
                                "vertical_name":"1. Damped harmonic oscillators"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Simple harmonic oscillator",
                                            "Double dot",
                                            "Initial conditions",
                                            "Angular acceleration",
                                            "Rotation angle",
                                            "Differential equation",
                                            "Linear approximation",
                                            "Oscillatory motion",
                                            "Linear modeling",
                                            "Rock back",
                                            "Rotational form",
                                            "Square root",
                                            "Computer software",
                                            "Cross section",
                                            "Positive sign",
                                            "Grows exponentially",
                                            "Linear motion",
                                            "Unstable equilibrium",
                                            "Rotational motion",
                                            "Negative sign",
                                            "Nonlinear function",
                                            "Tangent line",
                                            "Stable equilibrium",
                                            "Mathematical model",
                                            "Rotation",
                                            "Back",
                                            "Positive",
                                            "Equation",
                                            "Angle",
                                            "Quadrant",
                                            "Rocking",
                                            "Equilibrium",
                                            "Motion",
                                            "Slope",
                                            "Negative",
                                            "Theta",
                                            "Function",
                                            "Stable",
                                            "Line",
                                            "Sitting",
                                            "Depends",
                                            "Experienced",
                                            "Torque",
                                            "Estimate",
                                            "Damping",
                                            "Describe",
                                            "General",
                                            "Ship",
                                            "Important",
                                            "Model",
                                            "Boat",
                                            "Constant",
                                            "Side"
                                        ],
                                        "data":" If you have been in a boat before, you will probably have experienced it rocking in the water like this, for example. The general motion of the boat is difficult to describe mathematically, because it can bob up and down in the water, move horizontally, and rotate around various axes. Today, we'll focus on a single element of the boat's motion-- namely, how it rotates from side to side around an axis parallel to the boat's length. This oscillatory motion is modeled by a function theta of t, where theta is the rotation angle of the boat away from its flat position and t is time. When the boat is sitting flat in the water, it is in an equilibrium position, because it just sits there and does not rotate. For this boat, we know that this equilibrium is stable, because if I push down on one side of the boat and then release it, the boat rotates back towards its flat equilibrium position and oscillates around it. We can use this timer to estimate the period of these oscillations. We can also use computer software to track the rotation angle of the boat over time to plot the function theta of t. Ready to count the number of oscillations? Go! 1, 2, 3, 4, 5, 6. Stop. We have observed that it took about 12 and 1/2 seconds for the boat to rock back and forth six times. Therefore the period of the boat's oscillation is approximately 12 and 1/2 seconds divided by 6, which is just above 2 seconds. Based on our experiments, we have determined that this boat has a stable equilibrium, and we have a good estimate for the period of this boat's oscillations around that equilibrium. However, what if we wanted to design a new ship with a very different shape? We would need to ensure that this boat had a stable equilibrium, because if it had an unstable equilibrium, it would tip to one side when it entered the water and might capsize. This actually happened to a large Swedish warship called the Vasa in 1628. The Vasa was designed to be a tall and narrow ship. But the designers did not realize that it had an unstable equilibrium. Soon after entered the water, it tipped over and sank. Once we have determined whether a boat has a stable equilibrium, we care about the period of the boat's oscillations around this equilibrium. This is important because if the oscillations are too fast, the boat will be uncomfortable for passengers or could damage cargo. What we need is a mathematical model that will yield the differential equation whose solution is theta of t. This will allow us to predict the stability and rotational motion of a boat of any shape so that we can analyze the behavior of boats such as this one or optimize the design of a new boat. In this video, we will use linear modeling to predict how a boat rocks from side to side in the water around its flat equilibrium position. In the previous video, we saw that we could describe this rocking motion using the rotation angle of the boat, theta, which is a function of time, t. Recall that we defined theta to be the angle between this flat waterline and this line that rotates with the boat. We use the convention that theta is positive when the boat is rotated clockwise and that theta is negative when the boat is rotated counterclockwise. We also saw that when the boat is sitting flat in the water at theta equals 0, it is in an equilibrium position. So how do we determine the function theta of t? Well, we know that the motion of the boat is governed by Newton's second law. Recall that for linear motion, Newton's second law says that the mass, m, times acceleration, x double dot, of an object is equal to the force, F, applied to that object. However, we are interested in the rotational motion of the boat, and so we need to use the rotational form of Newton's second law. This states that the moment of inertia, I, times the angular acceleration, theta double dot, of an object is equal to the torque, tau, applied to that object. Note that the moment of inertia is the rotational analog of mass, and so the larger the moment of inertia of an object is, the harder it will be to rotate. Similarly, the torque is the rotational analog of force, and so if you apply a larger torque to an object, you will cause a greater angular acceleration. We now have a second-order differential equation whose solution is theta of t. For a given boat, the moment of inertia will be a constant. However, the torque will be a function of theta. Therefore, before we can solve this differential equation, we need to figure out how the torque depends on theta. To do this, let's recall our observations of the rocking boat in the previous video. We saw that when the boat was sitting at theta equals 0, in its equilibrium position, it just sat there and did not rotate. So the angular acceleration of the boat is 0. And Newton's second law then tells us that the torque when theta equals 0 is equal to 0. So if I draw a graph of the torque versus theta, this tells us that the torque must pass through the origin of this graph. We also observed that our boat had a stable equilibrium. This was because when the boat was rocking in the water, we observed that the water around the boat acted like a spring. For positive rotation angles, the boat experienced a negative torque, acting to rotate the boat back towards its equilibrium position. So on this graph, it means that the torque passes through the bottom right quadrant. Similarly, we observe that for negative rotation angles, the boat experienced a positive torque, again, acting to rotate the boat back towards its equilibrium position. So we also know on this plot that the torque passes through the top left quadrant. In general, the torque will be a nonlinear function of theta. And it might look like this, for example. However, we are mostly interested in the boat's behavior around its equilibrium of theta equals 0. Therefore all we really care about is how the torque behaves for small rotation angles around this equilibrium. Therefore we can approximate this nonlinear function using a tangent line at theta equals 0. This gives a linear approximation for the torque of negative k times theta. k is a positive constant such that negative k is the slope of this tangent line. Remember that this linear approximation is only valid for small rotation angles. We can now plug this linear approximation back into our second-order differential equation we obtained using Newton's second law. This gives I theta double dot plus k theta equals 0. You will recognize that this is the equation of a simple harmonic oscillator. And so we know that it yields oscillatory solutions around theta equals 0. We also know that the period, p, of these oscillations is equal to 2 pi divided by the square root of k over I. I should point out that if, in the future, we wanted to perform a more detailed analysis of the system, we should include a damping term in this equation. This is because we observed in the previous video that when the boat was rocking, the amplitude of the boat's oscillations decayed over time. However, for this video, we will neglect the effects of damping and just concentrate on this simple equation, as it still describes the motion of the boat very well. Up until this point, we have been considering a boat that has a stable equilibrium. However, this will not always be the case, because we will later see that the shape of the boat dictates whether the boat has a stable or unstable equilibrium. In the case of an unstable equilibrium, the torque near that equilibrium will have a positive slope instead of a negative slope. This positive slope will mean that this negative sign becomes a positive sign, and so this positive sign becomes a negative sign, giving the equation I theta double dot minus k theta equals 0. This differential equation yields very different solutions. For example, consider the initial conditions theta at time t equals 0 equals 0 and theta dot at time t equals 0 equals some constant c. These initial conditions correspond to the boat starting flat in the water but with some initial angular velocity-- for example, if you gave the boat a slight kick. I now invite you to pause the video and try and solve this differential equation with these initial conditions. Cross section of a boat and the rotation angle &theta; As explained in the video, the rotational motion of a boat rocking sideways close to its flat equilibrium position is described by the linear approximation of the rotational version of Newton's second law: I&theta;&uml; = &tau;(&theta;)where&tau;(&theta;)is the torque &sim; &minus;k&theta;where k&gt;0,&theta;&lt;&lt;1, where I is the moment of inertia of the boat, &tau; is the torque exerted on the boat, and &theta; is the rotation angle as show in the figure above. The moment of inertia and how the torque depends on &theta; are determined by the geometry and distribution of mass of the boat. (Here, we are referring to (the component of) the moment of inertia and (the component of ) torque relevant to the sideways rocking of the boat&ndash;rotation along an axis parallel the long side of the boat.) Welcome back. If you solve this differential equation with these initial conditions, you will find that theta t grows exponentially. This means that if your boat has an unstable equilibrium, as soon as you put it in the water, it will start tipping over to one side. Therefore, if you were designing the shape of a new boat, it is incredibly important to ensure that your boat has a stable equilibrium, because if it has an unstable equilibrium, when it enters the water, it will tip to one side and would be at risk of capsizing. Of course, once the boat tips far enough away from equilibrium, we would need to use a different model to predict the boat's behavior, since our model is only valid for small rotation angles. All that remains is to figure out how the constant k depends on the shape of the boat. This will allow us to analyze a boat of any shape to predict whether it will have a stable or unstable equilibrium and, if it has a stable equilibrium, to predict the period of the boat's oscillations around this equilibrium. ",
                                        "unit_id":"b6a3a70c38dd4875ac3e0fe1d57de3c2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"adc0c0a94c7244c08c2761428f57fa91",
                                "vertical_name":"3. Real life application: the rocking motion of a boat"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Unstable equilibrium",
                                            "Isaac newton",
                                            "Linear approximation",
                                            "Stable equilibrium",
                                            "Rotational motion",
                                            "Single point",
                                            "Single line",
                                            "Net force",
                                            "Archimedes",
                                            "Equation",
                                            "Acting",
                                            "Shape",
                                            "Point",
                                            "Line",
                                            "Called",
                                            "Force",
                                            "Act",
                                            "Torque",
                                            "Gravity",
                                            "Buoyancy",
                                            "Boat"
                                        ],
                                        "data":" In this video, we'll finish developing our model of a rocking boat by considering how the boat's shape affects its rotational motion. Recall that in the previous video, we obtained this linear approximation for the torque exerted on the boat that is valid for small rotation angles. k is a constant that is positive if the boat has a stable equilibrium and is negative if the boat has an unstable equilibrium. We then used this expression for the torque to derive this second-order differential equation that describes the rotational motion of the boat around its equilibrium position. However, for this equation to be useful for us, we need to figure out how the constant k depends on the physical parameters that describe the shape of the boat. This is a problem in physics. We know that torques are generated by forces. And so we need to figure out the dominant forces that are acting on our boat. For simplicity, let's first consider the case when the boat is sitting flat in the water at theta equals 0. From the work of Isaac Newton, we know that the force of gravity acts on all of the pieces of mass that make up the boat. However, remember the remarkable fact you learned that even though the force of gravity acts on all of the mass within the boat, we can treat the force of gravity as a single force which points down, which I'll label by F sub g, that acts through a single point, called the center of gravity, which I'll label by c sub g. In calculus, you would have learned how to calculate the center of gravity for a body of an arbitrary shape. Now we also observed that when the boat was sitting flat in the water, it wasn't moving up or down in the water, and so we know that the net force on the boat must be 0. Therefore we know that there must be another force acting on the boat in the opposite direction to the force of gravity. This is the force of buoyancy. The force of buoyancy is the result of all the pressure forces that act on the submerged surface of the boat. Just like we were able to treat the force of gravity as a single force acting through a single point, there is a theorem called Archimedes' principle which states that we can treat all of these pressure forces as a single force of buoyancy that points up, which I'll label by f sub b, and that acts through a single point, called the center of buoyancy, which I'll label by c sub b. The center of buoyancy is located at the centroid of the submerged region of the boat. Unlike in the case of the center of gravity, the center of buoyancy is purely geometrical, and it does not depend on how the mass is distributed throughout the boat. As we said before, the magnitudes of the force of gravity and the force of buoyancy must be equal, because the boat is in vertical equilibrium. We can now also understand why the boat is in rotational equilibrium. This is because the force of gravity and the force of buoyancy act along a single line. Therefore, because they're acting along the same line, they cannot generate a torque. And so the torque at theta equals 0 is equal to 0. To recap, we said that the force of buoyancy can be considered to act through a single point, called the center of buoyancy. And Archimedes' principle also says that the force of buoyancy always points directly up. ",
                                        "unit_id":"0aff0d6ebd67415aaf98852b1ed3e3c7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a52b8d9791c24a5bb6f779ca39be3115",
                                "vertical_name":"4. Gravity and Buoyancy"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rotation angle",
                                            "Negative sign",
                                            "Vertical position",
                                            "Perpendicular distance",
                                            "Coordinate system",
                                            "Net force",
                                            "Mass distribution",
                                            "Left side",
                                            "Angle",
                                            "Flat",
                                            "Cross section",
                                            "Label",
                                            "Position",
                                            "Equilibrium",
                                            "Area",
                                            "Theta",
                                            "Approximately",
                                            "Distance",
                                            "Distribution",
                                            "Called",
                                            "Varies",
                                            "Mass",
                                            "Left",
                                            "Torque",
                                            "Side",
                                            "Depends",
                                            "Lever",
                                            "Coordinate",
                                            "Force",
                                            "Buoyancy",
                                            "Boat"
                                        ],
                                        "data":" Now let's consider the more complicated situation when the boat has rotated to one side to an angle of theta. The shape of the boat has not changed, and so the position of the center of gravity is the same as when the boat was flat. We also know that the force of gravity always points down. Note, however, that the shape of the submerged region of the boat has now changed, because some of the right side of the boat has entered the water, while some of the left side of the boat has left the water. Since the center of buoyancy is located at the centroid of the submerged region of the boat, it will shift to the right from its previous position that was here and will now be located somewhere over here. Archimedes' principle tells us that the force of buoyancy always points straight up. Now even though the boat is rotated, the magnitudes of the force of gravity and the force of buoyancy are still equal. This is because the boat will always adjust its vertical position in the water until it is in vertical equilibrium and the net force is 0. However, the forces of gravity and buoyancy are no longer aligned, and therefore they generate a lever, which, in this case, the way I've drawn the picture, acts to rotate the boat back towards its equilibrium position. From physics, we know that the torque produced by two equal and opposite forces is given by the following expression. It's given by the magnitude of the two forces times the perpendicular distance between them. This perpendicular distance is called the lever, which I will label by L. In the way I've drawn this picture, we should also include a negative sign, because the torque always-- because in this picture, the torque is acting in the opposite direction of the rotation angle. Now the force of gravity is just the weight of the boat. But how do we figure out what the lever is? Well, this is just a problem in geometry. It turns out that the lever depends on three parameters that affect the boat's shape. It depends on the submerged area of the boat, which I'll label by a. It depends on the width of the boat at the waterline, which I'll label by b. And it depends on the distance between the center of gravity and the center of buoyancy, which I'll label by d. To write all these variables down again, we have that w is the weight of the boat, a is the submerged area of the boat, b is the width of the boat at the waterline-- and we call it b because it's typically called the beam in the boat industry-- and d is the distance between the center of gravity and the center of buoyancy when the boat is sitting flat in the water at theta equals 0. It turns out that if you work it out, L is given by the following expression, which is accurate for small rotation angles. We have that L is approximately b cubed over 12a minus d times theta. And again, this is only valid for small rotation angles. We now have an expression for the torque as a function of theta, which is torque as a function of theta is approximately minus the weight of the boat, which is just the magnitude of the force of gravity, times this lever, which is b cubed over 12a minus d times theta. And remember that this is only valid for small rotation angles. Consider a boat with a symmetrical cross-section sitting flat in the water, as shown in the figure above. (Assume for simplicity that the boat has the same cross-section along its length.) Take the origin(0,0) of the coordinate system to be at the bottom-center of the boat, and the x&minus;axis to be along the bottom of the boat. Let the center of gravity be at the coordinates (0,Gy). Gy is independent of the rotation angle, &theta;. It is determined by the shape and mass distribution of the boat. The center of buoyancy varies as the the rotation angle &theta; varies. Let its coordinates be (Bx(&theta;),By(&theta;)) when the boat is rotated by &theta;. The center of buoyancy is a purely geometric computation once you know where the waterline is; but where the waterline is does depend on the distribution of mass of the boat, even when the boat is at equilibrium. Below are a list of some parameters of the boat that are independent of the rotation angle &theta;: the weight of the boat, W (in Newtons) the beam of the boat at the waterline, b (in meters) the height of the waterline at the center of the boat, d (in meters) the area of (the cross-section of) displaced fluid when the boat is flat (the green region in the figure above), A (in squared meters) the location of the center of gravity , (0,Gy) (each coordinate in meters) the location of the center of buoyancy when boat is sitting flat , (Bx(0),By(0)) (each coordinate in meters) Assume also that the boat has rectangular sides in the range of rotation angles that are considered, as shown in the figure above. ",
                                        "unit_id":"fcf4bfb8b16b4e1889cbceebe14315cc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"030b4713282c40809fa3a655eb0b11f3",
                                "vertical_name":"5. Details of modeling a rocking boat"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lever arm",
                                            "Differential equation",
                                            "Rotation angle",
                                            "Rotational motion",
                                            "Unstable equilibrium",
                                            "Stable equilibrium",
                                            "Negative sign",
                                            "Depends",
                                            "Lever",
                                            "Equilibrium",
                                            "Unstable",
                                            "Direction",
                                            "Constant",
                                            "Stable",
                                            "Back",
                                            "Sign",
                                            "Tall",
                                            "Short",
                                            "Torque",
                                            "Positive",
                                            "Boat",
                                            "Large",
                                            "Negative",
                                            "Gravity",
                                            "Sin"
                                        ],
                                        "data":" An unaligned pair of equal and opposite forces creating a torque \u03d5&gt;0 if the center of buoyancy is to the right (in water's frame) of the center of gravity \u03d5&lt;0 if the center of buoyancy is to the left (in water's frame) of the center of gravity Having found the coordinates of the new center of buoyancy, we can now compute the torque &tau; exerted on the boat: &tau; = &minus;Wd2whered2:=rsin\u03d5. Here, W is the weight of the boat, and d2, as shown in the figure above, is the (signed) length of the lever arm . The negative sign is present because if d2&gt;0, meaning the center of buoyancy (Bx(&theta;)By(&theta;) is to the right of the center of gravity, the torque will rotate the boat in the &minus;&theta;-direction (counterclockwise in our convention). As seen in the figure above, the lever arm d2 depends on the locations of both the center of gravity and the center of buoyancy. Hence, it depends on the various boat parameters and is also a function of &theta;. The sign of d2 is very important. It corresponds to whether the center of buoyancy is to the right or left of the center of gravity (in the water's frame) when the boat is rotated away from the flat position. This determines the direction of the torque and in particular whether the boat will rotate further away or back to the flat position. The expression for d2 in terms of the boat parameters will give us guidelines to design a boat that will not capsize immediately. Finding the lever arm and the formula for the torque It remains to findd2 as a function of &theta; and other parameters of the boat. Projecting the vector connecting B&rarr;(0) to B&rarr;(&theta;) onto a unit vector parallel to the waterline gives d1+d2 = (Bx(&theta;),By(&theta;)&minus;By(0))&sdot;(cos(&theta;),sin(&theta;)) = b312Asin(&theta;)+b324Atan2(&theta;)sin(&theta;) = b312A(1+12tan2(&theta;))sin(&theta;). But d1=(Gy&minus;By(0))sin(&theta;). Therefore, d2=(b312A(1+12tan2(&theta;))&minus;(Gy&minus;By(0)))sin(&theta;). This gives the torque &tau;=&minus;Wd2 to be &tau; = &minus;W(b312A(1+12tan2(&theta;))&minus;(Gy&minus;By(0)))sin(&theta;) For &theta;&lt;&lt;1, expanding tan&theta; and sin&theta; about &theta;=0 gives the linear approximation &tau;&sim;&minus;W(b312A&minus;(Gy&minus;By(0)))&theta;(&theta;&lt;&lt;1). Therefore, &tau;&sim;&minus;k&theta; for k&gt;0, i.e. the boat has a stable equilibrium at the flat position, if b312A&minus;(Gy&minus;By(0))&gt;0. With this formula, we can now understand how the shape of the boat affects its rotational motion. If we compare this formula with this formula, we can see that this is the constant k. Now we know that if the boat has a positive k, it will have a stable equilibrium. Since w is always a positive constant, the boat will have a stable equilibrium if this quantity is positive, so if b cubed over 12a minus d is greater than 0. When this quantity is greater than 0, this means that the center of buoyancy always lies to the right of the center of gravity in this picture, and so it generates a torque in the opposite direction to the rotation angle, always trying to rotate the boat back towards its equilibrium position. The more positive this quantity is, the larger this lever arm will be, meaning you'll get a larger torque, and the boat will be more stable. For example, from this formula, we can see that short and wide boats will be very stable. This is because a wide boat has a large b, and a short boat has a small d. And so this quantity is large, meaning that the lever is large, meaning that the boat generates a large torque, and it is stable. On the other hand, when do we get an unstable equilibrium? Well, we get an unstable equilibrium when k is negative. k will be negative when this quantity is negative since, again, w is always a positive constant. So we have an unstable equilibrium when b cubed over 12a minus d is less than 0. When this quantity is less than 0, in this picture, it means that the center of buoyancy is actually located to the left of the center of gravity. In this case, the two forces still generate a torque. However, they now generate a torque in the opposite direction, trying to rotate the boat further and further away from its equilibrium position. For example, we can see that tall and skinny boats are likely to be unstable. This is because a tall boat will have a large d, and a skinny boat will have a small b. And so this quantity is likely to be negative, meaning the boat will be unstable. We have now developed a model in the form of a second-order differential equation that predicts the rotational motion of the boat around its equilibrium. Based on the shape of the boat, we can predict whether the boat will have a stable or unstable equilibrium. If the boat has a stable equilibrium, we can use this differential equation to predict the period of the boat's oscillations around this equilibrium. If the boat has an unstable equilibrium, we can also use this differential equation to predict how fast the boat will tip away from its equilibrium. ",
                                        "unit_id":"850b8f7f6cbf4480abee3cf99d5d0be6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f907977ce76d4136a16c6ed2d9b70017",
                                "vertical_name":"6. The torque"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5d04d60555b244a9806508f3e5268724",
                        "sequential_name":"8 Higher Order Linear ODEs",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Vector space",
                                            "Uniqueness theorem",
                                            "Constant coefficients",
                                            "Basis"
                                        ],
                                        "data":" Objectives Know what a basis and the dimension of a vector space is. Solve homogeneous ODEs with constant coefficients of order n . Find a real basis of solutions to ODES with constant coefficients with at least two complex characteristic roots. Apply the existence and uniqueness theorem for linear ODEs when solving initial value problems. ",
                                        "unit_id":"399d16cd4fba4f4e9931ed55af0b7dfd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c537c17158674ecdba89de1229eed336",
                                "vertical_name":"1. Higher order homogeneous linear ODEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equations",
                                            "Constant coefficients",
                                            "Differential equations",
                                            "Linear independence",
                                            "Linear algebra",
                                            "Dependent variables",
                                            "Coupled oscillator",
                                            "Characteristic polynomial",
                                            "Dependent variable",
                                            "Force",
                                            "System",
                                            "Spring",
                                            "Equilibrium",
                                            "Equation",
                                            "Variable",
                                            "Solve",
                                            "Mass"
                                        ],
                                        "data":" Consider this ideal spring system involving two masses, m1 and m2 connected by 3 springs with spring constants k1, k2, and k3 respectively. Let x1 be the displacement of the mass m1 away from the equilibrium position. Similarly, let x2 be the displacement of the mass m2 away from equilibrium. The case x1=x2=0 corresponds to the situation where neither mass is displaced from its equilibrium position. The displacements x1 and x2 satisfy two simultaneous second order equations involving both variables. It turns out that we can eliminate x2 to get a single fourth order homogeneous ODE with constant coefficients for x1. m1m2x1(4)+(m2(k1+k2)+m1(k2+k3))x1&uml;+(k1k2+k1k3+k2k3)x1 = 0. How did we get the equation of the displacement of the mass in the coupled oscillator? Let us model the coupled oscillator. The extension or compression of spring 1 is given by x1. The extension or compression of spring 2 is given by x2&minus;x1. And the extension or compression of spring 3 is given by &minus;x2. We are assuming ideal springs, that is there is no damping. Force on mass 1: There are two spring forces acting on mass 1: the force F1 due to spring 1 and the force F2 due to spring 2. These are given by F1=&minus;k1x1; F2=k2(x2&minus;x1). Combining these using Newton's second law, we have m1x&uml;1 = F1+F2 = &minus;k1x1+k2(x2&minus;x1) = &minus;(k1+k2)x1+k2x2. Force on mass 2: Similarly, there are two forces acting on mass 2: the force F2 from spring 2, which acts on m2 with the same magnitude but opposite direction as it acts on m1, and the force F3 from spring 3, given by F3=&minus;k3x2. Again using Newton's second law, we have m2x&uml;2 = &minus;F2+F3 = &minus;k2(x2&minus;x1)&minus;k3x2 = k2x1&minus;(k3+k2)x2. The differential equations: The two equations above together form a coupled system of differential equations: m1x&uml;1 =&minus;(k2+k1)x1+k2x2, m2x&uml;2 =k2x1&minus;(k2+k3)x2. These two equations together is a system of two second order linear differential equations, each with two dependent variables x1 and x2. The approach we will take for now is to eliminate one of the dependent variables to obtain a single equation involving only the other dependent variable. Notice that we can write x2 in terms of x1 and x1&uml; using the first DE: x2 = m1k2x&uml;1+k1+k2k2x1. Plugging this into the second DE and regrouping terms , we get m1m2k2x1(4)+(m2(k1+k2)k2+m1(k2+k3)k2)x1&uml;+(&minus;k2+(k1+k2)(k2+k3)k2)x1 = 0. Multiplying by k2, we have m1m2x1(4)+(m2(k1+k2)+m1(k2+k3))x1&uml;+(k1k2+k1k3+k2k3)x1 = 0. This is a fourth order homogeneous constant coefficient ODE for x1. We will learn a general method to set up and solve systems of linear differential equations and higher order linear ODEs in 2x2 systems of Differential Equations and Linear Algebra and Systems of Differential Equations. We will revisit the coupled oscillator and be able to deal with coupled spring systems with many springs and masses then. Hide Question 2.1&emsp;&emsp; How do we solve a higher order ODE such as the one above? Answer: Use characteristic polynomials in the same way as we did to solve second order ODEs with constant coefficients. The characteristic polynomial of the DE above is of 4th order. It has 4 (possibly complex) roots counted with multiplicity. For second order linear homogeneous ODEs, we need 2 linearly independent solutions corresponding to the 2 characteristic roots. For an nth order linear ODEs, we need n linearly independent solutions. What does linear independence mean for a set of n functions? Linear independence of n functions is a much more sophisticated notion than linear independence of 2 functions. Our first task in this lecture is to discuss carefully what we mean by linear independence and to define dimension. These ideas are essential to describing solutions to higher order ODEs. ",
                                        "unit_id":"35db8052588c4a51b10d3ae44d5090c0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"44b3ce526f374f1e90791436525eb281",
                                "vertical_name":"2. Motivation: the coupled oscillator"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Real vector space",
                                            "Complex vector space",
                                            "Real number",
                                            "Real numbers",
                                            "Scalar multiplication",
                                            "Complex numbers",
                                            "Vector space",
                                            "Ordered pairs",
                                            "Vector addition",
                                            "Space",
                                            "Addition",
                                            "Vector",
                                            "Adding",
                                            "Add",
                                            "Multiplying"
                                        ],
                                        "data":" The span of a set of functions is always a vector space. What is a vector space? Example 4.1&emsp;&emsp; The 2-dimensional (x,y)-plane is a vector space. The vectors are the ordered pairs (x,y) that add component-wise: (x1,y1)+(x2,y2)=(x1+x2,y1+y2). There is a zero element (0,0), and you can scale vectors by real numbers: a(x,y)=(ax,ay). Definition 4.2&emsp;&emsp; Suppose that S is a set of elements called vectors equipped with two laws: a law for adding vectors in S, called vector addition, and a law for multiplying vectors in S by real numbers, called scalar multiplication. Then S is a real vector space if all of the following are true: There is a zero vector in S: a vector 0 in S such that v+0=v for every vector v in S. (Closed under scalar multiplication.) Multiplying any one vector in S by a real number gives another vector in S: if v is in S and a is a real number, then av is in S too. (Closed under vector addition.) Adding any two vectors in S gives another vector in S: if v and w are in S, then the vector v+w is in S. Remark : This definition can also be used to define a complex vector space ; it's the same thing as a real vector space, but scalar multiplication is defined for complex numbers instead of just real numbers. Example 4.3&emsp;&emsp; The set of all real valued functions form a real vector space. The constant 0-function is the zero vector. Vector addition is addition of functions point-wise (f+g)(x)=f(x)+g(x). Scalar multiplication is multiplying a function by a real number at each point, e.g. &minus;2f(x)=(&minus;2)(f(x)). Non-example: The set of all non-negative functions is not a real vector space because x2 is in this set, but (&minus;1)&sdot;x2=&minus;x2 is not. Non-example: The set containing the x- and y-axes is not a vector space because if we add two non-zero elements we don't always stay in the space, e.g. (1,0)+(0,1)=(1,1) is not on either axes. Last, but not least, recall: Theorem 4.4&emsp;&emsp;The set of all homogeneous solutions to a linear ODE is a vector space. ",
                                        "unit_id":"4c4fd73b476c4a8295ae55f0a0f64a1a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"01c03a9ad2ca49e7b878d8f622285e72",
                                "vertical_name":"4. Vector spaces"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear combination",
                                            "Linear dependence",
                                            "Scalar multiple",
                                            "Linearly independent",
                                            "Linearly dependent",
                                            "Vector",
                                            "Definition"
                                        ],
                                        "data":" Definition 5.1&emsp;&emsp; Vectors v1,&hellip;,vn are linearly dependent (think redundant) if at least one of them is a linear combination of the others. Otherwise, call them linearly independent . Example 5.2&emsp;&emsp; In a vector space consisting of functions, each function is a vector. The functions e2t,e&minus;3t are linearly independent . Note: For a set of 2 vectors, the definition of linear dependence and linear independence reduces to what we have learned before: v1,v2 are linearly dependent if one is a scalar multiple of the other. Otherwise, they are linearly independent. Example 5.3&emsp;&emsp; The functions f1=e2t,f2=e&minus;3t,f3=e2t+e&minus;3t are linearly dependent . The third function is a linear combination of the first two: f3=f1+f2. In fact, each function is a linear combination of the other two: f1=e2t=(e2t+e&minus;3t)&minus;e&minus;3t=f3&minus;f2, and similarly f2=f3&minus;f1. Equivalent definition: Vectors v1,&hellip;,vn are linearly dependent if there exist numbers c1,&hellip;,cn not all zero such that c1v1+\u22ef+cnvn=0. In example 5.3, we wrote f3=f1+f2, f1=f3&minus;f2, f2=f3&minus;f1. A more symmetric way to describe this is f1+f2&minus;f3 = 0. Example 5.4&emsp;&emsp; The three functions e2t,e&minus;3t,5e2t+7e&minus;3t are linearly dependent , because (&minus;5)e2t+(&minus;7)e&minus;3t+(1)(5e2t+7e&minus;3t)=0. The meaning of linear dependence is that at least one of the functions on the list is redundant (and can be expressed as a linear combination of the others.) ",
                                        "unit_id":"1c759f82b27c4132805e03d1a9fb9a22",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a49311ded7f649bf95eaf92d5b3615e0",
                                "vertical_name":"5. Linear independence"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linearly independent vectors",
                                            "Real vector space",
                                            "Linearly independent",
                                            "Linear combinations",
                                            "Homogeneous equation",
                                            "Building block",
                                            "Differential equations",
                                            "Vector space",
                                            "Vector spaces",
                                            "Basis functions",
                                            "Real",
                                            "Space",
                                            "Vector",
                                            "Form",
                                            "Basis"
                                        ],
                                        "data":" When discussing second order ODEs, we called a set of 2 linearly independent homogeneous solutions a basis for all homogeneous solutions. Below is the general definition of a basis. Definition 6.1&emsp;&emsp; A basis of a vector space S is a list of vectors v1,v2,&hellip;,vn such that Span(v1,v2,&hellip;,vn)=S, and The vectors v1,v2,&hellip;,vn are linearly independent. Example 6.2&emsp;&emsp; The vectors (1,0,0),(0,1,0),(0,0,1) form a basis for R3 (a real vector space). This is because any vector (x,y,z) can be written as (real) linear combinations of these 3 basis vectors, and these 3 basis vectors are linearly independent: c1(1,0,0)+c2(0,1,0)+c3(0,0,1)=0only if c1,c2,c3 all equal zero. The vector spaces that are relevant to differential equations are vector spaces of functions. A basis of a vector space of functions is given as a list of functions f1,f2,&hellip;,fn. Think of the functions in the basis as &ldquo;basic building blocks\". Condition 1 says that every function in S can be built from f1,f2,&hellip;. Condition 2 says that there is no redundancy in the list (no building block could have been built from the others). Example 6.3&emsp;&emsp; The functions e2t, e&minus;3t form a basis for the space of solutions to the homogeneous equation y&uml;+y\u02d9&minus;6y=0. Key point: The vector space of solutions to a homogeneous ODE consists of infinitely many functions. To describe it compactly, we give a basis of the vector space. In this case, the basis has only 2 functions. The plural of basis is bases, pronounced BAY-sees. Fact: A vector space has many different bases. Example 6.4&emsp;&emsp; The vectors (1,0),(0,1) is a basis for R2 (a real vector space), but so is any other pair of linearly independent vectors, such as (1,0),(1,1). Example 6.5&emsp;&emsp; The space of solutions to y&uml;+y=0 is spanned both by the basis eit,e&minus;it, and the basis cos(t),sin(t). (Here, we allow complex linear combinations of the basis functions.) ",
                                        "unit_id":"d451268bcc954cc78f39e40570146577",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e9996656a3264af19205143fa93f2c85",
                                "vertical_name":"6. Basis"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Homogeneous equation",
                                            "Constant coefficients",
                                            "Vector space",
                                            "Leading coefficient",
                                            "Uniqueness theorem",
                                            "Order",
                                            "Dimension theorem",
                                            "Vector",
                                            "Space",
                                            "Theorem",
                                            "Dimension",
                                            "Basis"
                                        ],
                                        "data":" It turns out that although a vector space can have different bases, each basis has the same number of vectors in it. Definition 7.1&emsp;&emsp; The dimension of a vector space is the number of vectors in any basis. Example 7.2&emsp;&emsp; The vector space R3 is a 3-dimensional real vector space, since there are 3 vectors in the basis (1,0,0),(0,1,0),(0,0,1). Example 7.3&emsp;&emsp; The space of solutions to the homogeneous equation y&uml;+y\u02d9&minus;6y=0 is 2-dimensional, since the basis e2t,e&minus;3t has 2 elements. (Every other basis for the same vector space also has 2 elements. Example 7.4&emsp;&emsp; The space of solutions to y\u02d9=3y is 1-dimensional. In the examples involving differential equations above, the dimension equals the order of the homogeneous linear ODE. It turns out that this holds in general: Dimension theorem.The dimension of the space of solutions to an nth order homogeneous ODE with constant coefficients is n. In other words, the number of parameters needed in the general solution to an nth order homogeneous ODE with constant coefficients is n. (The theorem is also true for nth order homogeneous linear ODEs with variable coefficients provided that they are continuous and the leading coefficient is never zero.) This theorem is a consequence of the existence and uniqueness theorem as we will see shortly. ",
                                        "unit_id":"45c88f194539486fb274eb1a6a2f23a7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5240785866c34ece90d6cbb22d3095c8",
                                "vertical_name":"7. Dimension"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Linear combination",
                                            "Characteristic polynomial",
                                            "Vector space",
                                            "Linearly independent",
                                            "Fundamental theorem",
                                            "Dimension theorem",
                                            "Order",
                                            "Coefficient",
                                            "Ode",
                                            " ",
                                            "Algebra",
                                            "Replace",
                                            "Complex",
                                            "Number",
                                            "Multiplicity",
                                            "Ert",
                                            "Basis"
                                        ],
                                        "data":" Equipped with the linear algebra notions, we now generalize the solution method we used for second order homogeneous constant coefficient ODEs, such as y&uml;&minus;y\u02d9+6y=0, to solve homogeneous constant coefficient ODEs of any order. Given any(n)+\u22ef+a1y\u02d9+a0y=0, where an,&hellip;,a0 are real constants, do the following: Write down the characteristic equation anrn+\u22ef+a1r+a0=0, in which the coefficient of rj is the coefficient of y(j) from the ODE. The left hand side is called the characteristic polynomial P(r). For example, y(4)&minus;2y(2)+y=0 has characteristic polynomial r4&minus;2r2+1. Factor P(r) as P(r)=an(r&minus;r1)(r&minus;r2)\u22ef(r&minus;rn) where the n roots r1,&hellip;,rn are (possibly complex) numbers. There are guaranteed to be n (possible complex) roots counted with multiplicity by the fundamental theorem of algebra. The roots may be all distinct or some roots may be repeated. If r1,&hellip;,rn are distinct, then the functions er1t,&hellip;,ernt form a basis for the vector space of solutions to the constant coefficient ODE. In other words, the general solution is c1er1t+\u22ef+cnernt. Note that complex roots always appear in pairs of conjugates, and if some of the roots are complex, the coefficients c1,&hellip;,cn will have to be complex as well. If r1,&hellip;,rn are not distinct, then er1t,&hellip;,ernt cannot be a basis since some of these functions are redundant (definitely not linearly independent)! If a particular root r is repeated m times, then replace ert,ert,ert,&hellip;,ert\u23dem copies by ert,tert,t2ert,&hellip;,tm&minus;1ert. We'll explain why this works in the next lecture. Important: In all cases, Number of roots of P(r) counted with multiplicity=Order of ODE=Number of functions in basis, as asserted in the dimension theorem. Example 8.1&emsp;&emsp; Find the general solution to y(6)+6y(5)+9y(4)=0. Solution: The characteristic polynomial is r6+6r5+9r4=r4(r+3)2, whose roots listed with multiplicity are 0,0,0,0,&minus;3,&minus;3. Since the roots are not distinct, the basis is not e0t,e0t,e0t,e0t,e&minus;3t,e&minus;3t. We need to replace the first block of four functions, and also the last block of two functions. So the correct basis is e0t,te0t,t2e0t,t3e0t\u23df,e&minus;3t,te&minus;3t\u23df, which simplifies to 1,t,t2,t3,e&minus;3t,te&minus;3t. Thus the general solution is c1+c2t+c3t2+c4t3+c5e&minus;3t+c6te&minus;3t. As expected, the set of all solutions to this 6th order linear ODE is 6-dimensional. Example 8.2&emsp;&emsp; Find the simplest constant-coefficient homogeneous linear ODE having (5t+7)e&minus;t&minus;9e2t as one of its solutions. Solution: The given function is a linear combination of e&minus;t,te&minus;t,e2t so the roots of the characteristic polynomial (with multiplicity) should include &minus;1, &minus;1, 2. So the simplest characteristic polynomial is (r+1)(r+1)(r&minus;2)=r3&minus;3r&minus;2 and the corresponding ODE is y(3)&minus;3y\u02d9&minus;2y=0. ",
                                        "unit_id":"b6eb59b6e8424a50983f41701ded141e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"75bb7132014546bea9c35a3bd6d4828d",
                                "vertical_name":"8. Solving a homogeneous linear ODE with constant coefficients"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Spring mass system",
                                            "Complex numbers",
                                            "Linear combinations",
                                            "Linearly independent",
                                            "Characteristic polynomial",
                                            "Cost",
                                            "Sint",
                                            "Ode"
                                        ],
                                        "data":" ODEs with real coefficients have real valued functions as their solutions. However, our solution method often requires us to deal with complex solutions as well. Let us recall how this works in the familiar example of the undamped spring mass system. Recall the second order ODE that models a spring mass system with no damping: y&uml;+y=0. The characteristic polynomial is r2+1, which factors as (r&minus;i)(r+i). Its roots are i and &minus;i. Thus, eit,e&minus;it form a basis for the space of solutions, and the general solution is c1eit+c2e&minus;it,where c1,c2&isin;C. Due to Euler's formula eit=cost+isint (or the pair of reverse formulas cost=eit+e&minus;it2 and sint=eit&minus;e&minus;it2i), the general solution above is the same as d1cost+d2sint,where d1,d2&isin;C. In our new terminology, Span(eit,e&minus;it)=Span(cost,sint) (assuming that complex numbers are allowed as coefficients in the linear combinations). Moreover, the two pairs of functions on the left and on the right above are both bases of the set of all solutions since both pairs of functions are linearly independent. ",
                                        "unit_id":"1c1c96689846418ebac0cfa76a1599a7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5433715dd0114958a011eb36ce7e8ff9",
                                "vertical_name":"9. Review: complex roots"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rational root test",
                                            "Linear combination",
                                            "Differential equation",
                                            "Characteristic polynomial",
                                            "Linearly dependent",
                                            "Quadratic formula",
                                            "Linearly independent",
                                            "Long division",
                                            "Ode",
                                            "Equation",
                                            "Real",
                                            "Order",
                                            "Root",
                                            "Replace",
                                            "General",
                                            "Basis"
                                        ],
                                        "data":" How do we get a real basis for the solutions to a higher order homogeneous ODE with constant real coefficients and whose characteristic roots are not all real? The answer is that we replace pairs of complex solutions with their real and imaginary parts. Example 10.1&emsp;&emsp; Find a basis of solutions to y(3)+3y&uml;+9y\u02d9&minus;13y=0 consisting of real-valued functions. Solution: The characteristic polynomial is P(r):=r3+3r2+9r&minus;13. Checking the divisors of &minus;13 (as instructed by the rational root test), we find that 1 is a root, so r&minus;1 is a factor. Long division (or solving for unknown coefficients) produces the other factor: P(r)=(r&minus;1)(r2+4r+13). The quadratic formula, or completing the square (rewriting the second factor as (r+2)2+9), shows that the roots of P(r) are 1, &minus;2+3i, &minus;2&minus;3i. Thus et, e(&minus;2+3i)t, e(&minus;2&minus;3i)t form a basis of solutions. But the last two are not real-valued! So instead replace y=e(&minus;2+3i)t and y&macr;=e(&minus;2&minus;3i)t by Re(y) and Im(y), found by expanding e(&minus;2+3i)t =e&minus;2tei(3t) =e&minus;2t(cos(3t)+isin(3t)) =e&minus;2tcos(3t)+ie&minus;2tsin(3t). Thus et,e&minus;2tcos(3t),e&minus;2tsin(3t) is another basis, this time consisting of real-valued functions. Example 10.2&emsp;&emsp; Suppose the roots &mdash;with multiplicity&mdash; of the characteristic polynomial of a certain homogeneous constant coefficient linear equation are 3,4,4,4,5&plusmn;2i,5&plusmn;2i. Give the general real solution to the equation. What is the order of the equation? Solution: A basis for the real valued solutions is given by {e3t,e4t,te4t,t2e4t,e5tcos(2t),e5tsin(2t),te5tcos(2t),te5tsin(2t)}. (For each repeated root we added a multiple of t to the basic solution.) Using superposition, the general solution is a linear combination of these basis solutions x(t)= c1e3t+c2e4t+c3te4t+c4t2e4t +c5e5tcos(2t)+c6e5tsin(2t)+c7te5tcos(2t)+c8te5tsin(2t). There are 8 roots, so the order of the differential equation is 8. We can obtain real solutions to linear ODEs with non-constant real coefficients as well: Complex basis vs. real-valued basis. Let y(t) be a complex-valued function of a real-valued variable t. If y and y&macr; are part of a basis of solutions to a homogeneous linear system of ODEs with real coefficients, then replacing y,y&macr; by Re(y),Im(y) gives a new basis of the homogeneous solutions. Why is this true? To know that the new list, which includes Re(y) and Im(y), is a basis, we need to check two things: The span of the new list is the set of all solutions. This is true, because any solution is a linear combination of the old basis, and can be converted to a linear combination of the new list by substituting y=Re(y)+iIm(y),y&macr;=Re(y)&minus;iIm(y). The new list is linearly independent. If not, say c1Re(y)+c2Im(y)+\u22ef=0, then substituting Re(y)=y+y&macr;2,Im(y)=y&minus;y&macr;2i would show that the old basis was linearly dependent, which is impossible for a basis. ",
                                        "unit_id":"600d0dc6f21d4fe7aca8f8bb55b9327e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2cdfb3f29fc14fb0ad6391b51b6ca731",
                                "vertical_name":"10. Higher order ODEs with complex roots"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial conditions",
                                            "Uniqueness theorem",
                                            "Open interval",
                                            "Continuous functions",
                                            "Dimension theorem",
                                            "Order",
                                            "Theorem",
                                            "Existence"
                                        ],
                                        "data":" We now know how to find the general solution to a DE of the form any(n)+\u22ef+a1y\u02d9+a0y=0, but what do we need in order to pin down one specific solution? The answer is provided by the existence and uniqueness theorem below, which we have only stated for first order linear ODEs before: Existence and uniqueness theorem for a linear ODE. Let pn&minus;1(t),&hellip;,p0(t),q(t) be continuous functions on an open interval I. Let a&isin;I, and let b0,&hellip;,bn&minus;1 be given numbers. Then there exists a unique solution on I to the nth order linear ODE y(n)+pn&minus;1(t)y(n&minus;1)+\u22ef+p1(t)y\u02d9+p0(t)y=q(t) satisfying the n initial conditions y(a)=b0,y\u02d9(a)=b1,&hellip;,y(n&minus;1)(a)=bn&minus;1. As before, existence means that there is at least one solution; uniqueness means that there is only one solution. The theorem says that, given an nth order linear ODE, a single solution can be found by giving n numbers, namely the values of y(a),y\u02d9(a),&hellip;,y(n&minus;1)(a), the initial conditions. Remark 11.1&emsp;&emsp; The existence and uniqueness theorem in the homogeneous case explains the dimension theorem we stated previously. Each solution y(t) determines a set of initial conditions, given by y(t)&rarr;(y(a),y\u02d9(a),&hellip;,y(n&minus;1)(a)). On the other hand, the existence and uniqueness theorem says that each set of initial conditions specifies exactly one solution. The sequence of numbers (y(a),y\u02d9(a),&hellip;,y(n&minus;1)(a)) constitutes a vector in Rn, and the 1-to-1 correspondence between solutions and sets of initial conditions given by existence and uniqueness theorem proves the dimension theorem. ",
                                        "unit_id":"b3526962964246f18075f4967e3c6072",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"493721097be145f8b010a149525d86df",
                                "vertical_name":"11. Existence and Uniqueness Theorem"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ebcf4002282a47c6a0f2d822d33e8cda",
                        "sequential_name":"Recitation 8",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Due date",
                                            "Discussion forum",
                                            "Vector space",
                                            "Vector",
                                            "Forum",
                                            "Share",
                                            "Span"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will providing solutions after the due date, but we will also endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. 18.03 Recitation 8 Higher Order DEs 1. Which of the following equal Span(e 2t , e&minus;2t , ei2t , e&minus;i2t ) (with complex coefficients)? &bull; Span(e 2t , e&minus;2t , cos(2t), sin(2t)) &bull; Span(e 2t , &minus;e &minus;2t , 3 cos(2t), &minus; sin(2t)) &bull; Span(e 2t + e &minus;2t , cos(2t)/2, sin(2t)) &bull; Span(e 2t , e&minus;2t , e2t &minus; e &minus;2t , cos(2t), sin(2t)) &bull; Span(e 2t , e&minus;2t , e2t &minus; e &minus;2t , cos(2t &minus; &pi;/3), sin(2t)) 2. If a vector space V = Span(v1, v2, v3), where v1, v2, v3 are non-zero vectors, then which of the following can be the dimension of V ? &bull; 0 &bull; 1 &bull; 2 &bull; 2.5 &bull; 3 &bull; 4 3. If vectors v1, v2, v3 belong to a vector space V, does it follow that Span(v1, v2, v3) = V ? Span(v1, v2, v3) is a subset of V ? 4. Here&rsquo;s a third order linear equation: d 3x dt3 &minus; dx dt = 0. A mystery! All question below relate to the DE above. (a) Find the characteristic roots of the DE above. There should be 3 of them since it is an order 3 equations. (b) How many solutions are there to the DE above that also satisfies x(2) = 1; x 0 (2) = 1? (c) Find a solution to the DE above that satisfies x(0) =, x0 (0) = 1, and x 00(0) = 1. 5. Find the simplest homogeneous constant-coefficient ODE having 1 + 4t &minus; t 2 e &minus;2t + 4e &minus;t cos(3t) as one of its solutions. ",
                                        "unit_id":"d59add35fed243e89582b495b3f5403b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f237561f6141438e8f65df4aa908ea56",
                                "vertical_name":"1. Higher order homogeneous ODEs with constant coefficients"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"73c0a4fbd9074bf1b5d5f7e3dbf924bb",
                "chapter_name":"Unit 4: Due 29 March",
                "sequentials":[
                    {
                        "sequential_id":"c4ca3c3108aa4106ba95614b6df84365",
                        "sequential_name":"9 Operators and Exponential Response",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear time invariant",
                                            "Erf",
                                            "Operator",
                                            "Apply"
                                        ],
                                        "data":" Objectives Write linear constant coefficient differential equations using operator notation, that is using linear time invariant (LTI) operators . Use time-shifts to solve LTI differential equations. Solve inhomogeneous constant coefficient ODEs with exponential inputs using the Exponential Response Formula (ERF) . Recognize when ERF fails and how to apply the the ERF' and the Generalized ERF in these situations. Apply superposition to higher order, linear inhomogeneous differential equations. ",
                                        "unit_id":"b0c8b0adc7994c058917b32803444334",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"539e5b083a5b48dc9125b8fa356bfa9a",
                                "vertical_name":"1. Objectives"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equation",
                                            "Differential equation",
                                            "Black box",
                                            "Linear combination",
                                            "Linear operators",
                                            "Linear equation",
                                            "Linear combinations",
                                            "Superposition principle",
                                            "Constant coefficients",
                                            "Linear operator",
                                            "Differentiation operator",
                                            "Fourth derivative",
                                            "Constant function",
                                            "Homogeneous",
                                            "Order",
                                            "Ll",
                                            "Applied",
                                            "Equation",
                                            "Linear",
                                            "Differentiation",
                                            "Superposition",
                                            "Operator",
                                            "Constant",
                                            "Question",
                                            "Differentiate",
                                            "Calculus",
                                            "Time",
                                            "Proof",
                                            "Thing",
                                            "Term",
                                            "Linearity",
                                            "Called",
                                            "Important",
                                            "Function",
                                            "Derivative",
                                            "Form",
                                            "Law",
                                            "Point",
                                            "Write",
                                            "Prove",
                                            "Number"
                                        ],
                                        "data":" If y1 and y2 are two solutions to a homogeneous, linear differential equation y&uml;+py\u02d9+qy=0, why is c1y1+c2y2 a solution? You know superposition for linear homogeneous differential equations. We want an elegant proof because it will help us with more complicated problems, including solving higher order inhomogeneous equations. The superposition principle says exactly that-- it says exactly that, that if y1 and y2 are solution to a linear equation, to a linear homogeneous ODE-- in fact, it can be of higher order too, although I won't stress that. In other words, you don't have to stop with a second derivative. You could add a third derivative and fourth derivative. As long as the form remained the same, then that implies, automatically, that c1 y1 plus c2 y2 is a solution. Now the way to do that nicely is to take a little detour and talk a little bit about linear operators. And since we're going to be using these for the rest of the term, this is the natural place for you to learn a little bit about what they are. So I'm going to do it. Ultimately, I am aimed at a proof of this statement, but there are going to be certain side excursions I have to make. The first side excursion is to write the differential equation in a different way. So I'm going to just write its transformations. So first, I'll simply recopy it, what you know it to be-- qy equals 0. That's the first form. The second form-- I'm going to replace this by the differentiation operator. So I'm going to write this as d squared y. That means differentiate it twice. D it, and then D it again. This one, I only have to differentiate once, so I'll write that as p Dy, p times the derivative of y. The last one isn't differentiated at all. I just recopy it. Now I'm going to formally factor out the y. So this I'm going to turn into D squared plus pD plus q. Now everybody reads this as times y equals 0. But what it means is this guy-- it means this is shorthand for that. I'm not multiplying. I'm multiplying q times y. But I'm not multiplying D times y. I'm applying D to y. Nonetheless, the notation suggests-- this is very suggestive of that. And this, in turn, implies that. I'm just transforming it. And now I'll take the final step. I'm going to view this thing in parentheses as a guy all by itself, a linear operator. This is called a linear operator. And I'm going to simply abbreviate it by the letter L. And so the final version of this equation-- it's been reduced to nothing but Ly equals 0. Now what's L? You could think of L as-- well formally, L you would write as D squared plus pD plus q. But you can think of L-- the way to think of it is as a black box. What goes into this black box? Well if this were a function box, what would go in would be a number and what would come out would be a number. But it's not that kind of a black box. It's an operator box. And therefore what goes in is a function of x, and what comes out is another function of x, the result of applying this operator to that. So from this point of view, trying to solve the differential equation means what should come out, you want to come out 0. And the question is what should you put in? That's what it means; solving differential equations in an inverse problem. The easy thing is to put in a function and see what comes out. You just calculate. The hard thing is to ask. You say, I want such and such a thing to come out, for example, 0. What should I put in? That's the difficult question. And that's what we're spending the term answering. Now the key thing about this is that this is a linear operator. And what that means is that it behaves in a certain way with respect to functions. The easiest way to say it is, I like to make two laws of it, that L of u1, if you have two functions-- I'm not going to put in the parentheses x because that just makes things look longer and not any clearer, actually. What does L do to the sum of two functions? If it's a linear operator it must, if you put in the sum of two functions, what you must get out is the sum of the corresponding L's of each. So that a law. And the other law, linearity law-- and this goes for anything in mathematics and its applications, which is called linear-- basically, anything is linear if it does the following thing to functions or numbers or whatever. L of a, the other one is, of a constant times any function-- I don't have to give it a number now because I'm only using one of them-- should be equal to c times L of u. So here, c is a constant. And here of course, the u is a function of x. These are the two laws of linearity. An operator is linear if it satisfies these two laws. Now for example, the differentiation operator is such an operator; D is linear. Why? Well, because of the very first things you verify after you learn what the derivative is, because the derivative of-- well, I won't write it in the D form. I'll write it in the form in which you know it. It would be D applied to u1 plus u2. How does one write that in ordinary calculus? Well, like that. Or maybe you write d by dx out front. Let's write it this way-- is equal to u1 prime plus u2 prime. That's a law. You prove it when you first study what a derivative is. It's a property. From our point of view, it's a property of the differentiation operator. It has this property. The D of u1 plus u2 is D of u1 plus D u2. And it also has the property that is cu prime, you can pull out the constant. It's not affected by the differentiation. So these two familiar laws from the beginning of calculus say, in our language, that D is a linear operator. What about the multiplication law? That's even more important, that u1 time u2 prime. I have nothing whatever to say about that here. In this context, it's an important law, but it's not important with respect to this study of linearity. So there's an example. Here's a more complicated one that I'm claiming is a linear operator. And since I don't want to have to work in this lecture, the work is left to you. So the proof-- prove that L is linear. All right, where are we? Well, all that was a prelude to proving this simple theorem, the superposition principle. So finally, what's the proof? Well, proof of the superposition principle, if you believe that the operator is linear, then L of c1-- in other words, the ODE is L. L is D squared plus pD plus q. So the ODE is Ly equals 0. And what am I being asked to prove? I'm being asked to prove that if y1 and y2 are solutions, then so is that thing. By the way, that's called a linear combination. Put that in your notes. Maybe I'd better write it even on the board because it's something people say all the time without realizing they haven't defined it. This is called a linear combination. This expression is called a linear combination of y1 and y2. It means that particular sum with constant coefficients. OK, so the ODE is Ly equals 0, and I'm trying to prove that fact about it, that if y1 and y2 are solutions, so is a linear combination of them. So the proof then-- I start with apply L to c1y1 plus c2y2. Now because this operator is linear, it takes the sum of two functions into the corresponding sum of what the operator would be. So it would be L of c1y1 plus L of c2y2. That's because L is a linear operator. But I don't have to stop there. Because L is a linear operator, I can pull the c out front. So it's c1 L of y1 plus c2 L of y2. Now where am I? I'm trying to prove that this is 0. Well, what is L of y1? At this point, I use the fact that y1 is a solution. Because it's a solution, this is 0. That's what it means to solve that differential equation. It means when you apply the linear operator L to the function, you get 0. In the same, way y2 is a solution. So that's 0, and the sum of c1 times 0 plus c2 times 0 is 0. That's the argument. Now you could make the same argument just by plugging c1y1-- plugging it into the equation and calculating and calculating and calculating, grouping the terms, and so on and so forth. But that's just calculation. It doesn't show you why it's so. Why it's so is because the operator, this differential equation, is expressed as a linear operator applied to y is 0. And the only properties that are really being used is the fact that this operator is linear. That's the key point. L is linear. It's a linear operator The operator D A function takes an input number and returns another number. An operator takes an input function and returns another function. For example, the differential operator ddt takes an input function y(t) and returns dydt. This operator is also called D. For instance De4t=4e4t. The operator D is linear , which means that D(f+g)=Df+Dg,D(af)=aDf for any functions f and g, and any number a. Because of this, D behaves well with respect to linear combinations, namely D(c1f1+\u22ef+cnfn)=c1Df1+\u22ef+cnDfn for any numbers c1,&hellip;,cn and functions f1,&hellip;,fn. Example 2.1&emsp;&emsp; Dt3=3t2. Warning : You can't take this equation and substitute t=2 to get D8=12. The only way to interpret &ldquo;8\" in &ldquo;D8\" is as a constant function, which of course has derivative zero: D8=0. The point is that in order to know the function Df(t) at a particular value of t, say t=a, you need to know more than just f(a); you need to know how f(t) is changing near a as well. This is characteristic of operators; in general you have to expect to need to know the whole function f(t) in order to evaluate an operator on it. Definition 2.2&emsp;&emsp; In general, a linear operator L is any operator that satisfies L(f+g)=Lf+Lg,L(af)=aLf for any functions f and g, and any number a. Example 2.3&emsp;&emsp; The operator L=D2+p(t)D+q(t) where p(t) and q(t) are any functions of t is a linear operator. Why is L linear? You know that D is linear, and similarly, D2 is linear. To see that L is linear, verify that a linear combination of linear operators is again a linear operator. ",
                                        "unit_id":"3e2d3aea9fe54150b4400c1426d2dd20",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4097228a33eb415180097b8ee3577330",
                                "vertical_name":"2. Operator Notation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear operator",
                                            "Characteristic polynomial",
                                            "Function",
                                            "Number",
                                            "Operator",
                                            " "
                                        ],
                                        "data":" To apply a product of two operators, apply each operator in succession. For instance, DDy means take the derivative of y, and then take the derivative of the result; therefore we write D2y=y&uml;. To apply a sum of two operators, apply each operator to the function and add the results. For instance, (D2+D)y=D2y+Dy=y&uml;+y\u02d9. Any number can be viewed as the &ldquo;multiply-by-the-number\" operator: for instance, the operator 5 transforms the function sinx into the function 5sinx. In particular, the &ldquo;identity\" operator I is the multiply by the number 1 operator: If=f for all functions f. Similarly, we can multiply by any function of t, and this is also a linear operator. For instance, the operator t2 transforms the function sinx into the function t2sinx. Example 3.1&emsp;&emsp; The ODE 2y&uml;+3y\u02d9+5y=0, whose characteristic polynomial is P(r)=2r2+3r+5, can be rewritten as (2D2+3D+5)y =0 P(D)y =0. The same argument shows that every constant-coefficient homogeneous linear ODE any(n)+\u22ef+a0y=0 can be written simply as P(D)y=0, where P is the characteristic polynomial. ",
                                        "unit_id":"ec28b926ebef4bd9b2339a02aaac8d11",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"767a7c56fafb48d3810189d4c51c3548",
                                "vertical_name":"3. Multiplying and adding operators"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear time invariant",
                                            "Integrating factors",
                                            "Linear operators",
                                            "Differential equations",
                                            "Constant coefficients",
                                            "Differential equation",
                                            "Linear",
                                            "Operator",
                                            "Equation",
                                            "Sint"
                                        ],
                                        "data":" In this course we'll focus on polynomial differential operators with constant coefficients, that is operators of the form P(D)=anDn+an&minus;1Dn&minus;1+&hellip;a1D+a0, where all of the coefficients ak are numbers (as opposed to functions of t). All operators of this form are linear. In addition to being linear operators, they are also time-invariant operators, which means: If x(t) solves P(D)x=f(t), then y(t)=x(t&minus;t0) solves P(D)y=f(t&minus;t0). In words, this says that &ldquo;delaying the input signal f(t) by t0 seconds delays the output signal x(t) by t0 seconds.\" If we know that x(t) is a solution to P(D)x=f(t), we can solve P(D)y=f(t&minus;t0) by replacing t by t&minus;t0 in x(t). This is a useful property because gives us the solutions to many differential equations for free. A system that can be modeled using a linear time invariant operator is called an LTI (linear time invariant) system. Example 4.1&emsp;&emsp; The function x(t)=sin(t) solves the differential equation x\u02d9=cost. What is a solution to the differential equation y\u02d9=cos(t+&pi;/2)? By time-invariance, one solution is y=sin(t+&pi;/2). Note that y\u02d9 = cos(t+&pi;/2) = costcos&pi;/2&minus;sintsin&pi;/2 = &minus;sint And y = sin(t+&pi;/2) = sintcos&pi;/2+costsin&pi;/2 = cost Example 4.2&emsp;&emsp; Consider the differential equation x\u02d9+x=cost. Variation of parameters or integrating factors tells us that the general solution to this differential equation is x(t)=12cost+12sint+c1e&minus;t. Now suppose that we want to solve the equation y\u02d9+y=sint. Since sint=cos(t&minus;&pi;/2), time invariance tells us that y(t) =x(t&minus;&pi;2)=12cos(t&minus;&pi;/2)+12sin(t&minus;&pi;/2)+c1e&minus;(t&minus;&pi;/2) =12sin(t)&minus;12cos(t)+c1e&pi;/2\u23dfcall this c2e&minus;t =12sin(t)&minus;12cos(t)+c2e&minus;t should solve y\u02d9+y=sint. This agrees with the solution we'd get if we had used variation of parameters or integrating factors, but we had to do almost no work to get this solution from the first. ",
                                        "unit_id":"bcabae6eee914992b2a22a2ba567eea3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c142485ac9ae487d9e96d93d35cb243e",
                                "vertical_name":"4. Time Invariance"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Inhomogeneous differential equation",
                                            "Left hand side",
                                            "Inhomogeneous equation",
                                            "Differential equations",
                                            "Linear equation",
                                            "Differential equation",
                                            "Homogeneous equation",
                                            "Linear operator",
                                            "Punch line",
                                            "Complex exponentials",
                                            "Constant",
                                            "Tilde",
                                            "Inhomogeneous",
                                            "Homogeneous",
                                            "Left",
                                            "Equation",
                                            "Operator",
                                            "Ll",
                                            "Add",
                                            "Explain",
                                            "Simple",
                                            "Give",
                                            "General",
                                            "Confusing",
                                            "Solve",
                                            "Blah",
                                            "Order",
                                            "Theorem",
                                            "Yc",
                                            "Ve",
                                            "Make",
                                            "Minus",
                                            "Yp",
                                            "Yh",
                                            "Equal",
                                            "Word"
                                        ],
                                        "data":" This was only done for first order previously here. To understand the general solution y to an inhomogeneous linear ODE inhomogeneous equation:pn(t)y(n)+\u22ef+p0(t)y=q(t), do the following: List all solutions to the associated homogeneous equation homogeneous equation:pn(t)y(n)+\u22ef+p0(t)y=0; i.e., write down the general homogeneous solution yh. Find (in some way) any one particular solution yp to the inhomogeneous ODE. Add yp to all the solutions of the homogeneous ODE to get all the solutions to the inhomogeneous ODE. Summary: ygeneral solution=ypparticular solution+yhgeneral homogeneous solution. Why does this work? Proof. Let L be the linear operator L=pn(t)Dn+\u22ef+p1(t)D+p0(t). Then the differential equations become inhomogeneous equationLy = q(t) homogeneous equationLy = 0 Let yp be a particular solution to the inhomogeneous equation L(yp)=q. Let yh be a homogeneous solution L(yh)=0. Then L(yp+yh)=q+0=q. Suppose that y is also a solution to Ly=q. That is Ly = q Lyp = q. Then it follows by linearity that L(y&minus;yp)=L(y)&minus;L(yp)=q&minus;q=0 Therefore y&minus;yp=yh is a solution to the associated homogeneous equation. In other words, y=yp+yh. \u25fb The result of this section is the key point of linearity in the inhomogeneous case. It lets us build all the solutions to an inhomogeneous DE out of one particular solution provided that you have already solved the associated homogeneous ODE. Note on video below: In the video below Professor Mattuck uses yc instead of yh for the general homogeneous solution. Here yc stands for the complementary solution. So the main theorem about solving the inhomogeneous equation. So I'm going to write the inhomogeneous equation as-- I'm going to make the left hand side a linear operator. And I'm going to write the equation as Ly equals f of x. That's the inhomogeneous equation. So L is the linear operator, second order because I'm only talking about second order equations. L is a linear operator. And then this is the differential equation. So here's our differential equation. It's inhomogeneous because it's got the f of x on the right hand side. And what the theorem says is that the solution has the following form. The solution has the form y sub p-- I'll explain what that is in just a moment-- plus y sub c. So the hypothesis is we've got the linear equation. And the conclusion is that that's what its solution looks like. Now, you already know what y sub c looks like. In other words, if I write this out in more detail, it would be i.e., department of fuller explanation. The general solution looks like y equals y sub p. And then this thing is going to look like an arbitrary constant times y1 plus an arbitrary constant times y2 where these are solutions of the homogeneous equation. So yc looks like this part. And the yp is-- what's yp? p stands for particular, the most confusing word in this subject. But you've got at least four weeks to learn what it means. OK, yp is a particular solution to Ly equals f of x. Now, I'm not going to explain what particular means. First off, chat as if you knew what it meant. And then we'll see if you have picked it up. In other words, the procedure for solving this equation is composed of two steps. First, to find this part. In other words, to find the complementary solution. In other words, to do what we've been doing for the last week, solve not the equation you are given, but the reduced equation. So the first step is to find this. The second step is to find up. Now, what's yp? yp is a particular solution to the whole equation. Yeah, but which one? Any one. Well, if it's any one, then it's not a particular solution. Yeah, I say unfortunately the word particular here is not being used in exactly the same sense in which most people use it in ordinary English. It's a perfectly valid way to use it. It's just confusing. And no one has ever come up with a better word. So particular means any one solution. Any is any one will do, OK? Even these have slightly different meanings. Any questions about this? I refuse to answer them. Now, well, examples, of course, will make it all clear. But I'd like first to prove the theorem to show you how simple it is. It's extremely simple if you just use the fact that L is a linear operator. We've got two things to prove. What have we got to prove? Well, I have to prove two statements. First of all, that all the yp plus c1 y1 plus c2 y2 are solutions. How are we going to prove that? Well, how do you know if something's a solution? Well, you plug it into the equation and you see if it satisfies the equation. Goody. Let's do it. Proof-- L-- I'm going to plug it into the equation. That means I calculate L of yp plus c1 y1 plus c2 y2. Now, what's the answer? Because this is a linear operator-- and notice the argument doesn't use the fact that the equation is second order. It immediately generalizes to a linear equation of any order whatever. 47. OK, this is L of yp plus L of c1 y1 plus c2, y2. Well, what's that? What's L of the complementary solution? What does it mean to be the complementary solution? It means when you apply the operator L to it, you get 0. Because this satisfies the homogeneous equation. So this is 0. What's L of yp? Well, it was a particular solution to the equation. Therefore when I plugged it into the equation, I must have gotten out on the right hand side f of x. So this is since yp's a solution to the whole equation. So what's the conclusion? That if I take any one of these guys, no matter what c1 and c2 are, apply the linear operator L to it, the answer comes out to be f of x. Therefore, this proves that this shows that these are all solutions, because that's what it means. Therefore, they satisfy L of y equals f of x. They satisfy the whole inhomogeneous differential equation. That's it. Well, that's only half the story. The other half of the story is to show that there are no other solutions. OK, so we got our little u of x coming up again and he thinks he's a solution. So to prove there are no other solutions-- this almost sounds biblical. Thou shalt have no other solutions before me. OK, there are no other solutions except these guys for different values of c1 and c2. OK, so u of x is a solution. I have to show that u of x is one of these guys. How am I going to do that? Easy. If it's a solution that L of u, I'm going to drop the x, OK? Just to make the-- like I dropped the x over there. If it's a solution to the whole inhomogeneous equation, then this must come out to be f of x. Now, what's L of y of p? That's f of x, too. My secret little particular solution I've been-- caught on my pocket. OK, I pull it out-- L of yp. That's f of x, too. Now, I'm going to not add them. I'm going to subtract them. What is L of u minus yp? Well, it's 0. It's 0, because this is a linear operator. This would be L of u minus L of yp. I get the answer 0 on the right hand side. And therefore, what is the conclusion? If that's 0, it must be a solution to the homogeneous equation. Therefore, u minus yp is equal to-- there must be c1 and c2-- I won't give them the generic names. I'll give them a name, a particular one. I'll put a tilde on to indicate it's a particular one. c1 plus c2 tilde. So in other words, for some choice of these constants-- and I'll call those particular choices c1 tilde and c2 tilde-- it must be that these are equal. Well, what does that say? It says that u is equal to yp plus c1 tilde blah, blah, blah, blah, plus c2 tilde blah, blah, blah, blah, blah, and therefore chose that u wasn't a new solution. It was one of these. So u is one of-- I should write it down. Otherwise, some of you will have missed the punch line. OK, therefore, u is equal to yp plus c1 tilde y1 plus c2 tilde y2. And it shows it's this guy who thought he was new was not new at all. It was just one or the other solutions. OK, well now, if the coefficient's are constant, apparently we've done half the work. We know what the complementary solution is, because you know how to do those in terms of exponentials and complex exponentials, sines and cosines, and so on. So what's left to do? All we have to do is find to solve equations which are inhomogeneous, all we have to do is find a particular solution. Find one solution. It doesn't matter which one. Any one. Just find one, OK? ",
                                        "unit_id":"cb8d187821354616a24bf9ec515c6d52",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"036d7881fb9b4d29a30bccba507abc7f",
                                "vertical_name":"5. Superposition for an inhomogeneous linear ODE"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex exponential",
                                            "Right hand side",
                                            "Independent variable",
                                            "Constant coefficients",
                                            "Complex number",
                                            "Real number",
                                            "Ax",
                                            "Important",
                                            "Omega",
                                            "Ll",
                                            "Real",
                                            "Function",
                                            "Interesting",
                                            "Put",
                                            "Today",
                                            "General",
                                            "Case",
                                            "Make",
                                            "Write"
                                        ],
                                        "data":" Our task for today is to find particular solutions. So let me remind you of where we've gotten to. We're talking about the second order equation with constant coefficients, which you can think of as modeling springs or simple electrical circuits. But what's different now is that the right-hand side is an input, which is not 0. So we're considering the in-- let me, I'm going to use x as your book does keeping to a neutral letter. But again, in the applications and in many of the applications at any rate, it wants to be t. But I make it x. So the independent variable is x. And the problem is-- the problem is remember that to find a particular solution-- and the reason why we want to do that is then the general solution will be of the form y equals that particular solution, plus the complementary solution the general solution to the reduced equation, which we can write this way. So all the work depends upon finding out what that y p is. And that's what we're going to talk about today-- or rather, talk about for two weeks. But the point is not all functions that you could write on the right-hand side are equally interesting. There's one kind, which is far more interesting or more important in the applications than all the others. And that's the one out of which, in fact, as you'll see later on this week and next week, an arbitrary function can be built out of these simple functions. So the important function is on the right-hand side to be able to solve it when it's a simple exponential. But if you allow me to make it a complex exponential, so here are the important right-hand sides we want. We want to be able to do it when it's of the form e to the ax. In general, that will be-- in most applications, a is not a growing exponential, but a decaying exponential. So typically, a is negative, but it doesn't have to be. I'll put it in parentheses though often. That's not any assumption that I'm going to make today. It's just culture. Well, we want to be able to do it for sine omega x and cosine omega x, in other words, when the right-hand side is a pure oscillation. That's another important type of input both for electrical circuits-- think alternating current-- or the spring systems that's a pure vibration is being-- you're imposing a pure vibration on the spring mass dashpot system, and you want to see how it responds to that. Or you can put them together and make these decaying oscillations. So we could also have something like e to the ax times sine omega x or times cosine omega x. Now, the point is all of these together are really just special cases of one general thing-- exponential if you allow the exponent not to be a real number, but to be a complex number. So they are all special cases of e to the, I'll write it alpha x. Well, why don't we write it of a plus i omega x, right? If omega is 0, then I've got this case. If a is 0, then I've got this case separating it into its real and imaginary parts. And if neither is 0, I have this case. But I don't want to keep writing a plus i omega all the time. So I'm going to write that simply as e to the alpha x. And you understand that alpha is a complex number now. Looks different. It doesn't look like a real number. OK, so it's a complex number. ",
                                        "unit_id":"014a8e38fb1f42c0bbfa5cc971553de8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c5446f6dda2d4300b8ec0e0da407bebb",
                                "vertical_name":"6. Why exponential inputs?"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex exponential",
                                            "Linear combinations",
                                            "Chain rule",
                                            "Substitution rule",
                                            "Characteristic polynomial",
                                            "Squared",
                                            "Number",
                                            "Ad",
                                            "Polynomial",
                                            "Substitute",
                                            "Make",
                                            "Alpha",
                                            "Ert"
                                        ],
                                        "data":" Warm-up problem: If r is a number, what is (2D2+3D+5)ert? Solution: First, Dert=rert and D2ert=r2ert (keep applying the chain rule). Thus (2D2+3D+5)ert =2r2ert+3rert+5ert =(2r2+3r+5)ert. The operator is P(D)=2D2+3D+5. Notice that P(r)=2r2+3r+5 is the characteristic polynomial. The same calculation, but with an arbitrary polynomial, proves the following general rule. Theorem 7.1&emsp;&emsp; For any polynomial P and any number r, P(D)ert=P(r)ert. There are just a couple of basic formulas that we're going to use all the time. The first is that if you apply P of D to a complex exponential or a real one-- it doesn't matter-- the answer is you get just what you started with D substituted by alpha. So it's D of alpha-- in other words, put an alpha wherever you saw a D in the polynomial. And what is this? This is now just an ordinary complex number. And multiply that by what you started with, e to the alpha x. So that's a basic formula. It's called, in the notes, the substitution rule, because the heart of it is you substitute for the D, you substitute alpha. Now, this hardly requires proof, but let's prove it, just to reinforce things that make things go a little more slowly to make sure you're on board all the time. How would I prove that? Well, just calculate it out. What, in fact, is D squared plus aD plus b times e to the alpha x? Well, it's D squared, e to the alpha x. By linearity, plus aD times e to the alpha x plus b times e to the alpha x. Well, what are these? What's the derivative of e to the alpha x? It's just alpha times e to the alpha x. What's the second derivative? Well, remember from the exam, you can do 10th derivatives now. So the second derivative is easy. It's alpha squared times e to the alpha x. In other words, what I'm saying really is that this law is obviously, quote, unquote, a true-- OK, I'm not even going to put it in quotes. It's obviously true for the operator D and the operator D squared. In other words, D of e to the alpha x equals alpha times e to the alpha x. D squared times e to alpha x equals alpha squared times e to the alpha x. And therefore, it's true for linear combinations of these as well by linearity. So therefore, also true for P of D. In fact, so if you calculate it out, what is it? This is alpha squared e to the alpha x plus alpha e to the alpha x times the coefficient plus b times e to the alpha x. So it's, in fact, exactly this. It's e to the alpha x times alpha squared plus a alpha plus b. ",
                                        "unit_id":"7a9cc0cb10f9438c925f2bfeba2f900d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"446a2c5a6d374d1dacb12640aaf634dc",
                                "vertical_name":"7. Shortcut"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Inhomogeneous equation",
                                            "Homogeneous equation",
                                            "Characteristic polynomial",
                                            "Polynomial"
                                        ],
                                        "data":" Question: For any polynomial P and number r, what is a particular solution to P(D)y=ert? Answer (superposition): We have P(D)ert=P(r)ert. This is off by a factor of P(r). So multiply through by 1/P(r) and we can use linearity to get P(D)(1P(r)ert)=ert. Conclusion: This is called the Exponential Response Formula (ERF) . In words, for any polynomial P and any number r such that P(r)&ne;0, 1P(r)ert is a particular solution to P(D)y=ert. Remember, this is just one particular solution. To get the general solution, we need to add the solution to the associated homogeneous equation. Example 8.1&emsp;&emsp; Find the general solution to y&uml;+7y\u02d9+12y=&minus;5e2t. Solution: Characteristic polynomial: P(r)=r2+7r+12=(r+3)(r+4). Roots: &minus;3, &minus;4. General solution to homogeneous equation: yh=c1e&minus;3t+c2e&minus;4t. ERF says: 1P(2)e2tis a particular solution to P(D)y=e2t; i.e., 130e2t is a particular solution to y&uml;+7y\u02d9+12y=e2t, so &minus;16e2tcall this yp is a particular solution to y&uml;+7y\u02d9+12y=&minus;5e2t. General solution to inhomogeneous equation: y =yp+yh =&minus;16e2t+c1e&minus;3t+c2e&minus;4t. ",
                                        "unit_id":"5e260e7aae554cb698d7699864bd645c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f4495645f12d4bc19773ec58ac34f758",
                                "vertical_name":"8. Exponential response formula"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Erf"
                                        ],
                                        "data":" The ERF works equally well for complex exponential inputs. Example 9.1&emsp;&emsp; Use ERF to find a particular solution to x&uml;+x=e2it. Solution: &thinsp; &thinsp; In operator notation, this differential equation can be written as (D2+1)x=e2it. By the ERF, a particular solution is given by xp=ertr2+1=e2it(2i)2+1=&minus;13e2it. ",
                                        "unit_id":"0bf079f88bf3408a9f0d39a2c641c142",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e9e29236ecb94c1b98e6bb2f65503e35",
                                "vertical_name":"9. ERF and complex roots"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ordinary differential equation",
                                            "Differential equation",
                                            "Characteristic polynomial",
                                            "Product rule",
                                            "Constant coefficients",
                                            "Side",
                                            "Exponential",
                                            "Dt",
                                            "Linear",
                                            "Systematic",
                                            "Solving",
                                            "Equation",
                                            "Step",
                                            "Today",
                                            "Product",
                                            "Thing",
                                            "Constant",
                                            "Solve",
                                            "Ll",
                                            "Back",
                                            "Kx",
                                            "Method",
                                            "Equal",
                                            "Homogeneous",
                                            "Part"
                                        ],
                                        "data":" Hello. So today we'll be solving linear ODEs with constant coefficients. There are three problems that we want to solve today. For part A, we want to solve x dot plus kx is equal to 1. In the second problem, part B, we're just changing the right hand side. Instead of 1, we have e to the minus 5t. And finally, in part C, we have a superposition of those two right hand sides. So we have x dot plus kx is equal to 4 plus 7e to the minus 5t. All right. So the first step in solving these problems is finding the homogeneous solution. We do this by setting the right hand side equal to 0. Actually, note that all these three problems have the same exact left hand side. So the homogeneous solution will be common to all of them. So we just have to do this problem once, and we'll have the homogeneous solution for all three parts. So let's do that. x dot plus kx is equal to zero. We're going to use the characteristic polynomial. The characteristic polynomial of this equation is denoted by P of s, and is equal to s plus k. We find the solution to the homogeneous problem by setting P of s equal to 0. That will tell us that s is equal to negative k. Therefore, our homogeneous solution, which we'll denote x of h, is equal to e to the minus kt multiplied by any constant. For part A, now we need to find a particular solution that satisfies the differential equation x dot plus kx is equal to 1. Now, this is an equation that we can actually solve by inspection. If we assume that x is a constant, then x dot is 0. We just ignore it. And we're solving kx is equal to 1 if x equals a constant. And we can get that x is equal to 1 over k. And that's a particular solution. We'll denote this particular solution by the subscript A. So x sub A is equal to the particular solution to part A. Now, the general solution to A would be given by the particular solution that we just found plus the homogeneous solution that we found in the previous step. So x is equal to 1 over k plus c e to the minus kt. And that's our final solution for part A. We used the method of inspection, and that's not the most systematic way of doing it. There are other methods to solve this equation, and we'll get back to that. But for now, I just wanted to show you that there are ways to solve ODEs that are very simple just by looking at them. But don't worry, we'll look back at systematic methods. Now, for part B we're looking at x dot plus kx is equal to e to the minus 5t. And now we use the systematic method. We're going to use the exponential response formula, or ERF. We can only use the ERF because the right hand side or the forcing of this equation is exponential. In order to calculate the solution-- the particular solution to this problem-- we take the right hand side, which is e to the minus 5t, and divide by the characteristic polynomial, P, evaluated and minus 5, which is the efficient here in the exponent. So we have xB is equal to e to the minus 5t. And we refer back to the characteristic polynomial that we had before. So we plug in minus 5 for s. So we get minus 5 plus k. And this is a particular solution for part B. We can, again, write the general solution to part B by adding the particular solution and the homogeneous solution that we found before. For this part, we have x is equal to e to the minus 5t. I'll just rewrite the denominator to look nicer. And we add the homogeneous solution. And this is the general solution for part B. Note an important thing here. What happens if k is equal to 5? Then this denominator goes to 0, and this solution is undefined. We'll need to look at another method to solve this. But just one last thing that I want to point out is that the ERF could also have been used here in part 1 if we think of 1 as e to the 0t. That's true. That's an exponential. And if we use the exponential response formula, we would have gotten the same answer. You should try that. We'll go back to the case now where k is equal to 5 in the next video. All right so we just found a solution for part B. But we notice that there is a problem when k is equal to 5. So this solution actually is only valid if k does not equal to 5. Let's look at the other case. If k is equal to 5, we're actually solving the differential equation x dot plus 5x is equal to e to the minus 5t. Now, since we saw that the exponential response formula as we know it didn't work, we can use the method of variation of parameters. So for variation of parameters we need a homogeneous solution, which, we found before. We found that it was the c times e to the minus 5t because, in this case, k is equal to 5. But for the method of variation of parameters we only need one homogeneous solution. So we can take c to be 1. And that will make the algebra easier. So now x will be equal to u, our introduced a parameter, which is a function of time, times e to the minus 5t. We plug this into our ordinary differential equation, and we get d dt of u e to the minus 5t plus 5 times u e to the minus 5t. And all of that has to be equal to e to the minus 5t, which is our right hand side. Now, we use the product rule to simplify this term, which gives us du dt is equal to-- sorry, du dt times e to the minus 5t. Then we get a minus 5u e to the minus 5t plus 5u e to the minus 5t. And all of this is equal to e to the minus 5t. As it always happens in the method or variation of parameters, these two terms cancel out because the product will make sure that the homogeneous part of the equation is guaranteed. So this cancellation is normal of the method or variation of parameters. Now, if we multiply both sides by e to the 5t, we would get that du dt is equal to 1. And this is a quite easy differential equation. We just get that u is equal to t plus a constant c. Now we plug that back into our expression for x. So x is equal to t plus c times e to the minus 5t. Let's just rewrite this here. x is equal to t plus c e to the minus 5t. And this is true when k is equal to 5. Note that this part contains a particular solution, t e to the minus 5t, as well as the homogeneous solution, c e to the minus 5t. So by using the method of variation of parameters, we got both solutions at the same time. That's a nice feat of the method a variation of parameters. Now, in part C, we're asked to solve x dot plus kx is equal to 4 plus 7e to the minus 5t. We need to note that the right hand side is a superposition of the first problems that we solved. So 4 is the same thing as 4 times 1. And the second term is 7 times e to the minus 5t. And these were the right hand sides on parts A and B. So we're solving this problem. Because this equation is linear, we can superimpose the solutions that we found in part A and B and get the particular solution for part C. So the particular solution for part C is recovered by multiplying the solution for part A times 4, and the solution for part B times 7. Note that, once again, this is the particular solution. If I want the full solution, I would get the general solution by adding the particular solution plus the homogeneous solution that we found before. So we have x is equal to 4xA plus 7xB plus a constant times e to the minus kt. And this is the most general solution that we have for part C. And with this we're done with this problem. ",
                                        "unit_id":"983d289efa62496db21afe8d9289a28d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b3bd97030504464a8326330637c9ea55",
                                "vertical_name":"11. Worked example video"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Characteristic polynomial",
                                            "Linear combination",
                                            "Linearly dependent",
                                            "Linearly independent",
                                            "Vector space",
                                            "Side",
                                            "Ode",
                                            "Space",
                                            "Operator"
                                        ],
                                        "data":" Recall the method for finding a basis of solutions to a constant-coefficient homogeneous linear ODE, now written as P(D)y=0. Using operators, we can explain why it works. Example 12.1&emsp;&emsp; Consider the ODE y&prime;&prime;&prime;&minus;10y&prime;&prime;+31y&prime;&minus;30y=0. Rewriting this using operator notation we have P(D)y=0, where P(r)=r3&minus;10r2+31r&minus;30 is the characteristic polynomial of the ODE. The trick now is to factor the operator, and proceed from there. The characteristic polynomial factors as P(r)=(r&minus;2)(r&minus;3)(r&minus;5). The order is 3, so the dimension of the vector space of solutions is 3. Now e2t is a solution since P(D)e2t=p(2)e2t=0e2t=0, e3t is a solution since P(D)e3t=p(3)e3t=0e3t=0, and e5t is a solution since P(D)e5t=p(5)e5t=0e5t=0. Just because we wrote down 3 solutions does not mean that they form a basis: If we had written down e2t, e3t, 4e2t+6e3t, then they would not have been a basis, because they are linearly dependent (and their span is only 2-dimensional). To know that e2t, e3t, e5t really form a basis, we need to know that they are linearly independent. Could it instead be that e5t=c1e2t+c2e3t(as functions) for some numbers c1,c2? One way to see that this is not possible is to apply (D&minus;2)(D&minus;3) to both sides, which would give (D&minus;2)(D&minus;3)e5t = (D&minus;2)(D&minus;3)(c1e2t+c2e3t) = c1(D&minus;2)(D&minus;3)e2t+c2(D&minus;2)(D&minus;3)e3t(by linearity) = c1&sdot;0+c2&sdot;0=0 The left hand side gives us (D&minus;2)(D&minus;3)e5t=(5&minus;2)(5&minus;3)e5t&ne;0. This contradiction implies that e5t is not a linear combination of e2t and e3t. The same argument shows that no one of e2t, e3t, e5t is a linear combination of the other two. Since e2t, e3t, e5t are linearly independent, they form a basis for a 3-dimensional space (which must be the space of all solutions, since that too is 3-dimensional). ",
                                        "unit_id":"c89399ae398f40e0a59936be00c666a7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c87360502bc64bd687af51707798f3ab",
                                "vertical_name":"12. Review: Basis of homogeneous solutions with linear operators"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linearly independent",
                                            "Product rule",
                                            "Differential equation",
                                            "Characteristic polynomial",
                                            "Polynomial",
                                            "Repeated",
                                            "Form",
                                            "Root"
                                        ],
                                        "data":" What about the case of repeated roots? This case is less important than the others, because if someone hands you a polynomial it's unlikely that two or more of its roots will coincide. But it does happen, and it is interesting to think about what happens. Example 13.1&emsp;&emsp; Find a basis of solutions to D3y=0. (The characteristic polynomial is r3, whose roots with multiplicity are 0, 0, 0.) Solution: Integrate three times: D2y =c1 Dy =c1t+c2 y =c1t22+c2t+c3 =C1t2+c2t+c3general solution. for some numbers C1=c1/2, c2, and c3. Since t2, t, 1 are linearly independent, they form a basis for the space of solutions. Example 13.2&emsp;&emsp; Find a basis of solutions to (D&minus;5)3y=0. Solution: The characteristic polynomial is (r&minus;5)3, which has a repeated root 5,5,5, so based on the previous example, we might hope that e5t, te5t, t2e5t are a basis. Let's now explain why these are solutions. We know that D&minus;5 sends e5t to 0. What does D&minus;5 do to ue5t, if u is a function of t? Using the product rule: (D&minus;5)ue5t =(u\u02d9&sdot;e5t+u&sdot;5e5t)&minus;5u&sdot;e5t =u\u02d9&sdot;e5t. Replacing (D&minus;5) by (D&minus;5)2 and (D&minus;5)3 on the left we get the following: (D&minus;5)2ue5t =u&uml;e5t (D&minus;5)3ue5t =u(3)e5t. So our guess was right! In order for ue5t to be a solution to (D&minus;5)3y=0 the function u(3) must be 0; i.e., u=a+bt+ct2 for some numbers a,b,c, so the solutions are ue5t=ae5t+bte5t+ct2e5t, as expected. Since 1, t, t2 are linearly independent functions, so are e5t, te5t, t2e5t (any relation between the last three functions could be divided by e5t to get a relation between the first three). Thus e5t, te5t, t2e5t form a basis. If a characteristic polynomial P(r) has a root r is repeated k times, then ert, tert, t2ert, &hellip; , tk&minus;1ert are independent solutions to the differential equation P(D)y=0. ",
                                        "unit_id":"ceb0a714cd6146aeab10f8d48a20e9c8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b3da35fbba754aedaa3d73150aed76f9",
                                "vertical_name":"13. Review: repeated roots with linear operators"
                            }
                        ]
                    },
                    {
                        "sequential_id":"1bffbdb066f1443f9de884c0fdb38243",
                        "sequential_name":"Recitation 9",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Damped harmonic oscillator",
                                            "Homogeneous equation",
                                            "Discussion forum",
                                            " ",
                                            "Forum",
                                            "Share",
                                            "Term"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. 18.03 Recitation 9 Operator Notation and ERF 1. (a) Express (D3 &minus; D)(x + y) as an operator acting on x plus and operator acting on y. ( If (D3 &minus; D)(x + y) = Ax + By, what do A and B equal in terms of D?) (b) Find the general solution to the homogeneous equation (D3 &minus; D)x = 0? (c) Find a particular solution to (D3 &minus; D)x = e 2t . (d) Find a particular solution to (D3 &minus; D)x = e &minus;t . (e) Find a particular solution to (D3 &minus; D)x = 1. 2. (a) Find a particular solution of (D2 + 9)x = e 3t + 9. (b) Find a particular solution of d 4x dt4 &minus; x = e &minus;2t . 4. Consider the damped harmonic oscillator corresponding to the differential operator 10D2 + 2D + 5I. Find: (a) the angular frequency &omega;n that the undamped oscillator would have, in case the damping term were put to zero. (b) the rate a at which the exponential decay occurs, when the homegeneous solution has a factor e &minus;at . (c) the angular frequency &omega;d. ",
                                        "unit_id":"ce3cdef7d7a8483bb608bc4f4f795a45",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"24843f702e9548bc8b7af37936d4a036",
                                "vertical_name":"1. Operator Notation"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e42bfe43bc004a2098408ddc9de13b4c",
                        "sequential_name":"10 Complex Replacement, Gain and Phase Lag, Stability",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex gain",
                                            "Physical systems",
                                            "Phase shift",
                                            "Steady state",
                                            "Long term",
                                            "Describe",
                                            "Term"
                                        ],
                                        "data":" Objectives Use complex replacement to solve any inhomogenous LTI system with sinusoidal input . Find the complex gain of an LTI system in terms of the complex system response, and the complexified system input. Describe the phase shift and amplitude gain of any LTI system with sinusoidal input signal in terms of the complex gain . Describe conditions for stability in physical systems, and distinguish between long term (steady state) and transient behavior in a stable system. ",
                                        "unit_id":"7d62604c687b4920b6c62d53ed68b96e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2e1ac009051c4158a758fdc7155c9355",
                                "vertical_name":"1. Complex Replacement"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Water level",
                                            "Boston harbor",
                                            "Flow rate",
                                            "Difference",
                                            "Harbor",
                                            "Flow",
                                            "Ocean"
                                        ],
                                        "data":" Suppose we are studying the tides in Boston Harbor. Let x the water level in Boston Harbor. Let y be the water level of the ocean. Then the input is the ocean level y, which is responsible for the changing tides x in Boston Harbor, the system response. The Physics We assume that the ocean and the harbor are connected by a narrow channel so that the flow is slow and not turbulent. This allows us to assume that the flow rate is pressure driven, and is linearly proportional to the pressure difference. Furthermore the pressure difference is linearly proportional to the difference in water level between the ocean and the harbor. ",
                                        "unit_id":"28a6f1dc79e041f6a3d48f25cd9dc5d5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b0ce9be29e434497bd125cde415350d8",
                                "vertical_name":"2. Boston Harbor Example"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Complex numbers",
                                            "Complex function",
                                            "Complex exponential",
                                            "Right hand side",
                                            "Reference list",
                                            "Trigonometric functions",
                                            "Light blue",
                                            "Real function",
                                            "Real life",
                                            "Imaginary part",
                                            "Angular frequency",
                                            "Circular frequency",
                                            "Real part",
                                            "Real polynomial",
                                            "Real number",
                                            "Word frequency",
                                            "Qe",
                                            "Cosine",
                                            "Input",
                                            "Equation",
                                            "Complex",
                                            "Function",
                                            "Exponential",
                                            "Omega",
                                            "Real",
                                            "Part",
                                            "Frequency",
                                            "Interval",
                                            "Original",
                                            "Oscillation",
                                            "Ve",
                                            "Zp",
                                            "Remember",
                                            "Yellow",
                                            "Domain",
                                            "Erf",
                                            "Polynomial",
                                            "Xp",
                                            "Form",
                                            "Don",
                                            "Time",
                                            "Word",
                                            "Back",
                                            "Number",
                                            "Integrate",
                                            "Response",
                                            "Ll"
                                        ],
                                        "data":" So I'm going to take the equation in the form y prime plus ky equals k times qe of t. And the input that I'm interested in is when this is a simple one that you used on the visual that you did, got two points worth of work for handing in today, cosine omega t. So if you like k here. So the qe is cosine omega t. That was the physical input. And omega, as you know is-- you have to be careful when you use the word frequency. I assume you got this from a physics class last semester. But anyway, just to remind you there's a whole yoga of five or six terms that go whenever you're talking about trigonometric functions. Instead of giving a long explanation, the end of the second page of the notes just gives you a reference list of what you're expected to know for 18.03 and physics as well with a brief one- or two-line description of what each of those means. So think of it as something to look up, refer back to if you've forgotten. But omega is what's called the angular frequency or the circular frequency. It's somewhat misleading to call it the frequency although I probably will. It's the angular frequency. In other words, it's the number of complete oscillations. This cosine omega t is going up and down. So a complete oscillation is it goes down and then returns to where it started. That's a complete oscillation. This is only half an oscillation because you didn't give it a chance to get back. So the number of complete oscillations in how much time, well, in the distance 2 pi on the t axis in the interval of length 2 pi. Because, for example, if omega is 1, cosine t takes 2 pi to repeat itself. If omega were 2, it would repeat itself. It would make two complete oscillations in the interval 2 pi. So it's what happens in the interval 2 pi, not what happens in the time interval 1, which is the natural meaning of the word frequency. There's always this factor of 2 pi that floats around to make all your formulas and solutions incorrect. Now, what I'm out to do is, the problem is for the physical input qe cosine omega t, find the response. In other words, solve the differential equation. In short, for the visual that you looked at, I think I've forgotten the colors now, the input was in green, maybe, but I do remember that the response is in yellow (orange). I think I remember that. So find the response yellow (orange). And the input was-- what color was it, green? [INAUDIBLE] Blue. Light blue. So we got to solve the differential equation. Now, it's a question of how I'm going to solve the differential equation. I'm going to use complex numbers throughout, A, because that's the way it's usually done, B, to give you practice using complex numbers, and I don't think I need any other reasons. So I'm going to use complex numbers. I'm going to complexify. To use complex numbers, what you do is complexification of the problem. So I'm going to complexify the problem, turn it into the domain of complex numbers. So take the differential equation, turn it into a differential equation involving complex numbers, solve that, and then go back to the real domain to get the answer. Now, why should one do that? In other words, I didn't give you the real answer. The real answer, why one would do it, is because it's easier. And what makes it easier is the fact that exponentials are very easy to integrate. There's hardly anything easier to integrate than an exponential, well they're polynomials, but unfortunately, polynomials occurred distressingly little in real life. So complexify the problem. So the notes don't say this. That's why I realized after writing them that I probably-- since it's easier to integrate exponentials, and therefore, try to change the trigonometric functions into complex exponentials simply because the work will be easier to do. All right. So let's do it. To change this differential equation-- remember, I've got cosine omega t here-- I'm going to use the fact that e to the i omega t, Euler's formula, that the real part of it is cosine omega t. So I'm going to view this as the real part of this complex function, but I'll throw in the imaginary part too since at one point we'll need it. Now, what is the equation then it's going to turn into? The complexified equation is going to be y prime plus ky equals-- and now instead of the right-hand side, k times cosine omega t, I'll use the whole complex exponential, e i omega t. Now, I have a problem because y here, in this equation, y means the real function which solves that problem. I, therefore, cannot continue to call this y because I want y to be a real function. I have to change its name. Since this is a complex function on the right-hand side, I'll have to expect a complex solution to the differential equation. I'm going to call that complex solution y tilde. Now, then that's what I would also use as the designation for the variable. So y tilde is the complex solution, and it's going to have the form y1 plus i times y2. It's going to be the complex solution. And now what I say is, so solve it. Find this complex solution, so the program is to find y tilde. That's the complex solution. And then I say all you have to do is take the real part of that, and that will answer the original problem. Then y1, that's the real part of it, it's a function. Like this has cosine plus sine, as it was over here, it will naturally be something different. But that part of it, the real part, will solve the original problem, the original real ODE. Complex replacement is a method for finding a particular solution to an inhomogeneous linear ODE P(D)x=cos&omega;t, where P is a real polynomial, and &omega; is a real number. (Note that in the video y was the unknown function.) Write the right hand side of the equation cos&omega;t as Re(ei&omega;t): P(D)x=Re(ei&omega;t). Replace the right hand side of the differential equation with the complex exponential ei&omega;t. We need a new variable for the solution, which will be a complex function. Give the name z for the unknown complex function. The complexified differential equation is this: P(D)z=ei&omega;t.complex replacement (Note that in the video y~ was used instead of z.) Use ERF (or generalized ERF if P(i&omega;)=0) to find a particular solution zp to the complexified ODE. zp=ei&omega;tP(i&omega;). Compute xp=Re(zp). Then xp is a particular solution to the original ODE. ",
                                        "unit_id":"481ef923e1384aafb5f85650f8e3656b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"61f280f1a4f04e90ae8a9f030753d891",
                                "vertical_name":"3. Complex replacement method"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex exponential",
                                            "Complex arithmetic",
                                            "Real part",
                                            "Acos",
                                            "Real valued function",
                                            "Erf",
                                            "Function"
                                        ],
                                        "data":" Question 4.1&emsp;&emsp; Why does the complex replacement method work? Answer If z=x1+ix2 is a solution to the complex replacement ODE, i.e., P(D)z = ei&omega;t, P(D)(x1+ix2) = cos&omega;t+isin&omega;t. Since P has real coefficients, taking the real parts of both sides gives P(D)x1=cos&omega;t. which says that x1 is a solution to the original ODE. Note that for free we've actually solved another equation. Taking the imaginary parts of both gives us P(D)x2=sin&omega;t. Hide Complex replacement is helpful also with other real input signals, with any real-valued function that can be written as the real part of a reasonably simple complex input signal. Here are some simple examples that would be helpful to have memorized: Real input signal Complex replacement cos&omega;t ei&omega;t Acos(&omega;t&minus;\u03d5) Aei(&omega;t&minus;\u03d5) eatcos&omega;t e(a+i&omega;)t Using complex arithmetic, there is a more complicated formula which can be derived as well (it was derived in Lecture 6: Sinusoids) Real input signal Complex replacement acos&omega;t+bsin&omega;t (a&minus;bi)ei&omega;t Each function in the first column is the real part of the corresponding function in the second column. The nice thing about these examples is that the complex replacement is a constant times a complex exponential, so ERF (or generalized ERF) applies. ",
                                        "unit_id":"b2e199659c5a490088fb62a09a3c5f56",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"267677bc30e04fe9a55280a0a6355a64",
                                "vertical_name":"4. Why does complex replacement work?"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polar form",
                                            "Complex form",
                                            "Real part",
                                            "Characteristic polynomial",
                                            "Linear combination",
                                            "Zp",
                                            "Xp",
                                            "Ode",
                                            "Denominator"
                                        ],
                                        "data":" Example 5.1&emsp;&emsp; Find a solution to x&uml;+4x=cos(2t). Solution: Step 1. Replace cos(2t) by Ree2it, and complexify the ODE: z&uml;+4z=e2it. Step 2. Find the characteristic polynomial and apply ERF: P(r)=r2+4. We find that P(2i)=0, so we must use the ERF&prime;: P&prime;(r)=2r. The particular solution is zp=te2itP&prime;(2i)=te2it4i. Step 3. Take the real part to find the solution to the original equation xp=Re(zp)=Re(t(cos(2t)+isin(2t))4i)=t4sin(2t). Example 5.2&emsp;&emsp; Find a particular solution xp to x&uml;+x\u02d9+2x=cos(2t). Solution: Step 1. Since cos(2t) is the real part of e2it, replace cos(2t) by e2it: z&uml;+z\u02d9+2z=e2it. Step 2. Find the characteristic polynomial P(r)=r2+r+2 and apply ERF, which says that one particular solution to this new ODE is zp=1P(2i)e2it=1&minus;2+2ie2it. Step 3. A particular solution to the original ODE is xp=Re(zp)=Re(1&minus;2+2ie2it). This is a sinusoid expressed in complex form. It might be more useful to have the answer in amplitude-phase form or as a linear combination of cosine and sine. Converting to amplitude-phase form. We have zp=1&minus;2+2ie2it. To get the amplitude-phase form, we convert numerator and denominator to polar form so the division is easier. The denominator &minus;2+2i has absolute value 22 and angle 3&pi;/4, so in polar form &minus;2+2i = 22ei(3&pi;/4), zp = e2it22ei(3&pi;/4)=122ei(2t&minus;3&pi;/4). Conclusion: In amplitude-phase form, xp=122cos(2t&minus;3&pi;/4). Converting to a linear combination of cos and sin: We have zp=1&minus;2+2ie2it. To get the linear combination, we express numerator and denominator in rectangular form and then rationalize the denominator. We have e2it = cos2t+isin2t cos2t+isin2t&minus;2+2i = cos2t+isin2t&minus;2+2i(&minus;2&minus;2i&minus;2&minus;2i) = (cos2t+isin2t)&minus;2&minus;2i8=(cos2t+isin2t)&minus;1&minus;i4 = (&minus;cos2t+sin2t)&minus;i(cos2t+sin2t)4. Conclusion: xp=&minus;14cos(2t)+14sin(2t) ",
                                        "unit_id":"075b327316d549c69950df45286e2ff5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"18036961abd7426380a108d5061d835d",
                                "vertical_name":"5. Worked examples using complex replacement"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Right hand side",
                                            "Real number",
                                            "Computer screen",
                                            "Binomial theorem",
                                            "Real part",
                                            "Imaginary part",
                                            "Homogeneous equation",
                                            "Characteristic polynomial",
                                            "Quadratic polynomial",
                                            "Complex conjugate",
                                            "Complex exponential",
                                            "Square root",
                                            "Polar form",
                                            "General formula",
                                            "Call",
                                            "Real",
                                            "Prime",
                                            "Solve",
                                            "Part",
                                            "Squared",
                                            "Equation",
                                            "Ll",
                                            "Polynomial",
                                            "Complex",
                                            "Minus",
                                            "Yp",
                                            "Tilde",
                                            "Square",
                                            "Pi",
                                            "Pull",
                                            "Form",
                                            "Sine",
                                            "Put",
                                            "General",
                                            "Negative"
                                        ],
                                        "data":" We can use complex replacement to solve any ODE of the form P(D)x=eatcos(&omega;t&minus;\u03d5). Let us see how by working through an example. Example 6.1&emsp;&emsp; Find a solution to x&uml;+2x=e&minus;tcos(3t&minus;\u03d5), where \u03d5 is a real number. Solution: Replace the right hand side with a complex exponential: e&minus;tei3t&minus;i\u03d5 = e&minus;i\u03d5e(&minus;1+3i)t. The complexified equation is z&uml;+2z =e&minus;i\u03d5e(&minus;1+3i)t. Apply ERF. The characteristic polynomial is P(r) = r2+2, P(&minus;1+3i) = (&minus;1+3i)2+2=&minus;6&minus;6i, and the complex solution is zp=e&minus;i\u03d5e(&minus;1+3i)t&minus;6&minus;6i. A solution to the original problem is then xp=Re(zp). The solution involves a sinusoid. Polar form is the most convenient for this problem, so we put the denominator in polar form: &minus;6&minus;6i=62e&minus;i3&pi;/4. Then zp = e&minus;i\u03d5e(&minus;1+3i)t&minus;6&minus;6i=162e&minus;i\u03d5+i3&pi;/4e(&minus;1+3i)t, and xp = Re(zp)=162e&minus;tcos(3t&minus;\u03d5+3&pi;/4). y double prime minus y prime plus 2y is equal to 10e to the minus x sine x. Gulp. So the input is this function 10 e to the minus x. It's a decaying oscillation. You've seen those already on the computer screen if you started your homework, if you've done problem 1 on your homework. A decaying exponential, and I want to find a particular solution. Well, let's find a particular and the general solution. Find the general solution. Well, the main part of the work is finding the particular solution, but let's quickly, the general solution, let's find first the complimentary part of it. In other words, the solution to the homogeneous equation, that's D squared minus D plus 2. No, let's not. I don't want to solve messy quadratics. We're going to find a particular solution. I thought it was going to come out easy and then I realized it wasn't because I picked the wrong sines. So if you don't like it, just change the problem. I can do that, but you cannot. Don't forget that. So we want a particular solution, and our equation is this equals that. Now, let's complexify it to make this part of a complex exponential so that the complex exponential that's relevant is 10 times e to the minus 1 plus i-- you see that-- x. What is this? This is the imaginary part of this complex exponential. So this is imaginary part of that guy, e to the negative x times e to the ix. And the imaginary part of e to the ix is sine x. The 10, of course, just comes along for the ride. Well, now, since this is a complex equation, I shouldn't call this y anymore. By my notation, I like to call it y tilde to indicate that the solution we get to this is not going to be the solution to the original problem, but you'll have to take the imaginary part of it to get it. So we're looking now for the complex solution to this complexified equation. What is it? Well, the complex particular solution I can write down immediately. It is 10-- that, of course, just gets dragged along by linearity-- times e to the minus 1 plus i times x, and it's over this polynomial evaluated at this alpha. So just write it down with-- have faith. So what do I get? The alpha is minus 1 plus i. I square that because I'm substituting this alpha into that polynomial. The reason I'm doing that is because the formula tells me to do it. That's going to be the solution. So it's minus 1 plus i the quantity squared minus minus 1 plus i plus 2. All I've done is substitute minus 1 plus i for D in that quadratic polynomial. And now all I want is the imaginary part of this. The imaginary part of this will be the solution to the original problem because this right-hand side was the imaginary part of the complexified right-hand side. Now, let's make it look a little better. yp tilde. Clearly what we have to do is something nice to the denominator. So we'll copy the numerator, that's e to the minus 1 plus ix. And how about the denominator? Well, again, don't expand things out because it's already this long, and what's the point in making it this long? You want to make it this long. Then there's room here for one real number and another real number times i, there's no more room. What's the real number? We're looking for the real part of this expression. So just put it in and keep it mentally. So minus 1 squared, that's 1, plus i squared, that's minus 1. 1 minus 1 is 0. I could forget about that term. This term gives me plus 1 for the real part plus 2. The answer is that the real part is 3. How about the imaginary part? Well, from here, there's negative 2i-- I'm expanding that out by the binomial theorem or whatever you like to call that-- minus 2i minus i makes minus 3i. Is that right? Minus 2i minus i makes minus 3i. So it is 10/3. And now in the denominator, I have 1 minus i. I'll put that in the numerator, make it 1 plus i, but I have to divide by the product of 1 minus i and it's complex conjugate. In other words, I'm multiplying both top and bottom by 1 plus i. And so that makes here 1 squared plus 1 squared is 2. That takes care, and now what's left is e to the negative x times cosine x plus i sine x. Now, of that, what we want is just the imaginary part. Well, let's see. 2 goes into 10 makes 5, so that's 5/3. So we're practically at our solution. The solution then finally is going to be yp is the imaginary part of yp tilde, and what's that? Well, what's the coefficient out front? First of all, it's 5/3. So let's pull out the 5/3 before we forget it. And we'll pull out the e to the negative x before we forget that. And then the rest is simply a question of seeing what's left. Well, it's 1. I want the imaginary part. So the imaginary part is going to be 1 times cosine x. And then the other imaginary part comes from these two pieces, which is 1 times sine x. That should be the particular solution. Notice that most of the work is not getting this thing. It's turning it into something human that you can take the real and imaginary parts of. If we don't like this form, you can put it in the other form, which many engineers would do almost automatically. Make it 5/3 e to the negative x. And what will that be? Well, you can use the general formula if you want. Remember cosine, the two coefficients are 1 and 1. So it's 1 and 1. So this is the square root of 2. So it is times this part makes the square root of 2 times cosine of x minus the angle. This is the phi, so that's pi over 4, minus pi over 4. ",
                                        "unit_id":"2986ca1873ad43d8aecd419c9f85fb1b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"433d0b213b774f79819d59eb59ad4282",
                                "vertical_name":"6. Damped sinusoidal inputs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase lag",
                                            "Complex number",
                                            "Polar form",
                                            "Complex gain",
                                            "Boston harbor",
                                            "Nyquist plot",
                                            "Differential equation",
                                            "Bode plot",
                                            "Real part",
                                            "Input",
                                            "System",
                                            "Ode",
                                            "Response",
                                            "Ei",
                                            "Function",
                                            "Real",
                                            "Harbor",
                                            "Plot",
                                            "Equation",
                                            "Amplitude",
                                            "Find",
                                            "Part",
                                            "Gain",
                                            "Case",
                                            "General",
                                            "Tide",
                                            "Xp",
                                            "Erf",
                                            "Constant",
                                            "Zp"
                                        ],
                                        "data":" Our goal is to explain how the amplitude and phase lag of the system response depend on system parameters and the input frequency. To do so, we will use our method of complex replacement and introduce the complex gain. Let's state the general picture here for reference. We have an LTI system modeled by the differential equation P(D)x=Q(D)y with input signal y and system response x. The ERF together with complex replacement shows that if y=cos(&omega;t), then a particular solution is given by xp=Re(G(&omega;)ei&omega;t) where G(&omega;)=Q(i&omega;)P(i&omega;)if P(i&omega;)&ne;0. Complexification and ERF worked out The complexified equation is P(D)z=Q(D)ei&omega;t. If P(i&omega;)&ne;0, the ERF gives us a particular solution of the form zp=Q(i&omega;)P(i&omega;)ei&omega;t. We can express this as zp=G(&omega;)ei&omega;t. Writing the complex gain in polar form, G(&omega;)=|G(&omega;)|e&minus;i\u03d5, we find zp=|G(&omega;)|ei(&omega;t&minus;\u03d5). So the solution to the original ODE is xp=|G(&omega;)|cos(&omega;t&minus;\u03d5). Hide This form leads directly to the polar form of the sinusoidal function xp. Let's see how this works with the equation we used to model the tide in Boston Harbor x\u02d9+kx=kcos(&omega;t). Recall that we model the ocean tide by cos(&omega;t), and this is regarded as the input signal. The system response x is the height of the water in harbor. We use the method of complex replacement to solve the ODE for the Boston harbor problem The complex replacement ODE is z\u02d9+kz=kei&omega;t with input signal ei&omega;t. One particular response determined by ERF is zp=Q(i&omega;)P(i&omega;)ei&omega;t=ki&omega;+kei&omega;t. The ERF shows that the system response to a complex exponential input signal is a constant multiple of that input signal. That constant is the complex gain : G(&omega;) = complexified system responsecomplexified system input. In the present case, G(&omega;) = ki&omega;+k and zp=G(&omega;)ei&omega;t = ki&omega;+kei&omega;t. This complex number G, expressed as a ratio of two functions of time is constant . It depends upon the system parameters, of course, but we regard them as fixed. We are interested in how it varies with the input angular frequency &omega;, and write G(&omega;) to stress that functional dependence. To get a particular solution to the original real ODE, take the real part of zp: xp=Re(G(&omega;)ei&omega;t)=Re(ki&omega;+kei&omega;t) Now comes the best part of this method. Writing the particular solution in terms of G leads directly to the polar form for xp. To find it, write out the polar expression for the complex number G(&omega;): G(&omega;)=|G(&omega;)|e&minus;i\u03d5. In our case, |G(&omega;)|=k&omega;2+k2 and so zp = k&omega;2+k2ei(&omega;t&minus;\u03d5)andxp = k&omega;2+k2cos(&omega;t&minus;\u03d5). We have discovered that the gain is given by gain=g(&omega;)=k&omega;2+k2. General rule: In general, the gain=g(&omega;)=|G(&omega;)| and the phase lag=\u03d5=&minus;argG(&omega;). In the mathlet, the complex gain is depicted in the Nyquist Plot. The (real) gain and phase lag are depicted in the Bode Plot. Click on the buttons to see these plots in the mathlet. Observe that the amplitude of the response is different than the amplitude of the input. That ratio of the system response amplitude to the input amplitude is the gain g, which is the magnitude of the complex gain g=|G|. The phase lag is \u03d5=&minus;argG. For this system, gain=|G|=k|k+i&omega;|=kk2+&omega;2 and phase lag=&minus;argG = &minus;(argkk+i&omega;) = &minus;argk+arg(k+i&omega;)=arg(k+i&omega;). Note the last equality follows because argk=0 since k is real and positive. Observe that in general, we have complex gain=G = Q(i&omega;)P(i&omega;) phase lag=&minus;argG = argP(i&omega;)&minus;argQ(i&omega;). ",
                                        "unit_id":"1ddd378a191748faa9e560e943467b32",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c4baacae92a0480697bc88d9ea52d8dc",
                                "vertical_name":"7. Complex gain"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex gain"
                                        ],
                                        "data":" Now we will apply the method of complex gain to understand solutions to a more complicated system &mdash; a mass-spring-dashpot system driven through the spring. The general differential equation is x&uml;+bx\u02d9+kx=ky where y is the input signal, namely the position of the far end of the spring, and x is the displacement of the mass. This is depicted in the mathlet below where we restrict to m=1. We are interested as usual in a sinusoidal input, which we take to be y(t)=cos(&omega;t). ",
                                        "unit_id":"4476612a82c14beca464592767edf269",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3604057c4c0744bfa40b99c74804a2ca",
                                "vertical_name":"8. Driving through the spring"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase lag",
                                            "Differential equation",
                                            "Input output analysis",
                                            "Time scale",
                                            "Constant coefficient",
                                            "Linear",
                                            "Input",
                                            "Output",
                                            "Sinusoidal",
                                            "System",
                                            "Time invariant",
                                            "Response",
                                            "Studying",
                                            "Coefficient"
                                        ],
                                        "data":" Here we explain why it is really enough to understand the system response to the input signal cos(&omega;t). We have been studying LTI, or Linear Time-Invariant systems. &ldquo;Time-invariant\" means that the system parameters are not changing, or are changing very slowly relative to the time scale we are interested in. The implication for our input/output analysis is this: If x(t) is a system response to the input signal f(t), then if we delay the input signal by t0 seconds, the output signal is the same as before but delayed by t0 seconds as well: x(t&minus;t0) is a system response to the input f(t&minus;t0). The system parameters are the coefficients in the differential equation; so &ldquo;time-invariant\" is the same as &ldquo;constant coefficient.\" Because our systems are also linear , if x(t) is a system response to f(t), then Ax(t) is a system response to Af(t). Thus when studying a linear time-invariant system with sinusoidal input Acos(&omega;t&minus;\u03d5), it is enough to consider the input cos(&omega;t) since linearity and time-invariance give the response to all other sinusoidal inputs for free. Example 9.1&emsp;&emsp; If P(D)x=cos&omega;t has xp=Acos(&omega;t&minus;\u03d5) as a particular solution, then shifting time by a=&alpha;/&omega; shows that P(D)x=cos(&omega;t&minus;&alpha;) has xp=Acos(&omega;t&minus;&alpha;&minus;\u03d5) as a particular solution. The gain and phase lag represent a relationship between the input and the output (both sinusoidal). The gain is the ratio of the output amplitude to the input amplitude, and the phase lag is the number of radians the output signal falls behind the input signal. Because our system is time-invariant, those relationships between input and response are unchanged by replacing the input signal cos(&omega;t) with cos(&omega;t&minus;&alpha;): the gain is A and the phase lag is \u03d5. ",
                                        "unit_id":"49037e9d2188418ea084c6becade2f1e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6097d85edd514cbf80032273c9720dc6",
                                "vertical_name":"9. The meaning of LTI"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Characteristic polynomial",
                                            "Superposition principle",
                                            "Linear combination",
                                            "Polar form",
                                            "Complex conjugate",
                                            "Differential equation",
                                            "Time shift",
                                            "Imaginary part",
                                            "Real part",
                                            "Cosine",
                                            "Kx",
                                            "Formula",
                                            "Response",
                                            "Omega",
                                            "Squared",
                                            "Shift",
                                            "Minus",
                                            "Phi",
                                            "Sine",
                                            "Real",
                                            "Ve",
                                            "Start",
                                            "Time",
                                            "Find",
                                            "Taking",
                                            "Erf",
                                            "Constant",
                                            "Part",
                                            "Write",
                                            "Input",
                                            "Ll",
                                            "Factor",
                                            "Ode",
                                            "Equation"
                                        ],
                                        "data":" In this video, we'll review how to solve first order differential equations with sinusoidal inputs using complex replacement and the exponential response formula. In part a, we will use complex techniques to solve x dot plus kx equals cosine omega t, where k and omega are constants. Cosine omega t is the input in this equation, and x is the response, which we want to find. In part b, we will use our work from part a to solve x dot plus kx equals F sine omega t, where F is a constant. Notice that the two left hand sides are the same, but the inputs are different. In part c, we will use the superposition principle to solve, again, the same left hand side, x dot plus kx, but our input is now cosine omega t plus 3 sine omega t. Finally, in part d, we'll use our work from part a again to solve x dot plus kx on the left hand side again, but our input is cosine omega t minus phi where phi is a constant phase shift. Take a moment to pause this video and try these problems on your own, and we'll be back in a moment. Welcome back. For this problem, for each part, the general solution is equal to the solution to the associated homogeneous problem plus the particular solution. In this video, we will only be finding the particular solution for each ODE, but it's still important to find x sub h. So you should do this on your own as an exercise. For part a, our ODE is x dot plus kx equals cosine omega t. And to solve this, we're going to use complex replacement by realizing that cosine of omega t is equal to the real part of e to the i omega t. So we can complexify this ODE by writing z dot plus kz equals e to the i omega t. And we'll find a particular solution to this ODE. Once we do that, we take the real part of that solution, which will give us a particular solution for our original ODE. So x sub p will be equal to the real part of z sub p, where this is a particular solution for this ODE. So to solve the ODE for z, we're going to use the ERF. We'll need the characteristic polynomial, which is P of s equals s plus k, and the ERF tells us that a particular solution z sub p is equal to 1 over the characteristic polynomial evaluated at i times the frequency times the right hand side-- e to the i omega t. Substituting i omega into the characteristic polynomial gives us 1 over k plus i omega times e to the i omega t. Now we're going to decompose z into it's real and imaginary parts. So we're going to rationalize the denominator. So we're going to multiply the numerator and denominator by the complex conjugate of the denominator. That will give us k minus i omega over k squared plus omega squared times e to the i omega t. And we also want to write this as a sum of sines and cosines using Euler's formula. So we get k minus i omega over k squared plus omega squared times cosine of omega t plus i sine omega t. Now we just need to take the real part of this solution to get x sub p, our particular solution. So x sub p equals the real part of z sub p, which is equal to 1 over k squared plus omega squared times k times cosine omega t gives us a real part. So this is cosine omega t. And then minus i omega times i gives us a plus omega times sine of omega t. So this is our particular solution to the ODE in part a. Now that we found this, I'll let you work through the problem in part b, and we'll be right back. Welcome back. Now, before we start part b, I just want to point out. Did you notice that z sub p was written in rectangular form? We could have also written it in polar form, but for this video, we just made the choice to use rectangular form. So let's start with part b. And our ODE, in this case, is x dot plus kx equals F times sine of omega t. So if we use complex replacement, again, we notice that F sine of omega t is equal to F times the imaginary part of e to the i omega t. So the complexified ODE is z dot plus kz equals F times e to the i omega t. But we already solved this problem. This ODE for z is the same as this ODE, except that we're just multiplying the right hand side by the constant F. And by linearity, this F would just carry through all of our calculations. So we can write down our particular solution. This would be z sub p. By just writing down our particular solution from part a multiplied by the constant F. So now we have F times k minus i omega over k squared plus omega squared times cosine of omega t plus i sine of omega t. And again, x sub p is, now, in this case, it's the imaginary part of z sub p. So to get the imaginary part, we have F over k squared plus omega squared. And now we want the factors that are multiplied by i. So minus i omega times cosine omega t, this will give us part of the imaginary part. So we'll get a minus omega cosine of omega t. And k times i sine omega t is also part of the imaginary part of zp, so plus k sine of omega t. So now this is our particular solution for part b. And since, now, we've completed part b, I'll let you work through part c, and we'll come back in a moment. I've just erased the boards, and let's recap what we did in parts a and b. In part a, we used complex replacement and the exponential response formula to solve x dot plus kx equals our input cosine omega t. And we found a particular solution, which I've rewritten here, but i've re-labeled it as x sub a, just to remember that this particular solution corresponds to part a. In part b, we used complex replacement, as well as our work from part a, to solve x dot plus kx equals an input of F times sine omega t. And we found this particular solution, which, again, I've relabeled as x sub b so that we remember which part this corresponds to. Also remember that part a was found by taking the real part of the particular solution to the complexified ODE. And part b was found by taking the imaginary part of that solution and multiplying by a constant F. So now, we're going to move on to part c, which is to solve x dot plus kx equals cosine of omega t plus 3 sine omega t. So to solve this, we're going to use the superposition principle. We saw in part a that this particular solution satisfied the equation x sub a dot plus k times x sub a equals cosine of omega t. This particular solution for part b solves the equation x sub b dot plus k times x sub b is equal to if we let F equal 3 in this case, we can write 3 sine of omega t, where F equals 3. So now, by linearity, we can write that d dt of x sub a plus x sub b plus k times x sub a plus x sub b is equal to the sum of the right hand sides-- cosine omega t plus 3 sine omega t. And now the superposition principle tells us that, since xa plus xb here is just x, in this equation, we can write down the solution to this equation by simply taking the sum of the solutions from part and part b. So we get that x sub p for this equation is equal to 1 over k squared plus omega squared times our factor from part a, which is k cosine omega t plus omega sine of omega t plus our factors from part b, which are-- we're letting F equal 3 here again. So remember that this will be minus 3 omega cosine omega t plus 3k times sine of omega t. And we can combine like terms in this expression to get that the x sub p is equal to 1 over k squared plus the omega squared times k minus 3 omega times cosine of omega t plus omega plus 3k sine of omega t. So this is a particular solution for the differential equation in part c. And notice that, again, it's a linear combination of cosines and sines. So now, we're going to move on to part d, and I'll let you work on that before I come back, and we go through it together. Now, let's move on to part d. In part d, we're solving x dot plus kx equals cosine omega t minus 5. Now, this might look a little bit complicated or confusing. But there's a shortcut on how to solve this. If we notice that we can rewrite this as x dot plus kx equals cosine omega times t minus phi omega. So I've just factored out an omega here. We can actually use what's called time invariance. That's because this is a linear ODE, and none of the coefficients depend on time. So we can apply this concept. Now this ODE might look familiar now because, in part a, the ODE that we solved was x dot plus kx equals cosine omega t. Now the only difference is that the t, in this case, is replaced by a t minus phi over omega. So this is just a shift in time. Time invariance tells us that the solution to this equation, which has an input that's shifted in time, is the same as the solution to this equation with that same time shift. So if we look back at our solution from part a, our solution for part d will be the same, except that, instead of t, we'll write t minus phi over omega. So let's write that here. So x sub p for part d is going to be equal to 1 over k squared plus omega squared times k cosine of omega t minus phi-- so when I substitute this in for t, omega distributes through, and I get this factor again-- plus omega sine omega t minus phi. And that's the solution for the ODE in part d. And we could have gone through and done the ERF and everything all over again, and we'd get the same answer, but this is just a nice property of the equation that we could just apply the work we had done previously. ",
                                        "unit_id":"15bf434d41e94bc49208108a20499388",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8cb049e1cb1b4196b8dbe7e5086eb790",
                                "vertical_name":"10. Worked example video"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "General integral",
                                            "Rock star",
                                            "Steady state",
                                            "Integrating factor",
                                            "Initial conditions",
                                            "Initial condition",
                                            "Long term",
                                            "Input",
                                            "Decay",
                                            "Output",
                                            "Homogeneous",
                                            "Ode",
                                            "Form",
                                            "General",
                                            "Curve",
                                            "Initial",
                                            "Formula",
                                            "Starting",
                                            "Graph",
                                            "Definite",
                                            "System",
                                            "Negative",
                                            "Start",
                                            "White",
                                            "Make",
                                            "Picture",
                                            "Opposite",
                                            "Function",
                                            "Term",
                                            "Constant",
                                            "Transient",
                                            "Time",
                                            "Simplest",
                                            "Called"
                                        ],
                                        "data":" Note on video below: The following video has to do with the first order linear DE y\u02d9+ky=q(t). In this lecture, we've been discussing the case of exponential inputs q(t)=e(a+ib)t. This is the case where complex numbers and ERF help. But earlier in the class we used variation of parameters to find a general integral solution for any input q(t). The video next is considering the context of the most general input q(t). Let's look at the equation. This form will be good enough, the y prime. When you solve it, let me remind you how the solutions look, because that explains the terminology. The solution looks like-- after you've done the integrating factor and multiplied through and integrated both sides-- in short, what you're supposed to do. The solution looks like y equals-- there's the term e to the negative k out front times an integral-- which you can either make definite or indefinite according to your preference-- q of t times e to the kt inside dt. It will help you to remember the opposite signs. If you think that when q is a constant, 1 for example, you want these two guys to cancel out and produce a constant solution. That's a good way to remember that the signs have to be opposite. But I don't encourage you to remember the formula at all. It's just a convenient thing for me to be able to use right now. And then there's the other term which comes by putting out the arbitrary constants explicitly, c e to the negative kt. So you could either write it this way, where this is somewhat vague, or you could make it definite by putting a 0 here and a t there and change the dummy variable inside according to the way the notes tell you to do it. When you do this and if k is positive-- that's absolutely essential-- only when that is so, then this term, as I told you a week or so ago, this term goes to 0 because k is positive as t goes to infinity. So this goes to 0 as t goes-- and it doesn't matter what c is-- as t goes to infinity. This term stays some sort of function. And so this term is called the steady state or long term solution. It's called both, the long term solution. And this which disappears, gets smaller and smaller as time goes on, is therefore called the transient because it disappears as the time increases to infinity. So this part uses the initial value, let's call it y of 0, assuming that you started the initial value when t was equal to 0, which is a common thing to do, although of course not necessary. The starting value appears in this term. This one is just some function. The general picture of the way that looks is the steady state solution will be some solution like, I don't know, like that, let's say. So that's the steady state solution, the SSS. What do the other guys look like? Well, the steady state solution has this starting point. Other solutions can have any of these other starting points. So in the beginning, they won't look like the steady state solution. But we know that as time goes on, they must approach it, because this term represents the difference between the solution and the steady state solution. So this term is going to 0, and therefore whatever these guys do to start out with, after a while they must follow the steady state solution more and more closely. They must, in short, be asymptotic to it. So the solutions to any equation of that form will look like this. Even if up here maybe it started at 127, that's OK. After a while it's going to start approaching that green curve. Of course, they won't cross each other. But they are sort of like that's the rock star and these are the groupies trying to get close to it. But something follows from that picture, which is the steady state solution? What, in short, is so special about this green curve? All these other white solution curves have the same property that all the other white curves and the green curve, too, are trying to get close to them. In other words, there is nothing special about the green curve. It's just that they all want to get close to each other. And therefore, though you can write a formula like this, there isn't one steady state solution. There are many. Now, this produces vagueness. So you talk about the steady state solution, which are you talking about? I have no answer to that. The usual answer is whichever one looks simplest. Normally the one that will look simplest is the one where c is 0. But if this is a peculiar function, it might be that for some other value of c, you get an even simpler expression. So the steady state solution, about the best I can say, either you integrate that, don't use an arbitrary constant and use what you get, or pick the simplest. Pick the value of c which gives you the simplest answer. Pick the simplest function. That's what's usually called the steady state solution. Remarks on video: For higher order systems, we haven't presented the general integral formula for solving differential equations with arbitrary input. So here we only discuss transients, steady state, and stability in the case of complex exponential input for higher order systems. A certain spring/mass/dashpot system is modeled by the LTI ODE x&uml;+7x\u02d9+12x=12f(t) where f(t)=cos(2t) is the input signal. Question: Suppose that the solution to this equation with initial conditions (x(0),x\u02d9(0))=(2,3) is x(t). What can you say about the solution y(t) to the same ODE with initial condition (y(0),y\u02d9(0))=(3,&minus;8)? It isn't related to x(t) in any way. It oscillates. Its graph becomes asymptotic to that of x(t) as t&rarr;&infin;. Its graph diverges from that of x(t) as t&rarr;&infin;. Solution: The characteristic roots are &minus;3 and &minus;4. Thus the general homogeneous solution has the form xh=c1e&minus;3t+c2e&minus;4t, where c1 and c2 are constants determined by initial conditions. All of these homogeneous solutions decay (rapidly!) to zero as t grows to &infin;. So any solution with different initial conditions will eventually become asymptotic to that of x(t). Why is this? The general solution to the original inhomogeneous ODE is x =xp+xh =Re(128+14ie2it)\u23dfsteady state solution+c1e&minus;3t+c2e&minus;4t\u23dftransient. In general, a damped oscillator forced with a sinusoidal input produces a sinusoidal output signal. That output is a particular solution called a steady-state solution , because this is what the solution looks like as t&rarr;&infin;. Every other solution is the steady-state solution plus a transient , where the transient is a function that decays to 0 as t&rarr;+&infin;. Changing the initial conditions changes only the constants c1 and c2 in the homogeneous solution above, so the steady-state solution is the same. A system like this, in which changes in the initial conditions have vanishing effect on the long-term behavior of the solution, is called stable . ",
                                        "unit_id":"d51dad01712e4309b88117d17aa01666",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9f999416d6fa4dd5b363e868c2dfec94",
                                "vertical_name":"11. Stability"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equation",
                                            "Steady state",
                                            "Differential equation",
                                            "Characteristic polynomial",
                                            "Electrical engineers",
                                            "Initial conditions",
                                            "Real part",
                                            "Characteristic equation",
                                            "Complex number",
                                            "Asymptotically stable",
                                            "Homogeneous equation",
                                            "Long term",
                                            "Linear",
                                            "Case analysis",
                                            "Order",
                                            "Bt",
                                            "Real",
                                            "Ode",
                                            "Constant",
                                            "Part",
                                            "Stability",
                                            "Complex",
                                            "Bi",
                                            "Equation",
                                            "Negative",
                                            "Distinct",
                                            "Call",
                                            "Interested",
                                            "Homogeneous",
                                            "Important",
                                            "People",
                                            "Long",
                                            "Form",
                                            "Stable",
                                            "Called",
                                            "Oscillates",
                                            "Ll",
                                            "Term",
                                            "Repeated",
                                            "General",
                                            "Write",
                                            "Condition",
                                            "Analysis",
                                            "Thing",
                                            "Case"
                                        ],
                                        "data":" Stability means that the long-term system behavior is independent of initial conditions. Stability test in terms of roots. A constant coefficient linear ODE of any order is stable if and only if every root of the characteristic polynomial has negative real part. We will explain this in the case of a second order system. For any second order system mx&uml;+bx\u02d9+kx=0 there are 3 cases for the roots of the characteristic polynomial. The roots are complex conjugates: a&plusmn;bi. The roots are repeated and real: s,s. The roots are distinct real numbers: r1,r2. If the roots are complex conjugates, then the general solution to the homogeneous equation takes the form eat(Acos(bt&minus;\u03d5)). The homogeneous solution is transient only if the real part of the root is negative (a&lt;0). If the real part is zero a=0, the homogeneous solution oscillates forever with constant amplitude; if the real part is positive (a&gt;0), the homogeneous solution oscillates and the amplitude grows exponentially as time goes on. If the roots are real and repeated, then the homogeneous solution takes the form (A+Bt)est, and these solutions are transient only if s&lt;0. If the roots are real and distinct, then the homogeneous solution takes the form c1er1t+c2er2t, and these solutions are transient only if r1,r2&lt;0. These conditions are collected in the table below. All three cases are covered by the statement that the real part of the roots of the characteristic polynomial must be negative. Roots General solution xh Condition for stability complex a&plusmn;bi eat(c1cos(bt)+c2sin(bt)) a&lt;0 repeated real s,s est(c1+c2t) s&lt;0 distinct real r1,r2 c1er1t+c2er2t r1,r2&lt;0 This is our equation. A and B are constants. You can think of either of these two models or others. The question I'm asking is, under what circumstances can I make that same type of analysis into steady state and transient? Well, what does the solution look like? The solution looks like y equals a particular solution plus c1 y1 plus c2 y2. Therefore, to make that look like this, the c1 and c2 contain the initial conditions. This part does not. Therefore, if I want to say that the solutions look like a steady state solution plus something which dies away, which becomes less and less important as time goes on, what I'm really asking is, under what circumstances is this part guaranteed to go to 0? So the question is, in other words, under what conditions on the equation A and B in effect is what we're asking. When does c1 y1 plus c2 y2 go to 0 as t goes to infinity regardless of what c1 and c2 are, for all c1, c2? Here there was no difficulty. We had the thing very explicitly, and you could see it. k is positive, this goes to 0. And if k is negative, it doesn't go to zero. It goes to infinity. Here I want to make the same kind of analysis, except it's just going to be a little more trouble. But the answer when it finally comes out is very beautiful. So when are all these guys going to go to 0? First of all, you might as well have the definition. All the good things that this is going to imply, if this is so-- in other words, if they all go to 0, everything in the complementary solution goes to 0, then the ODE is called stable. Some people call it asymptotically stable. I don't know what to call it. I can make the analysis. And then I use the identical terminology, c1 y1 plus c2 y2. This is called the transient because it goes to 0. This is called the particular solution now that we labor so hard to get for the next two weeks is the important part. It's the steady state part. It's what lasts out to infinity after the other stuff has disappeared. So this is the steady state solution. Steady state solution. And the differential equation is called stable. It's of the highest interest to know when a linear differential equation is stable in this sense, because you have a control. You know what its solutions look like. You have some feeling for how it's behaving in the long term. If this is not so, each equation is a law unto itself, and you don't know. So let's do the work. For the rest of the period, what I'd like to do is to find out what the conditions are which make this true. Those are the equations which we'll have a right to call stable. So when does this happen, and where is it going to happen? I don't know. I guess here. I think the first step is fairly easy, and it'll give you a good review of what we've been doing up till now. So I'm simply going to make a case by case analysis. Don't worry, it won't take very long. What are the cases we've been studying? Well, what do the characteristic roots look like? The roots of the characteristic equation, in other words. Remember, there are cases. The first case is they're real and distinct. r1 not equal to r2. Real and distinct. What are the other cases? Well, r1 equals r2. And then there's the case where they're complex. So I'll write it r equals a plus or minus bi. What do the solutions look like? So my ham-handed approach to this problem is going to be in each case, I'll look at the solutions and first get the condition on the roots. So in other words, I'm not going to worry right away about the A and the B. I'm going instead to worry about expressing this condition of stability in terms of the characteristic roots. In fact, that's the only way in which many people know the conditions. You're going to be smarter. What do the solutions look like? Well, the general solution looks like e to the r1 t plus c2 e to the r2 t. So what's the stability condition? In other words, if this equation happened to have its characteristic roots real and distinct, under what circumstances would it be stable? In other words, all its solutions go to 0. So I'm talking about the homogeneous equation, the reduced equation, the associated homogeneous equation. Why? Because that's all that's involved in this. In other words, when I write that, I'm no longer interested in the whole equation. All I'm interested in is the reduced equation, the part of the equation when you the f of t on the right hand side into 0. So what's the stability condition? Well, let's write it out. Under what circumstances will all these guys go to 0? If r1 and r2 should be negative. Can they be 0? No, because then it will be a constant and it won't go to 0. How about this one? Well, in this one, it's c1 plus c2 times t multiplied by e to the r1 t. Of course, both of these are the same. I'll just arbitrarily pick one of them. What happens to this as things go to 0? Well, this part's rising, at least if c2 is positive. This part is either helping or it's hindering. But I hope you know what these functions look like, and you know which of them go to 0. They go to 0 if r1 is negative. They may rise in the beginning, but after a while they lose their energy and go off. Of course, if r1 is equal to 0, what do these guys do? Linear, go to infinity. Well, we're doing OK. How about here? Well, here it's a little more complicated. The solutions look quite e to the a t times c1 cosine bt plus c2 sine bt. Now this part is a pure oscillation. You know that. It might have a big amplitude, but whatever it does, it does the same thing all the time. So whether this goes to 0 depends entirely upon what that exponential is doing. And that exponential goes to 0 if a is negative. So here the condition is a is negative. And now the only thing left to do is to say it nicely. I've got three cases, and I want to say them all in one breath. The ODE is stable-- so this is our f of t. It doesn't matter. But psychologically you can put this 0 there. It's stable if what? If case one, this is true. If case two, that's true. And case three, that's true. But that's ugly. Make it beautiful. The beautiful way of saying it is, if all the characteristic roots have negative real part. If the characteristic roots, the r's or the a plus or minus bi have negative real part. That's the form in which the electrical engineers will nod their head, tell you yeah, that's right. Negative real parts, sorry. Isn't it right? Is that right here? Yeah. What's the real part of these guys? They themselves, because they're real. What's the real part of this? The only case in which I really have to use real part is when I talk about the complex case, because a is just the real part of the complex number. It's not the whole thing. ",
                                        "unit_id":"23e9c9055f0640948f331c0d53906bc9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e8e253eecf9c40bd821625bf6b0cf6e5",
                                "vertical_name":"12. Tests for stability in a second-order system"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Characteristic polynomial",
                                            "Real numbers",
                                            "Orange dot",
                                            "Initial conditions",
                                            "Distinct",
                                            "Complex",
                                            "Case",
                                            "Stability",
                                            "Stable",
                                            "Condition",
                                            "Bi",
                                            "Positive",
                                            "Coefficient"
                                        ],
                                        "data":" You can see the general spring/mass/dashpot system with a sinusoidal input displayed in the mathlet below. You can change the coefficients m, b, and k to be a variety of positive constants. Notice that changing the initial conditions (dragging the orange dot on the left) does not change the long-term behavior of the output signal (orange curve on the right) much. So this is a stable system for any choice of m, b, and k. In the 2nd order case, there is also a simple test to check for stability directly in terms of the coefficients: Stability test in terms of coefficients, 2nd order case. Assume that a0,a1,a2 are real numbers with a0&gt;0. The ODE (a0D2+a1D+a2)x=F(t) is stable if and only if a1&gt;0 and a2&gt;0. Proof. Recall the results for stability in terms of the roots of the characteristic polynomial. Roots General solution xh Condition for stability Characteristic polynomial complex a&plusmn;bi eat(c1cos(bt)+c2sin(bt)) a&lt;0 r2&minus;2ar+(a2+b2) repeated real s,s est(c1+c2t) s&lt;0 r2&minus;2sr+s2 distinct real r1,r2 c1er1t+c2er2t r1,r2&lt;0 r2&minus;(r1+r2)r+r1r2 By dividing by a0, we can assume that a0=1. Break into cases according to the table above. When the roots are complex, a&plusmn;bi, we have a&lt;0 if and only if the coefficients &minus;2a and a2+b2 are both positive. When the roots are s,s, we have s&lt;0 if and only if the coefficients &minus;2s and s2 are both positive. When the roots are distinct and real r1&ne;r2, both roots are less than zero if and only if the coefficients &minus;(r1+r2) and r1r2 are both positive. (Knowing that &minus;(r1+r2) is positive means that at least one of r1,r2 is negative; if moreover the product r1r2 is positive, then the other root must be negative too.) \u25fb Remark 13.1&emsp;&emsp; There is a generalization of the coefficient test to higher-order ODEs, called the Routh&ndash;Hurwitz conditions for stability , but the conditions are much more complicated. ",
                                        "unit_id":"375efff6ed514c9b8a8cca1847098aa4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4f5fd53f65a348a4b421317d41bf88c3",
                                "vertical_name":"13. Coefficients and tests for stability"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ocean fish",
                                            "Fresh water",
                                            "Salt water",
                                            "Initial conditions",
                                            "Behavior"
                                        ],
                                        "data":" Why are stable systems so great? If we are interested in understanding the long term behavior with respect to an exponential input, it is enough to find one particular solution. All other solutions will tend asymptotically to any particular solution. And with ERF and its versions, we have a simple way of determining one nice particular solution to any exponential input. Keep in mind that while the long term behavior is enough to answer a question, there are some situations where the initial conditions and behavior as a system reaches steady state are important. For instance as in the example from Lecture 2 about mixing saline and fresh water to create a salt water solution habitable for ocean fish. ",
                                        "unit_id":"c7727dfcb95c401f8a048199190ccc45",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a9b4ce5b16094f1980e0442c733abbcc",
                                "vertical_name":"14. Upshot of stability"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Partial differential equations",
                                            "Left hand side",
                                            "Square root",
                                            "Harmonic oscillator",
                                            "Forced oscillations",
                                            "Characteristic polynomial",
                                            "Frequency response",
                                            "Complex fraction",
                                            "Complex conjugate",
                                            "Differential equation",
                                            "Phase shift",
                                            "Fourier series",
                                            "Phase lag",
                                            "Imaginary part",
                                            "Polar form",
                                            "Complex gain",
                                            "Natural frequency",
                                            "Real part",
                                            "Double dot",
                                            "Inhomogeneous equation",
                                            "Homogeneous equation",
                                            "Cosine",
                                            "Squared",
                                            "Small number",
                                            "Time invariance",
                                            "Root",
                                            "Forced",
                                            "Sine",
                                            "Side",
                                            "Resonance",
                                            "Xp",
                                            "Polynomial",
                                            "Part",
                                            "Homogeneous",
                                            "Form",
                                            "Minus",
                                            "Called",
                                            "Real",
                                            "Frequency",
                                            "Put",
                                            "Damping",
                                            "Term",
                                            "Omega",
                                            "System",
                                            "Dot",
                                            "Equation",
                                            "Ode",
                                            "Negative",
                                            "Sinusoid",
                                            "Zp",
                                            "Amplitude",
                                            "Ve",
                                            "Positive",
                                            "Gain",
                                            " ",
                                            "Solve",
                                            "Ll",
                                            "Write",
                                            "Written",
                                            "Find",
                                            "Signal",
                                            "Number",
                                            "Time"
                                        ],
                                        "data":" Damped sinusoidal signals Complex Replacement and the Exponential Response Formula can be used to solve equations of the form P(D)x=eatcos(&omega;t&minus;\u03d5) where P(D) is any LTI differential operator. Example 15.1&emsp;&emsp; Solve 2x&uml;+x\u02d9+x=e&minus;tcost. Worked Solution We found the general solution to the homogeneous version of the ODE in example 14.1 here. To solve this ODE in general we just need to find a particular solution. To do this, we complexify the ODE: 2z&uml;+z\u02d9+z=e(&minus;1+i)t, then apply the Exponential Response Formula: zp=e(&minus;1+i)tP(&minus;1+i). To get xp we have to extract the real part of zp. We have the choice to put xp in rectangular form or polar form. To put xp in rectangular form, we expand P(&minus;1+i)=2(&minus;1+i)2+(&minus;1+i)+1=&minus;3i so zp=ie(&minus;1+i)t/3, and the real part is xp=&minus;(1/3)e&minus;tsin(t). To put xp in polar form, we write 1P(&minus;1+i)=ge&minus;i\u03d5 so that zp=ge&minus;i\u03d5e(&minus;1+i)t=ge&minus;tei(t&minus;\u03d5) and the real part is xp=ge&minus;tcos(t&minus;\u03d5) It's easy to check that you get the same answer! In this video, we'll consider ODEs that describe forced oscillations. And in the solution process, we'll use complex replacement and the exponential response formula. In the first part, we'll find the general solution to x double dot plus 8x equals cosine of omega t. And we'll just think about an answer why this is called an undamped forced ODE. In the second part, we'll find the general solution to x double dot plus 2x dot plus 4x equals cosine of 3t. Go ahead and pause the video to work through these problems on your own. And I'll be back in a moment. Welcome back. So for the first problem, our ODE is x double dot plus 8x equals cosine of omega t. There are two main steps in finding the general solution to a differential equation. Step one is to solve the associated homogeneous equation. OK. For this equation, that would be x sub h double dot-- and I'm writing x sub h just to denote that this is the homogeneous equation-- plus 8 times x sub h equals 0. So to solve this, we write down the characteristic polynomial-- characteristic polynomial-- P of s is equal to s squared plus 8. And the roots of this polynomial are given by s equals plus or minus the square root of 8 times i. Because these roots are purely imaginary, we know that the solution will be a sinusoid. So, we have x sub h is going to be equal to c1 cosine square root of 8 t plus c2 times sine square root of 8 t where c1 and c2 are arbitrary constants. Now, note that I've written this in rectangular form. I could also write this in polar form, being x sub h equals to an amplitude times cosine of square root of 8 t minus a phase shift. These are different representations for the same solution, but for this video, I'm just going to choose to write this in the rectangular form. OK. So step two in finding the general solution is to now find a particular solution to the inhomogeneous equation. To do this, we'll first use complex replacement. And note, that cosine omega t is equal to the real part of e to the i omega t. Now we can write down the complexified ODE, which would be, z double dot plus 8z equals e to the i omega t. OK. When we find a particular solution to this equation, we'll then take the real part to get a particular solution to our equation involving x. So, x p, which is the particular solution, is the real part of z p, where z p is a particular solution to this equation. So now, we apply the exponential response formula, which says that z sub p is equal to 1 over the characteristic polynomial evaluated at i times the frequency, i omega, times the right hand side. So times e to the i omega t. So our characteristic polynomial is up here. And if we substitute i omega, we get minus omega squared plus 8. So right here, we have 1 over 8 minus omega squared e to the i omega t Now, you might have noticed that the amplitude here depends on omega. When omega squared is near 8, this amplitude is huge, because we're dividing by a very small number. If omega squared equals 8, then we're dividing by zero, and this just blows up. When that's the case, we're in a situation called resonance, where the input frequency is the same as the natural frequency of the problem. So, just to be safe, we're going to solve this when omega squared is not equal to 8. So I'll write that up here. OK. So now, since we're going to extract the real part of z sub p, we're going to write e to the i omega t as a sum of sines and cosines. So, we get 1 over 8 minus omega squared times cosine omega t plus i sine omega t. OK. So now, x sub p is just the real part of this expression. So x sub p, our particular solution, is 1 over 8 minus omega squared times cosine omega t. OK. So this is the particular solution. Now, we actually could have gotten this solution a lot faster, and maybe skipped a few steps, if we had noticed that we could have used the sinusoidal response formula, because we have no damping here. The sinusoidal response formula just says that the particular solution is equal to 1 over the characteristic polynomial evaluated at i times omega, which we have here, times the right hand side of our original equation. We can use that technique when the ODE on the left hand side only has even derivatives, because then, our characteristic polynomial will only have even powers. And when you raise i to an even power, you'll either get 1 or minus 1. So, we'll have a real amplitude. And then we can just multiply by the right hand side. So, if you notice that, it can make your computations more convenient. But if you're unsure, you can always go through this computation. OK. So now we can actually write down the general solution, which I'll write over here. So, the general solution x is equal to the solution to the homogeneous equation plus a particular solution. So we get x sub h was c1 cosine square root of 8 t plus c2 sine square root of 8 t. And then we add x sub p, our particular solution. Plus 1 over 8 minus omega squared times cosine omega t. So this is our general solution for number one. And we actually could have answered this question right away. Why is this called an undamped forced ODE? It's called undamped because we don't have a damping term. In other words, we don't have a term that's proportional to x dot in our ODE. And it's forced because we have this nonzero input on the right hand side. So now, I'm going to erase that side of the board and we're going to work through number 2. OK. So we just solved an undamped, forced ODE. This is actually an equation for a forced harmonic oscillator. We found the general solution to be this expression. But remember, that this was only for the case when omega squared is not equal to 8. Now, we're going to find the general solution to x double dot plus 2 x dot plus 4x equals cosine of 3t. This is still a forced ODE, but now we have a damping term here because we have a term that is proportional to x dot. So, like I said, for number 2, we're going to find the general solution to x double dot plus 2 x dot plus 4x equals cosine of 3t. Again, the first step in finding the general solution is to solve the associated homogeneous solution. So step 1, solve the associated homogeneous equation. In this case, that's given by x sub h double dot plus 2 times x sub h dot plus 4 x sub h equals 0. And again, I've just replaced x by x sub h, so that we remember that we're solving the homogeneous equation. So now we're going to need the characteristic polynomial, which is given by P of s is equal to s squared plus 2s plus 4. This polynomial has roots at minus 2 plus or minus the square root of 4 minus 16, all over 2, which is equal to minus 1 plus or minus the square root of 3 i. Since the roots of the characteristic polynomial now have a real and an imaginary part, the solution to the homogeneous equation is written as follows. It'll be e to the minus t times c3 cosine square root of 3 t plus c4 sine of square root of 3 t, where c3 and c4 are arbitrary constants. So this is the solution to the associated homogeneous equation. And now, in step two, we need to find a particular solution to the inhomogeneous equation. So we'll find a particular solution. To do this, we're going to use complex replacement. And note that, our right hand side, cosine of 3t, is the real part of e to the i 3t. So then the complexified ODE can be written as z double dot plus 2 z dot plus 4z equals e to the i 3t. Now, we're going to solve this equation and find a particular solution for z. Then, we'll take its real part, which will give us a particular solution for this equation. So, x sub p, or particular solution, is going to be equal to the real part of z sub p, where z p is a particular solution to this equation. To find z sub p, we're going to use the ERF. So that tells us that z sup p is equal to 1 over the characteristic polynomial, evaluated at i times 3, multiplied by the right hand side of this equation, so times i 3 to the t. OK? So now, if we substitute i 3 into the characteristic polynomial, we'll get that this is equal to 1 over minus 5 plus 6i times e to the i 3t. And we want to extract the real and imaginary parts from z p, so we're going to rationalize this complex fraction by multiplying by the complex conjugate of the denominator. So we get that this is equal to minus 5 minus 6i over 61 once you simplify. And we're also going to write e to the i 3t as the sum of sines and cosines. So multiply by cosine of 3t plus i times sine of 3t. OK. Now, x sub p, our particular solution for this equation, is going to be the real part of this expression. So x sub p is the real part of z sub p. And that's given by 1 over 61 times minus 5 cosine of 3t. And then minus 6i times i-- gives us a plus 6-- sine of 3t. So this is the particular solution to the ODE. And now the general solution, for number 2, is going to be the sum of these two expressions. So I'll write that over here. So x is equal to x sub h plus x sub p, which we're going to write down is e to the minus t times c3 cosine root 3 t plus c4 sine of root 3 t plus the particular solution that we just found. So, plus 1 over 61 times minus 5 cosine of 3t plus 6 sine of 3t. OK. So now this is the general solution to number 2. And just want to point out a couple of things. This is a general solution for an undamped forced harmonic oscillator. And we can see that each of these terms is just a pure sinusoid, and their amplitudes do not decay over time. However, in this case, where we have a damping term, we note that our solution to the homogeneous equation actually decays to 0 as time goes to infinity. So, we have a transient part of our equation, and this would be the steady state part of our solution. So, in this video, we found a general solution to do two different types of forced oscillations. Example 15.2&emsp;&emsp; Consider the harmonic oscillator with a sinusoidal forcing term: x&uml;+&omega;n2x=Acos(&omega;t). Find a the complex gain, the gain, and the phase lag, and a particular solution. Food for thought: is this system stable? Worked Solution This ODE has complex gain G(&omega;)=1P(i&omega;) where P(i&omega;)=(i&omega;)2+&omega;n2=&omega;n2&minus;&omega;2. Thus a particular solution is given by xp=Re(1&omega;n2&minus;&omega;2Aei&omega;t) as long as the input frequency is different from the natural frequency of the harmonic oscillator. Since the denominator is real , the real part is easy to find: xp=Acos(&omega;t)&omega;n2&minus;&omega;2. Note that the gain is g=G(&omega;)=1&omega;n2&minus;&omega;2. Since the complex gain is real, the phase lag is either 0 or &pi; depending on whether &omega;n&gt;&omega; or &omega;n&lt;&omega;. In particular, the same equation forced with a sine input curve y&uml;+&omega;n2y=Asin(&omega;t) has response yp=Asin(&omega;t)&omega;n2&minus;&omega;2 by time invariance. This solution puts in precise form some of the things we can check from experimentation with vibrating systems. When the frequency of the signal is smaller than the natural frequency of the system, &omega;&lt;&omega;n, the denominator is positive. The effect is that the system response is a positive multiple of the signal: the vibration of the mass is &ldquo;in sync\" with the impressed force. As &omega; increases towards &omega;n, the denominator of the particular solutions nears zero, so the amplitude of the solution grows arbitrarily large. When &omega;=&omega;n the system is in resonance with the signal; the Exponential Response Formula fails because the gain would be infinite there, and there is no periodic (or even bounded) solution. This phenomena is called resonance, and will be discussed in more detail in the next section 11 Resonance, Frequency Response, and RLC circuits. When &omega;&gt;&omega;n, the denominator is negative. The system response is a negative multiple of the signal: the vibration of the mass is perfectly &ldquo;out of sync\" with the impressed force. Since the coefficients are constant here, a time-shift of the signal results in the same time-shift of the solution: x&uml;+&omega;n2x=Acos(&omega;t&minus;\u03d5) has the periodic solution xp=Acos(&omega;t&minus;\u03d5)&omega;n2&minus;&omega;2. The equations xp=Acos(&omega;t)&omega;n2&minus;&omega;2 and yp=Asin(&omega;t)&omega;n2&minus;&omega;2 will be very useful to us when we solve ODEs via Fourier series in Fourier Series and Partial Differential Equations. ",
                                        "unit_id":"2d1a15bbd9f34b7a8da2a9a7ebb94aef",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"da9c025c548b4e35b4ab1d775b77d7b4",
                                "vertical_name":"15. Worked Examples"
                            }
                        ]
                    },
                    {
                        "sequential_id":"eacd36b2bd534eeeb5fd01ccd5ebceb3",
                        "sequential_name":"Recitation 10",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex gain",
                                            "Discussion forum",
                                            "Sufficiently large",
                                            "Cost",
                                            "Forum",
                                            "Share",
                                            "Sin",
                                            "Large",
                                            "System"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers 18.03 Recitation 10 ERF and complex replacement ERF: If p(r) 6= 0 then xp = A e rt p(r) is a solution of p(D)x = Aert . 1. (a) Find a sinusoidal solution of x&uml; + 2 \u02d9x + 2x = cos(2t). What is the general solution? Let x(t) be any solution. Describe what it looks like for t sufficiently large. (b) Find a solution of x&uml; + 2 \u02d9x + 2x = e &minus;t cos(2t) using the method of complex replacement. 2. Find the sinusoidal solution of x&uml; + &omega; 2 nx = a cos(&omega;t) and of x&uml; + &omega; 2 nx = b sin(&omega;t) (Careful about when the two frequencies coincide!) 3. Find a particular solution of the equation x&uml; + 4x = 2 cost + 3 cos(2t) + 4 sin(3t) 4. (a) Find the complex gain of the following system given that the input is cost and the response is x. (D 4 + 2D 2 + 5)x = (D 2 + D) cos(t) (b) Find the complex gain of the following system as a function of a (where it is defined) given that the input is cos at and the response is x. (D 4 + 2D 2 + 5)x = (D 2 + D) cos(at) (c) What is the magnitude of the complex gain when a is close to 0? (d) What is the magnitude of the complex gain when a is large? (e) Is this system stable? ",
                                        "unit_id":"2d4ec58621c8415185ceb90028d6ec14",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a065ff59c2d2489ea15415d1d48e433a",
                                "vertical_name":"1. ERF and complex replacement"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d647349d8faa475389ffc2c52a73e847",
                        "sequential_name":"11 Resonance, Frequency Response, RLC circuits",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Angular frequency",
                                            "Bode plot"
                                        ],
                                        "data":" Objectives Understand that resonance occurs at the input frequency at which the amplitude of the system response is largest. Find purely resonant solutions to differential equations from the generalized exponential response formula. Express how the amplitude (gain) of the output signal changes as a function of the angular frequency of the input signal as a Bode plot. ",
                                        "unit_id":"4c330168fdae4f21ae807e201aeedd5d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9e5e4cadfeae4c79bb4fabbb33338dbc",
                                "vertical_name":"1. Objectives"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Natural frequency",
                                            "Harmonic oscillator",
                                            "Characteristic polynomial",
                                            "Basis",
                                            "Model"
                                        ],
                                        "data":" Harmonic oscillator with no input signal Suppose we model a swing on a playground as a harmonic oscillator with the ODE x&uml;+9x=0. In this model, x is the angle of the swing away from vertical, and this is a good model when x is small. We can write this using operator notation as P(D)x=0,P(D)=D2+9. Characteristic polynomial: P(r)=r2+9. Roots: &plusmn;3i. Basis of complex solutions: e3it, e&minus;3it. Real-valued basis: cos3t, sin3t. General real-valued solution: acos3t+bsin3t&thinsp; for real numbers &thinsp; a,b. These are all the sinusoids with angular frequency 3, the natural frequency. Acos(3t&minus;\u03d5). ",
                                        "unit_id":"104d797a9314467d9ea8311d72a59e71",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"60337b70bc214b5ba56cbcf0b2741c71",
                                "vertical_name":"2. Warm-up and review"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Simple harmonic oscillator",
                                            "Harmonic oscillator",
                                            "Independent variable",
                                            "Elementary school",
                                            "Vertical axis",
                                            "Substitution rule",
                                            "Double prime",
                                            "Simple pendulum",
                                            "Natural frequency",
                                            "Differential equation",
                                            "Real part",
                                            "Good idea",
                                            "Physical phenomenon",
                                            "Squared",
                                            "Simply",
                                            "Formula",
                                            "Higher",
                                            "Denominator",
                                            "Omega",
                                            "Driving",
                                            "Response",
                                            "Frequency",
                                            "Equation",
                                            "Input",
                                            "Tilde",
                                            "Real",
                                            "Good",
                                            "Substitute",
                                            "Coefficient",
                                            "Pendulum",
                                            "Call",
                                            "Case",
                                            "Solve",
                                            "Amplitude",
                                            "Complex",
                                            "Phenomenon",
                                            "Divided",
                                            "Approximately",
                                            "Back",
                                            "Time",
                                            "Resonance",
                                            "Kid",
                                            "Cosine",
                                            "Swing"
                                        ],
                                        "data":" What we're talking about today is what this has to do with the phenomenon of resonance. Everybody knows at least one case of resonance, I hope. A little kid is on a swing. Back and forth. And they're very, very little, so they want to push. OK. Well, everybody knows that to make the swing go-- the swing has a certain natural frequency. It swings back and forth like that. It's a simple pendulum. It's actually damped. But let's pretend that it isn't. Everybody knows you want to push a little kid on a swing so that they go high. You have to push with essentially the same frequency that the natural frequency of the swing is. Well, now, it's automatic, because when you come back here, it gets to there, and that's where you push. So automatically, you time your pushes. But if you want the kid to stop, you just do the opposite. You push at the wrong time, and anyway. OK. So that's resonance. Of course, there are more serious applications of it. It's what made the Tacoma Bridge fall down. And I think movies of that are now being shown, not merely on television, but in elementary school. Resonance is what made-- OK. More resonance stories later. So my aim is, what is this physical phenomenon? That to get a big amplitude, you should have them match the frequency. What is that to do with a differential equation? Well, the differential equation for that simple pendulum-- let's assume it's undamped-- will be of the type y double prime. Plus-- I'm using t now, since t is time. That will be our new independent variable. Plus omega naught squared is the natural frequency of the pendulum, or of the spring, or whatever it is that's doing the vibrating. And now, what would-- you got a question? Any questions? What we're doing is driving that with the cosine, with something of a different frequency. So this is the input, or the driving term, as it's often called. Or sometimes it's called the forcing term. And the point is, I'm going to assume that the frequency is different. The driving frequency is different from the natural frequency. So this is the input frequency. OK. Now, let's simply solve the equation and see what we get. So if I write it using the operator. It's D squared, plus omega naught squared, applied to y is equal to cosine. It's a good idea to do this, because the formulas are going to ask you to substitute into a polynomial. So it's good to have the polynomial right in front of you, to avoid the possibility of error. Well, really what I want is the particular solution. It's the particular solution that's going to give me a pure oscillation. And the thing to do is, of course, since this is cosine, you want to make it complex. So we're going to complexify the equation in order to be able to solve it more easily. And in order to be able to use those formulas. So the complex equation is going to be D squared, plus omega naught squared, times-- well, it's going to be a complex particular solution, so I'll call it y tilde. And on the right hand side, that's going to be e, to the i omega 1 t. Cosine is the real part of this. So when we get our answer, we want to be sure to take the real part of the answer. I don't want the complex answer, I want its real part. I want the real answer, in other words. The really real answer. The real, real answer. OK. So now, without further ado, because of those beautiful-- the problem has been solved once and for all by using the substitution rule. I did that for you on Monday. The answer is simply e, to the i, omega 1t. Divided by what? This polynomial, with omega 1 substituted in for D. Sorry, i omega 1, the coefficient complex, coefficient of t. So it is-- substitute i omega for D, i omega 1 for D, and you get i omega 1, squared, plus omega 0 squared. Well, let's make that look a little bit better. This should be e to the i omega 1 t divided by-- now, what's this? This is simply omega 0 squared minus omega 1 squared. But I want the real part of it, so there's one final last step. The real part of that is what we call just the real particular solution. So y p without the tilde anymore. And the real part of this-- well, this is cosine plus i sign. And the denominator luckily turns out to be real. So it's simply going to be cosine omega 1 t. That's top. Divided by this thing, omega 0 squared, minus omega 1 squared. In other words, that's the response. This is the input. And that's what came out. Well, in other words, what one sees is that regardless of what natural frequency the system wanted to use for itself, at least for this solution, what it responds to is the driving frequency. The input frequency. The only thing is, that the amplitude is changed. And in a rather dramatic way. If omega 1-- depending on the relative sizes of omega 1 and omega 2. Now the interesting case is when omega 1 is very close to omega 0, the natural frequency. When you push it with approximately its natural frequency, then the solution is big amplitude. The amplitude is large. So the solution looks like-- the frequency-- the input might have looked this. Well, it's cosine, so going to start up here. The input might have looked like this. But the response will be a curve with the same frequency, and still a pure oscillation, but it will have much, much bigger amplitude. And it's because the denominator, omega 0 squared minus omega 1 squared, is almost zero. So the response will look like this. Now, to all intents and purposes, that's resonance. Pushing something with approximately the same frequency, something that wants to oscillate. And you're pushing it with the same frequency-- approximately the same frequency that it would like to oscillate by itself. And what that does is it builds up the amplitude enormously. Example 3.1&emsp;&emsp; We might try to model a swing on a playground as a simple harmonic oscillator. Recall that a harmonic oscillator has a natural frequency &omega;n. When you push your kid sister on a swing, the key is to get in sync with the natural frequency of the swing. You keep pushing on regular intervals with the same force, but your sister swings higher and higher. Let's model the swing-and-sister setup by a sinusoidally driven harmonic oscillator, x&uml;+&omega;n2x=Acos(&omega;t). We find a periodic solution using the exponential response formula provided that &omega;&ne;&omega;n: xp = Acos(&omega;t)&omega;n2&minus;&omega;2. Notice that as &omega; gets closer to &omega;n, the amplitude of this particular solution grows larger. In this mathlet, the natural frequency is &omega;n=1, and the frequency of the input signal is adjustable. The graph on the lower left shows the input signal in blue and the system response in orange. On the right, you see a graph of the amplitude of the response as a function of the input frequency. However, the vertical axis is scaled by 1/2 to fit the frame. The abbreviation RMS stands for root mean square , which for a sinusoid is amplitude/2. It has a physical interpretation; it is used for a superposition of many frequencies. Observe what happens to the amplitude of the system response as &omega; approaches 1. What happens when the two frequencies coincide, that is &omega;=&omega;n? This is the phenomenon known as pure resonance , which we explore next. ",
                                        "unit_id":"54622d1baef748c6a5f2689a7965973b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"dc466728eaa544c49f0871ad1a06d9f9",
                                "vertical_name":"3. Near resonance"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Natural frequency",
                                            "Planetary sciences",
                                            "Atmospheric sciences",
                                            "Real life",
                                            "Real part",
                                            "Everyday life",
                                            "Remainder books",
                                            "Harmonic oscillator",
                                            "Green building",
                                            "Tallest building",
                                            "Characteristic polynomial",
                                            "Simple root",
                                            "Sine function",
                                            "Phenomenon",
                                            "Radio",
                                            "Equation",
                                            "Frequency",
                                            "Building",
                                            "Resonance",
                                            "Glass",
                                            "Squared",
                                            "Omega",
                                            "Good",
                                            "Zp",
                                            "Polynomial",
                                            "Order",
                                            "Amplitude",
                                            "Earth",
                                            "Simple",
                                            "Sinusoid",
                                            "Oscillating",
                                            "Tv",
                                            "Wrong",
                                            "Velocity",
                                            "Differentiate",
                                            "Oscillation",
                                            "Function",
                                            "Signal",
                                            "Skyscraper",
                                            "Built",
                                            "Complex",
                                            "Mit",
                                            "Changing",
                                            "Prime",
                                            "Sine",
                                            "Root",
                                            "Divided",
                                            "Time"
                                        ],
                                        "data":" If omega 1 equals omega 0-- so now our equation looks like D squared plus omega 0 squared, the natural frequency, y. But this time the driving frequency-- the input frequency-- is omega 0 itself. Then the same analysis, a lot of it is exact-- well, I'd better be careful. Let's go through the analysis again very rapidly. What we want to do is first complexify it and then solve. So the complex equation will be D squared plus omega 0 square times y tilde equals e to the i omega 0 t this time. But now i omega is a 0 of this polynomial. That's why I picked it, right? If I plug in i omega 0. I get i omega 0 quantity squared plus omega 0 squared, that's 0. So I'm in the second case, because i omega 0 is a simple root, simple zero, of D squared plus omega 0-- that polynomial-- squared. Therefore, the complex particular solution is now t e to the i omega 0 t divided by P prime where you plug in that root, the i omega 0. Now, what's P prime? P prime is 2 D, right? If I differentiate this formally, as if D were a variable-- the way you differentiate polynomials-- the derivative-- this is a constant-- and the derivative is 2 D. So the denominator should have 2 times-- for D you're going to plug in i omega 0-- so it's 2 i omega 0. And now I want the real part of that, which is what? Well think about it, the top is cosine plus i sine. The real part is now going to come from the sine, because it's cosine plus i sine but this i is going to divide out the i that goes with this sine and therefore the real part is going to be t times the sine, this time, of omega 0 t. And that's going to be divided by-- well, the i canceled out the i that was in front of the sine function and therefore what's left is 2 omega 0 down below. So that's our particular solution now. Well, it looks different from that guy, doesn't look like that anymore. What does it look like? Well it shows the way to plot such things is basically as an oscillation of frequency omega 0, but it's amplitude is changing. So the way to do it is, as always, if you have a basic oscillation, which is neither too fast nor too slow, think of that as the thing and the other stuff multiplying it, think of as changing the amplitude of that oscillation with time. So the amplitude is that function-- t divided by 2 omega 0. So just as we did when we talked about damping, you plot that and it's negative on the picture. So this is the curve-- the function whose graph is t divided by 2 omega 0, that's the changing amplitude-- as it were-- and then the function itself does what oscillation it can but it has to stay within those lines. So the thing that's oscillating is sine omega 0 t, which would like to be a pure oscillation but can't because its amplitude is being changed by that thing, so it's doing this and now the rest I have to leave to your imagination. In other words, what happens when omega 0 is equal-- when the driving frequency is actually equal to omega 0, mathematically this turns into a different-looking solution, one with steadily increasing amplitude. The amplitude increases linearly, like the function t divided by 2 omega 0. Well of course, this is not realized in real life. The amplitude can increase linearly up to a certain point but, you know, the swing gets to there and the little kid said, no, stop I'm scared, or the bridge falls down and that ends that, or whatever. But this is an important phenomenon of everyday life. I keep thinking of the-- I've forgotten what order these happened, but when the green building was built that was a skyscraper for MIT, it's still MIT's skyscraper, more or less. This being the building that housed the Earth and Planetary Sciences, at that point it was called Earth and Atmospheric Sciences. The winds set up vibrations because the building resonated just the wrong way, if the wind was just at the right frequency, that produced little vibrations and a lot of the windows fell out. Well, that was fixed by getting thicker glass. They adjusted, calculated it all, and then they built the John Hancock building across the river, or maybe it was the other order, I've forgotten which. But the skyscraper with-- I think it's still the tallest building with all glass-- no, I think they built the-- anyway, with all glass paneled windows, the whole beautiful building, all of glass, and the wind, when it was just the wrong velocity or just the right velocity, set up resonant vibrations and 1/3 of the windows fell out. I think the architect was the same, but it the probability that engineers who were different. And I have nothing against engineers but I'm sure there were ads in the papers from building 19 which sold-- which was a-- not an MIT building, 19-- there was a thing which sold leftovers from various projects of remaindering except it didn't remainder books it remaindered everything. And big ads appeared-- we had these beautiful panes of glass that will make wonderful coffee tables, we can't tell you where they came from. I think all the windows probably had to be replaced. So anyway, that's bad resonance, but there's good resonance too. There's the good resonance, which enables us, with all the signals from all the TV stations and radio stations floating around in the air, what enables us to pick out one particular signal from all those is by resonance, by getting something in the little set which is tuned-- adjust the tuning to that particular frequency so that only that frequency makes the radio or the TV do its thing and then that's the station one gets. So that's pretty rough but my point is only that this is A, an absolutely basic phenomenon for good and evil physically and B, it corresponds physically to an oddity in the solution of this differential equation. It's a second order differential equation in which something peculiar happens when this thing a root of the characteristic-- is a characteristic root-- a root of the characteristic polynomial. The case in which we drive a harmonic oscillator by the natural frequency &omega;n is known as pure resonance . (D2+&omega;n2)x=cos(&omega;nt). To find a particular solution, we find a particular solution instead to the complexified equation (D2+&omega;n2)z=ei&omega;nt. Note that i&omega;n is a root of the characteristic polynomial P(r)=r2+&omega;n2. But P&prime;(r)=2r, so P&prime;(i&omega;n)=2i&omega;n&ne;0 and we use ERF&prime; to find a complex particular solution zp=tei&omega;ntP&prime;(i&omega;n)=tei&omega;nt2i&omega;n=t(cos&omega;nt+isin&omega;nt)2i&omega;n). The real part of zp is a real-valued particular solution Re(zp)=xp=tsin(&omega;nt)2&omega;n. Even though our input signal is sinusoidal, the response is not a sinusoid. The response is an oscillating function whose oscillations grow linearly without bound as time increases. Pure resonance is a phenomenon that occurs when a harmonic oscillator is driven with an input sinusoid whose frequency is at the natural frequency: the gain becomes larger and larger as the input frequency approaches the natural frequency, and when the input frequency equals the natural frequency, any particular solution is unbounded. ",
                                        "unit_id":"755b06953f32462b8bb296e1a2b8c0cb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d9259cf15d83447c96a3f6dbbf16d630",
                                "vertical_name":"4. Pure resonance"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Characteristic polynomial",
                                            "Complex gain",
                                            "Damping",
                                            "Gain"
                                        ],
                                        "data":" In a realistic physical situation, there is at least a tiny amount of damping, and this prevents the runaway growth of the amplitude of the system response that we saw in the previous section. Question 5.1&emsp;&emsp; What happens if &omega;=3 exactly, but there is a tiny amount of damping, so that the ODE is x&uml;+bx\u02d9damping term+9x=cos&omega;tinput signal for some small positive constant b? Answer The new characteristic polynomial is P(r)=r2+br+9. Since 3i is no longer a root, the ERF applies. The complex gain is G=1P(3i)=13bi, and the gain is |G|=13b. This is large, but the oscillations are bounded; there is a steady-state solution. ",
                                        "unit_id":"48011a7161a945f199e0f4c9f19594c6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ad2535ce9ec346bc87a36f984c9e73d0",
                                "vertical_name":"5. Resonance with damping"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Characteristic polynomial",
                                            "Right hand side",
                                            "Resonant frequency",
                                            "Sinusoidal function",
                                            "Differential equations",
                                            "Vertical asymptotes",
                                            "Critical points",
                                            "Complex number",
                                            "Local maxima",
                                            "Square root",
                                            "Phase lag",
                                            "Bode plots",
                                            "Real part",
                                            "Monotonically decreasing",
                                            "Differential equation",
                                            "Bode plot",
                                            "Complex gain",
                                            "Critical point",
                                            "Radical sign",
                                            "Complex function",
                                            "Tent function",
                                            "Increasing function",
                                            "Linear system",
                                            "Polar form",
                                            "Decreasing function",
                                            "Squared",
                                            "Term",
                                            "Naught",
                                            "Response",
                                            "Amplitude",
                                            "Frequency",
                                            "Hand",
                                            "Dot",
                                            "Square",
                                            "Omega",
                                            "Input",
                                            "Output",
                                            "Plot",
                                            "Divided",
                                            "Phase",
                                            "Bode",
                                            "Graph",
                                            "Equation",
                                            "Decreasing",
                                            "Information",
                                            "Point",
                                            "Radical",
                                            "Positive",
                                            "Gain",
                                            "Longer",
                                            "Part",
                                            "Damping",
                                            "Function",
                                            "Absolute",
                                            "System",
                                            "Asymptote",
                                            "Form",
                                            "Ve",
                                            "Note",
                                            "Resonance",
                                            "Quantity",
                                            "Ll"
                                        ],
                                        "data":" Given any ODE P(D)x=Q(D)cos(&omega;t) the complex gain is a complex function given by G(&omega;)=Q(i&omega;)P(i&omega;)=ge&minus;i\u03d5(in polar form). The gain of the response x is g=|G(&omega;)|, which can also be thought of as a function of the input sinusoidal frequency &omega;. The phase lag of the response &minus;\u03d5=arg(G(&omega;)) can similarly be thought of as a function of &omega;. In engineering, the graph of gain as a function of &omega; is called a Bode plot (Bode is pronounced Boh-dee), and is usually on a log-log scale. Alternatively, a Nyquist plot shows the trajectory of the complex gain G as &omega; varies. The Bode plots contain, at a glance, all of the information about the resonant response &omega;r. By looking at the Bode plot of the amplitude as a function of frequency, we can observe any vertical asymptotes (pure resonant values) or local maxima (resonant values). Sometimes the gain is monotonically decreasing, this is the case of no resonance. Note on video: In the video that follows, the input is the entire right hand side F0cos(&omega;t). The response is x. In this video, the gain is called the amplitude response. There is a misspeak in the video where the amplitude response is said to be the complex gain. Instead it is the gain, not the complex gain. Hi, everyone. So today I'd like to talk about resonant frequency response. And specifically, we're going to take a look at a couple of different differential equations. And we're asked to graph the amplitude response for each equation. And you'll note that these equations a, b, and c have varying amounts of damping. So for part a, we're asked to plot the amplitude response for x dot dot plus 4x equals F 0 cosine omega t. For part b, it's the same equation. However, we have an x dot term added. For part c, again we've increased the damping. So now we have 6x dot. And then lastly, for part d, we'd like to discuss the resonance for each system. So I'll let you work out this problem, and I'll be back in a moment. Hi, everyone. Welcome back. So for part a, we're asked to graph the amplitude response to the differential equation x dot dot plus 4x equals F naught cosine omega t. And from a previous recitation, we already wrote down the particular response to this differential equation. So I'm just going to write down the particular response which has the form F naught 4 minus omega squared cosine omega t. Now the amplitude response is defined as a ratio. And specifically, it's the ratio of the output amplitude of a differential equation to the input amplitude of a differential equation. So in the case at hand, we have the output is a sinusoidal function whose amplitude is F naught divided by 4 minus omega squared. So it's the output divided by the input. These are both amplitudes. And in our case, we have F naught divided by 4 minus omega squared. This is the output amplitude. And the input amplitude is just F naught. So we see when we compute this ratio, the F naught's divide out. And at the end of the day we're left with 4 minus omega squared. So I'm going to draw the amplitude response now. So we have omega. And we see that, when omega is equal to 2, there's an asymptote. When omega is equal to 0, we have 1/4. And specifically, we have this tent-like function. So this is the amplitude response. So notice how when we drive the system with frequency 2, the amplitude response goes to infinity. As a result, we call this frequency the resonant frequency. So this concludes part a. For part b, we have a differential equation with damping now. And to compute the particular solution, we follow the standard procedure, first complexifying the right-hand side and then using the exponential response formula. So I'm just going to write down the particular solution. If we follow these steps, we find that it's the real part of the right-hand side complexified, which is F naught e to the i omega t divided by the characteristic polynomial evaluated at i omega. And in this case, the characteristic polynomial P of s is s squared plus s plus 4. P of i omega is then 4 minus omega squared plus i omega. And when we put the pieces together, we end up with a particular solution which looks like the real part of 1 over 4 minus omega squared plus i omega, F naught upstairs, e to the omega t. OK, so we're asked to compute the amplitude response formula or the amplitude response graph, and if we take a look at this, we see that the denominator here is really just a complex number. So we can convert it into the form of r e to the i phi. Now the amplitude response is defined as the ratio of the output divided by the input. And so the output amplitude is going to be the magnitude of this complex number. So as a result, the amplitude response is just the magnitude of 1 over the characteristic polynomial evaluated at i omega. This is also sometimes referred to as the complex gain. Moreover, this term right here contains two pieces of information. Not only does it contain the amplitude response, but it also contains the phase information. When we take the absolute value, we're throwing out the phase information. We're just remembering the amplitude response. OK, so what does this amplitude response look like for this case? Well, we have 1 over, and it's the magnitude of this complex number, which is 4 minus omega squared plus i omega. So I just take the real part, square it, add it to the imaginary part squared, and square root the whole quantity. Now there's the question of how to graph this. And we see that-- well, first off, the square root's an increasing function. And we see that we're one over an increasing function. So there's a trick, which is to just look first at sketching this piece which is under the radical sign. And if you look at maximizing-- trying to maximize this function, so finding the critical points-- we see that in this case, we have one maximum to 4 minus omega squared plus omega squared. And this is when omega equals the square root of 7/2. Sorry, this is a minimum. OK, so when I go to sketch this now, we have omega. We have the amplitude response. Now I'm going to draw in two from the previous diagram. Now the square root of 7/2 is just below 2. So square root of 7/2. So we end up with a maximum at 7/2 and then decay to infinity. And again, this is going to be 1/4, 1 omega 0. So this is the peak amplitude response. So note that in this case by adding damping, what we've done is we no longer have an asymptote at omega equals 2. But we now have a finite amplitude, which occurs at omega equals the square root of 7/2. OK, so I'm just going to clean up the board, and I'll be back with part c in a second. For Part a, we have a resonance response, sorry an amplitude response diagram, which looks like a tent function. And at 2, omega equals 2, we have a resonance. So the amplitude response diverges. I'd just like to point out I made a small error before. I forgot to include absolute values on the denominator here. The amplitude response functions, it's always a positive quantity. We always throw out any phase information and leave that for the phase in the description of the response of a linear system. So the amplitude response is always positive. For part b, we added dampening to the system. And we see that there's actually a peak point, which is that the square root of 7/2. And the amplitude response is bounded at this point, but it achieves a maximum. And then again, it decays to infinity. So I'd like now to take a look at part c. And in part c, we have the differential equation x dot dot plus 6x dot plus 4x equals F naught cosine omega t. And again, the amplitude response is going to equal 1 over the absolute value of P of i omega. And in this case P of i omega is going to be 1 over-- well, we still have the 4 minus omega squared term. Instead of x dot, we now have 6x dot which gives us 6i omega. And then again, we want to take the absolute value of this complex number. And when we take the absolute value, we just get the sum of the real part squared plus the sum of the imaginary part squared, which in this case is going to be 36 omega squared. The whole quantity is square rooted. And then we have 1 over this value. So now if we'd like to plot this function, we can still do the same trick and try to maximize or find the critical points in the denominator under the radical. And if we did this, in this case we would find that the only critical point is when omega is equal to 0. Secondly, if we look at omega going to infinity, we see that the denominator goes to infinity. So this whole quantity must go to 0. So if I were to go back here to the amplitude response for part c, again, when omega is equal to 0, it's going to start off at 1/4. I've just argued that it goes to 0 as omega goes to infinity. And since there are no critical points, we must smoothly paste the function between the two. And in fact, it's always decreasing. So the amplitude response in this case is just a decreasing function. OK, so this concludes part c. And now take a look at part d, discuss the resonance for each system. So in part a, we had no damping. And we saw that there was a resonance at omega equals 2. And the resonance manifested itself in the amplitude response graph with a pole or a divergent asymptote at omega is equal to 2. So as you drive the system close to omega equals 2, the amplitude of the system starts to diverge. In case 2, we introduce damping into the system. So we still have a very large amplitude response at omega equals the square root of 7/2. However, it's no longer infinite. And then lastly, when we increased damping even further, so we had the six x dot term, the presence of a peak disappeared. And in fact, the amplitude response just monotonically decayed from one fourth to zero. So it just constantly decreased to zero. So I'd just like to conclude there, and I'll see you next time ",
                                        "unit_id":"c94e24ccc9554262ba8df1db82707b9e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3ba601b4689c497fa51b0f0988e7a450",
                                "vertical_name":"6. Frequency response and amplitude response"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Double dot",
                                            "Differential equations",
                                            "Electrical circuits",
                                            "Differential equation",
                                            "Electrical systems",
                                            "Radio waves",
                                            "Straight lines",
                                            "Harmonic oscillator",
                                            "Physical systems",
                                            "Power source",
                                            "Electrical circuit",
                                            "Voltage source",
                                            "Voltage gain",
                                            "Voltage drop",
                                            "Standard form",
                                            "Rlc circuit",
                                            "Spring constant",
                                            "Damping constant",
                                            "Radio receiver",
                                            "Series circuit",
                                            "Time derivative",
                                            "Right hand side",
                                            "Left hand side",
                                            "Positive",
                                            "Order",
                                            "Single",
                                            "Multiplying",
                                            "Mechanical",
                                            "Physicist",
                                            "Driven",
                                            "Give",
                                            "Response",
                                            "Dot",
                                            "Voltage",
                                            "Ll",
                                            "Vc",
                                            "System",
                                            "Circuit",
                                            "Equation",
                                            "Vr",
                                            "Series",
                                            "Constant",
                                            "Radio",
                                            "Important",
                                            "Eventually",
                                            "Resonance",
                                            "Define",
                                            "Form",
                                            "Differentiate",
                                            "Parameter",
                                            "Coil",
                                            "Side",
                                            "Input",
                                            "Law",
                                            "Case",
                                            "Interested",
                                            "Diagram",
                                            "Rewrite",
                                            "Current",
                                            "Work",
                                            "Time",
                                            "Inductance",
                                            "Declare",
                                            "Kirchhoff",
                                            "Model",
                                            " ",
                                            "Inductor",
                                            "Vl",
                                            "Resistor",
                                            "Component"
                                        ],
                                        "data":" Resonance is a phenomenon that is very important in the design of electrical circuits. So we will model an RLC circuit in series. Then we will explore how resonance enables different elements in the circuit act as low-pass filters, high-pass filters, or mid-pass filters&ndash; selectively allowing certain driving frequencies to pass through while others diminish. Our goal today is to set up differential equations for an electrical circuit and to explore how different system measurements or outputs give rise to different responses. So here, I have a real-life circuit, a temperature sensor consisting of lots of individual components. This is a complicated circuit. So to get started, we'll considered the simplest circuits possible, those consisting of a single loop. We'll analyze one-loop circuits and introduce the principles that eventually work for more complicated circuits as well. Here, I have a one-loop circuit consisting of a single resistor with resistance R, a single inductor with inductance L, and a capacitor with capacitance C. Note that the letter L is given to the inductance because the letter I is reserved for current. L is in honor of physicist Heinrich Lenz. Let's dig into RLC circuits now. We will model the system using the five-step process. So the first step is to draw a diagram of the system. We'll start with the power source, which is denoted by a circle with a wiggle. And we'll connect our components by wires, denoted by straight lines. The first component in our system will be the resistor, drawn as a zigzag. The second component is our inductor, which is denoted by a coil. And the final component is a capacitor, denoted by parallel segments. We then connected it back to the power source. And we have here our single-loop circuit. Since all the components are in series one after the other, we call this a series circuit. So these are RLC circuits in series. So the power source provides a voltage V. The resistor has a resistance R. The inductor has an inductance L. And the capacitor has a capacitance C. So the second step of the five-step process is to identify all the variables and give the corresponding symbols. So the first variable will be the input voltage, which will be a function of time. So V is V of t, a function of time. The second variable is the current that goes through the system. So we'll denote the current by I of t, also a function of time. And we'll denote positive current as current that flows clockwise in this diagram. Since this is a series circuit, the current through all the components is the same. The other three parts that we can measure of the system are the voltage drops across each of these three components. So we have VR to be the voltage drop across the resistor. Then VL is the voltage drop across the inductor. And finally, VC is the voltage drop across the capacitor. And these are all the variables that we can measure in this system. So each of these components has an associated law that relates the voltage drop to current. So the associated law for the voltage drop across the resistor, which is a function of time, is given by R, the resistance, times the current, which is also a function of time. For the voltage drop across the inductor, we have that VL is equal to the inductance times the time derivative of the current. And finally, for the voltage drop across the capacitor, the law is slightly different. We have a relation between the time derivative of the voltage drop across the capacitor. And that is equal to 1 over C times the current. So note that R, L, and C are all constants. So these are linear relations between voltage drop and current. And these laws are actually a pretty big deal because it took generations of physicists to come up with them. And although they're not perfect, they serve as a great model that works for a wide range of circuits. So these are very important laws in physics. And then other thing that the circuit obeys is Kirchhoff's voltage law. So Kirchhoff's voltage law says that the voltage gain from the power source is equal to the sum of all the voltage drops across the circuit. So we have that V, our voltage gain from the power source, is equal to VR plus VL plus VC, the sum of the voltages drop across the components. And here, since we want to rewrite everything eventually as a single equation, we have to rewrite things in terms of time derivatives because we have VC dot showing up here. So a natural next step to take is to differentiate Kirchhoff's law. So we would get V dot is equal to VR dot plus VL dot plus VC dot. This way, we can use the relations that we have and plug them into the time derivative of Kirchhoff's voltage law. Now, the next step is to declare what's the input and what's the system response of this system. So if we have an AM radio, for example, we would have the input being the voltage that is received through the radio waves hitting the antenna. And that would be seen here in the power source of the circuit. An output that we would be interested in-- so the system response we would be interested in-- would be the voltage drop across the resistor, as that signifies the output that we get through our headphones in an AM radio. So in our case, we will look at the system response of the voltage drop across the resistor. We could have chosen any of the voltage drops or even the current as our system response. But because we're interested in analyzing an AM radio, we'll take VR as our system response. The next step is to rewrite things in terms of our variable of interest-- in terms of our system response. So we want to rewrite this associated laws in terms of VR. So in the first equation, I want to rewrite I, the current-- so I of t-- as a function of VR. So I'll divide both sides by R. And I get that the current is equal to VR over R. In the second equation for VL of t, I know that I need the time derivative of the current. So I'll need to differentiate this part. And the only thing that's a function of time is VR. So we would get that VL is equal to L over R times VR dot. And finally, in our last equation, I have that VC dot is equal to 1 over C times VR of t over R. Now we have all of our variables as functions of the system response. Next step in order to get a single differential equation for VR, the voltage drop across the resistor, is to plug in all of these expressions into Kirchhoff's voltage law. So let's do that. So we have the left-hand side-- says that V dot is equal to VR dot-- so that's OK, it's already in terms of the system response-- plus the time derivative of VL. So here in the associated law, we have VL. We need to differentiate it. And we would get Lover R times VR double dot because we differentiated this expression. And finally, we have to plug in VC dot. And we get 1 over C times R VR. So over here, we have a single differential equation with our input in one side and our system responds in the other. So one side only depends on the system response. And one side only depends on the input. The last step is to rewrite so-- as we generally do with the system response on the left-hand side and with the input on the right-hand side. For simplicity, I will multiply both sides by R. That way, each component will only have a single parameter, a single constant multiplying it. And we'll see that in a second. And now reorder such that the higher order derivatives appear first. So let's do that. So multiplying by R and putting first the highest order derivative, we would have L times VR double dot-- so that's the first term-- plus R times VR dot plus 1 over C VR. And all of that is equal to R times V dot. Now we have system response on the left-hand side, input in the right-hand side, and the coefficients of each term is a single constant-- a different constant, but a single one. So this is the differential equation for the system response for a given input. We can compare this equation to the mass-dashpot-spring system. So that equation reads that m x double dot plus b x dot plus kx is equal to b y dot, where in this case, I'm taking the forcing to come from the dashpot. So we can match each term. And they all look the same. So these two equations have the exact same form, meaning that their solutions are of the same form. And that's a very important result-- that RLC circuits can be modeled by the same equations that some physical systems are modeled. So what if we had chosen other system responses? What if we look at the system response across the inductor? And what about the system response across the capacitor? What would be the differential equations for each of these system responses? I'll let you work on that. And I'll come back with the answers in a bit. A very simple passive AM radio receiver may be modeled by the following circuit. The power source at left is the antenna, being driven by radio waves. The resistor at top is a speaker. The other components are a capacitor (at bottom) and an inductance coil (at right). We will model this circuit using the same five-step process as before. Draw a diagram of the system. We've already done Step 1! Identify and give symbols for the parameters and variables of the system. The diagram shows symbols for four standard electronic components: R resistance of the resistor (ohms) L inductance of the inductor (henries) C capacitance of the capacitor (farads) V voltage source (volts) The quantities R, L, C are constants while the voltage source V is a function of time. Next, to understand the diagram above, we need to define an orientation of the circuit; say that current flows clockwise. Since it's a series circuit, the current through any of the wires is the same; write I(t) for it. Then we can say that the power source, at left, produces a voltage increase of V(t) volts at time t. This voltage increase may vary with time, and may be negative as well as positive. In fact we'll be especially interested in the case in which it is sinusoidal! The meaning of each of the other components is specified by how the voltage decrease across it is related to the current flowing through it. For us, these relationships define the components. The impact of each component is determined by the constant appearing in these relationships. Voltage drop across the inductor: VL(t)=LI\u02d9(t). Voltage drop across the resistor: VR(t)=RI(t). Voltage drop across the capacitor: CV\u02d9C(t)=I(t). These are related by Kirchhoff's voltage law : The voltage gain across the power source must equal the sum of the voltage drops across the other components: V=VL+VR+VC. Declare the input signal and the system response. We will declare the voltage increase V(t) produced by the power source as the input signal. For system response, we are interested in the loudness of the speaker, which is proportional to the voltage drop across the resistor. So we declare VR to be the system response. This means that we want to set up a differential equation relating V(t) to VR(t). Write down a differential equation relating the input signal and the system response, using Newton's &ldquo;F=ma\" in the mechanical case or Kirchhoff's laws in the electrical case. Because V\u02d9C appears in the definition of a capacitor, it is natural to differentiate Kirchhoff's voltage law, and rewrite in terms of I; V\u02d9=V\u02d9L+V\u02d9R+V\u02d9C=LI&uml;+RI\u02d9+(1/C)I. To make this into an equation relating the input signal V to the system response VR, we just have to remember that VR=RI. So multiply through by R and make this substitution, along with its consequences V\u02d9R=RI\u02d9 and V&uml;R=RI&uml;: RV\u02d9=LV&uml;R+RV\u02d9R+(1/C)VR. Rewrite the equation in standard form. Input and output are already separated; to put this in standard form we just swap sides: LV&uml;R+RV\u02d9R+(1/C)VR=RV\u02d9. We're done. But before we discuss consequences, recall the equation describing the spring/mass/dashpot system driven through the dasphot: mx&uml;+bx\u02d9+kx=by\u02d9. These two equations are formally identical in the way they relate input and system response. This reflects a rough parallel between mechanical and electrical systems, in which Mechanical Electrical displacement x,y voltage drop, gain VR,V mass m inductance L damping constant b resistance R spring constant k 1/capacitance 1/C Similarly, a harmonic oscillator (undamped) is analogous to a series LC circuit (no resistor). ",
                                        "unit_id":"85f762107574467194d3ca358b7f9fb5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a8d606cd5c7c4564aed63080c500b7a0",
                                "vertical_name":"7. Series RLC circuits"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Low frequencies",
                                            "Left hand side",
                                            "Right hand side",
                                            "Real part",
                                            "Complex number",
                                            "Real terms",
                                            "Negative sign",
                                            "Rlc circuit",
                                            "Voltage drop",
                                            "Complex gain",
                                            "Identity operator",
                                            "Differential equation",
                                            "Part",
                                            "System",
                                            "Acting",
                                            "Gain",
                                            "Input",
                                            "Qc",
                                            "Ql",
                                            "Plug",
                                            "Operator",
                                            "Omega",
                                            "Ll",
                                            "Squared",
                                            "Polynomial",
                                            "Big",
                                            "Component",
                                            "Equation"
                                        ],
                                        "data":" You've now found the differential equation for the voltage drop across the three components in an RLC circuit in series. So the voltage drop across the resistor is given by the first equation. The voltage drop across the inductor is given by the second equation. And the voltage drop across the capacitor is shown here in the third equation. Note that the left-hand side of these three equations is of the same form. So they have the same coefficients and the same derivatives acting on the same places. But the way that the input enters into the right-hand side is different, depending on the system response that we pick. So if we look at a purely sinusoidal input, such as V equals cosine of omega t, we can ask what are the system responses as omega changes? So what happens if omega is small, if we're driving at low frequencies? What happens when omega is big? And is there a maximal-- is there a value of omega that gives me a maximal response? And we'll see that the answers are different, depending on the system response that we look at. So one way to get the answer to see what happens as we change omega is to calculate the gain, what we call little g of omega. And that's defined as the magnitude of big G of omega, where big G is a complex number. So in the case of a problem where we have-- so if we have an equation of the type P of D acting on x is equal to Q of D acting on y-- and this is the case here, because we have a polynomial acting on our system responses. And then, on the right-hand side here, we have another polynomial acting on the input, which is what we have in these three right-hand sides. So if we have a system like this, which we do, we can compute big G of omega, which is defined to be Q evaluated at i omega divided by P evaluated at i omega. So what that means is that we need to know what the polynomial Q of D is for each of these system responses. And we need to know what P of D is, again, for each of these differential equations. So let's do that. Like I said, before, these three equations have the same left-hand side. Meaning that, the P of D or the operator that it's being acted on to these system responses is the same. So we have P of D for these-- all three of these equations is equal to L times a second derivative, which we denote by D squared plus R times the first derivative, as we have in all these three terms. And finally, we have 1 over C multiplied by the system response. I'll add the identity operator over here, just to make this an operator. And this just means I'm multiplying my system response by a constant. And in order to calculate the complex gain, we need to evaluate P of D at i omega. So we'll plug that into this polynomial. And we'll get L. And then when I get and i squared, which gives me a negative sign, and then I get omega squared. So that's my first term. And then over here, I would get iR omega when I plug i omega into this term. And finally, 1 over C is just a constant. So over here, we have computed the first part. And this is actually the same for all these three equations. Now the second part in order to calculate the gain, the complex gain, actually, is to find Q of D. And now we need to look at each component separately. So first, we'll look at Q of R. So the polynomial acting on the input for the R component. So we're looking at this first equation. And we notice that the input is being acted by the polynomial R. We're multiplying by the constant R. And we're taking a derivative. So that's what we have here. I'll give you a little bit of time to work on the other two polynomials. And we'll get back in a little bit. You should have found that QL is equal to L times D squared. And that QC is equal to 1 over C times that identity operator. So these are the three polynomials for each of the system responses. Now what we're interested in, again, is calculating Q of i omega. So we want to calculate what this polynomial is when we're driving with the frequency omega. In the first line, we have iR omega. So we just plug-in i omega into this expression for QL evaluated at i omega. Again, we obtain an i squared, which gives us a negative sign. And then we get L omega squared. And finally, for QC evaluated at i omega, we just obtain a constant 1 over C. Now we have all the ingredients to calculate the complex gain. We have all of the Q's evaluated at i omega. And we have P of i omega, which is the same for all of the three components. So let's go ahead and do that. So the complex gain for the resistor is defined as Q of R evaluated at i omega, which we just found to be iR omega divided by P of i omega. I'll just manipulate this equation a little bit so that my real part is together. So I'll write 1 over C minus L omega squared. Those are the real terms in that equation plus the imaginary part iR omega. ",
                                        "unit_id":"b0273a440b77489a8929d4bb60bfcb92",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"71bfbf794e7d4956a6461f3bb0d9bb6b",
                                "vertical_name":"8. Gain for different system responses"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Purely imaginary number",
                                            "Real part",
                                            "Imaginary part",
                                            "Real axis",
                                            "Imaginary axis",
                                            "Rlc circuit",
                                            "Complex number",
                                            "Positive number",
                                            "Complex numbers",
                                            "Complex plane",
                                            "Circuit board",
                                            "Power source",
                                            "Voltage drop",
                                            "Square root",
                                            "Function generator",
                                            "Complex gain",
                                            "Real",
                                            "Squared",
                                            "Number",
                                            "Exact",
                                            "Red",
                                            "Circuit",
                                            "Maximal",
                                            "Square",
                                            "Ll",
                                            "Signal",
                                            "Pretty",
                                            "Small",
                                            "Function",
                                            "Pink",
                                            "Omega",
                                            "Input",
                                            "Messy",
                                            "Dominant",
                                            "Big",
                                            "Term",
                                            "Specific",
                                            "Driving",
                                            "Component",
                                            "Extreme",
                                            "Start",
                                            "Connected",
                                            "Response",
                                            "Behavior",
                                            "Growing",
                                            "Eventually",
                                            "Increase",
                                            "Gain",
                                            "Measure",
                                            "Resistor",
                                            "Output",
                                            "System",
                                            "Equal",
                                            "Numerator",
                                            "Case",
                                            "Expression",
                                            "Magnitude",
                                            "Frequency",
                                            "Amplitude"
                                        ],
                                        "data":" So now let's actually go on and measure the responses of the RLC circuit. So here I have the RLC circuit I was holding before. Here I have my function generator, which provides my sinusoidal input. And finally here I have an oscilloscope, where we'll measure the response and compare those to the input signal. So let's hook up the system and start driving with a sinusoidal input. So here's a circuit board, where we're going to attach all of our components. So each row of holes here is electrically connected. So notice that the inductor and the capacitor are connected, because they each have one leg in the same row. For all of our tests, we use this inductor, which is a 47 milliHenry. In the first experiment, we'll use this capacitor and a five and a 510 ohm resistor, which we're placing here right now. So we hook up the power source, which is the input of our system and the ground. And here is our series RLC circuit. We now connect the probes to measure the voltage drop across the resistor. So here on the left, we have our function generator, which is providing our sinusoidal input. In the screen, you can see the frequency of the input. If you look on the right, we have the oscilloscope. And the pink curve indicates the input. The red curve corresponds to the output, the voltage drop across the resistor in this case. As I turn on the knob here, the frequency is changing. We're interested in measuring the amplitude of the output. So the amplitude of the red curve here. We'll sweep the frequencies. And so we're starting at 100 hertz. And we see that the amplitude of the response in red is very small compared to the signal, the input signal, which is shown in pink. And as we gradually increase the frequency, the amplitude of the response increases. We see that the amplitude of the pink signal is constant. And eventually, the amplitude attains a maximum. And as we increase it further, it starts to decrease again. So we see here that at resonance the amplitude, the gain is nearly one. So the response is pretty much the same as the signal. There are just issues with-- real life issues with-- the circuit that don't allow us to have exactly one. But this is pretty close. And now I'll remove the input signal and just explore what happens for very high frequencies. So if I increase the frequency, the signal decreases and eventually tends to zero. The response eventually tends to zero for very high frequencies. Welcome back. So now we're going to be analyzing the gain when we pick the system response to be the voltage drop across the resistor, VR. So one thing that we're interested when we have an RLC circuit, for example, is to measure how the amplitude of the output compares to the magnitude of the input. In order to do that, we have to look at the magnitude of this complex number. So that's what we call the gain, little g. It's much easier algebraically to work with the magnitude squared. So for now, we're going to work with little g squared, which is defined as the magnitude of big G squared. OK, what is that? We can calculate it by looking at the magnitude of the numerator divided by the magnitude of the denominator. So the magnitude squared of the numerator is given by R squared omega squared. And then to calculate the magnitude of the denominator, we take the real part squared plus the imaginary part squared. So that is given by 1 over c minus L omega squared everything squared plus R squared omega squared. And now, we have an expression for the square of the gain given here. Some questions that we're interested in asking is what happens as we vary omega. So let's look at some extreme cases. So what happens when omega goes to 0, that is if we're driving the system with small frequencies. So let's look at this expression. If we plug in omega equal to 0, the numerator is equal to 0 because we have an omega squared. But the denominator is not because there is a term here that is a constant. So when we divide 0 by a constant, we recovered that g squared goes to 0. So the gain goes to 0 as omega goes to 0. What happens at the other extreme when omega goes to infinity? So again, we look at this expression and compare the behavior of the numerator and the denominator. So the numerator is growing as omega squared. That's the largest term. Whereas, the denominator is growing as omega squared squared, which is omega to the fourth. So the denominator is growing faster than the numerator. Therefore, g squared tends to 0 as well. So if we drive with small or large frequencies, the gain goes to 0 in both cases. All right. So we could use the gain in order to obtain this information, but sometimes that can be messy. The expression might not be as clear as this. In those cases, it's helpful to think about the complex number big G of R and analyze that separately. So let's do that now. So here, I have that big G of R as omega goes to 0. So the complex number on top in the numerator becomes 0 because we have iR omega and omega goes to 0. And the complex number in the denominator goes to 1 over c. So again, we recovered the same result that the complex number tends to 0. And therefore, its magnitude tends to 0. Now, what happens at the other extreme? So as omega goes to infinity, we have that the numerator is growing as iR omega. So that's the dominant and the only term in the numerator. Whereas, the denominator has a dominant term that looks like minus L omega squared. And again, if we look at the behavior omega going to infinity, this number is going to 0 because the denominator is growing faster than the numerator. All right. So here we have the extreme behavior of the graph of the behavior of G. Now, what happens in the mid-range? What happens for values in between 0 and infinity? So let's look at mid-range values of omega. One behavior that we're interested is what is the maximal gain that we can obtain? So one thing that we can do that we learn from calculus is that if we take the expression for the gain, g squared, and take its derivative, set it equal to 0, this would give us the value of omega that gives us maximal gain or maximal gain squared in this case. But if we try to take the derivative of this expression, you soon find that this is pretty messy. So this will be a challenge that we don't necessarily have to do. This is a case where dealing with the complex numbers and thinking about big G of R will be very helpful. So let's look at the magnitude of G of R, which is given by the magnitude of its numerator divided by the magnitude of its denominator. Now, we're comparing the magnitude of two complex numbers. So let's draw that in the complex plane. So here is the real axis. And here is the imaginary axis. So the numerator is a purely imaginary number, iR omega. So we plot that on the imaginary axis. And this is the value iR omega. And then the denominator has the same exact imaginary part. So it will also have this imaginary part. But it also contains a real part given by 1 over c minus L omega squared. So the complex number looks like this in the complex plane. So we have a numerator that's purely on the imaginary axis. And we have the denominator, which is drawn here in orange that has a real and imaginary component. So we're interested in the length of these two complex numbers. So just by looking at the graph, we can see that the length of the denominator is greater than the length of the numerator unless we have a very specific case where the real part of the denominator goes to 0. In that case, the two vectors would be-- the two complex numbers would have the exact same magnitude. So when does that happen? We want the real part of the denominator, which is given by 1 over c minus L omega squared to be equal to 0. Solving this, we obtained that omega is equal to 1 over the square root of Lc. So note, we're thinking about frequency as a positive number. That's why we don't have a plus or minus. So this is the frequency where the gain is maximized. So instead of taking derivatives of a complicated expression, we were able to do this simply by thinking about the geometry of complex numbers. And now, we have the value of omega that gives us the maximal gain. Now, what is that gain? So what happens when I plug in omega equals 1 over the square root of Lc into this expression? Again, the real part of the denominator goes to 0. So I'm comparing the magnitude of iR omega with the magnitude of the same thing, iR omega. So this tends to 1 as omega tends to the square root of 1 over Lc. So we have found not only the frequency where the maximum happens, but that the maximal value that the gain takes is 1. That is the amplitude of the output is at most the same as the amplitude of the input. That's why we have a 1 over here. And now, we have all the ingredients to plot what the gain looks like as a function of omega. So we found as omega goes to 0, the gain goes to 0. As omega goes to infinity, the gain also goes to 0. And then for this specific value of omega, omega equals 1 over the square root of Lc, the gain goes to 1. So let's make a plot with all this information. So here on the x-axis, we have omega, our input frequency. And on the y-axis, we have g, little g, the magnitude of the complex gain. Again, as omega goes to 0, the gain goes to 0. As omega goes to infinity, the gain also tends to 0. And then we found that for omega equals 1 over the square root of Lc, g obtains a maximum and that maximum is equal to 1. So we know that this point is on the graph. And therefore, the graph of little g looks something like this. All right. Now, let's do some exercises and practice. ",
                                        "unit_id":"28211b38204b402d8accaa9f87582723",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"81eb7caa9b0740f38d4dcf0713383c39",
                                "vertical_name":"9. Voltage drop across resistor as system response"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rlc circuit",
                                            "Low frequencies",
                                            "Complex number",
                                            "Complex numbers",
                                            "Voltage drop",
                                            "Frequency sweep",
                                            "Complex gain",
                                            "Circuit",
                                            "Extreme",
                                            "Curve",
                                            "Response",
                                            "System",
                                            "Speaker",
                                            "Draw",
                                            "Amplitude",
                                            "Ll",
                                            "Frequency",
                                            "Increasing",
                                            "Measuring",
                                            "Found",
                                            "Negative",
                                            "Growing",
                                            "Gain",
                                            "Behavior",
                                            "Peak",
                                            "Large",
                                            "Measure",
                                            "Denominator",
                                            "Equal",
                                            "Omega",
                                            "Gl",
                                            "Input",
                                            "Radio",
                                            "Make",
                                            "Eventually",
                                            "Case",
                                            "Numerator",
                                            "Gc"
                                        ],
                                        "data":" What would happen if, instead of measuring the voltage drop across the resistor, we measured the voltage drop across the capacitor? So we'll have the same system that we had before, with the same resistor, inductor, and capacitor. And this time, instead, we'll measure the voltage drop across the capacitor. So let's do a frequency sweep again. We're starting at low frequencies. Wait look. The red curve and the pink curve are exactly the same. That is, the input and the output are the exact same curve. The gain is 1 at low frequencies. As we start increasing the frequencies, note that the amplitude of the red curve keeps increasing, and eventually it reaches a maximum. This is very different from the behavior of V sub R, the voltage drop across the resistor. In this case, the voltage drop across the capacitor is growing with growing frequency. And after a peak, it eventually goes down to zero. Let's turn off the input signal, and see that as I keep increasing the driving frequency, the red curve amplitude keeps decreasing, and eventually tends to zero. So let's once again measure the voltage drop across the capacitor but increase the resistor to a very large value. Will the behavior be the same as we saw last time? So again, we'll do a frequency sweep. And for low frequencies things seem pretty similar. The red curve, the output, looks pretty similar to the input. But as I start increasing the frequency, look that the red curves amplitude decreases. It never goes up, and eventually it tends to zero. This is different from the behavior we saw last time. All right. Let's explore our last system response, the voltage drop across the inductor. So let me put the probes here. Connect the voltage drop across the inductor. So look that for low frequencies, we're starting again with an output, the red curve, at zero. That is the output is zero for low frequencies. As I start increasing the frequencies, note that the amplitude of the red curve slowly goes up until it eventually reaches a maximal value, which is larger than the input. So this is a gain larger than one. And as I keep increasing the frequency, the red curve tends to be the same as the input curve. So that is, the gain tends to one. So now, we're going to analyze the gain for the other two system responses, VC, the voltage drop across the capacitor, or VL, the voltage drop across the inductor. What we're interested in is the ratio of the amplitudes of our output and of our input. And we can understand that by looking at the magnitude of the complex gain. The complex gain are the two expressions that we have here. So big G of C is given by this expression and big G of L is given by that following expression. We could analyze little g, which is the magnitude of this complex number, but it's actually-- we can actually gain a lot of information just by looking at the complex number itself. And that's what we're going to do. So let's look at some extreme cases for our driving frequency omega. So if we have omega going to 0, what happens to GC, the complex gain? So I can see that the numerator is not affected. It doesn't depend on omega. So the numerator stays the same. But the denominator grows as also a constant 1 over C. And when we look at the amplitude of this complex number, we see that we have 1 over C divided by 1 over C. So the magnitude of this is tending to 1. And the magnitude of this complex number is what we call little g, the gain. Now, what happens at the other extreme? What happens is omega goes to infinity. As omega goes to infinity, the numerator is again dominated by 1 over C. But the denominator is now dominated by the term negative L over omega squared, negative L times omega squared. And now, we need to think about the amplitude of the numerator and the amplitude-- and the magnitude of the denominator. And we see that the magnitude of the numerator is just 1 over C, a constant. Whereas, the magnitude of the denominator grows as omega squared. So this ratio is going to 0. So the ratio of the magnitudes little g is going to 0. So this is in the case of the capacitor. So we call that gC, so the gain for the capacitor. So it it's 1 when omega goes to 0. And it's 0 as omega goes to infinity. Now, let's look at the case of the voltage drop across the inductor, which is given by the complex gain GL. Again, the two behaviors-- as omega goes to 0, the numerator goes to 0, but the denominator goes to the constant 1 over C. So we have that the ratio of the amplitudes, which is our gain gL, goes to 0. And finally, we look at what happens as omega goes to infinity. Again, the dominant term in the numerator is minus L omega squared. And the dominant term in the denominator is also minus L omega squared. As we compare the magnitude of these two complex numbers, that ratio tends to 1. So here we have the extreme limits behavior for the gain of the capacitor and the inductor. But now, what happens in the mid-range? So the analysis of the mid-range can be quite complicated. So we would have to solve the equation d dw of gC equal to 0 if we want to find a maximum for the gain of the capacitor, gC. The algebra behind this can be quite tricky, but it can be shown that the gain obtains a maximum. So gC has max as long as R is small, so as long as the resistance of the system is small. We could do the same calculations for gL. But it can be shown that gL always has a maximum. So with this, we have enough information to make plots for both gC and gL. So let's recap. When omega is equal to 0, gC goes to 1. When omega goes to infinity, gC goes to 0. This means that the capacitor is allowing low frequencies to pass through, but it's not allowing high frequencies to pass through. So it's giving 0 gain for high frequencies. Whereas, the inductor is doing the opposite. As omega goes to 0, the inductor has gain of 0. But when omega goes to infinity, the inductor-- the voltage drop across inductor has gain of 1. So let's make a plot with this information. Just for reference, I have the plot for the gain for the voltage drop across the resistor, which we found previously. So let's draw the other two gains now. So this is, again, omega. And this is g of C. And this is omega. And this is gL. So the gain for the capacitor, it goes to 1 when omega is equal to 0. And it goes to 0 as omega goes to infinity. Like I said, there were two cases that can happen. If R is small, there will be a peak. And I'll draw this curve in a different color to indicate R small. Now, the other case is if R is too large, then this peak disappears and the function just smoothly decays to 0. So there is this for R big. So these are the two possible scenarios for g of C. Now, let's look at the behavior for gL. So gL goes to 0 at low frequencies. And it tends to 1 at high frequencies. And this function, gL, always has a maximum for some finite value of omega. So we'll draw this as such. So let's look at a few applications from what we just found out. So if we look at the graph of gC, we see that it allows low frequencies to pass through while high frequencies are inhibited. So they tend to 0 at high frequencies. This means that if you want to build something like a speaker and you measure the voltage drop across the capacitor, then you would have low frequencies passing through and that would be equivalent to a woofer speaker that has strong bass and low treble. The opposite is true for gL. If you pick the voltage drop across the inductor as your system response, you would not allow low frequencies to pass through. But you would allow high frequencies to pass through. And that would be something like a tweeter speaker, which has high treble and low bass, so high frequencies pass through. All right. So these are some applications for using an RLC circuit for building speakers. We can also build a very primitive AM radio using an RLC circuit, but in that case measuring the voltage drop across the resistor as our system response. So if we look here, the gain, gR, obtains a maximum for a specific value of omega. So this means if I'm trying to pick a station, I would have best reception if the frequency of my input is near this resonant peak. But note, that this peak is pretty wide. So this radio wouldn't be the best radio in the world. We would pick quite a large band of frequencies. So in order to make a better radio and in order to make better electronics in general, you need to combine a lot of these circuits. And when you do that, you can amplify your response the way that you want. So these are just some basic applications from a single loop RLC circuit. ",
                                        "unit_id":"8570733dbb7c4715b05289e235693bd2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ca59bbd7f3874e118706d4a0d962f100",
                                "vertical_name":"10. Voltage drop across the capacitor and the inductor"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Voltage source",
                                            "Complex gain",
                                            "Phase lag",
                                            "Resistor",
                                            "Inductor",
                                            "Find",
                                            "Gain"
                                        ],
                                        "data":" Example 11.1&emsp;&emsp; A resistor of resistance R and an inductor of inductance L are attached in parallel. A voltage source provides the combination with AC voltage of angular frequency &omega;. Find the gain and phase lag of the resistor current relative to the total current (through the voltage source). Solution: Let V(t) be the sinusoidal voltage provided. Unknown functions: Let I1 be the resistor current. Let I2 be the inductor current. Let I be the total current. Equations: Physics says V =RI1 V =LI\u02d92 I =I1+I2. The same relationships hold between the complex replacements: V~ =RI~1 V~ =LI~\u02d92 I~ =I~1+I~2 (because taking real parts is compatible with real scalar multiplication and with taking derivatives). Suppose that V~=ei&omega;t. (In general, V~=&gamma;ei&omega;t for some &gamma;&isin;C, but then everything will be multiplied by &gamma;, so when we take a ratio to get complex gain, &gamma; will disappear.) How do we solve for the other three functions I1~, I2~, I~? In the steady-state solution, I1~ =&alpha;1ei&omega;t I2~ =&alpha;2ei&omega;t I~ =&beta;ei&omega;t for some unknown complex numbers &alpha;1,&alpha;2,&beta;. To find &alpha;1,&alpha;2,&beta;, substitute into the three complex replacement equations: ei&omega;t =R&alpha;1ei&omega;t ei&omega;t =L&alpha;2ei&omega;ti&omega; &beta;ei&omega;t =&alpha;1ei&omega;t+&alpha;2ei&omega;t. This simplifies to 1 =R&alpha;1 1 =L&alpha;2i&omega; &beta; =&alpha;1+&alpha;2. So &alpha;1=1/R, &alpha;2=1/(Li&omega;), &beta;=1/R+1/(Li&omega;).The complex gain of I1 relative to I is the complex constant G=&alpha;1&beta;=1/R1/R+1/(Li&omega;). The gain is |G|, and the phase lag is &minus;argG. ",
                                        "unit_id":"1d60d64b30cd4d66987b51b10a3d4e70",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d60940c4e0c142058fcf894ca44a6b43",
                                "vertical_name":"11. Worked example: a parallel RL circuit"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Real part",
                                            "Characteristic polynomial"
                                        ],
                                        "data":" Example 12.1&emsp;&emsp; Find a particular solution to the equation x&uml;+8x\u02d9+15x=e&minus;5t Answer The characteristic polynomial is P(r)=r2+8r+15. Since P(&minus;5)=0 we need to use the generalized ERF. Computing we see that P&prime;(r)=2r+8, which implies P&prime;(&minus;5)=&minus;2. Therefore the generalized ERF gives xp=te&minus;5tP&prime;(&minus;5)=&minus;te&minus;5t2. Hide Example 12.2&emsp;&emsp; Find a particular solution to x&uml;+2x\u02d9+2x=e&minus;tcost. Answer First we complexify the equation z&uml;+2z\u02d9+2z=e(&minus;1+i)t,wherex=Rez. The characteristic polynomial is P(r)=r2+2r+2. Computing we see that, P(&minus;1+i)=(&minus;1+i)2+2(&minus;1+i)+2=0,P&prime;(r)=2r+2,P&prime;(&minus;1+i)=2i. Since P(&minus;1+i)=0 we use the generalized ERF zp=te(&minus;1+i)tP&prime;(&minus;1+i)=te(&minus;1+i)t2i=te&minus;t(cost+isint)2i Finally we take the real part to get xp=Rezp=te&minus;tsint2. ",
                                        "unit_id":"738db07b853a48e18ed6f08cbf3a974d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0dafcd13de29407090139ea39892b82b",
                                "vertical_name":"12. Review: worked examples on finding resonant solutions"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5990734394c0403493779dab40719184",
                        "sequential_name":"Recitation 11",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Resonant frequency",
                                            "Complex gain",
                                            "Normal conditions",
                                            "Suspension system",
                                            "Blue curve",
                                            "Vertical position",
                                            "Schematic drawing",
                                            "Bode plots",
                                            "Nyquist plot",
                                            "Bode plot",
                                            "Discussion forum",
                                            "Spring constant",
                                            "Damping constant",
                                            "Function",
                                            "Frequency",
                                            "Suspension",
                                            "System",
                                            "Fix",
                                            "Vertical",
                                            "Recall",
                                            "Minimum",
                                            "Phase",
                                            "Changing",
                                            "Gain",
                                            "Plot",
                                            "Driving",
                                            "Maximum",
                                            "Forum",
                                            "Curve",
                                            "Car",
                                            "Slowly",
                                            "Response",
                                            "Find",
                                            "De",
                                            "Resonance",
                                            "Spring",
                                            "Found",
                                            "Road",
                                            "Depends",
                                            "Share",
                                            "Derived",
                                            "Imply",
                                            "Damping",
                                            "Omega",
                                            "Amplitude",
                                            "Graph",
                                            "Input",
                                            "Mass"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. 18.03 Recitation 11 Frequency response, Resonance 1. [Preparation: vertical spring-mass system] A mass m (kg) is supported by a spring attached to the floor which is in a tube so that its motion is vertical only. Suppose the relaxed length of a spring with spring constant k is L (meters), and the mass is in equilibrium position when the spring is at x0 (meters) from the floor. Let x(t) (meters) be the displacement of the mass from the equilibrium position at time t (seconds). We will choose x &gt; 0 if the mass is above the x0. a. Use Newton&rsquo;s second law to write the weight of the mass mg in terms of k, x0, L. b. Now use Newton&rsquo;s second law to write a DE for the displacement x(t) of the mass from the equilibrium position x0 in terms of only k, x, x0, L. Real life application: Car suspension system 2. [The complex gain] Recall the DE derived in the video describing the vertical position x(t) (meters) of the car&rsquo;s body: mx&uml; + bx\u02d9 + kx = by\u02d9 + ky y = cos (&omega;t) (1) where the input y(t) (meters) is the height of the road directly beneath the wheel at time t (seconds) and depends the bumps on the road and how fast the car is driving over them. Find the complex gain G(&omega;) for the car suspension system, in terms of the system parameters m (kg), k (N/m), b (Ns/m), and &omega; (rad/s). Mathlet activity We will finish our analysis of a car&rsquo;s suspension system by investigating how the gain depends on the system parameters. Remember that the gain is THE property that determines how well the suspension absorbs the bumps in the road. We will investigate this using the Mathlet Amplitude and Phase: Second Order III. On the left is the schematic drawing of a car&rsquo;s suspension. The body of the car is represented by the top orange block, which is coupled, by a spring and a damper, to the surface of the road, the blue bottom block here. As the car moves, it experiences the sinusoidal pattern of bumps of the road. Click on the play button &gt;&gt; below the graph to see the animation. The equation of motion is equivalent to the equation of motion we derived in the previous video. Recall y is the sinusoidal driving function resulting from the car moving on the bumps,the input of the system, and x is the vertical position of the car, the response. Note that here in the mathet, the mass m of the car&rsquo;s body is normalized to be 1 and the amplitude of y is also normalized to be 1. The graphs of both the input and the response plotted as functions of time. The blue curve is input graph y(t), the height of the road at time t, and the orange curve is the graph of response x(t), the vertical position of the car at time t. You can click on the play button to restart the animation. We are interested in the gain g(&omega;) of the system, whose behavior over different frequencies of the input is shown by the Bode plots. Remember the gain is the ratio of the amplitudes of the response to the amplitude of the input. The graph of the phase lag &phi;(&omega;) is also shown, but we are not interested in it in for the car&rsquo;s suspension system. (Also take a look at the Nyquist plot, a plot of the trajectory of the complex gain G as &omega; varies.) We can now determine how changing system parameters like b, k and &omega; will affect the gain. 3. [Driving very slow] Let us study the effect of changing the driving frequency &omega;. This will tell us how a car would respond if it drove very slowly over a series of bumps, compared to if it drove very fast over the bumps. You can adjust the value of &omega; using the slider on the right under the Bode plots and see how the curves of the input and the response vary with &omega;. a. From the Bode plot in the mathlet, what is lim&omega;&rarr;0 g(&omega;) for different values of the damping constant b and spring constant k? Is this consistent with what you expect from the complex gain formula? b. What does this limit imply about the behaviour of the suspension system if you drive very slowly over a series of bumps? 4. [Driving very fast] a. Find lim&omega;&rarr;&infin; g(&omega;) using the complex gain (which you found in a previous problem). Verify the result by looking at the Bode plot on the mathlet at different values of b and k. b. What does this imply about the behavior of the suspension system if you drove very fast over a series of bumps? 5. [Driving in resonance with bumps] Fix the damping and spring constants b = 1 and k = 2. a. From the Bode plot, what is the frequency &omega;r at which the gain is maximum and what is the value of the maximum gain gmax? b. What does that mean for the car? 6. [Effect of damping on resonance] Fix k, slowly vary b, and look at how the resonance peak on the Bode plot changes. a. How does increasing the damping constant b affect the resonance peak? b. If the suspension system does not have a dashpot, what would the resonant angular frequency? In other words, find the angular frequency &omega;r at which g(&omega;) is maximum when b = 0. Use the complex gain formula that you have previously found and answer in terms of k and m. c. Now what is the value of &omega;r when k = 2, m = 1 and b = 0? d. Compare this resonant frequency with no damping with the value of &omega;r you read from mathlet for k = 2, b = 1 (and m = 1 ) in the previous problem. Is the resonant frequency with no damping a good approximation to the resonant frequency with damping? 7. [Effect of the spring on resonance] Now fix b, slowly vary k, and again look at how the resonance peak on the Bode plot changes. a. How does increasing the spring constant k affect the resonance peak? 8. [Minimum comfortable speed] a. Set k = 2 and b = 1. Use the mathlet to figure out the minimum value of &omega;min so that g &lt; 1. This would allow you to determine the minimum speed at which you should drive over a series of bumps to ensure a comfortable ride. b. Now, slowly vary b while still fixing k = 2. How does increasing the damping constant b change &omega;min? Is this what you expect from the complex gain formula? Tuning the spring and damping constants When designing a suspension system, engineers typically fix the value of &omega; at a value that reflects the typical road conditions that the car will encounter. The engineers then choose the parameters k and b to ensure that the vehicle will not be in resonance with bumps in the road under normal conditions. For example, if omega is fixed at 2, it is obvious that choosing k = 4 and b = 1 would be a bad choice as the car would be in resonance under these conditions. We have only touched upon a few of the interesting properties of the response of this driven oscillator. Continue playing with the mathlet so that you fully understand the behavior of the system. For example, can you find the values of b, k, and &omega; that produce the largest possible gain in this mathlet? Have fun! ",
                                        "unit_id":"86cf6acac5f04d13824a8be0f6ca4852",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5dcfa272fb6e43f3bd095df281c99ae9",
                                "vertical_name":"1. Frequency response, resonance"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"04942950f7b24852a75d1b3210059aeb",
                "chapter_name":"Unit 5: Due 19 April",
                "sequentials":[
                    {
                        "sequential_id":"6f504a6ec9594031bfacf5a8191afe54",
                        "sequential_name":"12 Nonlinear DEs: Graphical methods",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Objectives Use slope fields and isoclines to aid in the drawing of solution curves for first order ODEs . Draw integral curves aided by existence and uniqueness theorems, and assess long term behavior of solutions. ",
                                        "unit_id":"52da1f37c42240fb8c86f8c9e77b22b9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"888e8a4197dc4884b6b3139eebd8e55a",
                                "vertical_name":"1. Nonlinear differential equations: Graphical Methods"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Ordinary differential equations",
                                            "Differential equations",
                                            "Linear equations",
                                            "Differential equation",
                                            "Standard form",
                                            "Elementary functions",
                                            "Nonlinear",
                                            "Order",
                                            "Ll",
                                            "Equation",
                                            "Sense",
                                            "Blue",
                                            "Solvable"
                                        ],
                                        "data":" First order. ODE, ODE, I'll only use three, two acronyms. ODE is ordinary differential equations. I think all of MIT knows that whether they've been taking a course or not. So we're talking about first order ODEs, which in standard form are written, you isolate the derivative of y with respect to x, let's say on the left hand side. And on the right hand side, you write everything else. You can't always do this very well, but for today, I'm going to assume that it has been done and it's doable. So for example, some of the ones that will be considered either today or in the problem set are things like oh, y prime equals x over y. That's pretty simple. The problem set will also-- the problem set has y prime equals, let's see, x minus y squared. And it also has y prime equals y minus x squared. There are others too. Now you look at this. This, of course, you can solve by separating variables. So this is solvable. This one is, in neither of these can you separate variables and they look extremely similar, but they are extremely dissimilar. The most dissimilar about them is that this one is easily solvable and you'll learn if you don't know already next time, next Friday, how to solve this one. This one, which looks almost the same, is unsolvable in a certain sense. Namely, there are no elementary functions, which you can write down which will give a solution of that differential equation. So right away, one confronts the most significant fact that even for the simplest possible differential equations, those which only involve the first derivative, it's possible to write down extremely simple guys, I'll put this one up in blue to indicate that it's bad. Oops. Sorry. I mean not really bad but recalcitrant. It's not solvable in the ordinary sense in which you think an equation is solvable. And since those equations are the rule rather than the exception, I'm going to devote this first day to not solving a single differential equation, but indicating to you what you do when you meet a blue equation like that, what do you do with it. So this first day is going to be devoted to geometric ways of looking at differential equations and numerical. At the very end, I'll talk a little bit about numerical. First order (nonlinear) equations can be written in the standard form: y&prime;=f(x,y) where f(x,y) is a function of the two variables x and y. Notice we now have two standard forms for first order differential equations. Recall first order linear equations can also be written in the standard form for linear equations: y&prime;+p(x)y=q(x). This unit is concerned with first order nonlinear differential equations, such as the one boxed in blue in the video: y&prime;=x&minus;y2. The sad fact is that we can hardly ever find formulas for the solutions to nonlinear DEs. Instead we try to understand the qualitative behavior of solutions using geometric methods or approximations. ",
                                        "unit_id":"ab5ee6f4c93f49dc8b276a09ba2fc739",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9e79e11a264647a7ab09d2428d916369",
                                "vertical_name":"2. Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Line element",
                                            "Line segment",
                                            "Differential equations",
                                            "Direction field",
                                            "Differential equation",
                                            "Integral curve",
                                            "Slope field",
                                            "Geometric point",
                                            "Line",
                                            "Find",
                                            "Tired",
                                            "Quickly",
                                            "Direction",
                                            "Word",
                                            "Field",
                                            "Equation",
                                            "Call",
                                            "Curve",
                                            "Geometric",
                                            "Geometrically",
                                            "Ll",
                                            "Letter",
                                            "Multiply",
                                            "Solve",
                                            "Drawing",
                                            "Slope",
                                            "Called",
                                            "Point"
                                        ],
                                        "data":" What's our geometric view of differential equations? Well, it's something that's contrasted with the usual procedures by which you solve things and find elementary functions which solve them. I'll call that the analytic method. So on the one hand, we have the analytic ideas in which you write down explicitly the equation y prime equals f of x, y. And you look for certain functions, which are called solutions. So there's the ODE. And y one of x, notice I don't use a separate letter. I don't use g or h or something like that for the solution because the letters multiply so quickly, multiply in the sense of rabbits that after a while, if you keep using different letters for each new idea you can't figure out what you're talking about. So I'll use y one means it's a solution of this differential equation. Of course, the differential equation has many solutions containing an arbitrary constant. So we'll call this the solution. Now the geometric view. The geometric guy that corresponds to this version of writing the equation is something called a direction field. And the solution is from the geometric point of view, something called an integral curve. So let me explain if you don't know what the direction field is. So what's a direction field? Well, a direction field is you take the plane. And at each point of the plane-- of course, that's an impossibility. But you pick some points of the plane. You draw what's called a little line element. So there is a point. It's a little line. And the only thing which distinguishes it outside of its position in the plane-- so here's the point x, y at which we're drawing this line element is its slope. What is its slope? Its slope is to be f of x, y. And now you fill up the plane with these things until you're tired of putting them in. So I'm going to get tired pretty quickly. So I don't know. Let's not make them all go the same way. That sort of seems cheating. Here. There's a few randomly chosen line elements that I put in. And I put in the slopes at random since I didn't have any particular differential equation in mind. Now the integral curves. Those are the line elements. And the integral curve is a curve which goes through the plane and at every point is tangent to the line element there. So this is the integral curve. Hey, wait a minute. That's not tangent to the line element there. It didn't even touch it. Well, I can't fill up the plane with line elements. Here at this point, there was a line element which I didn't bother drawing in. And it was tangent to that. Same thing over here. If I drew the line element here, I would find that the curve had exactly the right slope there. So the point is what distinguishes the integral curve is that everywhere it has the direction-- that's the way I'll indicate that it's tangent-- has the direction of the field everywhere at all points, at all points on the curve, of course. Where it doesn't go, it doesn't have any mission to fulfill. Now I say that this integral curve is the graph of the solution to the differential equation. In other words, writing down analytically a differential equation is the same geometrically as drawing this direction field. And solving analytically for a solution to the differential equation is the same thing as geometrically drawing an integral curve. The figure below is the geometric picture of the differential equation y&prime;=f(x,y). In the video, this sketch is called a direction field. In these notes, we will call it a slope field instead. We reserve the word direction field for diagrams whose line elements have arrows. The line element at (x,y) has slope f(x,y) Definition 3.1&emsp;&emsp; For a differential equation y&prime;=f(x,y), a slope field is a diagram which includes at each point (x,y) a short line element (or line segment) whose slope is the value f(x,y). A solution curve (blue) is tangent to each line segment that it touches. The graph of a solution y1(x) to the DE in the xy-plane is called a solution curve or an integral curve . An integral curve must be tangent to the slope field at every point: y1&prime;(x)=f(x,y1(x)). ",
                                        "unit_id":"17590cc585ab4a558cf4218016119045",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0854cdd810934166a7925b094dcc3cba",
                                "vertical_name":"3. Geometric view of DEs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Slope field",
                                            "Segment",
                                            "Slope"
                                        ],
                                        "data":" Example 4.1&emsp;&emsp; Sketch the slope field for y&prime;=y2&minus;x. Solution: Let f(x,y):=y2&minus;x. Then f(1,2)=3, so at (1,2) draw a short segment of slope 3; f(0,0)=0, so at (0,0) draw a short segment of slope 0; f(1,0)=&minus;1, so at (1,0) draw a short segment of slope &minus;1; f(0,1)=1, so at (0,1) draw a short segment of slope 1; \u22ee The diagram of all these short segments is the slope field. You can see how tedious this process is; a computer will sketch the slope field much more quickly. You can see the slope field for this example in the Mathlet below by choosing the right function and parameter. Slope Fields The mathlet above shows many slope fields for various functions. You can click on points to see the solution curve through that point. Why draw a slope field? The ODE is telling us that the slope of the solution curve at each point is the value of f(x,y), so the short segment is, to first approximation, a little piece of the solution curve. To get an entire solution curve, follow the segments! We will get practice thinking about slope field and solution curves next. ",
                                        "unit_id":"af2fca3268e244bda8e4bd5e80098062",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9d43b7e6668947d68037f991e89c332d",
                                "vertical_name":"4. Slope field"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Critical points",
                                            "Slope field",
                                            "Sign",
                                            "Curve",
                                            "Slope",
                                            "Parabola",
                                            "Region"
                                        ],
                                        "data":" Isoclines organize the slope field. The 0-isocline, also called the nullcline , is especially helpful. The critical points of all solutions to the DE lie on the 0-isocline. Example 7.1&emsp;&emsp; For y&prime;=y2&minus;x, what is the 0-isocline? Solution: Here f(x,y):=y2&minus;x, so the 0-isocline is the curve y2&minus;x=0, which is a parabola concave to the right. At every point of this parabola, the slope of the solution curve is 0. Example 7.2&emsp;&emsp; For y&prime;=y2&minus;x, where are the points at which the slope of the solution curve is positive? Solution: This will be the region in which f(x,y)&gt;0. The 0-isocline f(x,y)=0 divides the plane into regions, and f(x,y) has constant sign on each region. To test the sign, check one point in each region. Recall f(x,y)=y2&minus;x. Since f(&minus;1,0)=02&minus;(&minus;1)&gt;0, by continuity it follows that f(x,y)&gt;0 in the entire region to the left of the parabola. Similarly, since f(1,0)=02&minus;(1)&lt;0, it follows that f(x,y)&lt;0 in the region to the right of the parabola. Therefore, the answer is that the slope of the solution curve is negative in the region to the right of the parabola, and the slope of the solution is positive in the region to the left. ",
                                        "unit_id":"49691cc8bfca46b8855c47ad5259e4d6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c45de91eda734f618732c30022fd9c95",
                                "vertical_name":"7. Zero Isoclines"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations"
                                        ],
                                        "data":" The mathlet below shows the slope fields, solution curves and isoclines for a list of differential equations. Select a DE from the list, and click on a value of m to see the m-isocline for that DE. Click on any point on the graph to see the solution curve of the DE through that point. You will be exploring more with this mathlet in the recitation for this lecture. ",
                                        "unit_id":"ac5a20f998364cbbb7d006d4206c2a4a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"05c5a5c59926429b8651a8e7bdc78b2e",
                                "vertical_name":"8. Isocline mathlet"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Left side",
                                            "Direction field",
                                            "Scientific terminology",
                                            "Parallel lines",
                                            "Lobster trap",
                                            "Integral curve",
                                            "Mathematical",
                                            "Side",
                                            "Lobster",
                                            "Notice",
                                            "Quickly",
                                            "Curve",
                                            "Ll",
                                            "Draw",
                                            "Line",
                                            "Slope",
                                            "Equation"
                                        ],
                                        "data":" A slightly more complicated example is going to be, let's see, y prime equals 1 plus x minus y. It's not a lot more complicated. And as a computer exercise, you'll work with still more complicated ones. But here, the isoclines would be what? Well, I set that equal to c. And you do the algebra in your head. An isocline will have the equation this equals c. So I'm going to put the y on the right hand side and that c on the left hand side. So it will have the equation y equals 1 plus x minus c. Or a nicer way to write it would be x plus 1 minus c. I guess it really doesn't matter. So there is the equation of the isocline. Let's quickly draw the direction field and see what-- notice, by the way, it's a simple equation but you cannot separate variables. So I will not, today at any rate, be able to check the answer. I will not be able to get an analytic answer. All we'll be able to do now is get a geometric answer. But notice how relatively quickly one can get it. So I'm feeling for how the solutions behave to this equation. All right, let's see. What should we plot first? I like c equals 1-- no, don't do c equals 1. Let's do c equals 0 first. c equals 0. That's the line. y equals x plus 1. OK, let me run and get that chalk. So all isoclines are in orange. If so, when c equals 0, y equals x plus 1. So let's say it's this curve. c equals 0. How about c equals negative 1? Then it's y equals x plus 2. It's this curve. Let's label it down here. So this is c equals negative 1. c equals negative 2 would be y equals x. No. What am I doing? c equals negative 1 is y equals x plus 2. That's right. Well, how about the other side? If c equals plus 1, well, then it's going to go through the origin. Looks like a little more room down here. That one must-- so if this is going to be c equals 1, then I sort of get the idea. c equals 2 will look like this. They're all going to be parallel lines because all that's changing is the y-intercept as I do this thing. So here, it's c equals 2, c equals-- oh, that's probably enough. All right, let's put in the line elements. All right, c equals negative 1. These will be perpendicular. c equals 0, like this. c equals 1-- oh, this is interesting. I can't even draw in the line elements because they seem to coincide with the curve itself, with the line itself. They lie along the line, and that makes it hard to draw them in. How about c equals 2? Well here, the line elements will be slanty. They'll have slope 2, so pretty slanty up. And I can see for c equals 3, in the same, way they're going to be even more slantier up. And here, they're going to be even more slanty down. This is not very scientific terminology or mathematical, but you get the idea. OK, so there's our quick version of the direction field. All we have to do is put in some integral curves now. Well, looks like it's doing this. It gets less slanty. Here, it levels out, has slope 0. And now in this part of the plane, the slope seems to be rising, so it must do something like that. This guy must do something like this. I'm a little doubtful of what I should be doing here. How about going from the other side? Well, it rises, gets a little-- should it cross this? What should I do? Well, there's one integral curve which is easy to see. It's this one. This line is both an isocline and an integral curve. It's everything except drawable. So OK, you understand this is the same line. It's both orange and pink at the same time, but I don't know what combination color that would make. It doesn't look like a line, but you know. Be sympathetic. Now the question is what's happening in this corridor? In the corridor-- that's not a mathematical word either-- between the isoclines for, well, what are they? They're the isocline for c equals 2 and c equals 0. How does that corridor look? Well, it's something like this. Over here, the lines are all look like that. And here, they all look like this. The slope is 2. And a hapless solution gets in there. What's it to do? Well, do you see that if a solution gets in that corridor, an integral curve gets in that corridor, no escape is possible? It's like a lobster trap. You know, the lobster can walk in, but it cannot walk out because the things are always going in. How could it escape? Well, it would have to double back somehow. And remember, to escape on the left side, it must be going horizontally. But how could it do that without doubling back first and having the wrong slope? The slope of everything in this corridor is positive, and to double back and escape it would, at some point, have to have negative slope. It can't do that. Well, could it escape on the right hand side? No, because at the moment when it wants to cross, it will have to have a slope less than this line, but all these spiky guys are pointing up. It can't escape that way either. So no escape is possible. It has to continue on there. But more than that is true. So solution can't escape. Once it's in there, it can't escape. Note on video: In the video above, all solutions are eventually trapped between the isoclines c=0 and c=2. These isoclines are sometimes called fences . Once solutions are trapped inside of the fence, they do not escape. ",
                                        "unit_id":"896e61f99bc648d6aa0a0bf4415ebeb3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a0d4ea8b64084327ba624ef6af5fb8e4",
                                "vertical_name":"9. Another worked example"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Direction field",
                                            "Partial derivative",
                                            "Differential equation",
                                            "White box",
                                            "Geometric features",
                                            "Integral curve",
                                            "Line element",
                                            "Continuous function",
                                            "Uniqueness theorem",
                                            "Nonlinear",
                                            "Join",
                                            "Called",
                                            "Order",
                                            "Uniqueness",
                                            "Theorem",
                                            "Ode",
                                            "Linear",
                                            "Asymptotic",
                                            "Mathematics",
                                            "Curve",
                                            "Touch",
                                            "Existence",
                                            "Word",
                                            "Point",
                                            "Line",
                                            "Slope",
                                            "Continuous",
                                            "Target",
                                            "Closer"
                                        ],
                                        "data":" And because there are two principles involved here that you should know, that help a lot at drawing these pictures. Principle number one is that two integral curves cannot cross at an angle. Two integral curves can't cross, I mean by crossing at an angle like that. I'll indicate what I mean by a picture like that. Now, why not? This is an important principle. Let's put that up at least in a white box. They can't cross, because if two integral curves are trying to cross-- well, one will look like this, because it's an integral curve, because it has this slope. And the other integral curve has this slope. And now they fight with each other. What is the true slope at that point? Well, the direction field only allows you to have one slope. If there's a line element at that point, it has a definite slope. And therefore, it cannot have both this slope and that one. It's as simple as that. So the reason is you can't have two slopes. The direction field doesn't allow it. Well, that's a big, big help, because if I know here's an integral curve and if I know that none of these other pink integral curves are allowed to cross it, how else can I do-- well, they can't escape. They can't cross. It's sort of clear that they must get closer and closer to it. I'd have to work a little to justify that, but I think nobody would have any doubt of it who did a little experimentation. In other words, all these curves join that little tube and get closer and closer to this line, y equals x. And therefore, without solving the differential equation, it's clear that all of these solutions, how do they behave? As x goes to infinity, they become asymptotic to-- they become closer and closer to-- the solution x. Is x a solution? Yeah, because y equals x is an integral curve. Is x a solution? Yeah, because if I plug in y equals x, I get what? On the right hand side, I get 1. And on the left hand side, I get 1. 1 equals 1. So this is a solution. Let's indicate that it's a solution. So analytically, we've discovered an analytic solution to the differential equation, namely y equals x, just by this geometric process. Now, there's one more principal like that, which is less obvious, which is less obvious, but you do have to know it. And so they're not allowed to cross. That's clear. But it's much, much, much less obvious that two integral curves cannot touch. That is, they cannot even be tangent. Two integral curves cannot be tangent. I'll indicate that by the word touch, which is what a lot of people say. In other words, if this is illegal, so is this. Can't have it. Without that, for example, I might feel that there would be nothing in this to prevent those curves from joining. Why couldn't these pink curves join the line y equals x? It's a solution. They just hitch a ride, as it were. The answer is they cannot do that, because they have to just get asymptotic to it ever, ever closer. They can't join y equals x, because at the point where they joined, you'd have that situation. Now, why can't you have this? That's much more sophisticated than this. And the reason is because of something called the existence and uniqueness theorem. Existence and uniqueness theorem, which says through a point x0, y0, that y prime equals f of x, y has only one and only one solution. One has one solution-- in mathematics speak, that means at least one solution. It doesn't mean it has just one solution, OK? That's mathematical convention. It has one solution-- at least one solution. But the killer is only one solution. That's what you have to say in mathematics if you want just one-- one and only one solution through the point x0, y0. So the fact that it has one, that's the existence part. The fact that it has only one is the uniqueness part of the theorem. Now, like all good mathematical theorems, this one does have hypotheses. So this is not going to be a course-- I warn you, those of you with theoretically inclined-- very rich in hypotheses, but you do have to-- the hypotheses for this one are that f of x, y should be a continuous function. Now, you know polynomial, sines, stuff like-- should be continuous in the vicinity of that point. That guarantees existence. And what guarantees uniqueness is the hypothesis that you would not guess by yourself. Neither would I. What guarantees the uniqueness is that also its partial derivative with respect to y should be continuous near x0, y0. We have already discussed the existence and uniqueness theorem for linear ODEs. Here is a version of the theorem that also works for first order nonlinear ODEs. Theorem 10.1&emsp;&emsp; Existence and uniqueness theorem for a first order (linear or nonlinear) ODE Consider a first order ODE y&prime;=f(x,y). For any point (x0,y0), if f(x,y) and &part;f&part;y are continuous near (x0,y0), then there is a unique solution to the first order DE through the point (x0,y0). As a consequence of uniqueness, we have the following two geometric features: Solutions curves cannot cross. Solutions curves cannot become tangent to one another; that is, they cannot touch. Use the Mathlet below to investigate the behavior of solution curves. Solution Target mathlet This is a game to find a solution curve through a specific point called the target. If you click on the target itself, the mathlet will draw the solution curve through it. When you click on another point, the mathlet will draw the solution curve through that point. You can try to aim for the solution through the target by clicking on other points than the target. You may notice in some examples, the consequences of uniqueness seem to fail. Why is that the case? ",
                                        "unit_id":"9326ebb6ec664d3f99ef8797a1a4efc0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4772ed13a8d94eb8a9518ccc17c7b27b",
                                "vertical_name":"10. Existence and uniqueness revisited"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Differential equation",
                                            "Standard form",
                                            "Human form",
                                            "Uniqueness theorem",
                                            "Existence theorem",
                                            "Equation",
                                            "Form",
                                            "Theorem",
                                            "Parabola",
                                            "Fail",
                                            "Ode",
                                            "Uniqueness",
                                            "Cx",
                                            "Apply",
                                            "Defined",
                                            "Existence"
                                        ],
                                        "data":" Problem 11.1&emsp;&emsp; Find the general solution to the ODE xy&prime;=y&minus;1. Solution: Using separation of variables, we have xdydx = y&minus;1 \u27f9 dyy&minus;1 = dxx(y&ne;1,x&ne;0) \u27f9 ln|y&minus;1| = ln|x|+c \u27f9 |y&minus;1| = C|x|(C&gt;0) \u27f9 y&minus;1 = &plusmn;Cx(C&gt;0) \u27f9 y = 1+Cx(C&ne;0). To bring back the solution y=1, we allow C=0 as well. Hide In the next video, Prof Mattuck will plot the solutions to the DE you just solved. Let's write this in a more human form. So that's y is equal to 1 minus cx. Good. All right, let's just plot those. So these are the solutions. Pretty easy equation, pretty easy solution method. Just separation of variables. What do they look like? Well, these are all lines whose intercept is at 1. And they have any slope whatsoever. So these are the lines that look like that. OK, now let me ask-- existence and uniqueness. Existence-- through which points of the plane does the solution go? Answer-- through every point of the plane, through any point here, I can find one and only one of those lines, except for these stupid guys here on the stalk of the flower. Here, for each of these points, there is no existence. There is no solution to this differential equation, which goes through any of these wiggly points on the y-axis, with one exception. This point is oversupplied. At this point, it's not existence that fails. Its uniqueness that fails. No uniqueness. There are lots of things which go through here. Now, is that a violation of the existence and uniqueness theorem? It cannot be a violation, because a theorem has no exceptions. Otherwise, it wouldn't be a theorem. So let's take a look. What's wrong? We thought we solved it, modulo putting the absolute value signs on the log. What's wrong with the answer? What's wrong is to use the theorem, you must write the differential equation in standard form, in the form in that green form I gave you. Let's write the differential equation the way we were supposed to. It says dy, dx equals 1 minus y divided by x. And now I see the right hand side is not continuous. In fact, not even defined when x equals 0, along the y-axis. And therefore, the existence and uniqueness is not guaranteed along the line x equals 0, the y-axis. And in fact, we see that it failed. Now, as a practical matter, the way existence and uniqueness fails in all ordinary life work with differential equations is not through sophisticated examples that mathematicians can construct, but normally because f of x, y will fail to be defined somewhere. And those will be the bad points. Thanks. Note on video: In the video above, there was misprint on the blackboard. The DE on the blackboard was xy&prime;=1&minus;y, but the intended one is xy&prime;=y&minus;1, which you just solved in the problem above. Although the two equations are different, both of them have difficulty of existence and uniqueness at x=0 because the denominator of the right hand side of each ODE in standard form is 0 at x=0. At the points where the hypotheses of the existence and uniqueness theorem fail, the conclusion of the theorem may also fail. Here is another example demonstrating this. Example 11.2&emsp;&emsp; Draw the solution curves for y&prime;=2yx. Solution: Here f(x,y)=2yx, which is undefined when x=0, so things might go wrong along the y-axis, and in fact they do go wrong. Solve the ODE by separation of variables: dydx =2yx(x&ne;0) dyy =2dxx(assuming also that y&ne;0) &int;dyy =&int;2dxx ln|y| =2ln|x|+C(for some constant C) y =&plusmn;e2ln|x|+C y =&plusmn;|x|2eC y =cx2(x&ne;0), where c:=&plusmn;eC, which can be any nonzero real number. To bring back the solution y=0, we allow c=0 as well. Several half parabolas as solution curves to y&prime;=2yx Weird behavior happens along x=0 where y&prime;=2yx is not even defined: Through any point (0,b) on the y-axis, there is no solution curve. The existence theorem does not apply. Geometrically, the parabolas become tangent at the origin. This would be ruled out by uniqueness if the uniqueness theorem applied. The full parabolas are not solutions; the solution curves are half parabolas defined for either all x&lt;0 or all x&gt;0. Both existence and uniqueness apply to every point outside the y-axis. The rest of the plane (outside the y-axis) is covered with good solution curves, one through each point, none touching or crossing the others. There is no connection between any half parabola on the left and any half parabola on the right. ",
                                        "unit_id":"63fc073eaf9b489abf9f3c574ba51081",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"426a672fd3f24da485bbd84556b9604e",
                                "vertical_name":"11. When Existence and Uniqueness fails"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear",
                                            "Nonlinear",
                                            "Dx",
                                            "Hyperbola",
                                            "Interval"
                                        ],
                                        "data":" 12. Interval of validityThe characteristics of solution curves that we have been discussing are true for both linear and nonlinear equations. But there is often a big difference between the domain of definition of solutions to linear and nonlinear DEs. For first order linear DEs of the form y&prime;=f(x,y)wheref(x,y)=q(x)&minus;p(x)y, recall that any solution defined at x=a is defined on the entire interval which contains a and on which p(x) and q(x) are continuous. (Note that p and q being continuous is equivalent to the hypothesis of the general existence/uniqueness theorem presented in this lecture, namely, that f and&part;f&part;y are continuous.) For nonlinear DEs, solutions do not have to be defined on the entire interval on which f and&part;f&part;y are continuous. Consider the following example. Example 12.1&emsp;&emsp; Draw the solution curve to y&prime;=y2 that satisfies the condition y(0)=1. What is the domain of definition of this solution curve? Solution: This DE is nonlinear, so our methods of solving linear DEs do no apply. We solve it by separation of variables: dydx =y2 y&minus;2dy =dx(y&ne;0) &int;y&minus;2dy =&int;dx y&minus;1&minus;1 =x+C(for some constant C) y =&minus;1x+C. The condition y(0)=1 leads to 1=&minus;10+C \u27f9 C=&minus;1, which gives the solution y=&minus;1x&minus;1=11&minus;xwhere&minus;&infin;&lt;x&lt;1. Therefore, here is the solution curve: The solution approaches &infin; as x&rarr;1&minus;. We say that the solution blows up at x=1. The domain of definition of the solution is &minus;&infin;&lt;x&lt;1. It is also called the interval of validity of the solution. The interval of validity of a solution is the largest interval on which it can be defined. The graph of y=11&minus;x consists of both branches of the hyperbola. But be careful , the full hyperbola is not a solution; only the branch through the point (x,y)=(0,1) is. For nonlinear DEs, the interval of validity of a solution cannot be read off from the equation. It can be much smaller than the domain on which the equation is defined. ",
                                        "unit_id":"01e42be4d9314e25825d1b3875cab565",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ce4bab21c04d40e4bc501a5748b0c64e",
                                "vertical_name":"12. Interval of validity"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Upper half plane",
                                            "Positive number",
                                            "Direction field",
                                            "Linear term",
                                            "Differential equation",
                                            "Right hand side",
                                            "Special case",
                                            "Limit circle",
                                            "Eventually",
                                            "Sketching",
                                            "Positive",
                                            "Equation",
                                            "Steeper",
                                            "Slope",
                                            "Couple",
                                            "Side",
                                            "Divided",
                                            "Negative",
                                            "Radius",
                                            "Prime",
                                            "Approach",
                                            "Specifically",
                                            "Line",
                                            "Case",
                                            "Draw",
                                            "Part",
                                            "Isocline",
                                            "Curve",
                                            "Pick",
                                            "Squared",
                                            "Start",
                                            "Nullcline",
                                            "Circle"
                                        ],
                                        "data":" Hi, everyone. Welcome back. So today, I'd like to tackle a problem on direction fields. So given a differential equation, y prime equals negative y divided by x squared plus y squared, we're asked to first sketch the direction field. And then secondly, given the curve that goes through y of 0 equal to 1, we're asked several questions about it. Why is y of x greater than 0 for x greater than 0? And then, why is y of x decreasing for x greater than 0? So I'll let you think about this for a moment, and I'll get back. Hi, everyone. Welcome back. OK. So to start off this problem, we're asked to sketch the direction field. Now, when asked to sketch a direction field, the first thing to do is to look at a couple isoclines. So what is an isocline? Well, it's a curve where the derivative y prime is equal to m, which is some constant. So what are the isoclines for this differential equation? Well, it would be minus y divided by x squared plus y squared equals m. Now, of particular interest, there's a very special isocline, which is usually the easiest to plot, and that's a nullcline. And this is just the special case where m is equal to 0. So what's the nullcline claim for this ODE? Well, when m is equal to 0, the only way that y prime can be 0 is when y is 0. OK. So the nullcline for this ODE is y equals 0. Now, for more generalized isoclines, we're left with this relation between x and y. And we can massage this expression to see exactly what the isoclines are. So specifically, I'm going to multiply through by x squared plus y squared. And I'm going to divide by m. And we see that we have a quadratic in x and y, and we have one linear term. So whenever we have a relation like this and we want to understand what it looks like, typically, the approach is just to complete the square. So I'm going to bring the 1 over m y to the other side of the equation. And I'm going to combine it with y squared to complete the square. And when we do this, we obtain the following equation. And we recognize this equation as the equation for a circle. Specifically, it's a circle that's centered at x is equal to 0 and y is equal to negative 1 over 2m. And in addition, the circle has a radius r squared is equal to 1 over 4m squared, which means its radius is 1 over 2 times the absolute value of m. OK. So why don't we take a look and plot a couple of isoclines? So as I mentioned before, typically, the first isocline that we should plot is the nullcline, which is m is equal to 0. And we know that this is y is equal to 0. So all along the line y is equal to 0, I'm just going to draw dashes that correspond to a slope of y is equal to 0. For the other isoclines, we just have to pick some values of m and start plotting. So I'll take the value m is equal to negative 1. And when m is equal the negative 1, we have a circle which is centered at 0 and 1/2, with radius 1/2. So here's 1/2. Here's 1. And at every point along this circle, we just draw a little slope of negative 1. So at every point along this curve, the solution has slope negative 1. Now, in addition, we can also get another circle, which is centered at negative 1/2. And this corresponds to the isocline of m is equal to plus 1. And every point on this circle has slope plus 1. Those should all be the same. And now we can pick some other values of m. So for example, m is equal to 2. If m is equal to 2, then we have a circle which is centered at negative 1/4 and radius 1/4. So it might look something like this. And m is equal to negative 2 might look something like this. So this is m is equal to negative 2. And this is m is equal to 2. And the slope on this curve is going to be steeper. It's going to be negative 2. And the same goes for this circle. And then lastly, I can draw a sketch of m is equal to 3 ha-- 3/4, which would go up something like this. Sorry. m is equal to negative 3/4. And that would have a slightly weaker slope, like this. So notice how the collection of isoclines are a family of circles that all are tangent to the origin. And in fact, if we think about it, the nullcline, the m equals 0 line, is, actually, in some sense, a limit circle where we take the radius and the center going to infinity. So as the circles become larger and larger, they tend to approach this line, y equals 0. So this concludes part 1. So for part 2, we're now asked several questions about the curve which goes through y of 0 is equal to 1. So I'll just sketch what this solution curve might look like. And it's going to start off at a slope of negative 1, and then it's going to hit these circles, which have a steeper slope. And then, eventually, it's going to go through the circles with the steeper slope and come back to the circle that has slope negative 1 and eventually decay outwards. So this is what the solution curve might look like. I'm just sketching this to set up parts 2a and 2b here. So why is y of x always bigger than 0 for x greater than 0? Well, we see that this solution curve stays in the upper half plane. And we note that y is equal to 0, which is the nullcline, is actually a very special curve. Not only is it the nullcline, but it's actually a solution to the differential equation. So if we look back at the differential equation, we see that y is equal to 0 has 0 derivative and the right-hand side of the differential equation is also 0. So this is not only a nullcline, but it's a solution to the differential equation. Note that this is extremely special. In no way does every nullcline have to be a solution to a differential equation. But in this case, we get lucky. Now, we know from the theory of ODEs that solution curves can't cross. So A solution curve that starts in the upper half plane can't cross another solution, which in this case is the y equals 0 curve. Hence, it must be bounded in the upper half plane for all x bigger than 0. The second part, why y of x decreasing for x greater than 0? Well, what we have to look at-- so I'll just write in here part 2. We have to look at the sign of y prime. Now, y prime is equal to negative y divided by x squared plus y squared. So as I've just argued, a solution that starts in the upper half plane and goes through the point y of 0 is equal to 1 stays in the upper half plane for all x bigger than 0. What this means is that the solution curve has y bigger than 0 for all x bigger than 0. So that means the numerator is always positive. The denominator is also always positive. So we have negative a positive number divided by a positive number. And so this quantity is always going to be less than 0. So for x bigger than 0, y prime is always going to be less than 0. Hence, the solution that starts at y of 0 is equal to 1 is going to monotonically decay it to y is equal to 0. So this concludes the problem. Now, just to recap. We were given an ODE. The standard approach when sketching direction fields is to pick a few nullclines or to pick a few isoclines, and specifically pick the nullcline, sketch the isoclines. And then if you're asked to plot any integral curves or solutions to the differential equation, you just simply connect the dots. So I'd like to conclude here. And I'll see you next time. ",
                                        "unit_id":"cda76a16d4e64bc0bd3a15badfadadf9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c0ec0bb272614712802ccda3d9b90edf",
                                "vertical_name":"13. Review"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e0058840ceaf414ea96086ffe5fddde4",
                        "sequential_name":"Recitation 12",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Direction field",
                                            "Straight line",
                                            "Critical points",
                                            "Big picture",
                                            "Derivative test",
                                            "Integral curve",
                                            "Discussion forum",
                                            "Critical point",
                                            "Draw",
                                            "Equation",
                                            "Forum",
                                            "Point",
                                            "Share",
                                            "Picture",
                                            "Separatrix"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. 18.03 Recitation 24, Fall 2014 Direction fields, Integral Curves, Isoclines, Separatrices 1. The following questions concern the differential equation dy dx = x &minus; 2y. You may want to use the Isoclines Mathlet to work through these problems. (a) Draw a big axis system and plot some isoclines, especially the nullcline. On each isocline, draw short line segments of the appropriate slope. Then use this information to plot a few solutions. Do this by hand first. Later you might want to refer to the Isoclines Mathlet. (b) One of the integral curves seems to be a straight line. Is this true? What straight line is it? (i.e. for what m and b is y = mx + b a solution?) (c) In general &ndash; for the general differential equation y 0 = F(x, y) &ndash; if a straight line is an integral curve, how is it related to the isoclines of the equation? What happens in our example? (d) Where are the critical points of the solutions of y 0 = x &minus; 2y? How many critical points can a single solution have? For what values of y0 does the solution y with y(0) = y0 have a critical point? When there is one, is it a minimum or a maximum? You can see an answer to this from your picture. Can you also use the second derivative test to be sure? It looks as though none of the solutions has a point of inflection (where the second derivative vanishes). Is this true? 1 2. The following questions concern the differential equation y 0 = y 2 &minus; x. (This is also on the Isoclines Mathlet, and was discussed in lecture.) (a) As in the previous problem, make a big picture of some isoclines and use them to sketch the direction field, and then sketch a few solutions. (b) A &ldquo;separatrix&rdquo; is a solution such that solutions above it have a fate (as x increases) entirely different from solutions below it. The equation y 0 = y 2 &minus; x exhibits a separatrix. Sketch it and describe the differing behaviors of solutions above it and below it. (You may need the applet to get a precise idea where the separatrix is.) ",
                                        "unit_id":"eabece41b3374f5dba047fb2d45dd8e8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f474a77be82443dc89f8ac0fbeeda631",
                                "vertical_name":"1. Isoclines"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Slope field",
                                            "Dropdown menu",
                                            "Straight line",
                                            "Integral curve",
                                            "Equation",
                                            "Ode",
                                            "Curve"
                                        ],
                                        "data":" Practice with isoclines, slope fields, and solution Curves Consider the ODE dydx=x&minus;2y On a piece of paper, draw by hand a big axis system and plot some isoclines, especially the nullcline. Use them to illustrate the slope field. Using the slope field, plot a few solutions. Then, to verify your drawing, choose the ODE from the dropdown menu in the mathlet below. Question 2.1&emsp;&emsp; For a general differential equation dydx=f(x,y), if a straight line is an integral curve, how is it related to the isoclines of the equation? See explanation If there is a straight line solution y=mx+b, then y&prime;(x)=m, and the straight line solution curve is (part of) the m-isocline. ",
                                        "unit_id":"166548858fee474e99b0ef1e6e6844ed",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"18d1d29c6d3a4e8d9043660c07b17870",
                                "vertical_name":"2. Mathlet Activity"
                            }
                        ]
                    },
                    {
                        "sequential_id":"cc7d64eba3bb4352b0a321228966fe8c",
                        "sequential_name":"13 Autonomous equations",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Bifurcation diagram",
                                            "Phase line",
                                            "Logistic equation",
                                            "Determine"
                                        ],
                                        "data":" Objectives Identify autonomous ODEs. Identify critical points . Use the phase line to determine stability of solutions to autonomous ODEs. Model population growth with the logistic equation and find qualitative behavior of solutions. Determine how varying parameters in a system can change behavior of solutions using a bifurcation diagram . ",
                                        "unit_id":"b4c031dabb7441c1bbb5738c3a6c8843",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"71767d9b77d34b739afccd31db804913",
                                "vertical_name":"1. Autonomous Equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Right hand side",
                                            "Left hand side",
                                            "Independent variable",
                                            "Standard form",
                                            "Limited resources",
                                            "Dependent variable",
                                            "Differential equation",
                                            "Logistic equation",
                                            "Autonomous ode",
                                            "Variable",
                                            "Autonomous",
                                            "Called",
                                            "Equation",
                                            "Depend",
                                            "Ode",
                                            "Kind",
                                            "Word",
                                            "Write",
                                            "Information"
                                        ],
                                        "data":" Today, once again, a day of solving no differential equations whatsoever. The topic is a special kind of differential equation which occurs a lot. It's one in which the right-hand side doesn't have any independent variable in it. Now since I'm going to use as the independent variable t for time, maybe it would be better to write the left-hand side to let you know that since you won't be able to figure out any other way what it is-- dy dt we'll write it this time-- dy dt is equal to-- and the point is that there is no t on the right-hand side. So there's no t. Well, there's a name for such an equation. Now some people call it time-independent. The only problem with that is that sometimes the independent variable isn't time. It's something else. We need a generic word for there being no independent variable on the right-hand side. So the word that's used for that is \"autonomous.\" So that means no independent variable on the right-hand side. It's a function of y alone, the dependent variable. Now your first reaction should be, oh, well, big deal. If there's no t on the right-hand side, then we can solve this by separating variables. So why is he even talking about it in the first place? So I admit that. We can separate variables. And what I'm going to talk about today is how to get critical-- how to get useful information out of the equation above how its solutions look without solving the equation. The reason for wanting to do that is, A, it's fast. It gives you a lot of insight. And the actual solution-- I'll illustrate one or two-- may, first place, take you quite a while. You may not be able, actually, to do the integrations to get an-- required in separation of variables to get an explicit solution. Or it might simply not be worth the effort of doing if you only want certain kinds of information about the solution. So the thing is, the problem is, therefore, to get qualitative information about the solutions without actually solving-- without actually having to solve the equation. An autonomous ODE is a differential equation that does not explicitly depend on the independent variable. If time is the independent variable, this means that the ODE is time-invariant. We will use time as the independent variable in this lecture. The standard form for a first order autonomous equation is dydt=f(y)(instead of f(t,y)) where the right hand side does not depend on t. As usual, we write y\u02d9=dydt. For example, the (nonlinear) equation y\u02d9=y&minus;3y2 is autonomous. We will find out later that this DE models population growth in an environment with limited resources. It is called a logistic equation. Why is this called autonomous? In ordinary English, a machine or robot is called autonomous if it operates without human input. A differential equation is called autonomous if its coefficients are not changed over time, such as might happen if a human adjusted a dial on a machine and let it run. ",
                                        "unit_id":"06d03aced6944419aa15898d9e530c76",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"863bc768c88a4e00a45746e9eeb8bc75",
                                "vertical_name":"2. Definition"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Slope field",
                                            "Autonomous equation",
                                            "Chain rule",
                                            "Time invariance"
                                        ],
                                        "data":" Here are two consequences of the time invariance of an autonomous equation: Each isocline (in the (t,y)-plane) consists of one or more horizontal lines. Solution curves (in the (t,y)-plane) are horizontal translations of one another. That is, if y(t) is a solution, then so is y(t&minus;a) for any a. For example, here is the slope field for y\u02d9=y(1&minus;y) with the (&minus;1)-isocline and a few solution curves: The (&minus;1)-isocline (orange) consists of 2 horizontal lines; Solution curves (blue) are horizontal translations of one another. Why are all translates of solutions also solutions? a non-geometric argument Let y(t) be a solution to y\u02d9=f(y). We verify that y(t&minus;a) is also a solution. Let u=t&minus;a, then ddty(t&minus;a)=ddty(u(t)) = dydududt(chain rule) = f(y(u))(1)=f(y(t&minus;a)). Therefore y(t&minus;a) is also a solution. ",
                                        "unit_id":"9eab7ea60c5d4355845e608ccd830ac1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8c995017e5bd4bf4881a569745712648",
                                "vertical_name":"3. First properties"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Autonomous equation",
                                            "Critical point",
                                            "Critical points",
                                            "Constant function",
                                            "Constant"
                                        ],
                                        "data":" Definition 4.1&emsp;&emsp; The values of y at which f(y)=0 are called the critical points or equilibria of the autonomous equation y\u02d9=f(y). If y0 is a critical point of an autonomous equation, then y=y0 is a constant (or horizontal, or equilibrium) solution, because the derivative of a constant function is 0. The 0-isocline of an autonomous equation consists of all the constant solutions. The constant solutions y=y0 and y=y1 (where y0 and y1 are critical points) divide the (t,y)-plane plane into \"up\" and \"down\" regions. Recall that for any first order DE, the 0-isocline divides the (t,y)-plane into &ldquo;up\" regions, where f&gt;0 and solutions are increasing, and &ldquo;down\" regions, where f&lt;0 and solutions are decreasing. For autonomous equations, the qualitative behaviour of all solutions is encoded by the critical points and the signs of f(y) in the intervals between the critical points. To find the qualitative behaviour of solutions to y\u02d9=f(y), we follow two steps: Find the critical points. That is, solve f(y)=0. Determine the intervals of y in which f(y)&gt;0 and in which f(y)&lt;0. These are intervals in which solutions are increasing and decreasing respectively. We will use these steps in the next two examples. ",
                                        "unit_id":"ae074626e6804b55bb80f37b6c66e10a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"747c959116a546ca8fc957f42c439a83",
                                "vertical_name":"4. Critical points"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Interest rate",
                                            "Critical points",
                                            "Autonomous equation",
                                            "Phase line",
                                            "Right hand side",
                                            "Initial conditions",
                                            "Critical point",
                                            "Differential equation",
                                            "Savings account",
                                            "Exponential curve",
                                            "Time rate",
                                            "Bank account",
                                            "Left arrow",
                                            "Continuous",
                                            "Behavior",
                                            "Line",
                                            "Rate",
                                            "Find",
                                            "Simply",
                                            "Negative",
                                            "Equation",
                                            "Point",
                                            "Bank",
                                            "Stealing",
                                            " ",
                                            "Plotting",
                                            "Function",
                                            "Faster",
                                            "Information",
                                            "Year",
                                            "Account",
                                            "Step",
                                            "Constant",
                                            "Time",
                                            "Left",
                                            "Start",
                                            "Axis",
                                            "Increase",
                                            "Curve",
                                            "Arrow"
                                        ],
                                        "data":" All right, so let's do our bank account. So y is money in the bank, in the account, in the bank account. r is the interest rate. Let's assume it's a continuous interest rate. All banks nowadays pay interest continuously. The continuous interest rate. So if that's all there is and money is growing at that-- the differential equation says that the rate at which it grows is equal to r, the interest rate, times the principal, the amount that's in the bank at that time. So that's the differential equation that governs that. Now, that's, of course, just the next solution is simply an exponential curve. There's nothing more to say about it. Now, let's make it more interesting. Let's suppose there's a shifty teller in the bank. And your money is being embezzled from your account at a constant rate. So let's let w equal-- or maybe e, but e has so many other uses in mathematics. w is relatively unused. w is the rate of embezzlement, thought of as continuous. So every day, a little bit of money is sneaked out of your account, because you're not paying any attention to it. You're off skiing somewhere and not noticing what's happening to your bank account. So since it's the rate-- it's the time rate of embezzlement-- I simply subtract it from this. It's not w times y, because the embezzler isn't stealing a certain fraction of your account. It's simply stealing a certain number of dollars every day, the same number of dollars being withdrawn from the accountant. OK, now of course, you could solve this. This separates variables immediately. You get the answer and there's no problem with that. But let's analyze the behavior of the solutions without solving the equation by using these two points. So I want to analyze this equation using the method of critical points. So the first thing I should do is-- so here's our equation-- is find the critical points. Notice it's an autonomous equation, all right, because there's no t on the right hand side. OK, so the critical points-- well, that's where ry minus w equals 0. In other words, there's only one critical point. And it occurs when y is equal to w/r. So that's the only critical point. Now, I want to know what's happening to the solution. So in other words, if I plot, I can right away, of course, negative values aren't particularly interesting here. There is definitely a horizontal solution. And it has the value-- it's at the height w/r. That's a solution. Question is, what do the other solutions look like? Now, watch how I make the analysis, because I'm going to use two now. So if this was step one, then step two-- what do I do? Well, I'm going to graph f of y. Well, f of y is ry minus w. What does that look like? OK, so here is the y-axis. Notice the y-axis is going horizontally, because what I'm interested in is the graph of this function. So that function-- what do I call the other axis? I'm going to use the same terminology that's used on the little visual that describes this. And that's dy. You could call this other axis of f of y-axis. That's not a good name for it. You could call it the dy, dt axis, because it's, so to speak, the other variable. That's not great either. But worst of all would be introducing yet another letter for which that we would have no use whatever. So let's think of it-- we're plotting now the graph of f of y. f of y is this function ry minus w. Well that's a line. Its intercept is down here at w. And so the graph looks something like this. It's a line. This is the line ry minus w. It has slope r. Well, what am I going to get out of that line? Just exactly this. Just this. What am I interested in about that line? Nothing other than where is it above the axis and where is it below. This function is positive over here. And therefore, I'm going to indicate that symbolically, by putting an arrow here. The meaning of this arrow is that y of t is increasing. See where it's the right-hand side of that last board? Y of t is increasing when f of y is positive f of y is positive here. And therefore, to the right of this point, it's increasing. Here, to the left of it, f of y is negative. And therefore, over here, it's going to be decreasing. What point is this, in fact? Well, that's where it crosses the axis. That's exactly the critical point, w/r. Therefore, what this says is that a solution, once it's bigger than y/r, it increases. And it increases faster and faster because this function is higher and higher. And that represents the rate of change. So in other words, once a solution-- let's say a solution starts over here at time 0. So this is the t-axis and here is the y-axis. So now I'm plotting solutions. If it starts at t equals 0, above this line, that is starts with the value w/r, which is bigger than 0, the value bigger than w/r, then it increases and increases faster and faster. If it starts below that, it decreases and decreases faster and faster. Now, in fact, I only have to draw two of those. Because what do all others look like ? They're translations. All the other curves look exactly like those. They're just translations of them. This guy, if I start closer, it's still going to decrease. Well, that's supposed to be a translation. I don't know. Maybe it is. So these guys look like that. Phase line We repeat the example in the video to introduce phase lines explicitly. Recall the first order autonomous DE in the video: y\u02d9=f(y)=ry&minus;w(r,w&gt;0). The variable y models the amount of money (in dollars) in a savings account; r is the interest rate (in units of year&minus;1); and w (in dollars per year) is the rate of money being stolen out of the account. To find qualitative behavior of the solutions, we follow the two steps described before. Find the critical points. f(y)=ry&minus;w=0 \u27f9 y=wr. So y=w/r is the constant solution. Determine the intervals of y in which f(y)&gt;0 and in which f(y)&lt;0. One way to do this is by graphing f(y). For y&gt;w/r, f(y)&gt;0 and any solution y(t) is increasing; for y&lt;w/r, f(y)&lt;0 and any solution y(t) is decreasing. We can summarize the above information by adding arrows on the (horizontal) y-axis as in the video. The critical points divides the y-axis into intervals. We place a right arrow (in the +y direction) to each interval of y where f(y)&gt;0 and any solution y(t) is increasing. Similarly, we place a left arrow (in the &minus;y direction) to each interval where f(y)&lt;0 and solutions are decreasing. The y-axis with this extra information is called a phase line. Definition 5.1&emsp;&emsp; The phase line of a first order autonomous DE y\u02d9=f(y) is a plot of the y-axis with all critical points and with an arrow in each interval between the critical points indicating whether solutions increase or decrease In our example, the phase line is: Phase line of y\u02d9=ry&minus;w(r,w&gt;0) If the phase line is drawn vertically, the qualitative behaviour of solution curves can be read directly from it, as you see in the diagram below. Vertical phase line (left); Solution curves on the ty-plane (right) Example 5.2&emsp;&emsp; Use the phase line above to determine what happens to solutions with different initial conditions as time passes. Solution: If y(0)=w/r, which is the critical point, then the solution will be y(t)=w/r for all t. This corresponds to the constant solution shown on (t,y)-plane in the figure above. If y(0)&gt;w/r, then the up arrow (in the positive y direction) on the phase line tells us that as t increases, y(t) increases and will tend to +&infin;. This corresponds to a solution curve above the horizontal solution, such as the one shown on the (t,y)-plane above. If y(0)&lt;w/r, then the down arrow (in the negative y direction) on the phase line says that as t increases, y(t) decreases and will tend to &minus;&infin;. This corresponds to a solution curve below the horizontal solution, such as the one shown on the (t,y)-plane above. ",
                                        "unit_id":"4cb5a0d8dfba4cd1a67b8b1d7d35c146",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"06102df180d84d00a223915d01391f37",
                                "vertical_name":"5. First example"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Birth rate",
                                            "Growth rate",
                                            "Logistic growth",
                                            "Logistical growth",
                                            "Population growth",
                                            "Death rate",
                                            "Linear function",
                                            "Constant function",
                                            "Differential equation",
                                            "Logistic equation",
                                            "Autonomous equation",
                                            "Dy",
                                            "Rate",
                                            "Function",
                                            "Simplest",
                                            "Simple",
                                            "Population",
                                            "Equation",
                                            "Called",
                                            "Minus",
                                            "Constant",
                                            "Dt",
                                            "Model"
                                        ],
                                        "data":" OK. Next example-- the logistic equation. Some of you have already solved this in recitation and some of you haven't. This is a population equation. This is the one that section 7.1 and section 1.7 is most heavily concerned with, this particular equation. The derivation of it is a little vague, so it's an equation which describes how population increases. And the one minute -- the population of behavior of some population-- let's call it y is the only thing I know to call anything today. But of course your book uses capital P for population to get you used to different variables. Now, simple, the basic population equation runs dy, dt. There's a certain growth rate-- let's call it ky. So k is what's called the growth rate. Sometimes it's talked about in terms of birth rate. But it's the net birth rate. It's the rate at which people or bacteria or whatever are dying, are being born minus the rate at which they're dying. So it's a net birth rate. But let's just call it the growth rate. Now, if this is the equation, we can think of this-- if k is constant, that's what's called simple population growth. And you're all familiar with that. Logistical growth allows for a slightly more complex situation. Logistic growth says that calling k a constant is unrealistic, because the earth is not filled entirely with people. What stops it from having unlimited growth? Well, the resources, the food that the organism has to live on gets depleted. And in other words, that the growth rate declines as y increases. As the population increases, one expects the growth rate to decline, because resources are being used up. And they're not indefinitely available. Well, in other words, we should replace k by a function with this behavior. What's the simplest function which declines as y increases? The simplest choice-- and if you are ignorant about what else to do, stick with the simplest. At least you won't work any harder than you have to-- would be to take k equal to the simplest declining function of y there is, which is simply a linear function, a minus by. So if I use that as the choice of the declining growth rate, the new equation is dy, dt equals-- here's my new k. The y stays the same. So the equation becomes a minus by the quantity times y, or in other words ay minus by squared. This equation is what's called the logistic equation. It has many applications, not just to population growth. It's applied to the spread of disease, the spread of a rumor, the spread of many things. The simplest model for population y(t) is the ODE y\u02d9=ky for a positive growth constant k, which is the birth rate minus the death rate of the population. This DE says that the rate of population growth is proportional to the current population, and we know the solutions to be y(t)=Cekt. But realistically, if the population y(t) gets too large, then because of competition for food and space, the population will grow less quickly. One simple way to model this is to adjust the growth rate from a constant function of y to a linearly decreasing function of y. That is, let the growth rate be k(y)=a&minus;by(a,b&gt;0constants). With the corrected growth rate, the DE becomes y\u02d9 = k(y)y = (a&minus;by)y=ay&minus;by2(a,b&gt;0). This differential equation is called the logistic equation . It is a nonlinear, autonomous equation. ",
                                        "unit_id":"635a347196df4381820c7c104c18d584",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f6963697fbb44b86b9f59262dec7a89a",
                                "vertical_name":"6. Logistic equation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase line",
                                            "Partial fractions",
                                            "Critical points",
                                            "Initial conditions",
                                            "Special case",
                                            "Magic number",
                                            "Critical point",
                                            "Logistic equation",
                                            "Positive numbers",
                                            "Quadratic function",
                                            "Find",
                                            "Equal",
                                            "Axis",
                                            "Parabola",
                                            "Number",
                                            "Information",
                                            "Minus",
                                            "Ll",
                                            "Solved",
                                            "Equation",
                                            "Point",
                                            "Start",
                                            "Put",
                                            "Positive",
                                            "Function",
                                            "Time",
                                            "Curve",
                                            "Region"
                                        ],
                                        "data":" OK. Now, those of you who've solved it, actually solved it, know that the solution, the explicit solution, involves-- well, you separate variables. But you'll have to-- you'll have to use partial fractions. Ugh. I hope you love partial fractions. You're going to need them later in the term, but I can avoid them now by not solving the equation explicitly. And anyway, you get a solution, which I was going to write on the board for you, but you can look it up in your book. It's unpleasant enough looking to make you feel that there must be an easier way, at least to get the basic information out. OK. Let's see if we can get the basic information out. What are the critical points? Well, this is pretty easy. a, I want to set the right hand side equal to 0. So I'm going to solve the equation. I can factor out a y. It's going to be y times a minus b-y equals 0. And therefore the critical points are where y equals 0, that's one. And the other factor is when this factor is 0. And that happens when y is equal to a over b. So there are my two critical points. OK. What does-- let's start drawing pictures of solutions. Let's put in those right away. OK. The critical point, 0, gives me a solution that looks like this. And the critical point a over b, those are positive numbers, so that's somewhere up here. So those are two solutions, constant solutions. In other words, if the population by dumb luck started at 0, it would stay at 0 for all time. That's not terribly surprising. But it's a little less obvious that if it starts at that magic number a over b, it will also stay at that magic number for all time, without moving up or down or away from it. Now the question is therefore, what happens in-between. So for the in-between, I'm going to make that same analysis that I made before. And it's really not very hard. Look. So here is my dy dt axis, I'll call that y prime, OK? And here's the y-axis. So I'm now doing step two. This was step one. OK. The function that I want to graph is this one, ay minus by squared, or in factored form, y times a minus by. Now this function we know has a 0. It has a 0 here. And it has a 0 at the point a over b. At these two critical points, it has a 0. What's it's doing-- what is it doing in between? Well, in between it's a parabola. It's a quadratic function. It's a parabola. Does it go up or does it go down? Well, when y is very large, it's very negative. That means it must be a downward opening parabola. And therefore this curve looks like this. So I'm interested in knowing where is it positive and where is it negative. Well, it's positive here, for this range of values of y. Since it's positive there, it will be increasing there. Here it's negative, and therefore will be decreasing. Here it's negative, and therefore dy dt will be negative also. And therefore the function y will be decreasing here. So how do these other solutions look? Well, we can put them in. I'll put them in in white, OK? Cause I think this has got to last till the end of the term. So how are they doing? They're increasing in between the two curves. They're not allowed to cross either of these yellow curves. But they're always increasing. Well, if they're always increasing, they must-- well, it starts here and increases, it must-- and I'm not allowed to cross. It must do something like that. This must be a translation of it. In other words, the curves must look like that. Those are supposed to be translations of each other. I know they aren't, but use your imaginations. What's happening above? So in other words, if I start with a population anywhere bigger than 0 but less than a over b, it increases to asymptotically to the level a over b. What happens if I start above that? Well, then it decreases to it because this way, for values of y bigger than a over b, it decreases as time increases. So these guys up here are doing this. And how about the ones below the axis? Well, they have no physical significance. But let's put them in any way. What are they doing? They are decreasing away from 0. So these guys don't mean anything physically, but mathematically they exist as solutions. They're going down like that. Example 7.1&emsp;&emsp; Describe qualitatively the solutions to y\u02d9=3y&minus;y2. (This is a special case of the logistic equation y\u02d9=ay&minus;by2.) Solution: To find qualitative behavior of the solutions, we follow the two steps described before: Find the critical points by solving f(y)=0. f(y)=3y&minus;y2=0 \u27f9 y=0ory=3. So the constant solutions are y(t)=0 and y(t)=3. Determine the intervals of y in which f(y)&gt;0 and in which f(y)&lt;0. To do this, we can graph the function f(y) as in the video, or simply test one point in each region. Since f(&minus;1)&lt;0, the region y&lt;0 is a down region. Since f(1)&gt;0, the region 0&lt;y&lt;3 is an up region. Since f(4)&lt;0, the region y&gt;3 is a down region. We can summarize the above information by a phase line: Problem 7.2&emsp;&emsp; Sketch some solutions to the equation y\u02d9=3y&minus;y2. Make sure you include at least one of each type. Solution: Phase line drawn vertically (left); Sample solution curves on (t,y)-plane (right) There are five fundamental solutions, depending on the initial conditions: If y(0)=0, the solution will be y(t)=0 for all t. If y(0)=3, the solution will be y(t)=3 for all t. If 0&lt;y(0)&lt;3, y(t) will increase as t increases. It tends to 3 as t&rarr;+&infin; and tends to 0 as t&rarr;&minus;&infin;. If y(0)&gt;3, then y(t) decreases as t increases, tending to 3 without reaching 3. If y(0)&lt;0, then y(t) decreases, and y(t)&rarr;&minus;&infin; as t grows. Hide Food for thought: For a solution y(t) with 0&lt;y(t)&lt;3, is it possible that y(t) tends to a limit less than 3? Answer: No. If y(t) tends to any number a between 0 and 3, then as the solution curve levels off while approaching a, y\u02d9(t) must tend to 0. But we know that f(y)&gt;0 for all 0&lt;a&lt;3, so this is impossible. ",
                                        "unit_id":"5a56a3d2f32841749c1146b30c082820",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"be6612c7812d4196a0fd9096b29c3e9b",
                                "vertical_name":"7. Qualitative behavior"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Critical point",
                                            "Phase line",
                                            "Critical points",
                                            "Long term",
                                            "Point",
                                            "Stable",
                                            "Unstable",
                                            "Starting",
                                            "Long",
                                            "Word",
                                            "Suppose",
                                            "Called",
                                            "Move",
                                            "Arrow",
                                            "Approach",
                                            "Behavior",
                                            "Constant",
                                            "Curve"
                                        ],
                                        "data":" Now you notice from this picture that there are-- that even though both of these are constant solutions, they have dramatically different behavior. This one, this solution is the one that all other solutions try to get-- approach as time goes to infinity. This one, the solution 0, is repulsive as it were, Any solution that starts near 0-- if it starts at 0, of course, it stays there for all time-- but if it starts just a little bit above 0, it increases to a over b. This is called a stable solution because everybody tries to get closer and closer to it. This is called-- it's an-- 0 is also a constant solution, but this is an unstable solution. And now usually, solution is too general a word. I think it's better to call it a stable critical point, and an unstable critical point. But of course, it also corresponds to a solution. So critical points are not all the same. Some are stable and some are unstable. And you can see which is which just by looking at this picture. If the arrows point toward them, you've got a stable critical point. If the arrows point away from them, you've got an unstable critical point. Now there is a third possibility. What if-- I think we better address it, because otherwise you're going to sit there wondering, hey, what did he mean by that? It could look like-- suppose it looked like this. Suppose it were just tangent. So, well, this is the picture of that curve, the pink curve. What would the arrows look like then? Well, what would the arrows look like then? Well, since they're positive-- it's always positive, the arrow goes like this. And then on this side it also goes in the same direction. So is this critical point stable or unstable? It's stable if you approach it from the left. So how do the-- in fact do the curves-- how would the corresponding curves look? Well, there's our long term solution that corresponds-- this corresponds to that point. Let's call this a and then this will be the value a. If I start below it. I rise to it. If I start above it, I leave it. I increase. So if I start above it, I do this. Well now that's stable on one side, and unstable on the other. And that's indicated by saying it's semistable. Brilliant word. Wonder how long it took to think that one up. Semistable critical point. Stable on one side, unstable on the other depending whether you start below it or-- and of course, it could be reversed. If I'd drawn the picture the other way, could have approached it from the top and left it from below. You get the idea of the behavior. A critical point x=a is called stable if solutions starting near it move towards it, unstable if solutions starting near it move away from it, semistable if the behavior depends on which side of the critical point the solution starts. or Example 8.1&emsp;&emsp; Phase line (left) and solutions curves (right) of y\u02d9=3y&minus;y2 In the previous example of y\u02d9=3y&minus;y2,, the critical points are 0 and 3. The phase line shows that 0 is unstable, and 3 is stable. Solutions move away from the unstable critical point 0 and approach the stable critical point 3 as t increases, as shown in the figure above. Remark 8.2&emsp;&emsp; A solution corresponding to an unstable critical point is an example of a separatrix because it separates solutions having very different fates. In the example above, y=0 is a separatrix. A solution starting just below 0 tends to &minus;&infin;, while a solution starting just above 0 tends to 3: very different fates! Summary: steps for understanding solutions to y\u02d9=f(y) qualitatively. Find the critical points by solving f(y)=0. These divide the y-axis into open intervals. Determine the intervals of y in which f(y)&gt;0 and f(y)&lt;0, by either graphing f(y) or evaluating f(y) at one point in each interval. Draw the phase line, which consists of a line marked with &minus;&infin;, the critical points, +&infin;, and arrows between these. Solutions starting at a critical point are constant. Other solutions tend to the limit that the arrow points to as t increases. As t decreases, solutions tend to the limit that the arrow originates from. ",
                                        "unit_id":"75f689fcda564d3295afffaf623655b9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"de8b451f7c914e9db3ae2b845442267a",
                                "vertical_name":"8. Stability of critical points"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Exponential growth",
                                            "Critical points",
                                            "Differential equation",
                                            "Logistic equation",
                                            "Vertical axis",
                                            "Straight lines",
                                            "Upper plane",
                                            "Death rates",
                                            "Critical point",
                                            "Autonomous equation",
                                            "Straight line",
                                            "Phase line",
                                            "Immigration rate",
                                            "Left side",
                                            "Tend",
                                            "Rate",
                                            "Side",
                                            "Affect",
                                            "Behavior",
                                            "Ax",
                                            "Autonomous",
                                            "Point",
                                            "Versus",
                                            "Line",
                                            "Slope",
                                            "Plot",
                                            "Country",
                                            "Move",
                                            "Work",
                                            "Forever",
                                            "Left",
                                            "Time",
                                            "Dot",
                                            "Immigration",
                                            "Year",
                                            "Ll",
                                            "Back",
                                            "Part",
                                            "Positive",
                                            "Negative",
                                            "Population",
                                            "Sketch",
                                            "Case"
                                        ],
                                        "data":" Hi everyone. Welcome back. OK, so in this problem, I'd like to take a look at autonomous equations and phase lines. And specifically we're going to take a look at this simple equation-- x-dot equals a x plus 1, which models births and death rates, and a fixed replenishment rate for a population. So in this case, the variable a represents births minus deaths in a population, and one represents the constant input of new creatures. OK, so for part A, we're asked to find intervals of the variable a, which determine the longtime stability of the population. And then secondly, for each typical case of a in the first part of the problem, we're asked to sketch a phase line and then also to sketch the solution x of t versus t. OK. So I'll let you take a look at this problem, and I'll be back in a moment. Hi everyone. Welcome back. OK. So the problem we're looking at is x dot equals ax plus 1. And as mentioned in the title of the problem, this is an autonomous equation, which means that the right hand side is not a function of time. The right hand side only depends on x. And for these types of problems, the critical points or the place that the points at which the right hand side vanish tend to determine the longtime characteristics of the solution. So we can get a handle on what intervals of a determine the longtime stability by sketching what x dot versus x might look like. And we see that if a is positive, this represents a line with a positive slope a. So on the right hand side of the intercept with the x-axis, x dot is positive, which means that when the line goes through the point x dot equals zero, the term ax plus 1 is going to be positive. I'll just point out that this point right here is when x dot is equal to zero. And this happens when x is equal to negative 1 over a. So this point right here is negative 1 over a. And when x is below negative 1 over a, x dot is negative, which means that solutions will want to move away from the point negative 1 over a. What other qualitative behavior could we have? Well, when a is below 0, when a is less than zero, the slope of this curve is going to be negative. So I'll plot again, x dot versus x. And again, the intercept is going to be at negative 1 over a. However, when x is above the critical point, x dot is negative. So solutions will want to tend to move back towards negative 1 over a. And when x is below the critical point, we see that x dot is in the upper plane, which means it's positive. So solutions will want to grow. So we have two cases right now. One is when a is bigger than 0, one is when a is less than zero. And then, of course, there's going to be an intermediate point, which is when a is equal to 0. And in this case, the curve x dot versus x is just going to be a straight line that goes through 1. OK. So this gives us three regions that will determine the long time behavior. So the three regions are a equals zero, a less than zero, and then a bigger than zero. OK. So this concludes part A. And for part B, we're asked to investigate the behavior of each of these three regions by constructing a phase line, and then secondly, by sketching a solution, or several solutions. OK. So for part B, let's take a look at the case when a is bigger than zero first. And I'm just going to pick one value of a. I'll just pick a is equal to 1 to work things out concretely. And we're asked to sketch a phase line, so I'll plot the phase line x here. And we know from the ODE that the critical point occurs at negative 1 over a. So in this case, there's going to be one critical point, and it's going to be at negative 1. Now, when x is bigger than negative 1, we've already seen that x dot is going to be positive. So when x is bigger than negative 1, in this region, x dot is positive. So above negative 1, x dot is positive, which means that if a solution starts at a point above negative 1, it's going to constantly increase . Forever And likewise, if it's below negative 1, it's going to decrease forever. So this is x dot is negative in this region. And of course, x dot is zero at the critical point, which means if we start at the critical point, we stay there for all time. OK. So let's sketch some solutions. So whenever I have to sketch solutions for a phase line, the first solution I always plot is going to be the critical point. So note that x equals negative 1 solves the differential equation. So x equals a critical point always solves the differential equation. So that means when x is equal to negative 1, we solve the differential equation. When x is bigger than negative 1, we obtain exponential growth. And when x is less than negative 1, we have exponential growth in the opposite direction. So this is sometimes said to be an unstable critical point, because any small perturbation away from negative 1 will make the solution diverge. Also note that each one of these curves-- or once I have one of these curves, I can generate all the others by just picking it up and shifting it over. And the reason this works is because the original equation is autonomous, meaning that the right hand side didn't depend on time. So whenever you have an autonomous equation, when you sketch one solution, you can always get a family of others by picking up that solution and just shifting it to the right and to the left. Now, when a is below zero, I'll just pick the value of a equals negative 1. We have a critical point at 1. And in this case, the arrows are going to point towards 1 like this. And again, I can sketch some curves. So I'll first draw the solution when x is equal to 1. And in this case, solutions are going to converge towards the critical point. And in this case, we say that the critical point x equals 1 is stable. And that's because any small perturbation makes the solution come back-- any small perturbation in the solution will eventually just come back to the critical point at x equals 1. OK. And now lastly, we have the third case, which is when a equals zero. And in this case, there are no critical points. In fact, x dot was equal to 1. So x dot is positive for all values of x. So our phase line is just a line with arrows. And in this case, if I were to sketch some solutions-- I'll just draw my axes, x and t-- there are no critical points. X is just increasing. So the solutions are going to look something like this. They're just going to be straight lines, a family of straight lines. OK. So we've just sketched some phase lines, and we sketched several solutions for each phase line. We've seen how the critical points and the arrows around the critical points affect the longtime behavior of the solutions. And this is typically the process that you go through when looking at autonomous equations. You always first, a-- find the critical points, then b-- find the regions between the critical points, and figure out if x dot is either positive or negative. And then that automatically gives you the phase line. Once you have the phase line, you can always just sketch a family of solutions. So I'd like to conclude here, and I'll see you next time. Note on video: In the first graph on top at 2:15, David draws a line of positive slope, but the x-intercept should be on the left side, not the right side, of the vertical axis (as he discovered later that the x-intercept is &minus;1/a where a&gt;0). However, this does not affect the character of the phase line. Using the analysis from the video, we can predict the effect of immigration on the population of a country. Example 9.1&emsp;&emsp; The population of a wealthy and sparsely populated country is currently at 7 million and is declining from low birth rate. The natural growth rate is a=&minus;0.01 (in year&minus;1). What will be the effect on the population If the country admits 10,000 immigrants per year? Solution: Let x(t) (in ten thousands) be the population at time t (in years). Since the country is sparsely populated and wealthy, we can assume resources are unlimited. In other words, the quadratic term in the logistic equation is negligible. Therefore, without immigration, the population can be modeled by x\u02d9 = ax=&minus;1100x. With immigration, the rate of change of population x\u02d9 must include an additional term: x\u02d9 = &minus;1100x+1, where 1 (in ten thousand immigrants per year) is the immigration rate. This DE is the same as in the video with a=&minus;1/100. Therefore, as in the video, the phase line is This means that no matter what the initial population is, the population will approach the equilibrium of &minus;1a=100 (in ten thousands), that is, 1 million people. The current population of the country is 7 million; so the population will be decreasing while tending to 1 million. ",
                                        "unit_id":"c4ac0808f69247d18c8c83b41aba1a7c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5fed3153655443d3ae5e3e38de27f8aa",
                                "vertical_name":"9. Worked Example"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase line",
                                            "Slope field",
                                            "Bifurcation diagram",
                                            "Autonomous"
                                        ],
                                        "data":" 10. Phase line concept problemsThe mathlet below shows the slope fields, solution curves, phase lines and bifurcation diagrams for different families of autonomous DEs. To consider a harvesting model similar to the previous example, set the autonomous function to f(y)=y(1&minus;y)&minus;a, and change the harvesting rate by changing the parameter a. You can hide the slope field, the phase line, the bifurcation diagram and the plot of f(y) by clicking the respective boxes. Remark: Observe that the direction fields are independent of time. This is the most important property of autonomous equations, and it is exactly for this reason that the phase line is able to capture qualitatively the behavior of all solution curves. A phase line makes sense only if the DE is autonomous! ",
                                        "unit_id":"b98e32fe411743cc9f5535d91ca95888",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b7b49d26e9e34ee0961dcacc4987f3ad",
                                "vertical_name":"14. Phase line and bifurcation diagram mathlet"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Stable equilibria",
                                            "Bifurcation diagram",
                                            "Phase line",
                                            "Horizontal axis",
                                            "Pythagorean theorem",
                                            "Square root",
                                            "Independent variable",
                                            "Friction coefficient",
                                            "Vertical axis",
                                            "Differential equation",
                                            "Half plane",
                                            "Mathematical model",
                                            "Physical system",
                                            "Negative sign",
                                            "Position",
                                            "Equilibrium",
                                            "Draw",
                                            "Length",
                                            "Force",
                                            "Ll",
                                            "Squared",
                                            "Motion",
                                            "Due",
                                            "Call",
                                            "Equation",
                                            "Attached",
                                            "Minus",
                                            "Denote",
                                            "Plane",
                                            "Model",
                                            "Pointing",
                                            "Branch",
                                            "Wire",
                                            "Acting",
                                            "Positive",
                                            "System",
                                            "Move",
                                            "Negative",
                                            "Arrow",
                                            "Spring",
                                            "Write",
                                            "Bead"
                                        ],
                                        "data":" In this video, we'll consider a physical system and draw the bifurcation diagram based on how it behaves. Then we'll write down a mathematical model for the system that would give us quantitative insight if we later decided to put it into Matlab or Mathematica. So let's get started. Our system is made up of a bead that has a horizontal wire running through it. This wire is attached to the walls on either end, and there's also a spring attached to the bead. The spring is fixed on the ground here, and we're going to assume that the height of the bead is given by h-- yeah, the height of the bead and the wire is given by h-- and that x is the displacement of the bead from the center, or the displacement of the bead from where the spring is fixed. So our question is, what are the equilibrium positions of the bead? And we'd also like to know, what are the stability of those equilibrium positions? So let's suppose that we can change the position of the wire, either up or down, so that we can change h. And the equilibrium positions will be dependent upon the relationship between h and the relaxed length of the spring. The relaxed length of the spring is just the length at which the spring is being neither stretched nor compressed. So since we want to think about equilibrium positions as a function of some parameter, we're going to be drawing a bifurcation diagram. And this will be given in the h-x plane, where h is on the horizontal axis and x is on the vertical axis. So it may seem a little bit strange to have x on the vertical axis, but the reason for that is that h is actually the parameter here that we're varying. So it's more of an independent variable, and we want to see how that affects x. So like I said, this is going to depend on the relationship between h and the relaxed length of the spring. So let's give that length a name and call it L. In this case, we're only considering positive values of h. So I'm only in the right half plane. And let's say L is somewhere here. Now, if h is greater than L, that means we're stretching the spring because we're moving it beyond its relaxed length. And that would look something like this. We have a tall wire, and the bead is at the center, and the spring is being stretched. So this is h greater than L. If we tried to nudge this bead in either direction, the tension in the spring would cause the bead to remain at the position x equals 0. So that means that x equals 0 is a stable equilibrium position. So let's draw a phase line for what this might look like. We're choosing an h that's greater than L. And we said that x equals 0 is a stable equilibrium position, so our phase line would look like this. If I drew all the phase lines for values of h that are greater than L, that is, all the phase lines in which we're stretching the spring, we'd have a solid line of stable equilibria position here at x equals 0. But what happens when h is less than L? Well, when that happens we are actually compressing the spring like this. So this is h less than L. If we do this carefully, we can keep the bead at x equals 0 here. But if we nudge the bead in either direction, it's going to move along the wire in the direction that we nudge it. So if we nudge it to the right, it would end up here, or to the left, it would end up here. And it will move until the spring has reached its relaxed length, so there's no more outward spring force being applied. So if we draw phase line for this scenario, we're choosing an h less than L. And x equalling 0 has now become an unstable equilibrium position because any perturbation causes the bead to move away from that position. So here, the arrows would be pointing away. But we've also gained two other possible stable equilibrium positions, namely, 1 for positive x and 1 for negative x, so this would be the phase line for this particular h value. Now, I want to think about drawing all of the phase lines for h being less than L. And notice that if I decrease h even more, the bead will have to move farther along the wire in order for the spring to reach its relaxed length. So as I decrease h, x is either becoming more positive-- so you have a curve like this-- or more negative. So drawing all the phase lines for h being less than L, I recover this branch of stable equilibria, this branch of stable equilibria, and a branch of unstable equilibria at x equals 0. Now, we can actually write down what this curve is mathematically by considering the system when the bead is at equilibrium. So that would form a triangle with a height of h. The bead is here, so this side has a length of x. And the spring at equilibrium is at its relaxed length, L. So using the Pythagorean theorem, we can write down that x is given by plus or minus the square root of L squared minus h squared. And that determines this curve here, where x is now on the vertical axis. And we have this sideways parabola, or you can think of it as a semi-circle, given by this equation, where the positive is the top branch and the negative is the bottom branch of equilibria. Now, when you draw bifurcation diagram, you won't include all of the phase lines for each value of h. Instead, you can notice that the bifurcation diagram is divided into regions based on the equilibrium branches. So we have a region here, here, here, and here. In this region, all of the phase lines will be pointing downwards, and so we replace this portion of the phase lines by a downwards arrow. Similarly, in this region, all of the phase lines will be pointing upwards, so we have an upwards arrow. In this region, they'll be pointing downwards. We have a downwards arrow. And in this region, they'll be pointing upwards. So a bifurcation diagram gives us all the possible equilibrium positions and their stability. So we have curves of equilibria and arrows depicting their stability. Now, this system was somewhat simple as a physical system, as well as geometrically. So we were able to draw this just by reasoning through it. Typically, you'll need to write down the equations of motion and find the equilibria by setting the derivative equal to 0. So we'll continue going through that in the next section of this video, and I'll erase these boards and come back. Now we're going to write down a differential equation that models the horizontal motion of the bead by considering the forces that are acting on the bead. Then we'll rederive the bifurcation diagram. There are two forces that are acting on the bead. The first is a friction force. And this is due to the bead sliding along the wire and feeling friction from the wire. I'm going to denote this force by lowercase f. And it's proportional to the velocity of the bead x dot. There's a negative sign because friction acts against this bead's motion. And b is called the friction coefficient and is greater than 0. The second force acting on the bead is the force due to the spring. I'll call this force F sub s. Now we're only interested in the horizontal motion of the bead, and so we're only interested in the horizontal component of this force. For the horizontal component, I'll denote this F sub x. Now I'll leave it to you to find the expression for the horizontal component of the spring force. And then we'll be able to write down our differential equation. ",
                                        "unit_id":"b8114e98bb4d45cfb8e15419d83910c2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0d95615e4c2e4a8eb4b4e55fa14380e8",
                                "vertical_name":"15. Application: Bead on wire"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6d542a4235aa4c4ab24eb44cf35f8f2b",
                        "sequential_name":"Recitation 13",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase line",
                                            "Bifurcation diagram",
                                            "Critical points",
                                            "Logistic equation",
                                            "Proportionality constant",
                                            "Autonomous equation",
                                            "Discussion forum",
                                            "Crab",
                                            "Rate",
                                            "Stable",
                                            "Include",
                                            "Unstable",
                                            "Sketch",
                                            "Minimum",
                                            "Forum",
                                            "Made",
                                            "Create",
                                            "Window",
                                            "Month",
                                            "Share",
                                            "Farm",
                                            "Measured"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. Phase lines Horseshoe crab blood (which is bright blue since it is based on copper rather than iron) contains cells that respond to bacteria at about one part in a trillion. Starting in 1970 it has been used to detect bacterial infections in humans. A start-up in Maryland is considering creating a horseshoe crab farm, and seeks advice about how large a herd they should create in order to sustain the level of harvesting that would make a profit, namely, 250 crabs per month. Here&rsquo;s a model. The unknown a is proportional to the size of the farm. This proportionality constant is the maximum population in the absence of harvesting (measured in kilocrabs). The larger the farm, the larger the maximum population with no harvesting. Crabs multiply fast in an unconstrained environment, at the rate of 1 month&minus;1 . So the logistic growth rate is (1 &minus; y/a), and the logistic equation is y\u02d9 = (1 &minus; (y/a))y = y &minus; y 2 /a . If we now include desired harvest rate we get y\u02d9 = &minus; 1 4 + y &minus; y 2 a . Our job is to determine the behavior of the crab population for various values of a. (a) Just as an experiment, sketch the phase line for a = 2. Be sure to include all critical points; say whether they are stable or unstable (or neither), and include the direction of travel of solutions. Then sketch representative graphs of the population evolution, one of each type. (There are five types.) (b) It looks as if the farm could be made smaller and still produce the desired harvest. To see how small a can be made, it will be useful for you invoke the Phase Lines Mathlet. Select the appropriate autonomous equation from it, and set a = 2. You can create solutions by clicking on the graphing window, and visualize the phase line by selecting the [Phase Line] button. What color is used to denote stable equilibria? What color is used to denote unstable equilibria? Do these images corroborate your computations? (c) Now vary a on the tool. What seems to be the minimum value of a resulting in a stable positive population of crabs? If you roll the cursor over the window, a readout of the coordinates appears below the graph. Use this to estimate the that minimum stable population. 1 (d) You can visualize all these phase lines simultaneously using the [Bifurcation diagram] option. Select it, and then vary a. You can see the various phase lines being formed and changing as a varies. The pair of critical points for large a merge at a certain value of a; and for smaller values of a the population crashes. (e) What is the relation between a and y describing the curve you see on the bifurcation diagram? Write it in the form (a function of a and y) = 0. (f) Finally, determine by computation the position of the semi-stable critical points and compare your answers with what you measured earlier and with what you see on the Mathlet. ",
                                        "unit_id":"bd0811c412804207902c9a7e9326bb7f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"58383323df9a44b2a6062542a7bb2c9f",
                                "vertical_name":"1. Autonomous equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Logistic equation",
                                            "Proportionality constant",
                                            "Rate",
                                            "Farm",
                                            "Month"
                                        ],
                                        "data":" Horseshoe crab blood (which is bright blue since it is based on copper rather than iron) contains cells that respond to bacteria at about one part in a trillion. Starting in 1970 it has been used to detect bacterial infections in humans. A start-up in Maryland is considering creating a horseshoe crab farm, and seeks advice about how large a herd they should create in order to sustain the level of harvesting that would make a profit, namely, 250 crabs per month. Here's a model. The unknown a is proportional to the size of the farm. This proportionality constant is the maximum population in the absence of harvesting (measured in kilocrabs). The larger the farm, the larger the maximum population with no harvesting. Crabs multiply fast in an unconstrained environment, at the rate of 1 month&minus;1. So the logistic growth rate is (1&minus;y/a), and the logistic equation is y\u02d9=(1&minus;(y/a))y=y&minus;y2/a. If we now include the desired harvest rate we get y\u02d9=&minus;14+y&minus;y2a. Our job is to determine the behavior of the crab population for various values of a. ",
                                        "unit_id":"3922768a6b584dd983dddba1a9890cc7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f676f3372f3a4eab87d6c4598da86712",
                                "vertical_name":"2. Phase lines"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Our model for a profitable horseshoe crab farm with harvest rate 250 crabs per month is given by y\u02d9=&minus;14+y&minus;y2a where y has units of kilocrabs. ",
                                        "unit_id":"ac34488f231d4a8cb04386afff4c1c1f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"071642b94b114fcfada44f7ec4beb148",
                                "vertical_name":"3. Horseshoe crab farm continued"
                            }
                        ]
                    },
                    {
                        "sequential_id":"b002b48885b9447ba1702b2938924ac0",
                        "sequential_name":"14 Numerical methods",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Euler"
                                        ],
                                        "data":" Objectives Apply Euler's Method to both linear and nonlinear differential equations with a given step size to approximate values of the solution function near some given initial values. Describe how concavity or convexity contribute to the error using Euler's Method. Gain a sense of how higher order methods reduce the error. ",
                                        "unit_id":"2c73176128db45ce8068a84719888a56",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"37078f872dcb417288d007a8ceaa4361",
                                "vertical_name":"1. Numerical Methods"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "First order differential equation",
                                            "Linear approximation",
                                            "Line segments",
                                            "Broken line",
                                            "Differential equations",
                                            "Capital letter",
                                            "Decimal places",
                                            "Existence theorem",
                                            "Elementary functions",
                                            "Independent variable",
                                            "Straight line",
                                            "Line element",
                                            "Euler equations",
                                            "Differential equation",
                                            "Real life",
                                            "Initial condition",
                                            "Computer screen",
                                            "Numerical method",
                                            "Good idea",
                                            "Slope field",
                                            "Euler method",
                                            "Approximation",
                                            "Squared",
                                            "First order",
                                            "Line",
                                            "Minus",
                                            "Hand",
                                            "Ll",
                                            "Field",
                                            "Correct",
                                            "Yk",
                                            "Good",
                                            "Thing",
                                            "Ve",
                                            "Numerically",
                                            "Calculating",
                                            "Step",
                                            "Drew",
                                            "Side",
                                            "Idea",
                                            "Trivial",
                                            "Find",
                                            "Drawn",
                                            "Big",
                                            "Add",
                                            "Actual",
                                            "Width",
                                            "Called",
                                            "Life",
                                            "Euler",
                                            "Tenth",
                                            "Direction",
                                            "Main",
                                            "Draw",
                                            "Equation",
                                            "Yn",
                                            "Initial",
                                            "Computer",
                                            "Slope",
                                            "Point",
                                            "Program",
                                            "Method",
                                            "Picture",
                                            "Write",
                                            "Time",
                                            "Xn"
                                        ],
                                        "data":" Consider an ODE y\u02d9=f(t,y). It specifies a slope field in the (t,y)-plane, and solution curves follow the slope field. Suppose that we are given a starting point (t0,y0), and that we are trying to approximate the solution curve through it. Question 2.1&emsp;&emsp; Where, approximately, will be the point on the solution curve at a time h seconds later? Solution We have y(t0)=y0, and y&prime;(t0)=f(t0,y0). Using linear approximation, we get y(t0+h)=y0+hf(t0,y0). The geometrical picture as follows: y1&minus;y0=hy&prime;(t0)=hf(t0,y0) I think it's a good idea-- since in real life, most of the differential equations are solved by numerical methods-- to introduce you to those right away. Even when you see the-- where you saw the computer screen, the solutions being drawn, of course what really was happening is that the computer was calculating the solutions numerically and plotting the points. So this is the main way. Numerically is the main way differential equations are actually solved if they have any complexity at all. Now, so the problem is that initial value problem-- let's write a first-order problem the way we talked about it on Wednesday. And now I'll specifically add to that the starting point that you used when you did the computer experiments. And I'll write the starting point this way. So y of x0 should be y0. So this is the initial condition, and this is the first-order differential equation. And as you know, the two of them together are called an IVP, an initial value problem, which means two things-- the differential equation and the initial value that you want to start the solution at. OK, now the method we're going to talk about, the basic method, of which many others are merely refinements in one way or another, is called Euler's method. Euler, who did of course everything in analysis, didn't-- as far as I know, didn't actually use it to compute solutions of differential equations. His interest was theoretical. He used it as a method of proving the existence theorem, proving that solutions existed. But nowadays, it's used to calculate the solutions numerically. And the method is very simple to describe. It's so naive you probably think that if you had been living 300 years ago, you would have discovered it and covered yourself with glory for all eternity. So here is our starting point, x0, y0. Now, what information do we have? At that point, all we have is the little line element whose slope is given by f of x, y. So if I start the solution, the only way the solution could possibly go would be to start off in that direction, since I have no other information. At least it has the correct direction at x0, y0, but of course, it's not likely to have the correct direction anywhere else. Now, what you do then is choose a step size. I'll draw just a few, two steps of the method, and that's, I think, good enough. You choose a uniform step size, which is usually called h, and you continue that solution until you get to the next point, which will be x0 plus h, as I've drawn it on the picture. So we get to here. We stop at that point. And now you recalculate what the line element is here. Suppose here, the line element now through this point goes like that. Well, then that's the new direction that you should start out with, going from here. And so the next step of the process will carry you to here. That's two steps of Euler's method. Notice it produces a broken line approximation to the solution, but in fact you only see that broken line if you're at a computer, if you're looking at the computer visual, for example, whose purpose is to illustrate for you Euler's method. In actual practice, what you see is just the computer is simply calculating this point, that point, that point, and the succession of points. And many programs will just automatically connect those points by a smooth-looking curve, if that's what you prefer to see. Well, that's all there is to the method. What we have to do now is derive the equations for the method. Now, how are we going to do that? Well, the essence of it is how to get from the nth step to the n plus first step. So I'm going to draw a picture just to illustrate that. So now we're not at x0, but let's say we've already gotten to xn, yn. How do I take the next step? Well, I take the line element and it goes up like that, let's say, because the slope is this. I'm going to call that slope A sub n. Of course, A sub n is the value of the right hand side at the point xn, yn, and we'll need that in the equation. But I think it will be a little clearer if I just give it a capital letter at this point. Now, this is the new point, and all I want to know is, what are its coordinates? Well, the xn plus 1 is there. The yn plus 1 is here. Clearly I should draw this triangle, complete the triangle. This side of the triangle, the hypotenuse, has slope An. This side of the triangle has length h. h is the step size. Perhaps I'd better indicate that, actually put that up, so that you know the word. Step size. It means how-- it's the step size on the x-axis, how far you have to go to get from each x to the next one. What's this? Well, if that slope has the slope An, this is h, then this must be h times An, the length of that side, right, in order that the ratio of the height to this width should be An. And that gives us the method. How do I get from-- clearly, to get from xn to xn plus 1, I simply add h. So that's the trivial part of it. The interesting thing is, how do I get the new yn plus 1? And so the best way to write it as that yn plus 1 minus yn divided by h-- well, yn-- sorry. yn plus 1 minus yn is, is this line the same as the line h times An? So that's the way to write it. Or, since the computer is interested in calculating yn plus 1 itself, put this on the other side. You take the old yn, the previous one, and to it you add h times An. And what, pray tell, is An? Well, the computer has to be told that An is the value of f. So now, with that, let's actually write the Euler program. Not the program, but the Euler method equations. Let's just call it the Euler equations. What will they be? First of all, the new x is the old x plus h. The new y is just what I've written there. The old y plus h times a certain number An, and finally, An has the value-- it's the slope of the line element here, and therefore, by definition, that's f of xn, yn. So it's these three equations which define Euler's method. I assume in 100, surely you must be asked to, at some point, as an exercise in the term at one point, to calculate, to program the computer in C or whatever they're using-- Java, now, I guess- to do Euler's method. And these are the equations. These would be the recursive equations that you would put in to do that. Note on video: In the video above, Professor Mattuck uses x instead of t, as the independent variable. (At the end of the video, the course 100 refers to a programming course 1.00 in the Civil Engineering department at MIT.) Consider again the ODE y\u02d9=f(t,y) and the starting point (t0,y0). We try to approximate the solution curve through it. Question 2.2&emsp;&emsp; Where, approximately, will be the point on the solution curve at time t0+3h? Solution The crude answer would be to take 3 steps each using the initial slope f(t0,y0) (or equivalently, one big step of width 3h). Geometrically: The more refined answer is called Euler's method : take 3 steps, but reassess the slope after each step, using the slope field at each successive position : t1 = t0+h y1 = y0+f(t0,y0)h t2 = t1+h y2 = y1+f(t1,y1)h t3 = t2+h y3 = y2+f(t2,y2)h. The sequence of line segments from (t0,y0) to (t1,y1) to (t2,y2) to (t3,y3) is a piecewise linear approximation to the solution curve. The more refined answer to the question is (t3,y3). Hide Euler's Method: Given an initial value problem y&prime;=f(t,y)y(t0)=y0, and a choice of step size h (in seconds if time is the independent variable), the Euler method gives an approximation to the solution curve between t=t0 and t=t0+(n+1)h, by a sequence of line segments connecting the points (t0,y0),(t1,y1),&hellip;(tn,yn),(tn+1,yn+1), where for each 0&le;k&le;n, tk+1 = tk+h yk+1 = yk+hf(tk,yk). yk+1&minus;yk=hy&prime;(tk)=f(tk,yk) These calculations are usually done by computer, and there are round-off errors in calculations. But even if there are no round-off errors, Euler's method hardly ever gives the exact answer. The problem is that the actual solution is rarely a straight line. OK, let's try an example then. What would be a good color for Euler, well, purple. I assume nobody can see purple, is that correct? Can anyone in the back of the room see that that's purple? What? OK, sit closer. So let's calculate. I'll use a simple example, but it's not entirely trivial. My example is going to be the equation x squared minus y squared on the right hand side, and let's start with y of 0 equals 1, let's say. And so this is my initial value problem. That pair of equations, and I have to specify a step size. So let's take the step size to be 0.1. You choose the step size, or the computer does, we'll have to talk about that in a few minutes. Now, what do you do? Well, I say this is a non-trivial equation, because this equation, as far as I know, cannot be solved in terms of elementary functions. So this equation will be, in fact, a very good candidate for a numerical method like Euler's. And you had to use it-- or maybe it was the other way around, I forget-- on your problem set. You drew a picture of the direction, field, and answered some questions about the isoclines, how the solutions behave. All right now, the main thing I want you to get, this is not just for Euler's, talking about Euler's equations, but in general, for the calculations you have to do in this course, it's extremely important to be systematic. Because if you are not systematic, if you just scribble, scribble, scribble, scribble, you can do the work, but it becomes impossible to find mistakes. You must do the work in a form in which it can be checked, which you can look over it and find and try to see where the mistakes are, if in fact there are any. So I strongly suggest-- this is not a suggestion, this is a command-- that you make a little table to do Euler's method by hand. I'd only ask you for a step or two, since I'm just trying to make sure you have some idea of these equations and where they come from. So first the value of n, then the value of xn, then the value of the yn. And then a couple of more columns which tells you how to do the calculation. You're going to need the value of the slope, and it's probably a good idea, also-- because otherwise, you'll forget it-- to put in hAn, because that occurs in the formula. All right, let's start doing it. Well, the first value of n is 0. That's the starting point. At the starting x0, y0, x has the value 0, and y has the value 1. So 0 and 1. In other words, I'm carrying out exactly what I drew pictorially, only now I'm doing it arithmetically using a table and substituting into the formulas. OK, the next thing we have to calculate is An. Well, since An is the value of the right hand side, at the point 0, 1, you have to plug that in. The right hand side is x0, x squared minus y squared. So it's 0 squared minus 1 squared, the value of the slope there is minus 1, negative 1. Now, I have to multiply that by h. h is 0.1, so it's minus, sorry, negative. I'll never learn that. The way you learn to talk in kindergarten is the way you learn to talk the rest of your life, unfortunately. In kindergarten we said minus. Negative 0.1. n is 1 now. What's the value of xn? Well, to the old 1, I add one tenth. What's the value of y? Well, at this point, you have to do the calculation. It's the old value of y-- to get this new value, it's the old value plus this number. Well, that's this plus that number is nine tenths. An, now I have to calculate the new slope at this point. OK, that is one tenth squared minus nine tenths squared. Gulp, that's 0.01 minus 0.81, which makes minus 0.80, I hope. Check it on your calculators. Whip them out, and press the buttons. I now multiply that by h, and which means it's going to be minus 0.08, perhaps, with a 0 after. I didn't tell you how many decimal places. Let's carry it out to two decimal places. I think that will be good enough. And finally the last step, 2 here, add 1, add another one tenth, so the value of x is now two tenths. And finally, what's the value of y? Well, I didn't tell you where to stop. Let's stop at y of 0.2, because there's no more room on the blackboard. Seems like an excellent-- about approximately how big is that, in other words. Then, this is going to be this, the old y, plus this number, which seems to be 0.82 to me. So the answer is, the new value is 0.82. ",
                                        "unit_id":"fdfe8f51ef6c4d4b9b87648506fe2a60",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a68631cffe344c3b9ae2a102e95dfb9a",
                                "vertical_name":"2. Euler's method"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Chain rule",
                                            "Direction field",
                                            "God forbid",
                                            "Differential equation",
                                            "Straight line",
                                            "Numerical calculation",
                                            "Line element",
                                            "Double prime",
                                            "Euler approximation",
                                            "Explicit formula",
                                            "Time interval",
                                            "Euler method",
                                            "Ll",
                                            "Approximation",
                                            "Initial",
                                            "Point",
                                            "Idea",
                                            "Squared",
                                            "Thing",
                                            "Basic",
                                            "Line",
                                            "Equation",
                                            "Calculation",
                                            "Opposite",
                                            "Calculated",
                                            "Call",
                                            "Curve",
                                            "Euler",
                                            "Prime",
                                            "Formula",
                                            "Method",
                                            "Convex",
                                            "Time",
                                            "Tn",
                                            "Question",
                                            "Don",
                                            "Concave"
                                        ],
                                        "data":" Well, now let's ask a few questions. One of the first, most basic thing is, you know, how right is this? How can I answer such a question if I have no explicit formula for that solution? That's the basic problem with numerical calculation. In other words, I have to wander around in the dark to some extent, and yet have some idea when I've arrived at the place that I want to go. Well, the first question I'd like to answer, question is, is this too high or too low? Is Euler-- sorry, he will forgive me in heaven. I will use him. By this, I mean, is the result-- well, let me say something first, and then I'll criticize it. Is Euler too high or too low? In other words, is the result of using Euler's method, i.e. is this number too high or too low? Is it higher than the right answer, what it should be? Or is it lower than the right answer? Or, god forbid, is it exactly right? It's almost never exactly right. That's not an option. Now, how will we answer that question? Well, let's answer it geometrically. Basically, if the solution were a line, were a straight line, then the Euler method would be exactly right all the time. But it's not a line. It's a curve. Well, the critical question is, is it curved-- is the solution-- so here's the solution. Let's call it y1 of x. And let's say here was the starting point. Here, the solution is convex. And here, the solution is concave. Right, a concave up, a concave down. If you learned those words, but I think those have, by now, pretty-- I hope pretty well disappeared from the curriculum. Call it-- if you haven't up till now-- what mathematicians call it, convex is that, and the other one is concave. Well, how do the Euler solutions look? Well, I'll just sketch-- I think from this you can see already, when you start out on the Euler solution, it's going to go like that. Now you're too low. Well, let's suppose after that the line element here is approximately the same as what it is there, you know, roughly parallel. After all, they're not too far apart. And the direction field is continuous. That is, the directions don't change drastically from one point to another. Well, then it'll sort of-- but now you see it's still too low. It's even lower. As it pathetically tries to follow, it's losing territory. And that's basically because the curve is convex. Exactly the opposite would happen if the curve were concave, if the solution curve were concave. Now it's too high, and it's not going to be able to correct that as long as the solution curve stays concave. Well, that's probably too optimistic. It's probably more like this. So in other words, in this case, if the curve is convex, Euler is going to be too high-- sorry, too low. Let's put E for Euler. How about that? Euler is too low. If it's concave, then Euler is too high. OK, that's great. There's just one little problem left, namely, if we don't have a formula for the solution, and we don't have a computer that's busy drawing the picture for us, in which case we wouldn't need any of this anyway, how are we supposed to tell if it's convex or concave? Ah, back to calculus. Calculus to the rescue. When is a curve convex? A curve is convex if its second derivative is positive, because the first-- to be convex means the first derivative is increasing all the time, and therefore the second derivative, which is the derivative of the first derivative, should be positive. Just the opposite here-- the curve, the slope is, the first derivative is decreasing all the time, and therefore the second derivative is negative. So all we have to do is decide what the first and second-- what the derivative, the second derivative of this solution is. We should probably call it a solution. y of x is a little too vague. y1 means the solution that started at this point. So in fact, probably it would have been better from the beginning to call that y1, except there's no room. y1, let's say. That means the solution which started out at the point 0, 1. So I'm still talking about a solution like that. All right. So I want to know, if this is positive, the second derivative is positive at the starting point 0, or it's negative. Now, again, how do you calculate the second derivative if you don't know what the solution is explicitly? And the answer is, you can do it from the differential equation itself. How do I do that? Well, easy. y prime equals x squared minus y squared. OK, that tells me how to calculate y prime if I know the value of x and y, in other words, the point 0, 1. What would be the value of y double prime? Well, differentiate the equation. It's 2x minus 2y y prime. Don't forget to use the chain rule. So if I want to calculate at 0, 1, in other words, at my starting point, is that curve convex or concave? Well, let's calculate. y of 0 equals 1. OK, what's y prime of 0? Well, I don't have to repeat that calculation. Using this, I already calculated that it was negative 1. And now the new thing is, what's y double prime of 0? Well, it is this. It is-- I'll write it out. It's 2 times 0 minus 2 times y, which is 1. 2 times 1 times y prime, which is negative 1. You want to see, we're pulling ourselves up by our own bootstraps, which is impossible, but it is not impossible, because we're doing it. So what's the answer? 0 here. 2. I've calculated-- without having the foggiest idea of what the solution is or how it looks, I've calculated that its second derivative at the starting point is 2. Therefore, my solution is convex at the starting point. And therefore this Euler approximation, if I don't carry it out too far, will be too low. So it's convex, Euler, too low. One of the first questions to ask about the Euler method is whether the approximation it gives is too high or too low. This is in general difficult to decide, but when the actual solution is known to be either concave or convex, we do know the answer. Recall in Euler's method, we start with the initial value problem y&prime;=f(t,y),y(t0)=y0. Lety(t) be the actual solution and let y&macr;(t) be the approximate solution given by Euler's method with stepsize h. As before, tn=t0+nh is the time after n steps. Ify(t) is convex (or concave up), that is, if y&uml;&gt;0, in the interval [t0,tn], then y&macr;(tn)&lt;y(tn). Ify(t) is concave (or concave down), that is, if y&uml;&lt;0, in the interval [t0,tn], then y&macr;(tn)&gt;y(tn). Often we do not know whether the actual solution y(t) is convex or concave in an entire interval. What we are able to compute without knowledge of the solution is the value of y&uml; at the starting point t0. This is still useful because this means that as long as we carry out Euler's method for a short enough time interval, we can still predict whether the Euler approximation overshoots or undershoots. To find y&uml; at the starting point t0, we differentiate the DE y\u02d9=f(t,y) to find y&uml;. The differentiation is often called implicit because the variable y depends on t. This gives us a formula for y&uml; in terms of t,y, and y\u02d9. To evaluate y&uml;(t0), plug in the initial condition t0,y(t0), as well asy\u02d9(t0)=f(t0,y0). ",
                                        "unit_id":"c49e2bf999064ce3b6185315b4fed5a6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8ee659ab12f8474db686642bd0fa0634",
                                "vertical_name":"3. Overestimate, underestimate and concavity"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Small steps",
                                            "Line segments",
                                            "Yellow line",
                                            "Linear function",
                                            "Systematic error",
                                            "Euler method",
                                            "Step",
                                            "Difference",
                                            "Absolute",
                                            "Yellow",
                                            "Exact",
                                            "Automatically",
                                            "True",
                                            "Constant",
                                            "Ve",
                                            "Picture",
                                            "Order",
                                            "Euler",
                                            "Function",
                                            "Method",
                                            "Error"
                                        ],
                                        "data":" The question, then, is naturally this is not the world's best method. It's not as bad as it seems. It's not the world's best method because that convexity and concavity means that you're automatically introducing a systematic error. If you can predict which way the error is going to be by just knowing whether the curve is convex or concave, then it's not what you want. You want to at least have a chance of getting the right answer, whereas this is telling you you're definitely going to get the wrong answer. All it tells you is-- and it's telling you your answer's going to be too high or too low. We'd like a better chance of getting the right answer. So the question is, how do you get a better method? The search is for a better method. Now, the first method-- which will occur I'm sure to anyone who looks at that picture-- is look, if you want this yellow line to follow the white one-- the white solution-- more accurately, for heaven's sake, don't take such big steps. Take small steps, and then it will follow better. All right, let's draw a picture. My little box of treasures here. [INAUDIBLE] So, use a smaller step size. And the picture roughly-- which is going to justify that-- it will look like this. If the solution curve looks like this, then with a big step size, I'm liable to have something that looks like that. But if I take a smaller step-- so I suppose I halve the step size-- how is it going to look then? Well, I better switch to a different color. If I halve the step size I'll get a littler-- goes like that-- and now it's following closer. Of course, I'm stacking the deck, but see how close it follows? No, I'm definitely not to be trusted on this, but-- OK, let's do the opposite and make really big steps. Suppose instead of the yellow one I use the green one of double step size. What would have happened then? Well I've started out, but now I've gone all the way to there, and now on my way up-- of course, it has a little further to go-- but if for some reason I stopped there, you can see I would be still lower. In other words, the bigger the step size, the more the error. And where are the errors that we're talking about? Well, the way to think of the errors-- this is the error-- that number of the error. You can make it a positive, negative, or just put it automatically an absolute value sign around it. That's not so important. So in other words, the conclusion is that the error e-- the difference between the true value that I should have gotten and the Euler value that the calculation produced-- the error e depends on the step size. Now, how does it depend on the step size? Well, it's impossible to give an exact formula, but there's an approximate answer, which is by and large true. And the answer is-- so e is going to be a function of h. What function? Well, asymptotically-- which is another way of putting quotation marks around what I say-- it's going to be a constant-- some constant-- times h. Don't be late. That's you, pretty boy. [INAUDIBLE] It looks like this. And for this reason, it's called a first order-- the Euler is a first order method. And now, first order does not refer to the first order of the differential equation. It's not that use of the word first. It's not the first order because it's y prime equals f of x, y. The first order means the fact that h occurs to the first power. The way people usually say this is, since the normal way of decreasing the step size-- as you'll see as soon as you try to use a computer visual that deals with Euler method-- which I highly recommend by the way-- so highly recommended that you have to do it-- is that, the way to say it-- since you-- each new step halves the step size-- that's the usual way to do it. If you halve the step size-- since this is a constant, if I halve the step size, I halve the error, approximately. Halve the step size, halve the error. That tells you how the error varies with step size for Euler's method. To improve the approximation by the Euler method, we can use a smaller step size h, so that the slopes of the line segments are reassessed more frequently. The cost of this, however, is that to increase t by a fixed amount, more steps will be needed. Under reasonable hypotheses on f &ndash; the right hand side of the DE y\u02d9=f(t,y) &ndash; one can prove that in the limit as h&rarr;0, this process converges and produces an exact solution curve. This is one way to prove that the solution to the initial value problem exists. In fact, this is the way Euler proved it. Error of approximation: Let y&macr;(t) be the approximate solution given by Euler's method with step size h. Let the error of approximation e over the interval [a,b] be e=maxa&le;t&le;b|y(t)&minus;y&macr;(t)|. That is, e is the maximum absolute difference between the actual solution y(t) and y&macr;(t). The error e is bounded above by a linear function of h e&le;Ch where C is a constant depending on f. Because h occurs as a first power above, not h1/2 or h2, Euler's method is called a first order method . ",
                                        "unit_id":"dd99e8a151664aac858d4838bfd43725",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9a5c022487f241dda9281bdc04e5fb27",
                                "vertical_name":"4. Error and step size"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Chain rule",
                                            "Test scenario",
                                            "Tangent line",
                                            "Right hand side",
                                            "Left hand side",
                                            "Double prime",
                                            "Numerical integration",
                                            "Formula",
                                            "Squared",
                                            "Minus",
                                            "Side",
                                            "Integration",
                                            "Numerical",
                                            "Sketch",
                                            "Simple",
                                            "Algorithm",
                                            "Prime",
                                            "Asked",
                                            "Table",
                                            "Work",
                                            "Starting",
                                            "Step",
                                            "Point",
                                            "Integrate",
                                            "Approximation",
                                            "Exact",
                                            "Ode"
                                        ],
                                        "data":" Hi everyone. Welcome back. So today, I'd like to tackle a problem in numerical integration of ODE's, specifically on Euler's method. And the problem we're interested in considering today is, the ODE y prime equals y squared minus xy. And we're interested in integrating the solution that starts at y of 0 is equal to negative 1, using a step size of 0.5, and we want to integrate it to y of 1. And then, for the second part, we're interested in if our first step of integration either overestimates or underestimates the exact solution. So I'll let you think about this and work it out for yourself, and I'll come back in a moment. Hi everyone. Welcome back. So as I mentioned before, this is a problem in numerics and specifically, whenever you're given an ODE, you can almost always numerically integrate it on a computer. And this is quite possibly the simplest algorithm for numerical integration. So specifically, what we do is, we take the left-hand side, the derivative, y prime, and we approximate it using a very simple, finite difference formula. So if I take y prime and approximate it as y sub n plus 1 minus y sub n divided by h, where h is the step size, then I can approximate the continuous ODE using this simple formula. So here, h, as I mentioned, is the step size, f, in this case, is the right-hand side of the ODE, and we see that y sub n plus 1 minus y sub n divided by h is an approximation to y prime. OK. In addition, we can also write down x sub n plus one is just equal to x sub n plus h. OK? And I'm using subscripts n here just to denote the step of the algorithm. So for part A, we're asked to integrate the solution that starts at y of 0 is equal to negative 1 to y of 1. So what this means, for part A, is we want x sub 0 to be 0 and we want y sub 0 to be negative 1. Now to further integrate this equation, the quickest way to do it, especially if you're in a test scenario, is to build a table. So a nice table to build is one that has a column n, x sub n, y sub n, I'm going to write f sub n-- f sub n is to denote f evaluated at x sub n and y sub n. And then, it's also useful to write down h times f sub n, because the quantity h times f sub n comes up in the addition of y sub n plus 1 is equal to y sub n plus h times f sub n. OK? And in the problem under consideration, I'm just going to fill in the first two columns because they're the easiest. We have n is equal to 0, 1 and 2, x sub n is starting off at 0, so x sub 0 is 0, x sub 1 is going to be 0.5, and then, x sub 2 is equal to 1. In addition, we're also told that y sub 0 is equal to negative 1. And now, for f sub n, I'll just use the side here, what's f sub 0 going to be? Well, it's going to be y sub 0 minus x sub 0, y sub 0. So this gives us 1 and 0. So we can fill in a 0.1 here, which means that h times f sub 1 is going to be 0.5. And now, with h of f sub n, we can fill in y of 1. So y sub 1 is just going to be y sub 0 plus 0.5. And y sub 0 is negative 1. So this is going to be negative 0.5. OK. Now we need to fill in f sub 1. So this is going to be y sub 1 squared minus x sub 1, y sub 1. Now, y sub 1 squared, this is negative 0.5 squared. x sub 1 is 0.5. And y sub 1 is, again, negative 0.5. So this gives us one quarter plus one quarter which, together was 0.5. So we have 0.5 in this square now. And then h times 0.5 is 0.5 squared, which is just 0.25. OK? Now, y sub 2 is just going to be y sub 1 plus h times f sub 1. So we know h of f sub 1 is 0.25 and y sub 1 is just negative 0.5. So this is going to be 0.25-- negative 0.25. And we know that this is the answer we're looking for. So just to conclude, our approximation y sub 2, which is approximately y evaluated at 1, is going to be negative 0.25. OK. So for part B, we're asked, does our approximation, negative 0.25, overestimate or underestimate the actual exact solution of the ODE? Now in general, what you want to do is, you want to take the second derivative. However, for this problem, we're only going to consider the first step. So our first step, does it overestimate or underestimate the exact solution? And to do this, what we want to do is, we want to take a look at the concavity. So we want to look at y double prime. So y double prime is going to be d by dx of y prime. And we know from the ODE, y prime is y squared minus xy. So I can work this out to be 2y y prime, just using the chain rule, minus y minus xy prime, and at the first step, we're interested in evaluating this quantity at the point x equals 0, y is equal to negative 1. So this is the first step. So at x is equal to 0, y is equal to negative 1. This simplifies to minus 2 y prime plus 1, this term right here drops off, and y prime, specifically, is going to be y squared minus xy. So we get 2, y squared is going to be 1, minus 0 plus 1. So together, this is going to give us minus 1. And we note that this is less than 0. OK. So we've just shown that the concavity at our starting point, x equals 0, y is equal to negative 1, is less than 0. So what this means is that our initial approximation is going to overestimate the solution. We can see that it's going to overestimate it just by a quick sketch. For example, if I were to plot y and x, we're starting off at this point x is equal to 0, y is equal to negative 1. So this is y of 0 is equal to negative 1. We know the solution, the exact solution, is increasing and it's concave down because the second derivative is negative 1. And, by Euler's formula, what we're doing is, we're approximating the solution using a tangent line at this point. So we can see that our approximate solution, when we take one step to go from here to here-- so this is x sub 0, this is x sub 1-- our solution, which is now going to be y sub 1 here, is going to overestimate the curve. And the reason it overestimates it, I'll just reiterate again, is because our solution is concave down. OK? So this concludes the problem. And just to reiterate, when dealing with Euler's method, the best thing to do is just to build a table like this. And you can quickly work it out. Secondly if you're asked questions on if your numerical solution overestimates or underestimates the exact solution, typically what you want to do is, you want to look at the concavity. And then, you can always just sketch a quick diagram on the back of a notepad to see if the solution overestimates or underestimates the exact solution. OK? So I'd like to conclude here. And I'll see you next time. ",
                                        "unit_id":"62e69678ed4d46e395ab3c8758fa2a3d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"602b96d53aa44abda3efe7a6d1e72ce6",
                                "vertical_name":"6. Worked example"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Time",
                                            "De",
                                            "Starting",
                                            "Method"
                                        ],
                                        "data":" Euler's method generally can't be trusted to give reasonable values when (t,y) strays very far from the starting point. In particular, the solutions it produces usually deviate from the truth as t&rarr;&plusmn;&infin;, or in situations in which y&rarr;&plusmn;&infin; in finite time. Anything that goes off the screen can't be trusted. Example 8.1&emsp;&emsp; The solution to y\u02d9=y2&minus;t starting at (&minus;2,0) seems to go to +&infin; in finite time. But Euler's method never produces a value of +&infin;. To see what is really happening in this example, try the change of variable u=1/y. To rewrite the DE in terms of u, substitute y=1/u and y\u02d9=&minus;u\u02d9/u2: &minus;u\u02d9u2 =1u2&minus;t u\u02d9 =&minus;1+tu2. This is equivalent to the original DE, but now, when y is large, u is small, and Euler's method can be used to find the time when u crosses 0, which is when y blows up. ",
                                        "unit_id":"99e5734c6c7c4f4c9c30cc3587d6f9a2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"59ccb68fa6b74329acff1bd3e140ef3f",
                                "vertical_name":"8. Change of variable"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Trapezoid rule",
                                            "Integration",
                                            "Direction field",
                                            "Sum",
                                            "Line element",
                                            "Numerical method",
                                            "Weighted average",
                                            "Good luck",
                                            "Computer screen",
                                            "Equation",
                                            "Rule",
                                            "Midpoint method",
                                            "Place",
                                            "Fourth",
                                            "Euler",
                                            "Small",
                                            "Error",
                                            "Called",
                                            "Sort",
                                            "Find",
                                            "Line",
                                            "Ll",
                                            "Formula",
                                            "Standard",
                                            "Pink",
                                            "Method",
                                            "Average",
                                            "Thing",
                                            "Step",
                                            "Call",
                                            "Reason",
                                            "Big",
                                            "Result",
                                            "Luck",
                                            "Faster",
                                            "Procedure",
                                            "Evaluate",
                                            "Interval",
                                            "Starting",
                                            "Temporary",
                                            "Point",
                                            "Function",
                                            "Squared",
                                            "Midpoint",
                                            "Aim",
                                            "Slope",
                                            "Heun",
                                            "Yn",
                                            "Word",
                                            "Computer"
                                        ],
                                        "data":" When computing &int;abf(t)dt numerically, the most primitive method is to use the left Riemann sum: divide the range of integration into subintervals of width h, and estimate the value of f(t) for each t on the subinterval by the value at the left endpoint. More sophisticated methods are the trapezoid rule and Simpson's rule , which have smaller errors. There are analogous improvements to Euler's method. Integration Differential equation Error left Riemann sum Euler's method O(h) trapezoid rule second-order Runge&ndash;Kutta method (RK2) O(h2) Simpson's rule fourth-order Runge&ndash;Kutta method (RK4) O(h4) The big O notation O(h4) means that there is a constant C (depending on the differential equation but not on h) such that the error is at most Ch4, assuming that h is small. The error estimates in the table are valid for reasonable differential equations. Better methods: The Runge&ndash;Kutta methods evaluate at more points on the interval [t0,t0+h] to get a better estimate of what happens to the slope over the course of that interval. Below is an example of a second-order Runge&ndash;Kutta method (RK2) . It is also called the midpoint method or the modified Euler method . Here is how one step of this method goes: Starting from (t0,y0), look ahead to see where one step of Euler's method would land, but do not go there! Call this temporary point (t1,y~1). Find the midpoint between the starting point and the temporary point: (t0+t12,y0+y~12). Use the slope at this midpoint to find y1 y1=y0+hf(t0+t12,y0+y~12). Repeat the steps above using (t1,y1) as the starting point. Here is a summary of the equations: t1 = t0+h y~1 = y0+hf(t0,y0) y1 = y0+hf(t0+t12,y0+y~12) (t0,y0) \u21a6 (t1,y1). Even better methods: The fourth-order Runge&ndash;Kutta method (RK4) is similar, but more elaborate, averaging several slopes. It is the most commonly used method for solving DEs numerically. Some people simply call it the Runge&ndash;Kutta method. The mathlets we have been playing use RK4 with a small step size to compute the &ldquo;actual\" solution to a DE. Note on video: In the video below, Prof Mattuck starts by explaining another example of a second order Runge&ndash;Kutta method also called Heun's method and then comments on the error of this method. Even though the RK2 methods in the text above and in the video are different, both are second order methods to which Prof Mattuck's comment on error apply. However, there are more efficient methods which gets the result faster. And so if that's our good method, let's call this a still better method. The better methods aim at being better. They keep the same idea as Euler's method, but they say, look, let's try to improve that slope An. In other words, since the slope An that we started with is guaranteed to be wrong if the curve is convex or concave, can we somehow correct it so that for example, instead of immediately aiming there, can't we somehow aim it so that by luck, the next step just lands us back on the curve again? In other words, we're sort of looking for a shortcut path which, by good luck, will end up back on the curve again. And all the simple improvements on Euler's method, and they are the most stable in ways to solve differential equations numerically, aim at finding a better slope. So they find a better value for a better slope. They find a better value than An. Try to improve that slope that you found. Now, once you have the idea that you should look for a better slope, it's not very difficult to see what in fact you should try. Again, I think most of you would say, hey, I would have thought of that. And you'd be closer in time, since these methods were only found about maybe 100-- around the turn of the last century is when I place them. Mostly by some German mathematicians interested in solving equations numerically. All right, so what is the better method? Our better slope, what should we look for in our better slope? Well, the simplest procedure is once again, we're starting from there. And the Euler slope would be the same as the line element. So the line element looks like this, and our yellow slope An-- I'll still continue to call it An-- goes like that, gets to here. OK, now if the curve were convex, this would be too low, and therefore the next step would be-- I'm going to draw this next step in pink. Well, let's continue in here. Would be going up like that. I'll call this Bn, just because it's the next step of Euler's method. It could be called An prime or something like that. But this will do. And now what you do is-- let me put an arrow on it to indicate parallelness. Go back to the beginning, draw this parallel to Bn. So here is Bn. Again, just a line of that same slope. And now what you should use, the simplest improvement on Euler's method is take the average of these two, because that's more likely to hit the curve than An will, which is sure to be too low if the curve is convex. In other words, use this instead. Use that. So this is our better slope. OK, what will we call that slope? We don't have to call it anything. What would the equations for the method be? Well, xn plus 1 is gotten by adding the step size. So here's my step size, just as it was before. The new thing is how to get the new value of y. So yn plus 1 should be the old yn plus h times not this crummy slope An, but the better, the pink slope. What's the formula for the pink slope? Well, let's do it in two steps. It's the average of An and Bn. Hey, but you didn't tell me or I didn't tell you would Bn was. So you now must tell the computer, oh, yes, by the way, you remember that An was what it always was. The interesting thing is what is Bn? Well, to get Bn, Bn is the slope of the line element at this new point. Now, what am I going to call that new point? I don't want to call this y value yn plus 1, because it's this up here that's going to be the yn plus 1. All this is is a temporary value used to make another calculation, which will then be combined with the previous calculations to get the right value. Therefore, give it a temporary name. That point, we'll call it-- it's not going to be the real yn plus 1-- we'll call it yn plus 1 twiddles, yn plus 1 temporary. And what's the formula for it? Well, it's just going to be what the original Euler formula is. It's going to be yn plus what you would have gotten if you had calculated-- in other words, it's the point that the Euler method produced, but it's not finally the point that we want. Now, do I have to say anything else? Yeah, I didn't tell the computer what Bn was. OK, Bn is the slope of the direction field at the point n plus 1. And the computer knows what that is. And this point yn plus 1 temporary. So you make a temporary choice of this, calculate that number, and then go back and as it were correct that value to this value by using this better slope. Now, that's all there is to the method, except I didn't give you its name. Well, it has three names. Four names, in fact. Which one shall I give you? I don't care. OK, the shortest name is Heun's method. But nobody pronounces that correctly. So it's Heun's method. It's called also the improved Euler method. It's called Modified Euler, very expressive word. Modified Euler's method. And it's also called RK2. I'm sure you'll like that name best. It has a Star Wars sort of sound to it. RK stands for Runge--Kutta, and the reason for the 2 is not that it uses-- well, it is that it uses two slopes. But the real reason for the 2 is that it is a second-order method. So that's the most important thing to put down about it. It's a second-order method, whereas Euler's was only a first-order method. So Heun's method, or RK2-- that's the shortest thing to write-- is a second-order method, meaning that the error varies with a step size, like some constant-- it won't be the same as the constant for Euler's method-- times h squared. That's a big saving, because it now means that if you halve the step size, you're going to decrease the error by a factor of 1/4. You will quarter the error. Now, you say hey, great. Why should anyone use anything else? Well, think a little second. The real thing which determines how slowly one of these methods run is you look at the hardest step of the method and ask how long does the computer take? How many of those hardest steps are there? Now the answer is, the hardest step is always the evaluation of the slope, the evaluation of the function, because the functions that are in common use are not x squared minus y squared. They take half a page and have as coefficients 10 decimal place numbers, whatever the engineers doing it, whatever their accuracy was. So the thing that controls how long a method runs is how many times the slope of the function must be evaluated. For Euler, I only have to evaluate it once. Here, I have to evaluate it twice. Now, roughly speaking, the number of function evaluations will each, will give you the exponent. The method that's called Runge--Kutta fourth order will require four evaluations of slope, but the accuracy will be the like h to the fourth. Very accurate. You halve the step size, and it goes down by a factor of 16. Great. But you had to evaluate the slope four times. Suppose instead you had halved four times this thing. What would you have done? You would have decreased it to 1/16 of what it was. You still would increase the number of functions evaluations you needed to four, and you would have decreased the error by 1/16. So in some sense, it really doesn't matter whether you use a very fancy method which requires more function evaluations. It's true, the error goes down faster, but you're having to do more work to get it. So anyway, nothing is free. Now, there is an RK4. I think I'll skip that, since I wouldn't dare to ask you any questions about it. But let me just mention it at least, because it's the standard. It uses four evaluation. It's the standard method, if you don't want to do anything fancier. It's rather inefficient, but it's very accurate. Standard method, accurate. And you'll see when you use the programs, it's in fact the program which is drawing those curves, the numerical method which draws all those curves that you believe in on the computer screen is the RK4 method. I should give them their names. Runge--Kutta fourth-order method. Two mathematicians-- I believe both German mathematicians-- around the turn of the last century. Runge--Kutta fourth-order method requires you to calculate four slopes. I won't bother telling you what you do. But it's just a procedure like that. It's just a little more elaborate. And you take two of these, you make up a weighted average for the super slope. You use weighted average. What should I divide that by to get the right--? 6. Why 6? Well, because if all these numbers were the same, I'd want it to come out to be whatever that common value was. Therefore, in a weighted average, you must always divide by the sum of the coefficients. So this is the super slope. And if you plug that super slope in to here, you will be using the Runge--Kutta method and get the best possible results. ",
                                        "unit_id":"279233a543e34d7aabde60f3d2f49a0b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"eef5b603a4e44ac099d74b55eaf745d3",
                                "vertical_name":"9. Runge\u2013Kutta methods"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Software systems"
                                        ],
                                        "data":" Most software systems have numerical routines that are built in. Many of these numerical routines use variable order methods. You may want to check some out, and play around with them. Make sure that you check the documentation for how to enter the arguments of each method. Maple Euler(ODE, IC, t=b, opts) RungeKutta(ODE, IC, t=b, opts) MATLAB ode45(odefunc,tspan,y0,options) ode23(odefunc,tspan,y0,options) ode113(odefunc,tspan,y0,options) Python (scipy.integrate) odeint(func,y0,t,args=()) ",
                                        "unit_id":"4916ebb5a09b4124b1b6d90a52884832",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c26bf3fb95a1464dad4cfb1845d941c9",
                                "vertical_name":"10. Software"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8b99249d2de3425ca587a061ae857d8c",
                        "sequential_name":"Recitation 14",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Direction field",
                                            "Initial condition",
                                            "Numerical method",
                                            "Discussion forum",
                                            " ",
                                            "Yn",
                                            "Step",
                                            "Method",
                                            "Xn",
                                            "Forum",
                                            "Share"
                                        ],
                                        "data":" The worksheet below can be downloaded and printed. We want you to work together on the discussion forum to come up with the answers to these questions. You may share solutions, and we encourage you to share your work, including the steps for how you got there, not just the final answer! We will not be showing answers or providing solutions, but we will endorse correct solutions on the forum. All questions in this worksheet will be presented again in the following pages with answer boxes and links to the discussion forum. You will be graded on your own answers even though you may collaborate to arrive at these answers. 18.031x Recitation 14 Euler&rsquo;s method Euler&rsquo;s Method: Numerical method to compute y(x) of y 0 = f(x, y) with initial condition y(x0) = y0. This is the only numerical method you are responsible for. (Memorize it.) The idea is to follow the direction field at a fixed step size h &gt; 0. Start at P0 = (x0, y0) and the iterative formulas are given by xn+1 = xn + h; yn+1 = yn + h f(xn, yn) Error Estimates: E = yapprox &minus; yexact |E| &le; Ch where C is on the order of |f| + |&part;f/&part;x| + |&part;f/&part;y|. Remark. If y 00 &lt; 0 in a region (concave down), then E &gt; 0. (The approximation is bigger than the actual answer.) Similarly, if y 00 &gt; 0, then E &lt; 0. (The approximation is smaller than the actual answer.) Tasks: 1. Use Euler&rsquo;s method to estimate the value at x = 1.5 of the solution of y 0 = y 2 &minus; x 2 = F(x, y) at y(0) = &minus;1. Use h = 0.5. Recall the notation x0 = 0, y0 = &minus;1, xn+1 = xn + h, yn+1 = yn + mnh, mn = F(xn, yn). Make a table with columns n, xn, yn, mn, mnh. Draw the Euler polygon. 2. Is the estimate from 1. likely to be too large or too small? ",
                                        "unit_id":"4ab9a8ddc7fc4bdea345546892ccaf9e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"127330146b4f436a9950f55135257ddf",
                                "vertical_name":"1. Numerical methods"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Direction field",
                                            "Initial condition",
                                            "Numerical method",
                                            "Method"
                                        ],
                                        "data":" Euler's Method: Numerical method to compute y(x) of y&prime;=f(x,y) with initial condition y(x0)=y0. This is the only numerical method you are responsible for. (Memorize it.) The idea is to follow the direction field at a fixed step size h&gt;0. Start at P0=(x0,y0) and the iterative formulas are given by xn+1=xn+h;yn+1=yn+hf(xn,yn) Error Estimates: E=yapprox&minus;yexact |E|&le;Ch where C is on the order of |f|+|&part;f/&part;x|+|&part;f/&part;y|. Remark. If y&prime;&prime;&lt;0 in a region (concave down), then E&gt;0. (The approximation is bigger than the actual answer.) Similarly, if y&prime;&prime;&gt;0, then E&lt;0. (The approximation is smaller than the actual answer.) ",
                                        "unit_id":"d8c0543711bf41769f8fc7323f0a8f76",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"58bd17e339e641c980d1993fb18e9f03",
                                "vertical_name":"2. Euler's method"
                            }
                        ]
                    }
                ]
            }
        ],
        "course_id":"course",
        "course_name":"Introduction to Differential Equations"
    },
    {
        "course_chapters":[
            {
                "chapter_id":"a6a3f6d0ff9a473994ed63cf97484667",
                "chapter_name":"Module 0: Pre-Course Walkthrough",
                "sequentials":[
                    {
                        "sequential_id":"196ade1d8037422bb29a985d3954bbf9",
                        "sequential_name":"edX Walkthrough",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Navigation bar",
                                            "Multiple choice",
                                            "Virtual environments",
                                            "Social networks",
                                            "Learning process",
                                            "Knowledge base",
                                            "Left side",
                                            "Real time",
                                            "Discussion forums",
                                            "Progress",
                                            "Question",
                                            "Meet",
                                            "Interactive",
                                            "Graded",
                                            "Left",
                                            "Work",
                                            "Experience",
                                            "Discussion",
                                            "Firsthand",
                                            "Courseware",
                                            "Time",
                                            "Start"
                                        ],
                                        "data":" Start of transcript. Skip to the end. ERIC: Hi, and welcome to the edX demonstration course. I'm Eric, and I'm here to help you get a better understanding of how fun and easy it is to take an edX course. So, let's get started. Let me show you how all the parts work together. If at any time you want to skip this video and get a firsthand experience of the demonstration course, all you have to do is click week one to the left. Don't worry, I won't be offended. Let's first look along the top of the page. This area's called the navigation bar. Click on Courseware to interact with your course. Course Info contains course announcements and updates from the course staff. If your course has digital textbooks, this is where you'll find them. Discussion is where you can communicate with the fellow students on topics and projects, and even occasionally with the course staff. When available, the course Wiki acts as a knowledge base for your course. It's a helpful resource. Clicking on Progress will reveal how well you're doing in your studies and exams. When you take the demo course, we'll provide you with a simple progress report matching your results. Let's look at the left column now. The left side of the Courseware screen contains a course navigation bar starting from the top down. Many courses start with an overview of edX and an introduction to the course. Below the overview are segments of the course, which are released as the course progresses. Typically, an edX course is delivered in week by week segments, and have lessons and homeworks you need to complete. Many courses are 10 to 12 weeks long. We made this demonstration course three weeks for simplicity. Let's now look at the learning sequence. Each item in the left column reveals a corresponding learning sequence. Work your way from left to right. Learning sequences can contain lectures, exercises, and interactive lessons that you can complete on your own schedule. Next, let's discover what makes edX fun and unique, its interactivity. edX prides itself on its interactive lessons, which can include demonstrations, visualizations, and virtual environments. You can try out some in the demo course. Interactive lessons are often graded and contribute to your final grade. While the edX platform also supports more traditional question formats like multiple choice, our classes also test your understanding by allowing you to use labs and simulators, and even asking you to write an essay. Example of these graded interactions are in the demo course. You can see how the questions the course uses for gauging your learning process can even be auto graded, or detailed feedback given in real time. So while an edX course might be rigorous, the tools and visualizations are really fun and truly interactive. Finally, there are many ways successful students like to you interact to get the most out of a course. Beyond the discussion forums, you can meet and engage with fellow classmates through a local meet up-- which we highly recommend-- a Google Hangout, or even invite students to join you via Twitter, Facebook, or other social networks. It's a proven fact that if you engage with others while taking a course, you're more likely to succeed. Now that you've seen how easy it is to take an edX course, experience this demonstration course. Firsthand all you have to do is click on week one to the left and you can get started. End of transcript. Skip to the start. ",
                                        "unit_id":"cb002c11effc43a0b48a28fb1afe9479",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"40001a65d01e475584723909dd790e34",
                                "vertical_name":"Navigating an edX Course"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Button",
                                            "Speed",
                                            "Bottom",
                                            "Sequence",
                                            "Navigate",
                                            "Start",
                                            "Transcript"
                                        ],
                                        "data":" Start of transcript. Skip to the end. LYLA FISCHER: Hi. Welcome to edX. I'm Lyla Fischer, an edX fellow, helping to put together these courses. As you know, our courses are entirely online, so before we start learning about the subjects brought you here, let's learn about the tools that you will use to navigate through the course material. Let's start with what is on your screen right now. You are watching a video of me talking. You have several tools associated with these videos. Some of them are standard video buttons like the play/pause button on the bottom left. Like most video players, you can see how far you are into this particular video segment and how long the entire video segment is. Something that you might not be used to is the speed option. While you were going through the videos, you can speed up or slow down the video player with these buttons. Go ahead and try that now. Make me talk faster and slower. If you ever get frustrated by the pace of speech, you can adjust it this way. Another great feature is the transcript on the side. This will follow along with everything that I'm saying as I'm saying it, so you can read along if you like. You could also click on any of the words and you will notice that the video jumps to that word. The video slider, at the bottom of the video, will let you navigate through the video quickly. If you ever find the transcript distracting, you can toggle the captioning button in order to make it go away or reappear. Now that you know about the video player, I want to point out the sequence navigator. Right now, you're in a lecture sequence which interleaves many videos and practice exercises. You can see how far you are in a particular sequence by observing which tab you're on. You can navigate directly to any video or exercise by clicking on the appropriate tab. You could also progress to the next element by pressing the arrow button or by clicking on the next tab. Try that now. The tutorial will continue in the next video. End of transcript. Skip to the start. ",
                                        "unit_id":"48d7320e78be48d688be0066d3a99be0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e87e0b39a8ea4248ace0674b1d4bd737",
                                "vertical_name":"Using the edX Video Player"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Social media",
                                            "Discussion forums",
                                            "Google hangouts",
                                            "Office hours",
                                            "Social",
                                            "Discussion",
                                            "Education",
                                            "Wiki"
                                        ],
                                        "data":" Start of transcript. Skip to the end. SPEAKER 1: One of the benefits of taking an edX course is that you are often taking a course with a truly global student body, sometimes numbering in the hundreds of thousands. How do you become a social student on edX? There are many ways. Let's take a look at some of them. Discussion forums are a great place to introduce yourself and ask other students questions about course materials. The expectations for all courses are different, but some courses expect weekly or daily discussion forum posts. Check the course syllabus for guidance. You can access the discussion forums by selecting the Discussion in the course navigation header at the top the screen, or by selecting an embedded discussion in a lesson unit. Wiki's, when available, are another source of student to student interactions. Over the duration of the course, the wiki can develop into a great resource of communal peer reviewed knowledge. You can access the course wiki through the Wiki tab in the course navigation header at the top the screen. Not all courses will have a wiki. Social media touches many areas of our lives, including education. Since at its core, education is a truly collaborative and communal experience, the integration of social media into a course is a logical next step. Many edX courses integrate social media in some way, either by organizing meet-ups, creating Facebook study groups or using Google Hangouts. Some professors even use Google Hangouts for office hours. End of transcript. Skip to the start. ",
                                        "unit_id":"d63dedc94c3b4ea585d74f3854f6b126",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c49bf678e4cf4b8e8259d8772d89d3c3",
                                "vertical_name":"Socializing on edX"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Total score",
                                            "Final exams",
                                            "Graded",
                                            "Grade",
                                            "Earned",
                                            "Final"
                                        ],
                                        "data":" Start of transcript. Skip to the end. SPEAKER 1: Anything that students are graded on at edX can be found in the Progress tab. Graded material such as homework, labs, midterms and final exams all count toward your final grade. On the Progress screen, you can see your individual grades on assignments, as well as your current total grade. Different classes have different requirements for what counts as a passing grade, as well as potentially adding custom types of graded material. So be sure to check the course syllabus for specifics. The progress chart shows the overall percentage that you have earned on each assignment in the course and how each of those assignments combine as your overall grade. Even if you've scored 100% on all graded assignments, your total score will only reflect the percentage of available points thus far. So for example, if you're halfway through a course, there is no way your total score will be 100% since there is more graded content that represents the remaining available percentage. After completing a final exam, you will most likely need to wait a few days before grading is finalized. Once the final exam grade has been finalized, your grade should be made available on your student dashboard. Any certificate you've earned will be available to view and download from the dashboard as well. End of transcript. Skip to the start. ",
                                        "unit_id":"f5f85b38e84949a299ae0967c471c770",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d1f51416fbdc44ecabf5fe331c1710cb",
                                "vertical_name":"How Grades Work"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mobile device",
                                            "Double check",
                                            "Full screen",
                                            "Mobile",
                                            "Downloading",
                                            "Org",
                                            "Account",
                                            "Check",
                                            "Viewed",
                                            "Sign",
                                            "Screen",
                                            "Section"
                                        ],
                                        "data":" Start of transcript. Skip to the end. SPEAKER 1: At edX, we understand that our students live in a mobile world. We've worked hard to deliver an enjoyable mobile experience to our students. Over time, you will be able to do more and more on your mobile device. For now, let's get started with a brief overview of what to expect when using edX mobile. You'll first be asked to sign in using your edx.org account. If you don't have an account, you can always select the new user sign up at the bottom of the screen. Once you sign in, you'll be taken to the courses you are currently enrolled in on edx.org. Before you get started watching lecture videos, make sure that you double check your video settings. Select the Settings tab and ensure that you have your desired download settings toggled. Some of these videos can be very large. And if you're not careful, you could quickly use up your monthly data allowance. Back on the My Course screen, select the course in the Courseware tab to see a list of sections. You can also browse the other navigation tabs associated with the course, such as Announcements and Handouts. You don't need to download videos to watch them. But as stated before, you need to be mindful of your monthly data allowance. Let's try downloading some videos by selecting the Download icon for the section. Once you do, you'll see a Download Progress icon in the top right corner. Once your video's finished downloading, you can browse to My Videos and select a lecture to watch. In this example, the student has already viewed many videos, as indicated by the blue half filled circle. Let's go ahead and jump into one that has been partially viewed. The video player appears at the top of the screen with the list of other lecture videos in this section shifting down below it. Like other video apps, you can tilt your screen horizontally if that is more comfortable, or if you prefer to get a full screen view of the lecture. As you finish lecture videos, you can check out the other portions of the section you are working through, such as Readings and Interactive Questions. To do this, select the Open In Browser option at the bottom of the screen to access the full fledged edX course environment. End of transcript. Skip to the start. ",
                                        "unit_id":"81ea2f37e1324f5a9a5aeb43addefaa9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6c97a09d3b564c6f97bde2b28f202f82",
                                "vertical_name":"edX Mobile App"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2af4e25e7b2a40f88a40817cfa6939f1",
                        "sequential_name":"Course Information",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equations",
                                            "Differential equations",
                                            "Dynamical systems",
                                            "Physical models",
                                            "Integrating factors",
                                            "Dependent variables",
                                            "Boston university",
                                            "Phase line",
                                            "Discussion forum",
                                            "Research group",
                                            "Lucky guess",
                                            "Phase plane",
                                            "Encourage",
                                            "Learning",
                                            "Discussion",
                                            "Forum",
                                            "Presented",
                                            "Research",
                                            "Plane",
                                            "Guess",
                                            "Mathematics",
                                            "Technology",
                                            "Material"
                                        ],
                                        "data":" WELCOME Welcome to MATH226.1x, Introduction to Differential Equations! Below you will find a brief discussion on the material that's going to be presented in this course and how the course is structured. TOPICS In MATH226.1x, we discuss biological and physical models that can be expressed as differential equations with one or two dependent variables. We discuss geometric/qualitative and numerical techniques that apply to all differential equations. When possible, we study some of the standard symbolic solution techniques such as separation of variables and the use of integrating factors. We also study the theory of existence and uniqueness of solutions, the phase line and bifurcations for first-order autonomous systems, and the phase plane for two-dimensional autonomous systems. The techniques that we develop will be used to analyze models throughout the course. In MATH 226.2x, we will study an especially important class of differential equations--- the linear differential equations. Many models assume linearity in order to take advantage of the special properties that linear differential equations have and we will study those properties. In MATH 226.3x, we will use what we learned about linear differential equations in MATH 226.2x to help us analyze solutions to nonlinear differential equations. We'll discuss the distinction between solutions that are stable and those that are chaotic. And we'll finish our discussion of differential equations with the famous Lorenz system. HOW THE COURSE WILL OPERATE MA226.1x consists of 16 modules released over eight weeks. Each module focuses on a particular topic and includes a series of videos interspaced with exercises. These exercises are designed to give feedback on your understanding of the material presented in the videos. Finally, each module ends with an exercise set which gives you an opportunity to confirm your understanding of the material. All material will be on the platform, so a textbook will not be required. After Module 9 we will have a midMOOC exam that covers the material in Modules 1-9. During week nine we will have a final exam that covers all of the material in MATH226.1x. TECHNOLOGY The research group in dynamical systems within the Department of Mathematics and Statistics at Boston University is known for its modern approach to the study of differential equations. We analyze equations using geometric techniques in addition to the symbolic techniques that are typically taught in a first course in differential equations. Even for those of us who consider ourselves pure mathematicians, the use of technology plays a key role in our research. The use of technology will also play a key role in this course. During the second week of the course, we will suggest various ways in which you can use technology, but if you are already familiar with a particular technology that does what we need, you are welcome to use it. PREREQUISITES You should know one-variable calculus. In particular, you should know the rules of differentiation and basic integrals. You should also know how to calculate the derivative of a parametrized curve in the plane. We have included a diagnostic exam to help you assess your readiness to take this course. GETTING HELP Learning differential equations is fun and interesting, but it can be difficult. You will need to devote serious time and energy into learning the material. If you need help with a particular concept, you should use the discussion forum. In addition to your fellow students, course staff will also be participating in the forum on a regular basis. Please don't hesitate to ask a question. We can guarantee that any questions that you have about the material will be ones that many other students have as well. We want to encourage all students to use the discussion forum as much as possible. For this reason, questions, comments, or responses can contain hints (even fairly substantial ones) for any of the exercises. We feel that this freedom will help encourage productive discussion. We believe that one of the best ways to help people learn is to answer their questions with other questions. If you would like to help another student in this course, comments such as \"Have you tried the Method of the Lucky Guess with a guess that's the sum of a sine, a cosine, and an exponential?\" are appreciated. Comments such as \"the answer is y(t)=3e2t+7cos5t&minus;3sin5t\" are not. In all cases, you should make a serious attempt to solve an exercise before turning to the discussion forum. Learning mathematics often involves a great deal of practice, and reading another person's solution is not practice. ",
                                        "unit_id":"c6b8e474e9fe46d99b292029a72b1588",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c314f23c56d24667b57b3c22b5bc32ed",
                                "vertical_name":"Welcome to MA226.1x"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" There is a link to the Syllabus at the top of every course page ",
                                        "unit_id":"b7655af831f441b9b2b198775fb6419a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"26965cce5fa8494784ad02ca4717fc0e",
                                "vertical_name":"Syllabus"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Direction field",
                                            "Differential equations",
                                            "Discussion forum",
                                            "Phase plane",
                                            "Rice university",
                                            "Java",
                                            "Jar",
                                            "John",
                                            "Software",
                                            "Dfield",
                                            "Rice"
                                        ],
                                        "data":" Software The numerical and qualitative aspects of solutions to differential equations are best studied with the aid of some type of technology, and code designed for this purpose has been written by various individuals. You are welcome to use whatever software does the job for you. However, we have found that two java applications called dfield and pplane developed at Rice University under the supervision of Professor John Polking work well with our approach. Starting in Module 4 (week 2), you should have access to a program that draws slope fields and graphs solutions for first-order equations. dfield is one such program. When we transition from first-order equations to first-order systems in Module 10 (week 6), you will need a program that draws direction fields and phase portraits for first-order systems. pplane does that. The java versions of dfield and pplane are available at http://math.rice.edu/~dfield/dfpp.html. Under dfield (Direction Field) Java Software Download: download dfield.jar Under pplane (Phase Plane) Java Software Download: download pplane.jar Java Runtime Environment is required to run these applications. While many computers will already have Java installed, the current version of Java can be downloaded from http://www.java.com/en/download/help/download_options.xml. Please note that these applications are copyrighted by John C. Polking, Department of Mathematics, Rice University and cannot be used for profit without first contacting him. We ask that you do NOT contact Professor Polking if you have trouble installing these programs on your computer. We will troubleshoot as best we can on our discussion forum. ",
                                        "unit_id":"771a0e15bdf846ad97ea0c705299c501",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"66390e9538794869b3ac0ebcf9ca485b",
                                "vertical_name":"Software"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Markup language",
                                            "Decimal places",
                                            "Math",
                                            "Forum",
                                            "Syntax",
                                            "Display",
                                            "Equation",
                                            "Mathjax",
                                            "Multiplication",
                                            "Input",
                                            "Exact",
                                            "Question",
                                            "Error",
                                            "Guide",
                                            "Icon",
                                            "Don"
                                        ],
                                        "data":" ENTERING ANSWERS TO PROBLEMS Resources for Entering Mathematical Expressions There are several edX resources to help you when entering mathematical expressions. To avoid frustration, we recommend going through at least one of the edX resources before trying to complete problems. The edX guide to entering mathematical expressions is a comprehensive guide to every available notation and function. The edX Demo Course, under Courseware &gt; Optional: Example Problem Types &gt; STEM Problems, has a short tutorial with practice problems. Open the calculator by clicking the icon in the bottom right of pages in this course (including this one). Then click the information icon to open up an abbreviated version of the edX guide as well as a link to the full guide. Common Mistakes Entering mathematical expressions in edX is generally what you would expect, but there are a couple of details that can cause problems. A common error is not using the * operator for all multiplication! Do not enter \"mc^2\", use \"m*c^2\". Do not enter \"5a\" or \"5 a\", use \"5*a\". Even parentheses don't imply multiplication, do not enter \"5(x+1)\" use \"5*(x+1)\" instead. A human can guess that you're implying multiplication, but the edX grader will not. Functions must be followed by parentheses. \"sin t\" will not work, you must use \"sin(t)\". Exponentiation can be entered using e as a constant raised to a power \"e^x\" or by using exp() as a function \"exp(x)\". Do not use exp^x or e(x). Also, the grader will not recognize negative variables as exponents without parentheses. Don't use \"e^-t\", you must use \"e^(-t)\". Accuracy Input an exact answer unless the question indicates otherwise. To enter a numerical answer exactly, you may use functions that evalute to a number. For example, we recommend you enter \"3*ln(2)\" instead of \"2.07944\" so that you don't have to worry about rounding or errors in transferring the digits. Exact answers will be accepted even if the prompt says to round to a certain number of decimal places. Question prompts will specify the number of decimal places to input if rounding is expected. ENTERING MATH EXPRESSIONS ON THE FORUM Taking advantage of the math display capabilities of the discussion forum will help others understand you better. Communication will be clearer and easier if your equations look like mdvdt=mg&minus;kv2 instead of \"m*dv/dt=(mg-kv^2)\". edX uses MathJax to format discussion forum math content. To enter an inline math equation simply use a single dollar sign at the beginning and end of your equation, $dv/dt = mg - kv^2$ will produce dv/dt=mg&minus;kv2. With some additional MathJax syntax you can improve the display: $\\frac{dv}{dt} = mg - kv^2$ will produce dvdt=mg&minus;kv2. If you are familiar with MathML, TeX or LaTeX, you know the syntax already. Even if you've never used a markup language before, you can learn the basics in a couple of minutes. The edX DemoX course has a good reference on entering math on the forum with examples here. A good reference for MathJax can be found at http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference. ",
                                        "unit_id":"848e76961f184a0bad1fd5f834d60018",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a5f21dd3d5944c0eb10518ead812b415",
                                "vertical_name":"Entering and Displaying Math"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"b74b04cc760b4e6685678a796dbe4a02",
                "chapter_name":"Module 1: Modeling via Differential Equations",
                "sequentials":[
                    {
                        "sequential_id":"18a93dd2f90c427ba622382ddb993868",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Suspension bridge",
                                            "Web site",
                                            "Differential equation",
                                            "Equation"
                                        ],
                                        "data":" INTRODUCTION TO MODULE 1: Modeling via Differential Equations In the description of this course posted on the edX web site, we say Phenomena as diverse as the motion of the planets, the spread of a disease, and the oscillations of a suspension bridge are governed by differential equations. We begin this course with a discussion of what it means to model a phenomenon from our everyday lives using a differential equation. Our first example involves a skydiver, and we illustrate the choices that we make when we develop a model. Then we use differential equations to model the growth of the U.S. population in two different ways, and we use these equations to introduce our three-pronged approach to solving differential equations. We study differential equations and their solutions numerically, qualitatively, and if possible, symbolically. In this module we use some theory that will be discussed in subsequent modules, so don&rsquo;t be concerned if the logic does not seem to be rock solid at this time. ",
                                        "unit_id":"c3dd5ab313c0428f8239b7d32105c83b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"647045d0c7c1462883aabb18ffb23c22",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c51ababa1c3449d6972d1941ac084442",
                        "sequential_name":"Modeling via Differential Equations",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ordinary differential equation",
                                            "Left hand side",
                                            "Differential equations",
                                            "Differential equation",
                                            "Drag coefficient",
                                            "Mathematical modeling",
                                            "Falling bodies",
                                            "Drag force",
                                            "Dependent variable",
                                            "Constant acceleration",
                                            "Mathematical models",
                                            "Everyday life",
                                            "Gravitational constant",
                                            "Albert einstein",
                                            "Gravitational field",
                                            "Partial derivatives",
                                            "Real numbers",
                                            "Independent variable",
                                            "Minus",
                                            "Mg",
                                            "Mathematical formalism",
                                            "Mathematical model",
                                            "Modeling",
                                            "Squared",
                                            "Equation",
                                            "Process",
                                            "Air",
                                            "Acceleration",
                                            "Force",
                                            "Variable",
                                            "Mass",
                                            "Good",
                                            "Fall",
                                            "Term",
                                            "Solve",
                                            "Made",
                                            "Formalism",
                                            "Measured",
                                            "Discrete",
                                            "Increase",
                                            "Velocity",
                                            "Model",
                                            "Derivative",
                                            "Skydiver",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Mathematical modeling is the process of describing a phenomenon from our everyday life in mathematical formalism. This formalism can be discrete, such as when we use 0's and 1's to model the operation of a computer. Or it can be continuous, such as when we use real numbers to model the motion of the planets. The decision to use a discrete model, or a continuous one, is fundamental to the modeling process. Let's begin our discussion of modeling with a description of this process. This description is a tremendous oversimplification, but it is as good a place to start as any. We build the mathematical model by identifying the quantities to be studied and the mathematical relationships among them. If the model is discrete, then the quantities may be integers. If the model is continuous, then the quantities are often real numbers. The steps in building a model involve first stating the underlying assumptions, then identifying the relevant variables and parameters, and finally using the assumptions in the first step to formulate equations regarding variables in the second step. Now, when does this modeling process involve differential equations? Mathematical models that are expressed as differential equations involve assumptions about derivatives. In other words, the assumptions often include phrases such as the rate of change of or the rate of increase of. You should also watch for the words velocity and acceleration. For example, let's consider the motion of a skydiver falling through the air before she opens her parachute. We assume that her motion is subject to two forces, the force due to gravity and a drag force due to the atmosphere. We assume that the force due to gravity of this freely falling body is the product of its mass and its nearly constant acceleration. When we model the drag force, we follow the advice that is often attributed to Albert Einstein. Make everything as simple as possible, but not simpler. Often, we make the algebra as simple as possible. But that would be a mistake in this case. We assume that air resistance increases as the skydiver's velocity increases. However, there are many different ways to express this relationship. For example, we could choose a constant multiple, k times v, where k is the drag coefficient and v is the velocity. Or we could try k times v squared. Both expressions increase as v increases, so they satisfy the assumption. In fact, experiments confirmed that k times v yields a good model for falling bodies with low densities such as snowflakes, but k times v squared is a more appropriate model for a skydiver. The variables that measure the quantities in our models fall into three basic types-- the independent variable, the dependent variable or variables, and the parameters. In this course, the independent variable almost always measures time. There are situations where the independent variable is some quantity other than time. But for most of the examples we consider, the independent variable will be time. Each dependent variable measures a quantity that is a function of the independent variable. And the parameters are quantities that do not change with time or the independent variable, but that can be adjusted, perhaps by natural causes, or by a scientist running the experiment. In the example of the skydiver, the independent variable is t for time, measured in seconds. And the dependent variable is v for velocity, measured in meters per second. We use velocity as our dependent variable because we are expressing our drag force in terms of velocity. And we have three parameters. g is the gravitational constant, measured in meters per second squared. m is the mass of the skydiver, measured in kilograms. And k is the drag coefficient measured in kilograms per meter. Clearly, the gravitational constant is determined by the gravitational field of the earth. And consequently, it would not change unless we wanted to model something like skydiving on the moon. The mass, m, and the drag coefficient, k, may take different values depending upon different situations. We could have a different skydiver, or she could assume a different position as she falls. Now, we've made our assumptions, and we've picked our variables. So let's derive the model. The model is based on Newton's Second Law of Motion, force is equal to mass times acceleration. In this model, we are assuming there are two forces acting on the skydiver, the force due to gravity, which is mg, and the drag force, which is minus k times v squared. So mg minus kv squared is the force on the skydiver. Since acceleration is the derivative of velocity, mass times acceleration is m times dvdt. So m times dvdt is the right hand side of Newton's second law. And we obtain mg minus kv squared is equal to m times dvdt. And this is the differential equation that models the skydiver under the assumptions that we made at the beginning. Now, it's typical with differential equations to have the derivative term on the left hand side. And so I've rewritten the differential equation as m times dvdt is equal to mg minus kv squared. And this is a first order ordinary differential equation. It's a first order differential equation because it only involves a first derivative of v. And it's an ordinary differential equation because it does not have any partial derivatives in it. We solve it by finding a function or functions that satisfy the equation. At this point, we're going to hold off on studying this differential equation in more detail until we've introduced certain terminology and techniques. But eventually, we'll solve this equation in multiple ways. End of transcript. Skip to the start. ",
                                        "unit_id":"1dfed9e212444e88842a8ef5d2ef9489",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"42a0cbbbb58f4b25a8d7bafbb6ad8520",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Census bureau",
                                            "Web site",
                                            "Census",
                                            "Data"
                                        ],
                                        "data":" U.S. and World Population Clock: United States Census Bureau We are about to discuss two basic population models based on data provided by the U.S. Census. The U.S. Census Bureau has a population clock posted on its web site. We thought that you might also enjoy seeing the data as it is presented there. ",
                                        "unit_id":"df0a22e29a4947e4be0bf6fcf7b63426",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"869fd8f465634abfb5b46ae93fcfadbd",
                                "vertical_name":"Population Clock"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Malthusian growth model",
                                            "Exponential growth model",
                                            "Left hand side",
                                            "Growth rate",
                                            "Differential equation",
                                            "Radioactive decay",
                                            "Natural logarithm",
                                            "Horizontal axis",
                                            "Thomas malthus",
                                            "Vertical axis",
                                            "Population growth",
                                            "Independent variable",
                                            "Dependent variable",
                                            "Data points",
                                            "Population ecology",
                                            "Dt",
                                            "Exponential",
                                            "Dp",
                                            "Constant capital",
                                            "Model",
                                            "Based",
                                            "Good",
                                            "Error",
                                            "Side",
                                            "Ll",
                                            "Logarithm",
                                            "Measure",
                                            "Show",
                                            "Accurate",
                                            "Analytic",
                                            "Approximation",
                                            "Call",
                                            "Ve",
                                            "Variable",
                                            "Written",
                                            "Capital",
                                            "Range",
                                            "Proportional",
                                            "Data",
                                            "Population",
                                            "Divide",
                                            "Census",
                                            "Kt",
                                            "Constant",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here's data for a growing population. I've taken the results of the US Census from 1790 to 2010 and I've graphed it here. On the horizontal axis we have the year and on the vertical axis, we have the population. And it turns out that that's in millions. I'll show you the precise numbers later. Now I'd like you to imagine what you would do if you were asked to predict what the population would be in 50 years, or actually the results of the US Census in 50 years, if you were to use a differential equation to model this population growth. We're going to use two models based on different assumptions. And our goal is going to be to study how to go from these assumptions to models that involve differential equations. I'd like to emphasize that these examples are not state of the art models from population ecology, but they are good ones to consider initially. We will also begin to describe the analytic, qualitative, and numerical techniques that we will use to make predictions based on these models. Our approach in this module is meant to be illustrative only. We will discuss these mathematical techniques in much more detail throughout the entire course. Our first model is often called the Malthusian Growth Model. And it's based on an essay that was written by Thomas Malthus in 1798 in which he said, \"Population, when unchecked, increases in a geometrical ratio.\" So let's turn that into a differential equation. And we have the assumption that the growth rate of the population is proportional to the population. So first let's identify our variables. And our independent variable is going to be t, which is time. And it's useful to actually measure time from 1790. So we're going to take time and measure it in years since 1790. And our dependent variable is going to be p, which is the population. And we'll measure that in millions. OK, now we've picked the variables. Let's turn the assumption into a differential equation. The growth rate of the population, that's the derivative dp dt, and is proportional to the population. Well, there's really an implied word that's not stated here, and that's linearly proportional to the population. So we'll have a constant of proportionality times the population. And I want to emphasize that the differential equation is not dp dt is equal to k times t. That's an entirely different differential equation. We're interested in here, anyway, the differential equation dp dt is equal to k times p. And the first thing I'd like to do is I would like to show you an analytic technique for solving this differential equation. So let's take the differential equation. dp dt is equal to k times p. Put it up here. And what we're going to do is we're going to divide both sides by p. So if we divide both sides by p, we get 1 over p times dp dt is equal to k. And then what we can do is we can integrate both sides with respect to t. So when we do that on the left hand side, we get the integral of 1 over p dp dt dt. And on the right hand side, we get the integral of k dt. And on the left hand side, when we integrate we're basically doing the integral of 1 over p dp. And on the right hand side when we integrate k with respect to t, we get k times t plus another constant. And so I'm going to call that constant c. On the left hand side, we have a natural logarithm. Sometimes we say the natural logarithm of the absolute value of p. But since we're talking about a population that's positive, I'm just going to write natural logarithm of p is equal to k times t plus c. Now we're interested in finding a formula for p. So we'll exponentiate both sides. And we get p as a function of t is equal to e to the kt plus c where little k and c are constants. And we'll remember that e to the kt plus c can be written as e to the kt times e to the c. Since c is a constant, e to the c is a constant. And I'll call that constant capital K for now. And so we get capital K times e to the little kt. Now typically what we do at this time is we realize that if we evaluate this expression at 0, which is commonly written as p sub 0, we're going to get capital K because e to the 0 is just 1. So we end up with p of t is p0, the initial population, times e to the little kt. And this is an exponential and so often this differential equation is called an exponential growth model. So not only is it called a Malthusian Growth Model, it's often called an exponential growth model. Now I'd like to match up the data with the exponential growth model. And I'm going to begin with the results of the initial census. So that's p of 0 or p sub 0. And that's 3.9 million. Now, I can determine a value of k using any other result. And I'm going to use the result of the census in 1800. So that's p of 10. And the results of the census in 1800 was 5.3 million. And so we know that that's 3.9 times e to the k times 10. And now I'll solve for k. So I divide by 3.9. I get 5.3 divided by 3.9 is equal to e. And I'll write it as 10 times k. Then I will take a logarithm of both sides. I'll get the logarithm of 5.3 divided by 3.9 is equal to 10 times k. And then I'll divide by 10. And when I do this, I end up with k is equal to the 0.03067. And so what I've done over here is I have graphed p of t is equal to 3.9 times e to the 0.03067 times t. And I'm surprised by how accurate this approximation is over a range of 50 or so years. At 1850 the error is only about 6%. Of course it grows. At 1900 it's more like 47%. But still, that's a pretty good error over this range of values using only two data points. Now, before we talk about how to get a more accurate approximation over a wider range of times, I'd like you to do an exercise that involves an exponential decay model. Actually, radioactive decay. So I'd like you to do that exercise now. End of transcript. Skip to the start. ",
                                        "unit_id":"f8f2d8633cbc4b96b62055a9bc972344",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"436d89274803446db23a03017c377cee",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Exponential growth model",
                                            "Relative growth rate",
                                            "Growth rate",
                                            "Limited resources",
                                            "Model",
                                            "Relative",
                                            "Population",
                                            "Ll",
                                            "Grandkids"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In an attempt to model the US Census data over a wider range of t values, we're going to discuss the logistic population model. And the logistic population model takes into account the fact that populations cannot grow exponentially forever because we have limited resources. And so we adjust the assumptions and the exponential growth model to reflect this limitation. Now, we'll begin with the assumption for when the population is small. If the population is small, its growth rate is proportional to the size of the population. So that's just the assumption for the exponential growth model. But then we're going to add to that the idea that as the population increases, its relative growth rate decreases. Now this term relative growth rate may be new to you. So let me take a moment to discuss it. What is a relative growth rate? Well, the first thing I'll tell you is that a relative growth rate is not the number of cousins you have or the number of nieces and nephews or the number of grandkids or your number of great grandkids. It's a growth rate relative to the size of the population. So by that we mean the relative growth rate is equal to-- the growth rate, well, the growth rate is the derivative. But relative to the size of the population means you divide by the population. Of course, this is the same thing as 1 over p times dp dT. And I should point out that the exponential growth model is the same thing as saying that the relative growth is constant. So exponential growth model says the relative growth is constant, the logistic population model says that the relative growth rate is going to decrease as the population increases. Now, to get an understanding of relative growth rates, I would like you to do a somewhat unusual exercise and then we'll develop the logistic population model. End of transcript. Skip to the start. ",
                                        "unit_id":"3bce91801142405692ead2fd810aeab1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0957df7fb77a4b6ab0a47bb1e8f0385d",
                                "vertical_name":"Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Relative growth rate",
                                            "Logistic differential equation",
                                            "Population growth",
                                            "Logistic model",
                                            "Differential equation",
                                            "Numerical simulation",
                                            "Right hand side",
                                            "Carrying capacity",
                                            "Uniqueness theorem",
                                            "Left hand side",
                                            "Qualitative analysis",
                                            "Rate",
                                            "Horizontal axis",
                                            "Vertical axis",
                                            "Decreasing",
                                            "Equilibrium",
                                            "Technique",
                                            "Minus",
                                            "Ve",
                                            "Called",
                                            "Draw",
                                            "Ll",
                                            "Parabola",
                                            "Negative",
                                            "Axis",
                                            "Time",
                                            "Capital"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here we're more precise about what the logistic population model is. The logistic population model assumes that the relative growth rate decreases linearly as the population increases. So let's draw a picture. We'll draw a picture of a line. And that line will be in the p. And this axis will have the relative growth rate on it. So we're thinking about the relative growth rate decreasing as the population increases. Now traditionally, this point on the vertical axis is called k. And this point on the horizontal axis is called capital N. Now we have the relative growth rate is linear. So 1 over p dp dt is equal to a line. It has vertical intercept k. And let's say that its slope is m-- so m times p. So there's its slope. Of course, m is negative because we have the relative growth rate decreasing. But we can figure out what m is in terms of k and capital N, because as we go down, we go down k, over N. So we have 1 over p dp dt is equal to k. And now our slope is minus k divided by capital N times p. So what happens is that if we multiply through by p, we get the differential equation dp dt. And notice we have k in both terms here. So let's factor that out. We have the p that we multiplied through. And now we would just have a 1 there. And we would have a p divided by capital N. And this differential equation, dp dt is equal to k times p times the quantity 1 minus p divided by N-- this is called the logistic differential equation, or the logistic model, in this case, for population growth. Now what I'd like to do is to illustrate another of our techniques. We've illustrated what it means to be an analytic technique. Now what I'd like to do is illustrate what it means to be a qualitative technique. So I'm going to do what's called a qualitative analysis for the solution to this differential equation. And when we do a qualitative analysis, we're talking about the long-term behavior of the solutions. Here we have the differential equation dp dt is equal to k times p times the quantity 1 minus p divided by N. And I would like you to notice that the right-hand side does not involve t's. There are no t's on the right-hand side. And so the rate of change of p only depends on p. The other thing I'd like you to notice about the right-hand side is that it is quadratic in p. So what I've done down here is I've drawn a graph. So it's a graph of the right-hand side of the differential equation. So my axes are p and dp dt. And so I have a parabola. And that parabola crosses the p axis at the origin, 0, corresponding to that term. And it crosses the p axis at N, because if we put in N, we'll get 0 for the second term. So first of all, in our qualitative analysis I'd like to talk about the significance of these places where the graph of dp dt crosses the p axis. First of all, I'd like to consider what happens if we have p of 0 being equal to 0. Well, because the right-hand side of the differential equation does not involve t, we can conclude that dp dt is equal to 0 for all time. And if the derivative is equal to 0 for all time, that means the function is constant. We know that it has a value 0. So therefore, we know that p of t is equal to 0 for all t. Similarly, if we take p of 0 equal to capital N, then we know that dp dt is equal to 0 for all t. And since we have value capital N, we know that p of t is equal to capital N for all t. So these are two solutions to the differential equation that are constant for all time. Solutions that are constant for all time have a special name. They're called equilibrium solutions. Here's another picture. On the left-hand side is the parabola that you just saw. And on the right-hand side, we have a picture of the t-p plane. And in the t-p plane, we have the graph of two equilibrium solutions. And what I want to do here is emphasize that these two points on the left-hand side, where the graph of the parabola crosses the p axis, correspond to these two graphs of equilibrium solutions. So for example, p equals 0 corresponds to the equilibrium solution that's constantly 0 for all time. And p equals N corresponds to the equilibrium solution that's constantly N for all time. Let's continue on with our qualitative analysis. Let's go back to the graph of the parabola. And let's consider what happens if we have a value of p that is somewhere in between 0 and N. So in our third case, let's consider the situation where p 0 is between 0 and capital N. Now in this case, notice that the right-hand side of the differential equation dp dt is always positive. So dp dt is greater than 0. And if dp dt is greater than 0, then p of t is increasing. And it turns out that it's increasing for all time. So it's increasing for all time. Now I'm cheating a little bit here, because I'm using some theory that we haven't discussed yet. We'll take care of this when we discuss the uniqueness theorem in Module 6. But for the time being, just trust me. The solutions that start somewhere between 0 and capital N will be increasing for all time. And then finally, let's consider what happens if we have a value of p 0 that starts above capital N. So if p 0 is bigger than capital N, then what we have is dp dt becomes negative over on the right of capital N. So then dp dt is less than 0. And it turns out again, I need that theory, but it turns out that dp dt is less than 0 for all time. And therefore, I can conclude that p of t is decreasing. Now let's go over to the picture again, where I have both planes. I have my parabola. And again I have the t-p plane. And I've added to the picture. Before I just had the two equilibrium solutions. And now what I've done is I've added a graph of a solution that starts somewhere between 0 and N. And notice that it's asymptotic to p equals 0 in negative time. But in forward time, it's asymptotic to p is equal to capital N. I've also added a solution where p of 0 is greater than capital N. And what happens is that that solution is decreasing for all time. But notice both of these solutions that I've added in forward time are asymptotic to the solution that's constantly N. And there's a name for this number, capital N. It's called the carrying capacity of the logistic model. Now before we turn to a numerical simulation of the logistic population model for the United States population, I'd like you to do a qualitative analysis of a different differential equation. End of transcript. Skip to the start. ",
                                        "unit_id":"40db5b42c8f1451cb286dfa3352424b4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bc911fc7e6444a1c83080976967a421a",
                                "vertical_name":"Video 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Relative growth rate",
                                            "Logistic model",
                                            "Differential equation",
                                            "Numerical simulation",
                                            "Qualitative analysis",
                                            "Data point",
                                            "Estimate",
                                            "Data",
                                            "Derivative"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In addition to doing a qualitative analysis of the logistic model, I would like to do a numerical simulation of the logistic model applied to the US Census data. And by a numerical simulation, I mean that I would like to put the differential equation on the computer and get a sense of what the solutions look like and then I would like to compare that to the actual data. And to do that, I need estimates for the parameters k and n that appear in the differential equation. And therefore, the question becomes how do we approximate the relative growth rates from the data? And I'd like to start the discussion by considering approximating the relative growth rate at the year 1800. So at the year 1800, we have the data point 5.3 million and we would like to approximate the relative growth rate. So let's remember that the relative growth rate at 1800 is going to be the growth rate divided by the population. So it's going to be 1 over p times dp dt. At 1800 we know that the data point is 5.3, so we know how to calculate 1 over p. And the question becomes what do we do about this derivative right here? We don't have a formula for p of t. So we can't use the rules of differentiation to calculate dp dT. We need to estimate dp dT from the data. Now, this may be a little bit unfair, but I'd like you to try this estimate before we discuss this in more detail. But I'd like to give you a couple of hints. I've given you data over here, but I've given you more data than you need to do the approximation. The other hint that I'd like to mention is we're going to approximate the derivative basically by using the definition of what the derivative is. We're not going to use any theorems, we're going to just use the definition of the derivative. So go ahead and try to approximate the relative growth rate. And then we'll discuss what I would do. End of transcript. Skip to the start. ",
                                        "unit_id":"f09d690f04ec46168e560cf7f71f8d73",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bd0b8461cbee416eb2ebc42faa171588",
                                "vertical_name":"Video 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Relative growth rate",
                                            "Logistic model",
                                            "Numerical simulation",
                                            "Carrying capacity",
                                            "Decimal places",
                                            "Vertical axis",
                                            "Differential equation",
                                            "Data point",
                                            "Computer program",
                                            "Data points",
                                            "Rate",
                                            "Linear",
                                            "Procedure",
                                            "Time",
                                            "Population",
                                            "Approximation",
                                            "Graph",
                                            "Divided",
                                            "Year",
                                            "Computer",
                                            "Equation",
                                            "Data"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's continue our discussion of estimating the relative growth rate at 1800. Now, the relative growth rate is equal to the growth rate divided by the population. So it's 1/p times dp dt. And we're going to do the relative growth rate. We're going to estimate the relative growth rate at 1800. And what I'm going to do is I'm going to use the three data points that we have, the census results at 1790, the census results at 1800, and the result at 1810. And at 1800 the data point is 5.3 million. And so I know that I'm going to use my 5.3 million as p in the 1/p term. But I have to do something about dp dt. And I only have data at once every 10 years. So what I'm going to do is going to remember that the derivative dp dt is a limit as delta t goes to 0 of delta p over delta t. A limit as the change in time goes to 0 with the change in population divided by the change in time. Now, because I only have data once every 10 years, I can't really take a limit so I'm going to forget about that, and I'm going to use this as an approximation. And then the question becomes over what interval of time am I going to do this approximation. So what I'm going to do is approximate. Now, 1/p, I know that's going to be 1/5.3. But what about dp dt? Am I going to go from 1790 to 1800 or am I going to go from 1800 to 1810? Well, it turns out I don't want to bias the calculation either in forward time or in backward time. So I'm actually going to take a 20 year window that's centered around 1800. So I'm going to use the result at 1810. So that's 7.2. And I'm going to subtract the result at 1790. And so that's 3.9. And I'm going to divide by 20. So I'm going to do a calculation of delta p divided by delta t that's symmetric with respect to 1800. And then when I do this calculation, I get the estimate, which is 0.03113. And you should think about that as saying that the population is growing at the rate of approximately 3.1% per year. And that's how I'm going to do our estimates of the relative growth rates. Now, I have data from 1790 all the way out to 2010. And so what I can do is calculate, make these estimates for the relative growth rates all the way from 1800 down to 2000 using the same procedure. And what I'm going to do next is I'm going to graph this data. So here, let's graph it. There's something I want to emphasize about this graph. I'm graphing the relative growth rate versus the population. I'm not graphing the relative growth rate versus time. And the reason I'm doing this graph versus population is because the basic underlying assumption that makes the logistic population model is that the relative growth rate, 1/p dp dt, is linear in p. It decreases in a linear fashion. It is a function of the population. Now, in statistics there's a standard way of taking data like this and producing a line that's a best least squares fit for the data. I'm sure you can learn about that in edX courses that discuss linear regression. And in this case, I went to the computer and I calculated the line and that's what I got. Now, this is probably more information than we need, but it turns out the equation for this line is 0.0280801 minus 0.0000821116 times p. So we have the equation of a line that's the best least squares fit for this data. And it intersects the vertical axis at approximately 0.028. And it has a slope of approximately minus 0.000082. And that means that we have that intersection there. And then the other thing we would like to figure out, remember if you think back about the logistic population, that intersection right there is actually the k value, and this intersection right here is actually the N value. So we can determine k and N from the equation of this line. So we'll go over here. And here's our logistic model. I've moved the p over to the other side. And here's our equation for our line. And what I'm going to do is I'm going to solve for k and N. Now, it turns out that what I need to do to get k is I just need to factor out the 0.028 et cetera. So in this case, k is going to be 0.0280801, assuming we need that many decimal places. And then we want to remember that the N is in the denominator. Remember the other term is 1 minus p divided by N. We had k times p times 1 minus p divided by N. And so what we get is that 1/N is equal to the 0.0000821116 divided by 0.0280801. And so we see that N is approximately 342 million. So using this value of k and this value of N, we get a carrying capacity of about 342 million. And we're going to conclude our discussion of numerical simulation by entering this differential equation into the computer. And we're going to use what's called a numerical ODE solver. And that's a computer program that approximates a solution to the differential equation. And it uses a numerical approximation procedure that's similar to the one that we will study in module five. End of transcript. Skip to the start. ",
                                        "unit_id":"6fadfebc03c545129f4ac122e17303c9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e840c29de5984141b51043afd4579a7a",
                                "vertical_name":"Video 6"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Numerical algorithm",
                                            "Decimal places",
                                            "Long interval",
                                            "Independent variable",
                                            "Carrying capacity",
                                            "Qualitative analysis",
                                            "Dependent variable",
                                            "Differential equation",
                                            "Numerical approximation",
                                            "Logistic model",
                                            "Time interval",
                                            "Equation",
                                            "Model",
                                            "Solver",
                                            "Data",
                                            "Approximation",
                                            "Time",
                                            "Ve"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here's a numerical ODE solver that I use whenever I teach differential equations. Notice that I've already entered the differential equation. When we designed the solver, we kept development costs down by restricting the notation. The independent variable is always t and the dependent variable is always y. So here, I have dydt is equal to y times the equation for that line that we calculated just a moment ago. Probably with too many decimal places. I've also specified a viewing rectangle in the ty plane. My Ts range from 0 to 260. T equals 0 corresponds to the year 1790 and t equals 260 corresponds to the year 2050. I have Ys range from 0 to 360. I got to 360 after I calculated the carrying capacity of 342. And I figured 360 would show us everything that we want to see. I've also specified the initial data point. So at t equals 0, we have 3.9 million. I also have a value of delta t which is 0.0005. Now we'll discuss the significance of this delta t when we talk about the numerical approximation of solutions to differential equations in module five. When I click the solution button, the computer uses a numerical algorithm that involves the differential equation, the initial data point, and the value of delta t to produce an approximation to the solution. Note that when the computer uses this differential equation with these parameter values, it predicts that the value of the census in the year 2050 will be approximately 322 million. This value is too low, but it's not bad given that the assumptions that underline the model are very simple. If we lengthen the time interval, say, from 0 to 500, we see the carrying capacity that was predicted when we did our qualitative analysis, we see that the value of the carrying capacity is roughly 342 million. You might be curious to see how this graph relates to the data, so here's a slide for that. I've plotted the data along with the approximate solution to the differential equation that's given to us by the solver. Note that the data and the solution agree fairly well until just before 1950. Then for the next 50 years or so, the solution overshoots the data. And more recently, the data is larger than what the model predicts. The assumptions that underlie this logistic model are probably too simplistic to be used over a long interval of time, but this model serves as an informative example in any case. End of transcript. Skip to the start. ",
                                        "unit_id":"41fd008562f041ddb3157d459f070f2a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"198dfbb8662145cab5d6b3faeaa6104d",
                                "vertical_name":"Video 7"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0240ee140ad14697b9409b6d6848559f",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Differential equation",
                                            "Mathematical model"
                                        ],
                                        "data":" Conclusion to Module 1: Modeling via Differential Equations In this first module we used the example of a skydiver to illustrate what goes into building a mathematical model that is expressed in terms of a differential equation. Then we discussed two basic population models, mainly to illustrate what we mean when we talk about a three-pronged approach to studying differential equations. In Module 2, we introduce some terminology and a few basic principles that we will use throughout this course. In Modules 3&ndash;5, we are much more precise about our three-pronged approach. ",
                                        "unit_id":"565411fd8e334cf68b958b5e6b8c932b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"15a50ede0e064bfc98a8d0b6f167ac6e",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"aa8fcba37a174c33a802ca1bc2849f08",
                "chapter_name":"Module 2: What is a Differential Equation?",
                "sequentials":[
                    {
                        "sequential_id":"db0c77e8b05040ffb5335a3512f2acef",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Differential equation",
                                            "Equation",
                                            "Introduction"
                                        ],
                                        "data":" Introduction to Module 2: What is a Differential Equation? In this relatively brief module, we begin our systematic introduction to the subject of differential equations by discussing some terminology and making a few general observations. We discuss informally what a differential equation is and what it means to say that a function is a solution to that equation. We also discuss three straightforward principles that will turn out to be remarkably useful going forward. ",
                                        "unit_id":"efde236b80a8435d94503301cc766a50",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1dd4cb4ef40e4d7e8e31e2ea14832d2b",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a015701ca48e404ca9af9232d8bc49b6",
                        "sequential_name":"What is a Differential Equation?",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "First order differential equation",
                                            "Left hand side",
                                            "Differential equation",
                                            "Differential equations",
                                            "Initial condition",
                                            "Equation",
                                            "Initial",
                                            "Derivative",
                                            "Point",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here are six questions or comments that I would like to discuss informally before we start our more detailed study of differential equations. And let's begin with an obvious one-- what is a first-order differential equation? A first-order differential equation, dy/dt is equal to f of t and y, is an equation that we solve for an unknown function, or functions y of t. In other words, we want functions y of t such that dy/dt is equal to f of t and y. Now, at first glance, there seems to be a problem with this equation, if we just look at the variables involved. Since y is a function of t, we expect its derivative dy/dt to be written as a function of t. So on the left hand side, we just expect to see the variable t. On the right hand side we have a function f of t and y, which may depend on y as well as t. So on the right hand side, we may have t's and y's. So that seems to be a problem. The problem with this logic is that it ignores the dependence of y on t. And to make that dependence more explicit, we can rewrite the differential equation as dy/dt is equal to f of t comma y of t. Now, let's look at this equation in terms of a picture of a solution. Here's a graph of a solution, y of t. And on that graph, let's consider a point t comma y of t. Now, what this differential equation is saying is that the value of the derivative at that point-- which, of course, is the slope of the tangent line-- is equal to the number f of t comma y of t, given by the right hand side of the differential equation. And we expect that will hold for all points t comma y of t on the graph of a solution. Now, it takes a little bit of getting used to, this formula for a first-order differential equation. And we're going to talk about its geometric significance in more detail when we study slow fields in Module 4. Now I'd like to move onto a second question which is very much related to the first question. The second question is, what does it mean to solve an initial-value problem? An initial-value problem consists of the differential equation dy/dt is equal to f of t and y, along with an initial condition y of t0 is equal to y0. A solution to the initial-value problem is a function y of t defined on the interval from a to b that contains the value t0-- corresponds to the initial condition. And this function satisfies the differential equation dy/dt is equal to f of t and y for all t in the interval from a to b. It also satisfies the initial condition y of t0 equals y0. Let's take a look at some graphs of some solutions to our differential equation. What an initial condition corresponds to is a point in the plane t0, y0. And the solution to the initial value problem corresponds to a graph of a solution that goes through that point t0, y0. Now we'll pause so that you can do an exercise that will give you some practice with this all important equation dy/dt is equal to f of t comma y of t. End of transcript. Skip to the start. ",
                                        "unit_id":"745bfe79389a4aa8ae6dd871cb194ab3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"18465f73bb0944849a0414123ba93c65",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Differential equation",
                                            "Exponential functions",
                                            "Dependent variables",
                                            "Differential equations",
                                            "Quadratic functions",
                                            "Chain rule",
                                            "Independent variable",
                                            "Side",
                                            "Equation",
                                            "Agree",
                                            "Parameter",
                                            "Rule",
                                            "Ll",
                                            "Term",
                                            "Independent",
                                            "Change",
                                            "Expression",
                                            "Important",
                                            "General",
                                            "Form",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: The third point that I'd like to discuss is that you need to be careful about notation. The distinction between the independent and the dependent variables is important. Let's take a look at two differential equations. They're very similar to one another. They have one slight difference. The first differential equation is dy/dt is equal to 2 t. Now, from calculus, you know that if dy/dt is equal to 2 t, then y is equal to t squared plus c, where c is an arbitrary constant. So the solutions to this differential equation consist of this one parameter family of functions, y of t is equal to t squared plus c, where c is a parameter. Now, if we make just one slight change-- we take and replace the t with the y-- then we have the differential equation dy/dt is equal to 2 y. As you know, the solutions to this differential equation are y of t is equal to y0 e to the 2t, where y0 is now an arbitrary constant, so you have a different one parameter family of solutions. The solutions to Example 1 are quadratic functions. The solutions to Example 2 are exponential functions, where you're experiencing exponential growth. So one slight change in the differential equation-- replacing the independent variable with the dependent variable-- leads to significantly different solutions. The fourth item that I'd like to talk about is, what does the term general solution mean? We'll use this term general solution throughout the course. Now, it's surprising, actually, that there's no universally accepted definition of this term. So we're going to follow the convention that whenever we say the general solution of a differential equation, we're going to talk about all possible solutions to all possible initial-value problems. That's not always what is meant by the term, but that's what we're going to take as its meaning. Now, if we go back to the two examples that we just discussed, the first example, dy/dt was equal to 2 t-- in that case, it turns out that the general solution of this differential equation is the one parameter family of functions, y of t is equal to t squared plus c, where c is an arbitrary constant. In Example 2, dy/dt is equal to 2 y, the general solution consists of all functions of the form y0 e to the 2t, where y0 is an arbitrary constant. Notice in both cases that the general solution involves an arbitrary constant. This is typical of general solutions, as opposed to initial-value problems. The fifth point I'd like to discuss is one that's extremely important. And I like to say it this way-- we should never, ever get a wrong answer in this course. And by that, I mean that we're always able to check that if we are given a function, that it's a solution to a differential equation. For example, by differentiating, we can verify statements such as, all functions of the form y of t equal to y0 e to the 2t, where y0 is an arbitrary constant, are solutions to the differential equation dy/dt is equal to 2 y. Let me elaborate on what I mean by this. Let's take the differential equation dy/dt is equal to 2 y. On the left hand side, we have the derivative of y, and so we'll calculate that derivative using the chain rule. So dy/dt is equal to y0 e to the 2t times 2. On the right hand side of the differential equation, we have 2 times y. Well, that's 2 times y of t, so that's equal to 2 times y0 e to the 2t. And if you look at both sides of the equation, you notice that they're the same. So we have equality, and that means that y of t is a solution to this differential equation. So just to recap, what we're saying is that on the left hand side, we have the derivative, and that's calculated using the rules of differentiation. On the right hand side, we have, in this case, 2 times y. We have an expression involving the function, and just by using algebra, we know that's 2 times y0 e to the 2t. But the fact that these two expressions agree tells us that we have a solution to the differential equation, that all of the functions of the form y of t equal to y0 e to the 2t are solutions. Now let's just change the function slightly and see if it still satisfies the differential equation. Let's consider functions of the form y of t is equal to y0 e to the 2t plus 1. In other words, let's just add one to the formula that we had before. We consider the differential equation dy/dt is equal to 2 times y. And once again, on the left hand side we compute the derivative, and by the chain rule we get, once again, that the derivative is y0 e to the 2t times 2. On the right hand side, we calculate 2 times y. And so we take 2 times our function y of t, and that's y0 e to the 2t plus 1. Now, in this case, we notice that these two expressions do not agree. They differ by 2. And so, therefore, the functions of the form y of t, which is equal to y0 e to the 2t plus 1, are not solutions to this differential equation. It turns out that this observation is extremely useful, even though it's an easy one to apply. And now we would like you to do an exercise where you use this observation. But don't be surprised if this exercise seems very similar to the one that you've already done in this module. End of transcript. Skip to the start. ",
                                        "unit_id":"6e2cc3a665cf4e2fbbb58dfbb875a062",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cafb4ba234de45c7ab1ff98c8f563673",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Logarithmic functions",
                                            "Existence theorem",
                                            "Rational functions",
                                            "Exponential functions",
                                            "Square root",
                                            "Trig functions",
                                            "Approximation",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: We end this module with an observation that is much more subtle than the preceding ones. Even some relatively simple differential equations have solutions that cannot be expressed in terms of the functions that we know and love. Now, you may know and love different functions than I do, so let me be more precise. By know and love, I mean the functions that we typically encounter in a calculus course, and those are the polynomial functions, the rational functions, the trig functions, the exponential functions, logarithmic functions, roots-- such as square root and cube roots-- and combinations of these functions. Now, for an example, let's consider the initial value problem dy/dt is equal to y cubed plus t squared where y of 0 equals 0. Now, we will learn the theory that tells us that this initial value problem has a solution, and we will also learn the numerical techniques by which we can calculate an approximation to this solution. This graph on the right is an accurate approximation to the solution to this initial value problem. Now, it turns out that this solution cannot be expressed in terms of the functions that we know and love. The question of how we know this fact is one that I would like to leave for another day. Basically, I'd like you to trust me on this. Now, there's also no standard name for this solution. So we could give it a name. We could call it the \"edxmath226 function.\" But that would not give us any information about it. Now, you'd be well-served if you keep the six items that were mentioned in this module in mind throughout the course, and that's especially true for the no wrong answers principle. In the next four modules, we will illustrate how we study differential equations using analytic techniques, geometric techniques, numeric techniques, and we will discuss two important theoretical results-- the existence theorem and the uniqueness theorem-- for solutions to differential equations. End of transcript. Skip to the start. ",
                                        "unit_id":"cf2406adb00e43ee8742772a9fbb2136",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f54e9a702d464099af84e623e72f6be3",
                                "vertical_name":"Video 3"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"f20795acb69944bf9a0d68aafcdbad05",
                "chapter_name":"Module 3: Separation of Variables\u2014An Analytic Technique",
                "sequentials":[
                    {
                        "sequential_id":"de59dae8522045178f4ed00939ba6b85",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Introduction to module 3: Separation of variables In this module we illustrate what it means to study differential equations analytically by developing the method of separation of variables. We use the method of substitution from calculus to derive closed-form solutions for a certain type of differential equation&mdash;the ones that are \"separable.\" ",
                                        "unit_id":"3100836ccd404fc8b556bc6b9af69e16",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8c1dd3ed3ddd481086701f98298752dd",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"bddb8138caa34a59bf4bb1997a8548e3",
                        "sequential_name":"Separation of Variables",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Computer algebra system",
                                            "Indefinite integrals",
                                            "Chain rule",
                                            "Indefinite integral",
                                            "Cosine function",
                                            "Squared",
                                            "Calculus",
                                            "Equation",
                                            "Cosine",
                                            "Function",
                                            "Substitution",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's begin our discussion of separable differential equations by recalling the method of substitution for calculating indefinite integrals. Let's begin with the example the integral of cosine of t squared dt. Now, this integral is difficult in the sense that it cannot be solved by any of the standard techniques for calculating indefinite integrals that we learn in a standard calculus course. We can draw its graph, but we cannot express it in terms of the functions that are typically used in a calculus course. If we ask a computer algebra system, such as WolframAlpha, to compute this integral, we get an answer that's expressed in terms of the Fresnel C function. That's definitely not one of the functions that we tend to encounter in standard calculus courses. However, if we modify the integral just slightly and consider the integral of cosine of t squared times 2t dt, we get an integral that's much easier to calculate. We can do a substitution. We can let u be equal to t squared. Then du would be equal to 2t dt. And if we make that substitution, then the integral of cosine of t squared 2t dt becomes the integral of cosine of u du. And we know the integral of cosine of u. That's sine of u plus k. And then we convert back to the standard variables that we began with u is equal to t squared. So we get sine of t squared plus k. Now, we can always check whenever we do an indefinite integral. And we can calculate the derivative with respect to t of sine of t squared using the chain rule. And we get cosine of t squared times 2t by the chain rule. Now, this check that we do right here is basically the no wrong answers principle applied to indefinite integrals as we discussed in module 2. Let's use the example to illustrate the notation that's commonly used for the method of substitution. In the example, we let u be equal to t squared and then du is 2t dt. And we have the integral of cosine of t squared times 2t dt is equal to the integral of cosine of u du. Now, we typically call cosine of t squared little g of u. In this case, little g is the cosine function. And then 2t is du/dt. So we can summarize this abstractly by saying that the integral of little g of u, du/dt integrated with respect to t, is the same thing as the integral of little g of u du. And then if capital G is an antiderivative of little g, this is equal to capital G of u plus an arbitrary constant k. So this second equation holds where capital G prime of u is equal to little g of u. So these two equations are the way that we commonly write the method of substitution. So this is the method of substitution. Now, since the analytic technique for solving separable equations is based on the method of substitution, I would now like you to review the method by doing one integral that involves substitution. Then we'll apply the method of substitution to solve what are called separable differential equations. End of transcript. Skip to the start. ",
                                        "unit_id":"defb65444b594ecea13884df4d4397a0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"28d042e35acc408db8d491e54d786da7",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Separable differential equation",
                                            "Differential equations",
                                            "Differential equation",
                                            "Quotation marks",
                                            "Side",
                                            "Called",
                                            "Equation",
                                            "Separable",
                                            "Form",
                                            "Function",
                                            "Ll",
                                            "Cubed",
                                            "Substitution",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Now let's solve some differential equations using the method of substitution. And the type of differential equation that we're going to solve using this method is called a separable differential equation. A differential equation of the form dy/dt is equal to f of t and y is separable if the right hand side, the f of t and y can be written as the product of two functions-- one function f 1 of t that depends solely on t and another function f 2 of y that depends solely on y. Now technically, we're allowed to have either f 1 of t or f 2 of y just be constants, but usually we'll have an f 1 of t and f 2 of y that are not constants. Now if we have a separable differential equation, we can solve it using the method of substitution by what's called separating variables. And what we do is we take the f 2 of y and we divide both sides of the differential equation by f 2 of y. And so we end up with 1 over f 2 of y times dy/dt is equal to f 1 of t so that we don't have to just keep rewriting the fraction 1 over f 2 of y-- I'm just going to call 1 over f 2 of y, I'm just going to call that g of y. So we have on the left hand side g of y times dy/dt. Now the method of substitution comes into play when we integrate both sides of this equation with respect to t. So on the left hand side we have the integral of g of y dy/dt integrated with respect to t. And on the right hand side we have the integral of f 1 of t d t. Now it's this integral on the left hand side that should remind you the method of substitution, except that there's a y instead of a u. Now in the method of substitution integral, on the left hand side is the integral of g of y d y and so separating variables consists of realizing that these two integrals-- the integral of g of y d y is equal to the integral of f 1 of t d t. Now when you close the word solved in quotation marks, because no one says, we'll be able to calculate either of these two integrals. And even if we can, we may not be able to solve the integral on the left hand side explicitly for y of t. However, these are technical details that we'll leave to the exercise set for this module. Now clearly to be able to use this method, you need to be able to identify whether a differential equation is separable or not. So let's consider two examples. For the first example, let's consider dy/dt is equal to minus 2 t times y squared. Now the right hand side can be written as minus 2 t times y squared. The minus 2 t is a function solely of t and y squared is a function solely of y. Now because we're able to write the right hand side as this product this equation is separable. Now we could put the minus 2 with the t, like I did. We could put the minus 2 with the y squared. That's not important. Let's compare that to the example dy/dt is equal to y cubed plus t squared. Now, you might be tempted to take the y cubed and move it over to the left hand side so dy/dt minus y cubed is equal to t squared. Now you have all of the Y's on the left hand side and all of the T's on the right hand side, but unfortunately the left hand side is not of the form some function g of y times dy/dt. The y cubed term does not involve dy/dt. So this equation is not separable and is not amenable to the method of separation of variables. Now at this point, we'd like you to do an exercise that will give you some practice identifying whether a differential equation is separable or not. End of transcript. Skip to the start. ",
                                        "unit_id":"488b4e3e18db404aa7533883daf33ff9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"dc168fabac334d2cb0cd2565f6d202d3",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Separable differential equation",
                                            "Left hand side",
                                            "Differential equation",
                                            "Chain rule",
                                            "Minus",
                                            "Side",
                                            "Integral",
                                            "Ve",
                                            "Constant",
                                            "Squared",
                                            "Ll"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's separate variables on a differential equation dy dt is equal to minus 2t times y squared. Now we've rewritten the right hand side as minus 2t times y squared. So we have a separable differential equation. And we separate variables by dividing both sides by y squared. And we obtain 1 over y squared times dy dt is equal to minus 2t. And by the method of substitution we have the integral of 1 over y squared dy is equal to the integral minus 2t dt. Now 1 over y squared is the same thing as y to the minus 2. And so the integral of 1 over y squared dy is y to the minus 1 divided by minus 1. On the right hand side, the integral of 2t is t squared. And so we have minus t squared plus c, where c is any constant. We have an arbitrary constant with either integral, but we only need to put the arbitrary constant on one side or the other. Now we can multiply through by minus 1 and get y to the minus 1 is equal to t squared minus c. And we can take y to the minus 1 . Think about that as 1 over y. We can write that as equal to t squared. I don't like minus signs, so I'll just call it plus k. If c were any constant, then minus c could be any constant. And so we'll let k be any constant. The last step is to invert the fraction 1 over y, and so we end up with y of t as 1 over t squared plus k, where k is any constant. Now this is a good place to remember the no wrong answers principle. And let's apply it to this one parameter family of functions y of t is equal to 1 over t squared plus k. Now remember the differential equation is dy dt is equal to minus 2t times y squared. Now, we'll take this function, which is same thing as t squared plus k to the minus 1, and we'll calculate its derivative. So by the chain rule its derivative is minus 1 times t squared plus k to the minus 2 times 2t. And of course we could rewrite that as minus 2t all over t squared plus k squared. Now on the right hand side, we have minus 2t times y squared. Well, y is equal to 1 over t squared plus k. So y squared is 1 over t squared plus k squared. And so what we've got is minus 2t all over t squared plus k squared. Now notice we end up with the same thing on the left hand side as the right hand side. And so we have checked that this one parameter family of functions consists entirely of solutions to the differential equation. Now we would like you to use this formula to solve some initial value problems related to this differential equation, and then we'll look at some graphs. End of transcript. Skip to the start. ",
                                        "unit_id":"1e99d68ff66e498c8ca1158305819f06",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"eb2908e76891400b8e3db80dcf762c31",
                                "vertical_name":"Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Differential equation",
                                            "Vertical asymptote",
                                            "Initial conditions",
                                            "Vertical asymptotes",
                                            "Initial condition",
                                            "Square root",
                                            "Open interval",
                                            "Real numbers",
                                            "Good time",
                                            "Minus infinity",
                                            "Constant function",
                                            "Left",
                                            "Initial",
                                            "Minus",
                                            "Move",
                                            "Domain",
                                            "Infinity",
                                            "Squared",
                                            "Function",
                                            "Constant",
                                            "Time",
                                            "General"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Now let me summarize a couple of the calculations that you just made. For the differential equation dy dt is equal to minus 2t times y squared, you satisfied the initial condition y of 0 equals a half. And you obtained the formula y of t is equal to 1 over t squared plus 2, which has a domain from minus infinity to infinity. In other words, all real numbers t. For the initial condition y of zero equals minus a half, you obtained the solution y of t is equal to 1 over t squared minus 2, with a domain from minus the square root of 2 less than t less than the square root of 2. Now let's look at some graphs corresponding to the solutions that we just calculated. But before we do that, let's see how the solutions in general depend upon the initial condition. Solutions such as this one I defined for all time, however there are other solutions that have a vertical asymptote on the right, as well as solutions that have a vertical asymptote on the left. If we move the initial condition below the t axis, then we have vertical asymptotes both on the left and on the right. Now let's go to the initial conditions that we just calculated. t equals zero, and y equal to a half. And we have the formula y of t is equal to 1 over t squared plus 2. t squared plus 2 is never equal to zero. And so we have a solution that's defined for all time. Now we'll move to the other initial condition where y of zero is equal to minus a half. And we have vertical asymptotes. The formula is y of t is equal to 1 over t squared minus 2. 1 over t squared minus 2 is not defined at t equal to plus or minus the square root of 2, and so we have these two vertical asymptotes. Now let's discuss two more initial conditions. First of all we'll bring the y value back two a half, but now we'll pick a t value equal to minus 2. And notice we get a solution over here on the left hand side above the t axis that has the same vertical asymptote as the left hand vertical asymptote for the initial condition y of zero is equal to minus a half. One more initial condition, let's make t equal to 2. And we get another graph over here that has a vertical asymptote on the left hand side. And that vertical asymptote is the same as the vertical asymptote corresponding to the solution where y of zero is equal to minus a half, for that graph on the right hand side. So these three initial conditions give us three solutions that seem to have a lot in common. And the reason for that is because they all satisfy the formula y is equal to 1 over t squared minus 2. However, we think about these three graphs as being three separate solutions to the differential equation. They correspond to three different initial conditions, but more importantly we think about the solutions to a differential equation as being differentiable. And so therefore they would be continuous. But this formula, the y of t is equal to 1 over t squared minus 2 has vertical asymptotes. And so we have discontinuities at t is equal to minus the square root of 2, and t is equal to plus the square root of 2. Now we'll examine this phenomenon in more detail when we discuss the existence and uniqueness theorems in Module 6. Let me summarize some of the things that I said while I was working on the computer. For the differential equation dy dt is equal to minus 2t times y squared, and the initial condition y of zero equals one half, the solution is y of t is equal to 1 over t squared plus 2. And that solution has a domain that consists of all real values of t. For the three initial conditions, y of minus 2 is equal to a half, y of zero is equal to minus a half, and y of 2 is equal to a half, the formula for the solution is y of t is equal to 1 over t squared minus 2. For the first initial condition, y of minus 2 equals a half, the domain consists of all t's less than minus the square root of 2. For the second initial condition, y of zero equals minus a half, the domain consists of all t's between minus the square root of 2 and plus the square root of 2. The open interval from minus the square root of 2 to plus the square root of 2. And for the third initial condition, y of 2 equals a half, the domain consists of all t's greater than the square root of 2. And we think of these three initial conditions as generating three different solutions to the differential equation. Now this leads to a question, what is the general solution of the differential equation dy dt is equal to minus 2t times y squared? Well, when we separated variables, we obtained the formula y of t is equal to 1 over t squared plus k, where k is any constant. But if we think about the differential equation, it's perfectly well-defined for all t's and y's for the entire initial conditions in the entire ty plane. So what if the y value is equal to zero? Think about this formula, 1 over t squared plus k can never be equal to zero. And so we don't have all possible solutions to all possible initial conditions. And so we have to think about this a little bit, then you realize that if you add the function y of t is equal to zero for all t, that's an equilibrium solution. It's a constant function, so its derivative is equal to zero. And if y is equal to zero, then minus 2ty squared is equal to zero. So this equilibrium solution also satisfies the differential equation. Now once we add in this equilibrium solution to the list of solutions, then we can solve all possible initial value problems, and we end up with all possible solutions. So this is what we will call the general solution. Now you will sometimes hear people say that the general solution to this differential equation is y of t is equal to 1 over t squared plus k, but we're going to follow the convention that the general solution consists of all functions of the form 1 over t squared plus k, where k can be any constant, along with the equilibrium solution y of t equals zero. Now this is a good time for you to use the method of Separation of Variables to solve a differential equation. End of transcript. Skip to the start. ",
                                        "unit_id":"f93124f4821840ba8d8382bfcdfedb69",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e67236bf64704ac6b1832061f3f80404",
                                "vertical_name":"Video 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "First order differential equations",
                                            "Differential equations",
                                            "Differential equation",
                                            "Natural logarithm",
                                            "Hot chocolate",
                                            "Independent variable",
                                            "Right hand side",
                                            "Left hand side",
                                            "Ambient temperature",
                                            "Initial condition",
                                            "Room temperature",
                                            "Logarithm",
                                            "Ll",
                                            "Technique",
                                            "Analytic",
                                            "Alpha",
                                            "Proportional",
                                            "Exponential",
                                            "Behavior",
                                            "Variable",
                                            "Side",
                                            "Temperature",
                                            "Newton",
                                            "Room",
                                            "Initial",
                                            "Minus",
                                            "Time",
                                            "Equal",
                                            "Capital"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's consider a problem that involves the cooling of a cup of hot liquid while it sits in a room at room temperature. Now, such a situation is governed by what's called Newton's law of cooling. And Newton's law of cooling says that the rate of cooling of an object is proportional to the difference between the current temperature and the ambient temperature. Suppose we have a cup of hot chocolate that is initially 70 degrees. And it's sitting in a room of an ambient temperature of 20 degrees. Suppose that at time zero, it's cooling at the rate of five degrees per minute. We could ask, how long does it take for the hot chocolate to cool to a temperature of 40 degrees? First, let's express the scenario as an initial value problem. And we need some variables. The independent variable is time. So let's let little t represent time in minutes. And we're interested in the temperature of the hot chocolate. So let's let capital T be equal to the temperature of the hot chocolate. Now, Newton's law of cooling says that the rate of cooling-- so d capital T d little t is proportional to-- we're going to use alpha as a constant of proportionality. Alpha times the current temperature, which is capital T, minus the ambient temperature, which is 20. And we also have an initial condition of capital T at time 0 is equal to 70. Now we need to know the constant of proportionality . And we're given that at time zero, the hot chocolate is cooling at the rate of 5 degrees per minute. So d capital T, d little t at time 0 is equal to alpha times the temperature at time zero is 70. So we have 70 minus 20. And we're given that that's equal to minus 5. Now we have alpha times 50 is equal to minus 5. So we divide through by 50. And this tells us that alpha is equal to minus 1/10. Or we can write that as minus 0.1. So we have the initial value problem, d capital T, d little t is equal to minus 0.1 times capital T minus 20. And at time zero, we have a temperature of 70. So there's our initial value problem that corresponds to this scenario. We can separate variables in the differential equation. We can divide both sides by capital T minus 20. And we get 1 over capital T minus 20, times the derivative of capital T with respect to little t, is equal to minus 0.1. And then we can integrate both sides. On the left, we get the integral of 1 over capital T minus 20, d capital T. And on the right, we get the integral of minus 0.1 d little t. And when we integrate on the left-hand side, we get the natural logarithm of capital T minus 20. And when we integrate on the right-hand side, we get minus 0.1 times little t plus a constant, k. Now we want to get rid of the natural logarithm. So we'll exponentiate both sides. And we get capital T minus 20 is equal to e to the minus 0.1 times little t plus k. Now we'll remember the fact that the exponential of a sum is the product of the exponentials. And also, e to a constant is just going to be another constant. So this is equal to k1 times e to the minus 0.1 times t. At this point, it would be helpful to determine the value of this constant, k1. And to do that, we'll remember the fact that the temperature at time zero was 70 degrees. So at t equals zero, at time zero, we have capital T equal to 70. And therefore, capital T minus 20 is going to be 50. And if we put in little t is equal to zero, the exponential will just be one. And so we'll get k1. And so we see that k1 is equal to 50. Therefore, we have that capital T, little t is equal to-- we move the 20 over to the other side-- 20 plus 50 e to the minus 0.1t. And this formula is the formula for the solution to the initial value problem. Now let's use this formula to find the value of time where the temperature's equal to 40. So all we have to do here is solve for little t. We have 40 is equal to 20 plus 50 e to the minus 0.1 times little t. We subtract 20 from both sides. We get 20 is equal to 50 e to the minus 0.1 times little t. And then we divide both sides by 50 and take a logarithm. So we get the natural logarithm of 20 over 50, or 2/5, is equal to minus 0.1 times little t. And then we divide through by minus 0.1, which is the same thing as multiplying by minus 10. And so we get minus 10 natural logarithm of 2/5 is equal to little t. Now, this makes sense, because the natural logarithm of 2/5 is negative. And so we end up with a positive value for time. Now, this value of t is approximately 9.2 minutes. I'd like to make two points about the calculations we just did. We produced a solution, capital T of little t is equal to 20 plus 50 times e to the minus 0.1 times t. And I'm drawing its graph here twice. On the left-hand side, I want to indicate the calculation that we did when we calculated when the temperature was 40 degrees. We had capital T value of 40. We're going over to the graph, went down. We got that little t was approximately 9.2 minutes. On the right-hand side, I've drawn in a dashed line corresponding to capital T equals 20. And we can see that the formula for capital T, which has a decaying exponential term in it, satisfies the property that capital T of little t tends to 20 as little t goes to infinity. In other words, we say that the long-term behavior of this solution is that it is asymptotic to 20 as little t goes to infinity. The technique of separating variables that we learned in this module is the first analytic technique that we study in this course. For us, the word \"analytic\" means that we obtain formulas for solutions. As we discussed in Module 2, there are differential equations that are not amenable to any analytic technique. In the next two modules, we will discuss methods for understanding the behavior of solutions that apply to all first-order differential equations. End of transcript. Skip to the start. ",
                                        "unit_id":"c1bfc3896bca4635a5e4d88057c2609f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7949ac7f191f4fba8a8597b3f55ea616",
                                "vertical_name":"Video 5"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"f1e5593a29b047acae9a10b0b7b3d4ac",
                "chapter_name":"Module 4: Slope Fields\u2014A Geometric and Qualitative Technique",
                "sequentials":[
                    {
                        "sequential_id":"cd8c6e1eb4b54829bb00a47cb4877cd8",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Slope field",
                                            "Equation"
                                        ],
                                        "data":" Introduction to Module 4: Slope Fields&mdash;A geometric technique In this module we discuss how we study differential equations qualitatively by introducing a geometric object that's called the slope field of the equation. The slope field is a picture of the differential equation, and you can use it to visualize how the equation generates its solutions. ",
                                        "unit_id":"c1ba4619998c48fd8feab5486a7cc350",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"80e358d9b12448e7a665178bfc328c4f",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f720d55a54ea4c78be36307414ab26c8",
                        "sequential_name":"Slope Fields",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Separable differential equation",
                                            "Line segments",
                                            "Differential equation",
                                            "Left hand side",
                                            "Right hand side",
                                            "Slope field",
                                            "Tangent line",
                                            "Initial condition",
                                            "Computer program",
                                            "Field",
                                            "Slope",
                                            "Initial",
                                            "Plane",
                                            "Tangent",
                                            "Ve",
                                            "Notice",
                                            "Ll",
                                            "Software",
                                            "Case",
                                            "Computer"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: A slope field in the t, y plane is a picture of a first order differential equation, dy dt is equal to f of t and y. And let me explain what I mean by that. Let's consider a graph of a solution, so y is equal to y of t for a solution to the differential equation. And suppose that we take a point on that graph. Suppose the coordinates of that point are t1 and y1, where y1 is equal to y of t1. Then because the function y of t is a solution to the differential equation, and dy dt is going to be equal to f of t and y. And so the slope of the tangent line, which is equal to the value of the derivative, has got to be given by the right-hand side of the differential equation. So the slope of that tangent line is equal to f of t1, y1. Now, if we take another point on the graph, say, t2, y2 where y2 is equal to y of t2. And we draw a line tangent to the graph at that point, then the slope has to be equal to f of t2, y2. And the point is that there's nothing terribly special about t1, y1, or t2, y2. At any point on that graph, the slope of the tangent line has got to be given by f of t and y. So no matter where we are located on that graph, the slope of the tangent line is given by the right-hand side of the differential equation. Now, we think of the right-hand side of the differential equation as defining a slope field. And by that we mean these little line segments that are tangent to the solutions, and the slopes of these little line segments are given by the right-hand side of the differential equation. And then for graphs of solutions they must be everywhere tangent to this field of slope lines. Now, it would help if I do a particular example. And I'm going to do one both by hand, and then I'm going to turn to the computer where it will be easier to see the geometry involved. So let's go to an example. Let's take the differential equation dy dt is equal to minus t2 times y squared. That's a separable differential equation that we already studied. And to have a particular solution in mind, let me take the initial condition y of 0 equals 2. Now, we've already separated variables on this example. And so in this case, we know that the solution to the initial value problem is y of t is 1 over t squared plus a 1/2. But I've illustrated the picture that I showed you a moment ago, in the abstract case, for this example, at three points. And the points I took were (-1, 2/3) (0,2) which is the initial condition, and (1, 2/3) And I've made a table here on the left-hand side. Now, remember that the right-hand side of the differential equation is minus 2t times y squared. And so what I've done is I've taken my ty values and plugged them into my f of t and y. For example, at 0, 2, I'm going to get 0 as a result because of the 0 in the formula. If I were to plug in minus 1, 2/3, then I would get 8/9. And if I were to plug in 1 comma 2/3, I would get minus 8/9. So this second column here, right here, my f of t and y column, is given by the right-hand side of the differential equation. Now, because this formula y of t is my formula for the solution, it turns out that if I calculate the derivative-- which I'm not going to bother to do, we've basically already done that. If I calculate the derivative and evaluate that derivative at the corresponding t values, I'll notice I get exactly the same numbers. And the reason I get exactly the same numbers is because this graph is a solution to the differential equation. This formula is a solution to the differential equation. Now, the slope field is going to consist of infinitely many slope marks, but you're starting to see it in this example by the three red line segments that I've drawn. And so the slope field will consist of infinitely many of these red line segments. And they'll all be determined by the right-hand side of the differential equation. Now, let me turn to the computer and illustrate this and have the computer do the calculations. And we'll be able to see the slope field more easily. Now, here's essentially the same picture as we just saw, except now it's inside of the software we use for teaching differential equations. We have the graph of the solution. And we have the three slope marks that we discussed before. Now, we've done something slightly unusual with this software. At the end of the cursor, we've put a slope mark. And as we move this cursor around in the ty plane, the computer program uses the right-hand side of the differential equation, in this case, minus 2t times y squared to determine the slope of the slope mark. So you notice if we're on the t-axis, we get a slope of 0. If we're on the y-axis, we get a slope of 0. If we're to the left of the y-axis, we get positive slope. If we are to the right of the y-axis, we get a negative slope. Now, the fact that this graph is the graph of a solution means that as we move along the graph the slope marks are always tangent to the graph. Now, what I'm going to do now is I'm going to take away the graph and show you a picture of the slope field. And so notice, as we move through the plane, we have the software computing the slopes that correspond to the slope marks in the slope field. So we go along the t-axis, we get horizontal slope marks. We go along the y-axis, we also get horizontal slope marks. To the left of the y-axis, we get slope marks that have positive slope. To the right of the y-axis, we have slope marks that correspond to negative slopes. And the slope field consists of infinitely many of these slope marks. In theory, there's one slope mark for each point in the ty plane. And the graphs of the solutions to the differential equation are always tangent to the slope field as they move through the ty plane. At this point, we have a brief exercise where you work with a different differential equation and you draw some slope marks. End of transcript. Skip to the start. ",
                                        "unit_id":"f49cc33880534f40b590bc2dece07b83",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f3485ed95f894e2a949fe8ad0fbcacc6",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Separable differential equation",
                                            "Differential equation",
                                            "Good job",
                                            "Initial conditions",
                                            "Initial condition",
                                            "Slope field",
                                            "Straight line",
                                            "Left side",
                                            "Slope",
                                            "Show",
                                            "Calculate",
                                            "Ll",
                                            "Enter",
                                            "Target",
                                            "Computer",
                                            "Minus",
                                            "Line",
                                            "Left"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here's the answer to the exercise, as shown in the software. The slope mark at 0,0 has slope 0. The slope mark at 1,0 has slope minus 1. The slope market at -1,0 has slope 1. And the slope mark at 0,1 also has slope 1. Now we can use the software to get a sense of what the slope field is like by sampling various points in the t-y plane. And when we do that, a pattern emerges. But it doesn't take long to realize that this is something that a computer can do for you easily, and so we go down here, and we click on show field. And we get a drawing of the slope field for this differential equation. The computer samples over a grid in the t-y plane, and draws little slope marks corresponding to those slopes. Now we can also superimpose on the slope field the graphs of solutions. And there are two ways to do that. One way, click here, and go into the t-y plane and select an initial condition. So let me select this point right here as an initial condition. We get a graph of a solution to the differential equation. That graph changes color from blue to green at the initial condition. And we note that, as we move along the graph, the slopes in the slope field are always tangent to the graph. And that's what it means to be a solution to the differential equation. Now we can enter lots of initial conditions very quickly. You can see that, over here, these graphs reach a maximum, and then turn and decrease. Over here, on the left side, the graphs are increasing functions as you go from left to right. Now, if we want to be very precise about the initial condition, we can go and enter our initial condition down here. So I'm going to put in t equals 0 and y equals 1. Click on solution, and I get a very special solution to this differential equation. That's the only solution whose graph is a line. Now the slope field should be thought of as a picture of the differential equation, and then the graphs of the solutions are superimposed upon this slope field. Now I'm going to go back to my slides, and summarize what we've seen in this computer demonstration. This slides summarizes what we just saw on the computer. The differential equation is dy/dt is equal to y minus t. And over here on the right, we have the slope field, along with the graphs of nine solutions that overlay the slope field. One of these solutions is very special-- it's the one whose graph is a straight line. It has an initial condition 0,1. And for the solutions that lie to the left of this line, they are all increasing functions. And for the solutions that lie to the right of this line, they increase, attain a maximum, and then decrease. Now there's one thing on this slide that I did not mention when we were working on the computer. I have the general solution, in this case. The general solution to this differential equation is y of t is equal to 1 plus t plus k e to the t, where k can be any constant. This is not a separable differential equation, so I did not obtain this formula by separating variables. But in module nine, we'll learn an analytic technique which we can use to derive this general solution. But for now, let's just apply the no wrong answers principle to this general solution. Let's calculate dy/dt. So let's differentiate. Derivative of 1 is 0. The derivative of t is 1. And the derivative of k e to the t is k e to the t. Now the right hand side of the differential equation is y minus t. So let's calculate y minus t. y is 1 plus t plus k e to the t. And then we're going to subtract t. And so, when we subtract the t, you see that we have cancellation from these terms. And we're left with 1 plus k e to the t. Now since the result for dy/dt, and the result for y minus t agree, we know that any function in this family, 1 plus t plus k e to the t is a solution to the differential equation. Now if k is positive, that corresponds to these graphs that lie to the left that are completely increasing. And if k is negative, then we have these graphs that increase for a while, attain a maximum, and then decrease. Now I want to go back to the computer, and show you a little program that my friends developed to reinforce the idea of a slow field. Here's a little program, it's called TargetPractice. And it illustrates the concept of a slope. Begin by picking a differential equation from a list. I like to use dy/dt is equal to y squared minus t. And then what you do is you move into the t-y plane, and you select a point to be your target. I'm going to pick right there. Then you move to some other point in the t-y plane, and you select an initial condition. And you do that with the goal of hitting the target. And what we do is we use that initial condition and the slope field to generate the graph of a solution. And you want the graph of the solution to go through the target. Notice the graph of the solution is everywhere tangent to the slope. Obviously, I didn't do a very good job in this case. So let me try another initial condition. That's really not much better. So let me try another. Little bit better. Ah, that one is quite a bit different. So I guess I have to try somewhere in between. Not much better. Little bit better. Oh, better. Almost. Almost-- finally, I hit the target. Now at this point, let's pause and get you set up with a program that draws slope fields, and we'll have you play target practice. End of transcript. Skip to the start. ",
                                        "unit_id":"faf152b87fea481cb90c7c46beb9de6f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a0ade2beb27e4254918428be7d3ad748",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Vertical direction",
                                            "Initial condition",
                                            "Slope field",
                                            "Vertical line",
                                            "Sine function",
                                            "Number",
                                            "Positive",
                                            "Slope",
                                            "Sine",
                                            "Function",
                                            "Line",
                                            "Translates",
                                            "Plane",
                                            "Suppose",
                                            "Parallel"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: There are two important special cases that we should consider. And the first is dy dt is equal to f of t. In other words, if the differential equation, the right hand side of the differential equation, only depends on t. Now this is the kind of differential equation you encountered in calculus. And if you can integrate f of t-- in other words, come up with its antiderivative-- then you can solve this differential equation. But let's think about what the geometry of the slope field is if we have dy dt is equal to f of t with no y's in it. So the right hand side of the differential equation only depends on t. And if we fix t, then we're always going to get the same slope. Fixing t corresponds to drawing a vertical line. So let's draw a vertical line in the ty plane. And then we can take the t value that corresponds to that vertical line. Put that in f of t. Get the number. Whatever that number is-- let's suppose it's a positive number-- we draw the slope mark. And the slope marks all along that line are going to be parallel. The y-axis certainly qualifies as one such line. And so let's calculate. Suppose the slope marks-- suppose f of 0 is negative. Then the slopes would all be negative and parallel. And suppose we have a third vertical line. And suppose that the value of f for that t is positive again. Then we'd end up with parallel slope lines. So we can summarize what we're saying here is that the slopes in the slope field are going to be parallel on vertical lines. Now let's think about what this means for the geometry of the solutions. And the best way to do that is to go to a little demonstration that we have on the computer. Here's a picture of the slope field for dy dt is equal to cosine of t. Now notice that if we look on any vertical line, the slope marks are parallel. Now, if we put in the graph of the solution-- and let's use the initial condition 0, 0, or at least as close to it as we can get. Now let's make it exactly 0, 0. Then we get a graph that's everywhere tangent to the slope field. And of course, in this case, that graph is the graph of the sine function. Now if we move that initial condition up away from 0, 0, then we translate the graph of the sine function up. If we move the initial condition down from 0, 0, we translate the graph down. And in general, as we move the initial condition around anywhere in the plane, then we get a graph that's either a translate up or a translate down from the graph of the sine function. So all of the graphs of the solutions are vertical translates of any one graph of the solution. In this case, let's say the graph of the sine function. Now let's turn to a slide where I summarize what I showed you in this video. Here's a summary of what we just saw on the computer. For the differential equation dy dt is equal to cosine of t, we certainly have the right hand side being a function of t alone. And for this differential equation, since we know an antiderivative of cosine of t, we know the general solution. The general solution consists of all functions of the form y of t is equal to sine t plus k, where k is an arbitrary constant. In terms of the graphs, let's start with the initial condition y of 0 equals 0. In that case, we just get the sine function where the value of k is equal to 0. And here's its graph, the graph of the sine function. Now if we take an initial condition, say y of 0 is equal to k where k is some positive number-- in this case, some positive number slightly less than one-- then we'll get a graph that is parallel to the graph of the sine function. And it's a translate up in the vertical direction. If we take a value of k-- in other words, an initial condition-- that's negative, then we'll get a graph that's parallel to the sine function, but a translate down. And in general, all of the graphs for the solutions are parallel to the graph the sine function. They're all translates either up or down vertically. At this point, this is a good place for you to do an exercise that involves the slope field for a differential equation where the right hand side is a function of t alone. End of transcript. Skip to the start. ",
                                        "unit_id":"59b5f45340df4db28e69a97cd5a1f9f0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bde89cf42b884cdaa79b8f271905ad06",
                                "vertical_name":"Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Autonomous differential equation",
                                            "Differential equation",
                                            "Differential equations",
                                            "Special case",
                                            "Initial condition",
                                            "Slope field",
                                            "Independent variable",
                                            "Dependent variable",
                                            "Positive number",
                                            "Horizontal line",
                                            "Minus infinity",
                                            "Important",
                                            "Form",
                                            "Slope",
                                            "Side",
                                            "Positive",
                                            "Ll",
                                            "Line",
                                            "Quantity",
                                            "Drawn",
                                            "Thing",
                                            "Case",
                                            "Ve",
                                            "Left",
                                            "Negative",
                                            "Equilibrium",
                                            "Infinity",
                                            "Equal",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: The second important special case is the case of a differential equation of the form dy dt is equal to f of y. The right hand side of the differential equation is a function of y alone. And remember, y is the dependent variable, not the independent variable. Differential equations of this form are called autonomous. And we'll discuss why when we discuss autonomous equations in Module 7. For now, let's consider the geometry of the slope field of a differential equation of the form dy dt is equal to f of y. Now, if we think about holding y constant, then f of y will not change, holding y constant is the same thing as considering a horizontal line in the t-y plane. Now if we take a particular y value, draw that horizontal line, and then we take and insert that y value into the differential equation, then if we get, say, a positive number, we will have slope marks with a positive slope. And they will all be parallel, because they'll all have the same slope, whatever that f of y value is. The t-axis is a special case. That's where y is equal to 0. And so if we had, say, f of 0 negative, then our slope field would have negative slopes along the t-axis. But all the slope marks would be parallel. And likewise, if we take a horizontal line that's below the t-axis, so that y value is negative, then we go in and we compute f of y. Let's suppose we get a positive value for f of y, then we would have slope marks that all have positive slope. They'd all be parallel. So the conclusion in this case is that the slope marks are parallel along horizontal lines. Now let's think about what the geometry of the solutions will be, if we're talking about an autonomous differential equation. And we have a little demonstration on the computer to illustrate this. Here's a picture of the slope field for the differential equation dy dt is equal to y times the quantity 1 minus y along with the graph of one solution. And that solution has initial condition y of 0 equals 1/2. First of all, notice that the slope marks in the slope field along any horizontal line are always parallel. And that's because the right hand side of the differential equation, in this case y times the quantity 1 minus y, is a function or y alone. Now, geometrically, what that means is that if we take this initial condition and say translate it to the left, we end up with a graph that is a translate to the left of the graph that we had before. Similarly, if we translate an initial condition to the right, then we end up with a graph that's a translate to the right of the graph that we had before. And so as we move initial conditions around, we get translations left and right of solutions that we already had before. Now, for this example, I'm going to summarize what we've seen here and actually add quite a bit more detail on my next slide, including some formulas that go along with the solutions. Let's summarize what we just saw on the computer. For the differential equation dy dt is equal to y times 1 minus y, we certainly have the right hand side being a function of y alone. y is the dependent variable. And that means that the slope field is parallel along horizontal lines. Now, I've drawn the graphs of seven solutions. And I've distinguished one, the one that satisfies the initial condition y of 0 equals 1/2. And I have the formula for that solution. You might wonder how I obtained this formula. Well, the differential equation is dy dt is equal to y times 1 minus y. That's separable. So we can divide both sides by y times 1 minus y and then integrate. It's a bit of work, but we can actually calculate the general solution. And from the general solution, I was able to calculate the solution that corresponds to the initial condition y of 0 equals 1/2. And we get this graph, this solution, y of t is equal to e to the t divided by 1 plus e to the t. And this graph is asymptotic to the t-axis as t goes to minus infinity. And it's asymptotic to the line y equals 1 as t goes to plus infinity. And of course, it goes through the point 0, 1/2. Now, because the slope field is parallel along horizontal lines, that means that we can translate this graph left or right and obtain other graphs, graphs for other solutions. For example, if we translate to the right four units, and we have the initial condition y of 4 is equal to 1/2, we get another graph. And that graph is a graph of a solution. Now, the formula for that graph-- well, you might remember this from algebra-- the formula in that case would be y of t is equal to e to the quantity t minus 4, divided by 1 plus e to the t minus 4. Wherever there was a t in the formula for the initial condition y of 0 equals 1/2, we replace it by t minus 4. And we could do a similar thing with the translate to the left. We get that graph right there. Now, I've also got some graphs that come from infinity and are asymptotic to y equals 1 above the line y equals 1. And I've also got some graphs that come from 0 and go off to infinity below the t-axis. And then there are two very important special graphs that I haven't drawn in. One is the t-axis. Now, the t-axis by itself is actually the graph of a solution. And it's a important solution. It's a graph of the solution with the formula y of t is equal to 0 for all t. It's an equilibrium solution. We also have another equilibrium solution that corresponds to y being constantly equal to 1. And so we have that graph, so y of t equal to 1 for all t. That's an equilibrium solution as well. And we'll learn in Module 7 that equilibrium solutions tell us a lot about the qualitative nature of the solutions to this differential equation. Now at this point, I like to do a matching problem, where you match slope fields with differential equations. It's one of my favorite problems in differential equations. And so I'd like you to do that problem now. End of transcript. Skip to the start. ",
                                        "unit_id":"af16855b5a054356b9eeaa8df984319f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4512ee81a39c4a919561090e50a74397",
                                "vertical_name":"Video 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Autonomous differential equation",
                                            "Double check",
                                            "Slope field",
                                            "Differential equation",
                                            "Form",
                                            "Autonomous",
                                            "Slope",
                                            "Equation",
                                            "Ve",
                                            "Horizontal",
                                            "Equilibrium",
                                            "Squared",
                                            "Put",
                                            "Question",
                                            "Minus",
                                            "Number",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Now, let me show you the way I would answer this question. But before I do that, let me emphasize that there are many ways to answer this question correctly. I would just like to emphasize a few things that I see when I see slope fields. Now, I can't fit all four slope fields on one slide. So I've put the slope field A and slope field B on the first slide. And what I notice from slope field A is that the slopes and the slope field are not parallel along all horizontal lines or along all vertical lines. And so for slope field A, I would expect a differential equation of the form dy dt is equal to f of t and y. I would expect to see both t and y in the formula. For slope field B, I see that the slopes are parallel along vertical lines. And so I would expect a differential equation of the form dy dt is equal to f of t. And moving along to slope field C and D, I notice that in both cases the slopes are parallel along horizontal lines. And so in both cases, I would expect the differential equation to be dy dt is equal to f of y. In other words, I would expect an autonomous differential equation. Now I'm ready, after I've made this very general distinction, to start considering possibilities. And I think it's easiest to think about the autonomous equations first. So if we notice, if we go back to the equations, we notice that four of the equations are autonomous, number three, dy dt is equal to y plus 1; number four, which is dy dt is equal to 1 minus y; number five, dy dt is equal to y squared plus y; and number six, dy dt is equal to y times the quantity y squared minus 1. And then when I look at the slope fields, the first thing that I look for are equilibrium solutions. So if you look at slope field C, notice that the line y equals minus 1 is tangent to the slope field. And so that's the graph of a solution. So we would have an equilibrium solution of the form y of t is equal to minus 1. And you can also see that there are no other equilibrium solutions for slope field C. So that means we look at the equations, we noticed that three and four have one equilibrium solution, whereas five and six have more than one. Five, we can write as y times y plus 1. So that would have two equilibrium solutions. And six, we can write as y times y minus 1 times y plus 1. And so that would have three equilibrium solutions. Now, let's go over and look at slope field D. You can see there, there's one equilibrium solution again corresponding to y of t is equal to minus 1. And then you really have to look closely. You notice that there's an equilibrium solution that corresponds to y being constantly equal to 0. So we have equilibrium solution y of t equals minus 1. We have equilibrium solution y of t is equal to 0. And because there's more than one, then we're either in case five or six. In case six, there are actually three equilibrium solutions. So we have to be case five. And we can double check that by looking at y times y plus 1. We know that we have equilibrium solutions corresponding to y equals 0 and y equals minus 1. So slope field D corresponds to equation number five. For slope field C, just have to determine which of these has its equilibrium solution at minus 1. And you can see it that would have to be equation three. So we've been able to distinguish and select and match the slope fields for the autonomous equations in this case just by considering their equilibrium solutions. Now, let's go back to slope fields A and B. And if we look closely, we see that slope field B corresponds, as we said, to a differential equation of the form dy dt is equal to a function of t alone. And so that corresponds to either one or two. So then we look at and we notice that if we have t equals minus 1, then all the slope marks are horizontal. So that means the slope is 0. And so we put in minus 1. And we want to get 0, and so that's going to be equation two. So slope field B matches up with equation number two. The remaining slope field, slope field A, is a function of both t and y. So that means, it's going to correspond to seven and eight. And one thing that I notice when I look at this slope field is that the line that goes through minus 1, 0 and then 0, minus 1 is tangent to the slope field. And so that's a graph of a solution. An equation for that would be y of t is equal to a slope minus 1, and it goes through minus 1. So it would be minus t minus 1. And as you can see, it has slope minus 1. So we look at the differential equation. Certainly dy dt is always minus 1. And then if this is our formula, we want to add t and get minus 1. So that would correspond to number eight. And so the answer for slope field A is equation number eight. Once again, let me emphasize that this is not the only way that you can do the problem. You can do this problem by evaluating the slope fields at lots of different points and seeing how they match up. But this is kind of a more qualitative way of thinking about the slope fields, and that's why I wanted to show you how I like to do this problem. End of transcript. Skip to the start. ",
                                        "unit_id":"cca18fb1b70b4a3580490af06417c818",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d220fe51eb5946ebbb23a5512c9863fa",
                                "vertical_name":"Video 5"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c5d764071331470a8c91678398e50ac2",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Slope field",
                                            "Field"
                                        ],
                                        "data":" Conclusion TO MODULE 4: SLOPE FIELDS&mdash;A GEOMETRIC TECHNIQUE Every first-order equation dy/dt=f(t,y) determines a slope field, and the slope field gives us a way of imagining solutions. We look for graphs that are everywhere tangent to the field. Using slope fields is our way of studying differential equations geometrically. Once we have some theory under our belts, we'll also be able to obtain qualitative information about solutions with the help of slope fields. ",
                                        "unit_id":"a50e767b20244c0aa6dabefc93123748",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9b95fb1d32c94db280e59125df610619",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"c40f306f2f45486fbc7f69b11fa24d03",
                "chapter_name":"Module 5: Euler\u2019s Method\u2014A Numerical Technique",
                "sequentials":[
                    {
                        "sequential_id":"3b6be13925da4dcd8fd343589cb612af",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Numerical methods",
                                            "Graph",
                                            "Method"
                                        ],
                                        "data":" Introduction to Module 5: Euler&rsquo;s Method&mdash;A Numerical Technique If we have a formula for a solution to an initial-value problem, then we can graph the solution using the formula. But how do we graph solutions if we don't have formulas (as we did in video 3 of Module 2)? More generally, how can we approximate solutions and keep track of the accuracy of that approximation? In this module we study Euler's method, the most basic of all numerical methods for approximating solutions to differential equations. ",
                                        "unit_id":"e55bf221d74f4034b1881700d9c4a011",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4d94a3ac19c74a238c1245f66b5dd3d1",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"27c24ef2ef23439baf8cc50205c2326e",
                        "sequential_name":"Euler's Method",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Numerical approximation",
                                            "Decimal places",
                                            "Vertical direction",
                                            "Initial condition",
                                            "Good time",
                                            "Minus",
                                            "Squared",
                                            "Ll",
                                            "Initial",
                                            "Adding",
                                            "Ve",
                                            "Accurate",
                                            "Good",
                                            "Click",
                                            "Positive",
                                            "Negative",
                                            "Basic",
                                            "Delta",
                                            "Point",
                                            "Notice",
                                            "Put",
                                            "Step",
                                            "Hand",
                                            "Time",
                                            "Computer",
                                            "Plane",
                                            "End",
                                            "Slope",
                                            "Euler",
                                            "Method"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In Module 2, we discussed the initial value problem dy/dt is equal to y cubed plus t squared, with y of 0 equals 0. And we did so because the solution to this initial value problem is a function that cannot be expressed in terms of the functions that are typically used in calculus. At the time, I made the assertion that this graph is an accurate approximation to the graph of the solution, and you may have wondered how I was able to draw this graph if I didn't have a formula for the solution. And the answer is that I used a sophisticated numerical technique for producing a numerical approximation to the solution. In this module, we're going to use Euler's method, the most basic of all numerical techniques for approximating solutions to initial value problems. It turns out that it's more convenient to use the differential equation dy/dt is equal to y squared minus t when we're discussing Euler's method. And at first, I'm going to use the initial condition y of minus 1 equals minus 1/2. On the right, I've drawn a graph of the solution using a sophisticated numerical solver. And so I know this graph is very accurate. And we use this graph so that we can see where we're heading when we talk about Euler's method. So let's see what Euler's method does in this example. Euler's method involves a step size. And at first, we're going to use a very large step size so that we can actually see the difference between the solution and the approximation produced by Euler's method. A good way to understand Euler's method is to see it in action with a little computer demonstration that we prepared. So let's turn to the computer now. Here's our computer demonstration of Euler's method. We're going to start with the differential equation dy/dt is equal to y squared minus t that we pick from a list. And we have an initial condition of y of minus 1 is equal to minus 1/2. And we're doing Euler's method with the step size of 1/2. As we move the cursor around in the plane, notice that it displays a vector. And this vector is determined by the differential equation, by the value of the differential equation. At each point t and y, there's a value for dy/dt that comes from the formula y squared minus t. And we draw this vector in such a way that it moves one unit in the positive direction for t. And then in the vertical direction it either points up or down depending on whether dy/dt is positive or negative. And the amount that it points up or down is determined by the value of dy/dt. So over here, it's pointing up. Over here, it would be pointing down. Now to do Euler's method, rather than have to go precisely to the point minus 1, minus 1/2 in the plane, with the cursor, we can just go down here and click Solve. And when we do that, we get a vector and some points, some numbers over here for points in the plane. Now the vector-- notice how the vector that we got is not quite the same as the vector that the cursor is giving us, but there's a very strong relationship. And the vector that we get by pressing the button is exactly 1/2. You take the vector that we get from the cursor, and we multiply it by 0.5, and that's the vector that we got by pressing the button. Now that vector is one step in Euler's method, essentially. And what we do is we put in the table now, the end points of that vector, which in this case is minus 1/2 and 0.12. Now there's a slight issue with the number of decimal places that I'm using, that I'll discuss when we do these calculations by hand. Now to get the second step of Euler's method, we can go to the end of the vector. We don't have to be absolutely precise, the computer will take care of that for us. And we click there. And we get a second step. So we get additional numbers in the ty plane in the table. And we get another vector in the plane. And now, quickly, let me do two more steps of Euler's method. And what you can see now is the result of four steps of Euler's method. In the table, we have five pairs of numbers. We have the initial condition and the result of the four steps of Euler's method. Now I would like you to keep this picture in mind as we go back to some slides and do the calculations more or less by hand. Here's a summary of what we saw on the computer, along with some of the calculations that are done more or less by hand. Now on the computer, we had two columns, a t column and a y column, and I've added two more columns. k column is just the number of steps. k equals 0 is the initial condition. k equals 1 is the result of the first step, k equals 2 is second step, et cetera. And I've also put in a column with mk, and m stands for slope. And of course, the slope is given for us at the right hand side of the differential equation. Remember the differential equation is dy/dt is equal to y squared minus t. And so for us, mk is going to be y sub k squared minus t sub k. So let's calculate the first value of the slope. So m sub 0 is going to be equal to minus 0.5, because that's the y value, squared. Minus the t value, so minus a minus 1. Now if we square minus 1/2, we get 1/4. And so we get 1.25. So here, the value of the slope is 1.25. Now what we're going to do is we're going to use that slope to generate the next two values, t and y, in the table. Now notice here, I've put in the slope with three decimal places. I'm going to use two decimal places for the y values and three decimal places for the slopes. Now how do we get the new t values and y values from the old ones? Well, t sub 1 is going to be equal to the old t value plus the step, which is delta t. And we said that delta t is 1/2, in this case. So we've got minus 1 plus 1/2. And so that's equal to minus 1/2. So we have minus 0.5 there. And in general, it's very easy to fill in the t column, because just at every step, we're going to be adding 1/2. So we have minus 1, minus 0.5, 0, 0.5, 1. Now that means we're going to go over by delta t, and then we're going to go up by an amount that's determined by this slope right here. So our new y value, y sub 1, is our old y value, y sub 0, plus our slope-- in this case, 1.25 times 0.5, or 1/2. In other words, 1/2 of 1.25. Now our original y value was minus 0.5. And then what we're adding is 1/2 of 1.25. And so we're adding 0.625, and that gives us a result of 0.125. Now in the table, I'm only going to put two decimal places. So I'll put 0.12 right there. So let's see this with better handwriting. And the basic idea is that we started off down here with our initial condition at the point minus 1, minus 1/2. And then after one step, we go over 0.5, and then up. And we go up to this point, which is 0.125. And that is the first step of Euler's method. And basically, we're going to do the same thing with each step of Euler's method. But let me do one more step in detail. Now to do the next step, we need to know the slope. And the slope, is m1, which is y squared minus t. So we have-- and this is something that's a little tricky, by the way, in displaying things-- but we have 0.125 squared minus minus 0.5. And when we do that calculation out, we get 0.515625. Now in the table, I'm only writing three decimal places. So I'm going to put 0.516. But I'm actually doing at least six decimal places of accuracy when I'm doing the calculations. And this is what the computer was doing. The computer was using more accuracy than it was showing you when it made the table. Now we'll clean up my handwriting in the table again. And now we'll use the numbers at point t1, y1 to generate the second step of Euler's method. As we said before, the t values, they're just adding delta t each time. Delta t is 1/2 in this case. So our new value of t is going to be 0. Our new value of y, our y sub 2, is going to be equal to of our old value of y, y sub 1, plus our slope times our delta t. So that would be m1 times delta t. Now in this case, our y sub 1 was 0.125. And our m sub 1 is a little complicated. It's 0.515625. And we're going to multiply that by our delta t, which is 1/2. And we end up obtaining 0.382813 at least to six decimal places. And so in the table, what I'm going to write is 0.38. And then we're going to take that step in the graph. And so there we go. So we went from t0, y0 to t1, y1, now to t2, y2. And at this point, the process is pretty much the same in each step. Don't let the fact that we're showing you fewer decimal places than we're actually computing with, don't let that bother you. But what we have is we are always going to compute the slope from the t's and the y's, and then we're going to use that slope to determine the next value of y. The t values are easy. We're just adding delta t each time. So our next result, we have a slope. It's approximately 0.147. We use that to calculate our new y value, which is approximately 0.46. And so we get this new point approximation, t3, y3. And then we do one more calculation. We use the t's and the y's to calculate a new slope. And when we do that, and then calculate new values, we end up with a negative slope when we did the calculation. And so our y value decreases. So we go from t0, y0 to t1, y1, to t2, y2, to t3, y3, and then finally to t4, y4. And so these two columns agree with the columns that you saw in the computer. And that's Euler's method applied to the differential equation dy/dt is equal to y squared minus t, with an initial condition y of minus 1 equals minus 1/2 and a step size of delta t equals 1/2. Now's a good time for you to try Euler's method. And we're going to use the same differential equation and the same step size, but we'd like you to use the initial condition y of minus 1 equals minus 1. End of transcript. Skip to the start. ",
                                        "unit_id":"be55c98c23d54938ab8e03bed21fe4e7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0c694dd3fa244ae48f17178e25706fb3",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Vertical line",
                                            "Tangent line",
                                            "Line segment",
                                            "Initial condition",
                                            "General formula",
                                            "Line",
                                            "Call",
                                            "Hand",
                                            "Ll",
                                            "Initial",
                                            "Ve",
                                            "Point",
                                            "Paste",
                                            "Copy",
                                            "Step",
                                            "Euler",
                                            "Tk",
                                            "Give",
                                            "Delta",
                                            "Calculate",
                                            "Mk",
                                            "Calculation",
                                            "Slope",
                                            "Formula",
                                            "Method"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's derive the general formula for Euler's method applied to the abstract initial value problem dy/dt is equal to f of t and y, where y of t0 equals y0. And we use a step size of delta t. Now, we're beginning with the initial condition y of t0 equals y0. So we have the point t0, y0 in the plane. And I've drawn in what I think might be a picture of the graph of the actual solution. Now, we're using a step size of delta t. So that means that we're going to step along in the t direction by delta t with each step. So we go from t0 to t1 by delta t. t1 to t2 by delta t, et cetera. Now, Euler's method is based on using the slope of the tangent line to make the next step. So we're going to begin with the slope at the initial condition. And we've been calling that m0. So that's f of t0, y0. And we're going to use that as the slope of the tangent line. So we're going to follow that tangent line until we get to the vertical line t equals t1. And that will give us the result of the first step of Euler's method. And we'll call that point t1, y1. Then, we calculate the slope at t1, y1 using the right hand side of the differential equation. We follow that line. We get another point. And we would call that point t2, y2. Now, let me emphasize that that slope that we used to do that step, which we'll call m1, that's f of t1, y1. And we're using that as the slope of that step. And we get to t2, y2. We compute another slope. We follow that over to the next vertical line. That'll give us the point t3, y3. Then, we use the slope from the right hand side of the differential equation, follow it over, and we'll get the point t4, y4. And we'll repeat this process as many times as we'd like. And we get a sequence of points that approximate the actual solution. The question of the accuracy of this approximation depends upon the nature of the differential equation and the step size. And we'll discuss this question in some detail at the end of this module. In order to write down the formulas for Euler's method, I'd like to discuss what I consider to be the key triangle that's involved. Now, let's suppose we're going to consider one step of Euler's method. And we're going to start at t sub k. And we're going to step over to t sub k plus 1. So we're going to go delta t in the t direction. Now, this vertex on the left is t sub k, y sub k. And this vertex on the right is t sub k plus 1, y sub k plus 1. And we're using a slope that is determined by the right hand side of the differential equation at this point tk, yk. And we call that slope mk. So that's equal to f of tk, yk. And we're thinking about that as the slope of this line segment right there. And we move delta t in the t direction. And that's going to give us a change in the y direction that's delta y. Because we know that the slope is mk, we know that delta y over delta t is equal to mk. And with this information, we can write down the formulas for Euler's method. So we're always going to start by computing the slope. So mk is going to be equal to f of tk and yk. We're always going to move forward in the t direction by delta t. So t sub k plus 1 is going to be equal to t sub k plus delta t. And then, y sub k plus 1 is going to be equal to y sub k plus delta y. But delta y is equal to m sub k times delta t. So we get y sub k plus m sub k times delta t. And it's these three formulas that determine Euler's method. Now, you could implement Euler's method by programming a computer. But it's surprising that you can do Euler's method very easily with a spreadsheet. So let me show you how to do that now. Now, here's a spreadsheet that I've set up to calculate Euler's method on the initial value problem dy/dt is equal to y squared minus t with the initial condition y of minus 1 is equal to minus 1/2, and a step size of 1/2. In the first column, I'm going to put the t values. In the second column, I'm going to put the y values. In the third column, I'm going to put the slopes. And in this one cell right here, I have the step size, which is a half. The first calculation that we need to do is we need to calculate the slope from the differential equation at the initial condition. And remember, the differential equation is dy/dt is equal to y squared minus t. So we're going to have y squared minus t, and we enter that formula. And we get 1.25, which is the same number that we got when we did this calculation earlier. Now that we have this slope, we can calculate the next step. Now, remember that always to step in the t direction, just add delta t. So we have a1 plus delta t. And delta t is this cell right over here. But we need an absolute reference to this cell. So we're going to put in $d$1 because we're going to always want to use exactly this cell right here. Of course, we get minus 1/2. Here, for the new y value, the new y value is equal to the old y value plus delta y. But delta y is equal to the slope times delta t. And there is our new y value, 0.125. So that's the result of the first step of Euler's method. Now, to do another step, we need another slope. But we already have the formula for the slope in this cell right here. So we're going to copy that formula and paste it in. And we get the new slope corresponding to the point minus 0.5, and 0.125. Now, once we have these three entries, once we have this row, we've programmed Euler's method. Because what we'll do is we'll take this row. And we'll copy it. And then we'll paste it in as far as we'd like to go. I'm going to go in this case down to 23. Because 23 corresponds to t equals 10. So I've gone from t equals minus 1 to t equals 10 with a step size of 1/2. And these are the calculations with Euler's method. At this point, you can use the graphing capabilities of your spreadsheet to graph the results. And I'm going to show you the results that I got when I did this using the graphing capabilities that I know. You might know other capabilities that I don't know. I'm not an expert at spreadsheets. I just know that this is an easy way to implement Euler's method. So let me show you one of the spreadsheets that I've created that has a graph along with it. Now here, I've added a graph that goes along with the numbers that I calculated a moment ago. There's a couple of things I'd like you to notice. First of all, the first few steps, they're exactly what we saw when we did calculations by hand. Then, what happens is that we have some more points that seem to be following what I showed you was an accurate approximation to the solution to the initial value problem. Until we get out to about t equals 8 or 8 and 1/2, then you can see that there's some instability that arises. And that's because the differential equation is a little bit complicated, and also because we use a step size of 1/2, which is a very large step size for this particular situation. So you can take the numbers that were produced from Euler's method, and then using whatever graphing capabilities your spreadsheet has, you can draw a graph. And that's what we get in this case. We'll say a word or two about this instability towards the end of the module. End of transcript. Skip to the start. ",
                                        "unit_id":"8a9f517500b04a3997fc8f56007d4254",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ad9623aaeca748b8ae5e2c3d2da676c5",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Differential equation",
                                            "Computer program",
                                            "Numerical analysts",
                                            "Weighted average",
                                            "Numerical approximation",
                                            "Horizontal line",
                                            "Technical term",
                                            "Initial condition",
                                            "Algorithm",
                                            "Step",
                                            "Stiff",
                                            "Call",
                                            "Called",
                                            "Ve",
                                            "Order",
                                            "Ll",
                                            "Approximation",
                                            "Good",
                                            "Related",
                                            "Improves",
                                            "Horizontal",
                                            "Happening",
                                            "Approximate",
                                            "Euler",
                                            "Term",
                                            "Decrease",
                                            "Accuracy",
                                            "Delta",
                                            "Method",
                                            "Start",
                                            "Error",
                                            "Initial"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: So far, we've used the step size of delta t is equal to 1/2 when we've applied Euler's method to the initial value problem dy/dt is equal to y squared minus t with y of minus 1 is equal to minus 1/2. Now, let's consider what happens as we decrease delta t. And we'll start with a demonstration from this computer program. Now, notice the computer program gives us the option of having Euler's method with a step size of 1, step size of 1/2, step size of 1/4, and a step size of 1/8, along with another algorithm called RK4, also with a step size of 1/8. And let's begin with this algorithm RK4 with a step size of 1/8, and let's see what happens. Now, it turns out that we can show that this graph is actually a pretty good approximation to the graph of the actual solution. So let's pretend that this is the graph of the actual solution. And now, let's see what happens when we apply all five algorithms, computations, to this initial value problem. And look at that by clicking compare all. Let's go ahead and get the results. And as you could imagine, the result with delta t is equal to 1 isn't very good. It just keeps increasing. Basically, we should just ignore that one. But for delta t equals 1/2, 1/4, and 1/8, although they all overshoot the actual solution, you can see that as delta t decreases, the error improves. Now, let me turn to a set of slides in which I'll discuss the theory of how the error in Euler's method is related to the step size. And I'll also talk more about this algorithm, RK4. Let's be more precise about the error that's involved in Euler's method. Euler's method is the most basic fixed step size algorithm for the numerical approximation of solutions. And by that, we mean that we always step in the t direction by the same amount. So our delta t is constant as we move from left to right along the t axis. It turns out that Euler's method is what's called a first order algorithm because the error in the approximation is proportional to the first power of the step size. If we want to write this more precisely, we say that the error is less than or equal to some constant, c, times delta t to the first power. So first order because it's delta t to the first power. And this constant, c, depends only on the right hand side of the differential equation and the length of the interval over which the solution is approximated. In practice, this means that if we halve the step size and double the number of steps so that we end up at the same place, we typically halve the error that's involved. And that's what it means to be a first order method. Now, I'd really like to emphasize that if you're building an airplane that I'm going to fly on, please do not use Euler's method when you numerically approximate your solutions to differential equations. Do not try this at the office. For numerical work where a high degree of accuracy is essential, we don't use Euler's method. There are algorithms that are usually more accurate and that require fewer calculations to attain that accuracy. We discussed Euler's method because it's the one that's most closely related to the concept of a differential equation. The higher order Runge-Kutta methods are usually more efficient and more accurate than Euler's method. They use the right hand side of a differential equation evaluated at more than one point to compute the approximate value of the solution at the next step. For example, the classical Runge-Kutta method, also referred to as RK4, uses a weighted average of four values to calculate the next approximation. And RK4 has order 4. That is, if we double the number of steps, the error usually improves by a factor of 16. In other words, 2 to the 4. And that's much more efficient than Euler's method. Notice the repeated use of the word \"usually\" here. It turns out that there some initial value problems, some differential equations, that are not amenable to any fixed step size algorithm. And a good example is the differential equation dy/dt is equal to e to the t sine y. And I picked y of 0 equals 5 as an initial condition. And in this case, what I did was I used Euler's method on this initial value problem with a delta t of 0.05. So we start out at 5. And at first, the approximate solution does what one would expect. It decreases, and then becomes horizontal. But a little bit after t equals 5, something strange happens. The algorithm starts producing numbers that jump all over the place with no apparent pattern. We have a technical term for this. We like to say that the algorithm goes wacko at this time. Now, what's really going on is that the e to the t term is becoming large relative to the sine of y term. And numerical analysts have a term for this. They call differential equations where you have this kind of thing happening, they call them \"stiff.\" And they have developed special kinds of solvers to deal with stiff differential equations. Now, numerical solvers that are built into sophisticated mathematical computer programs such as MALTAB, Mathematica, and Maple use a combination of techniques and algorithms to deal with the challenges that some initial value problems pose. And what they do is they often repeatedly adjust the step size throughout the calculation to maintain a desired accuracy. So you don't put in a step size as part of the calculation. The computer determines the step size based on what's happening with the calculation and the accuracy that you've requested. Now, here's exactly the same initial value problem that I produced with one of these mathematical packages. And again, we start at 5 and decrease because dy/dt is negative. Then, notice that the solution becomes asymptotic to the horizontal line y equals pi. And notice, we're all the way out to t equals 7. Now, in the next module, we'll discuss some theory that will tell us that this is exactly what we should expect for the solutions to this initial value problem. End of transcript. Skip to the start. ",
                                        "unit_id":"5aa6cb5d0cf9411094f38b7efa3d622f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"351a04271c20470f954dd64e4b619c61",
                                "vertical_name":"Video 3"
                            }
                        ]
                    },
                    {
                        "sequential_id":"61f0017105c34eebae75bc7d4b0d1bdc",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" CONCLUSION TO MODULE 5: EULER&rsquo;S METHOD&mdash;A NUMERICAL TECHNIQUE Now that you have completed Modules 3, 4, and 5, you should have a better idea of what we hinted at in Module 1 when we first mentioned our three-pronged approach. Now it's time for some theory, and we discuss existence and uniqueness of solutions in the next module. ",
                                        "unit_id":"d3b5cda814204db184e199dc06528823",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"632cffe55cfd40bb968cea84e86aaf1c",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"509125e2b35b4da38f3912781715abb8",
                "chapter_name":"Module 6: Existence and Uniqueness of Solutions",
                "sequentials":[
                    {
                        "sequential_id":"30a51405ec114b178d8d91fa4bc7d819",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "First order differential equations",
                                            "Differential equations",
                                            "Exist"
                                        ],
                                        "data":" Introduction to Module 6: Existence and uniqueness of solutions In Modules 3, 4, and 5, we saw analytic, qualitative, and numerical techniques for studying solutions of differential equations. Now it is time to tackle two basic questions: What does it mean to say that solutions exist? How many solutions should we be looking for? If we know that our equations have solutions, then we are not wasting our time trying to find them (symbolically or otherwise). If we know how many solutions can exist, then we know when to stop looking for them. In this module we answer both questions for a wide range of first-order differential equations. The answer to the second question also has some surprisingly useful consequences. ",
                                        "unit_id":"b668911109ca4fd5a95c1f3489255980",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c0afed87cf994c1dabed4995fe9c4308",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3b68a870563540748bb27bb4ad178b59",
                        "sequential_name":"Existence and Uniqueness of Solutions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Autonomous differential equation",
                                            "Differential equation",
                                            "Slope field",
                                            "Function",
                                            "Defined"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Now before we get into discussing the details of the existence and uniqueness theorems, I'd like to discuss the notion of the domain of a differential equation using three examples. And I want to emphasize that I'm talking about the domain of the differential equation, and not the domain of the solutions to the differential equation. And geometrically you can think about this domain as the subset of the t y plane on which the formula for the differential equation gives us a slope field. Now let's start off with this example, dy dt is equal to y cubed plus t squared-- this is an example I keep using-- And we see that the right hand side of the differential equation, f of t and y is y cubed plus t squared. Now that's an extremely nice function of y and t, and it is definitely defined everywhere in the t y plane. So the domain of the differential equation, is equal to the entire t y plane, In this example. So the domain is everything. Let's move to the second example. In the second example, I've got dy dt is equal to y squared. In other words, I've got an autonomous differential equation, and the right hand side is a function of y alone. And I'm doing this example to emphasize that the domain of the differential equation, in this case with variables t and y, is always going to be a subset of the t y plane. Even though there's only a y on the right hand side, we still have the domain of the differential equation being equal to the entire t y plane. Even though there are no t's on the right hand side, the domain still is a subset of the t y plane. Now as a third example, let's consider the differential equation dy dt is equal to y divided by t. Now in this case, you can see that the right hand side of the differential equation is not defined if t is equal to 0. So the domain of the differential equation here, is going to be the entire t y plane, except where t equals 0, and of course where t equals 0, that is the y-axis. So the domain is the entire t y plane, except the y-axis. So the differential equation is not defined along the y-axis. Now you may actually want to think about this as two domains. Might want to think about it as two separate differential equations defined on two different domains. But technically, I want to say the domain of this differential equation is the entire t y plane, except the y-axis. Unless I impose some other restrictions. Now I'd like you to do a quick exercise just to make sure that we're on the same page when we talk about the domain of the differential equation. End of transcript. Skip to the start. ",
                                        "unit_id":"ee6592b51af345949eb39224b28dff1a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"484694a84a784dc7b4a9a3d0389c5c36",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Existence theorem",
                                            "Differential equations",
                                            "Differential equation",
                                            "Vertical asymptotes",
                                            "Vertical axis",
                                            "Initial conditions",
                                            "Initial condition",
                                            "Continuous function",
                                            "Inverse tangent",
                                            "Minus infinity",
                                            "Tangent function",
                                            "Form",
                                            "Continuous",
                                            "Interval",
                                            "Left",
                                            "Side",
                                            "Initial",
                                            "Ll",
                                            "Function",
                                            "Epsilon",
                                            "Pi",
                                            "Ve",
                                            "Tangent",
                                            "Squared",
                                            "Infinity",
                                            "Point",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's begin our discussion of the theory of the solutions to differential equations with the existence theorem. Now, we're considering differential equations of the form dy dt is equal to f of t and y. And let's suppose that f of t and y, the right hand side of the differential equation, is a continuous function and the rectangle of the form, t's go from a to b, and y's go from c to d. So over here in the picture, The t's go from a to b, the y's go from c to d, and that gives us a rectangle in the plane whose sides are parallel to the axes. And we're assuming that the right hand side of the differential equation is a continuous function inside of that rectangle. Now if we have a point, t zero y zero in that rectangle, then there exists an epsilon greater than zero and a solution y of t to the initial value problem, dy dt is equal to f of t and y, with y of t 0 equals y 0. On the interval from t 0 minus epsilon to t 0 plus epsilon. So the idea is that you would have a solution whose graph would go through the initial condition-- the point determined by the initial condition-- and that function then would be a solution to the differential equation. Let me just emphasize from the picture, that we have t 0 here, y zero there, and this is epsilon. And the statement of the theorem-- it's a little puzzling when you first see it-- you should think about that as some amount to the left and to the right of t 0, on which the initial value problem will have a solution. So left hand side here, you should think about that as t 0 minus epsilon, and the right hand side you should think about as t 0 plus epsilon. Now this epsilon business is a little puzzling, so let me talk about an example. And I'll use as my example dy dt is equal to 1 plus y squared, where y of 0 equals 0. Now this differential equation is autonomous, and therefore it's separable, so I'll separate variables by dividing both sides by 1 plus y squared. And I end up with the integral of 1 over 1 plus y squared dy, is equal to the integral of 1 dt. And the integral on the left hand side is the inverse tangent of the arctan of y. If I integrate the right hand side, I get t and I should have an arbitrary constant on one side or the other. And I'm going to put it on the right hand side. So I have arctangent of y is equal to t plus k. Now, I want to solve for y, so I take the tangent of both sides and I get the function y of t is equal to tangent of t plus k. Now to determine k I'll use the initial condition, so I have y of 0 equals 0. And I see using y of 0 equals 0 I can conclude-- for one choice anyway-- that k could be equal to zero. So I would produce the function, y of t is equal to tangent of t. So the tangent of 0 is 0, so this solves the initial value problem. This is also a good place to practice the no wrong answers principle, by taking the tangent of t and substituting it into the differential equation, and seeing that it satisfies the differential equation. Now to get a sense of what's going on with this epsilon business, let's turn to the computer. Here's a numerical solver, where I've already entered the differential equation, dy dt is equal to 1 plus y squared, and the initial condition y of 0 equals 0. And here's the graph of the solution that's generated by the numerical solver. Now we know that this solution is the tangent function, but I realize this graph may not look like the typical graph of the tangent function that you see. And that's because I've made the scale on the vertical axis go from minus 10 to 10. And I've done that so that I can show you what happens as y increases. So as we move along the graph, notice that as t increases, y increases. And say, suppose we get to someplace where about here where y is 5, and dy dt is equal to 26. So as t increases, y increases, and then that means dy dt increases even more, and therefore y grows even faster. And what happens is, there's a snowballing effect, and therefore as t goes to pi over 2 from the left, the y values go off to infinity. Now let's return to the slides, so that I can elaborate on the connection between what's happening here, and the epsilon in existence theorem. Let me summarize what we just saw on the computer. Our solution to our initial value problem is the function y of t is equal to tangent of t. And tangent of t has vertical asymptotes, in this case they're relevant at t is equal to minus pi over 2 and t is equal to pi over 2. So if we want a solution to the differential equation, that has to be a continuous function, the biggest interval on which the solution would be continuous is the interval minus pi over 2 is less than t, is less than pi over 2. So for this initial condition, the largest that we could have is epsilon being equal to pi over 2. Now in this case, we see as t goes to pi over 2, of course the tangent of t goes to infinity, and likewise as t goes to minus pi over 2, Tangent of t goes to minus infinity. And the term that we use in this case is we say the solution blows up, and blows down, in finite time. As t goes to pi over 2, the solution goes to infinity. It's also interesting to think about other initial conditions that are on the same graph. For example, we have the initial condition y of pi over 4 is equal to 1, tangent pi over 4 is equal to 1, and that's a point on this graph. And you can see that in this case, the largest that epsilon can be is pi over 4. So for this initial condition, the largest epsilon we can use is pi over 4. And in fact we could take other initial conditions, that would be points on this graph, and as we move up the graph, the size of epsilon would get smaller and smaller. In general, the existence theorem tells you that there is a positive epsilon, but you need to know something more about the differential equation to get any kind of estimate about the size of epsilon. At this point I'd like you to think carefully about the statement of the existence theorem, and so I have an exercise for you to do that involves a familiar different equation-- not this one, but another one-- where you can think about what the implications of the existence theorem are. End of transcript. Skip to the start. ",
                                        "unit_id":"bbde04e7369b430ca32fcf22e4d02abf",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5761104152a8492397f91f790bfaea66",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Sine function",
                                            "Uniqueness theorem",
                                            "Square root",
                                            "Cube root",
                                            "Initial condition",
                                            "Uniqueness",
                                            "Initial",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: The best way to understand the uniqueness theorem is to first consider an example where we do not have uniqueness of solutions. One of my favorite examples is the differential equation dy/dt is equal to the cube root of y times sine of 2t. And I'm going to use the initial condition y of 0 equals 0. And I would like you to think about the following three functions-- y1 of t is equal to 0 for all t. So that's an equilibrium solution. y2 of t is equal to the square root of 8 over 27, times the sine cubed of t. And then y3 of t, which is just minus 1 times y2 of t. Now I claim that all three of these functions solve the initial value problem. Now, I'm not going to justify this claim for you. In fact, I'm going to leave it to you to justify, but by now, you might guess that what I want you to do is use the no wrong answers principle to make the justification. You might also be wondering where I came up with particularly y2 and y3, and I did that by separation of variables. And I'm going to leave that to the exercises associated with this module. What I'd like to do is think about the three graphs involved. The graph of the equilibrium solution, that's just the t axis. That's easy. Here in the middle, we have the graph of the square root of 8/27 sine cubed of t. That somewhat more complicated graph has some aspects of the sine function in it, but-- sine cubed, so that changes the nature of it. And then here's the graph of y3, which is just minus 1 times the graph of y2. And I want to put all three of these graphs on the same set of axes, because what I want to do is I want to focus on what's happening right near 0, 0. And you can see that you have three solutions that pass through the point 0, 0. And whenever we have more than one solution corresponding to an initial value, we say that the differential equation lacks uniqueness. So this is the kind of thing that we're going to rule out with the uniqueness theorem. Before we talk about the uniqueness theorem, I'd like you to do the exercise where you verify that y2 of t is a solution to this differential equation. So I'd like you to do that exercise now. End of transcript. Skip to the start. ",
                                        "unit_id":"2fde6cf49e07440cad32739c503bbbc2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cd9430ba90bd4f4e80779397d595f299",
                                "vertical_name":"Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Upper half plane",
                                            "Differential equation",
                                            "Right hand side",
                                            "Cube root",
                                            "Continuous functions",
                                            "Initial conditions",
                                            "Uniqueness theorem",
                                            "Initial condition",
                                            "Continuous function",
                                            "Plane",
                                            "Theorem",
                                            "Continuous",
                                            "Uniqueness",
                                            "Initial",
                                            "Form",
                                            "Discussed",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here's a statement of the Uniqueness Theorem. Now, we're considering differential equation of the form dydt is equal to f of t and y. And let's suppose that the right-hand side, f of t and y, and the partial of f with respect to y are both continuous functions in a rectangle of the form t's go from a to b and y's go from c to d. And let's consider an initial condition t zero y zero as a point in this rectangle. And suppose we have two functions, y1 of t and y2 of t, that both solve the initial value problem, dydt is equal to f of t and y and y of t0 is equal to y0 in an interval around t0. And what the Uniqueness Theorem says is that these two functions are really the same function at y1 of t is equal to y2 of t for the t's in this interval. So the solutions to an initial value problem-- the solution of an initial value problem is unique. So notice we needed an extra condition to get uniqueness of solutions. Not only did we have to have the right-hand side of the differential equation being a continuous function. But we also had to have the partial of f with respect to y being a continuous function in the rectangle to have uniqueness. Let's go back to the example that we discussed that did not have uniqueness at 0, 0. Now remember that example was the differential equation dydt is equal to the cube root of y times sine of 2t. Now, what I've shown in this picture is that if we restrict our attention to solutions that stay in the upper half plane y greater than 0, then we have uniqueness. The solutions are unique, if they remain entirely in the upper half plane y greater than 0. And the difference between this situation and what we discussed when we discussed lack of uniqueness is given by the fact that the cube root of y is a function whose partial with respect to y is not continuous at zero. So we don't have the Uniqueness Theorem. We cannot apply the Uniqueness Theorem, if we're talking about initial conditions that are on the t axis. However, if we avoid the t axis, then we have uniqueness. Now let me turn to another example that seems to contradict the Uniqueness Theorem but doesn't. And I'm going to show you this example on the computer. Here's an example that at first glance seems to violate the Uniqueness Theorem. The differential equation is dydt is equal to t times cosine of t plus y divided by t. In Module Nine, we will derive its general solution. But for now, let's concentrate on the graphs of the solutions as I vary the initial condition. As I move the initial condition around in the t,y plane, we see that the graphs oscillate with varying amplitude. And as I move the initial condition through the y-axis, they seem to flip. But there is one thing that each graph does. It goes through the point 0, 0. And therefore it satisfies the initial condition y of 0 equals 0. And that violates the Uniqueness Theorem. We need not worry, however. In fact, this example does not violate the Uniqueness Theorem because the y-axis, the line t equals 0, does not belong to the domain of the differential equation. So we can rest easy. The Uniqueness Theorem remains a theorem. End of transcript. Skip to the start. ",
                                        "unit_id":"abe3594b021a4cb785e6711c17a8e509",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7b28fc5f16194d05b640243e73977b13",
                                "vertical_name":"Video 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Uniqueness theorem",
                                            "Differential equation",
                                            "Differential equations",
                                            "Partial derivative",
                                            "Right hand side",
                                            "Minus infinity",
                                            "Continuous function",
                                            "Initial condition",
                                            "Uniqueness",
                                            "Implies",
                                            "Method",
                                            "Start",
                                            "Follow",
                                            "Interval",
                                            "Equilibrium",
                                            "Function",
                                            "Satisfy",
                                            "Negative",
                                            "Continuous",
                                            "Sine",
                                            "Pi",
                                            "Infinity",
                                            "Form",
                                            "Equal",
                                            "Initial",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: The existence theorem tells us that our differential equations have solutions and the uniqueness theorem tells us that we don't have too many. It turns out that the uniqueness theorem is a handy principle that has lots of useful consequences. And what I'd like to do is illustrate that with three examples. Let's begin with a differential equation, dy dt is equal to minus 2 times t times y squared. The right-hand side is a nice function. It is continuous on the entire ty plane and its partial derivative with respect to y is also continuous on the entire ty plane. So the uniqueness theorem applies. You may remember this differential equation from when we separated variables. When we separated variables, we found that functions of the form y of t, which is equal to 1 over t squared plus k, where k is any constant, satisfied a differential equation. At the time, we also observed that none of these functions could satisfy initial value problems with a value of y as 0. And then we realized that the function y of t, which is constantly 0-- equal to 0-- for all t, is also a solution to this differential equation. And it satisfies the initial value problems with a value of y is equal to 0. So if we combine this one-parameter family-- the function is of the form y of t is equal to 1 over t squared plus k, where k is any constant-- along with the equilibrium solution-- y of t equals 0 for all t-- into one collection then we are able to satisfy all initial value problems. And we called this collection of functions the general solution. Now when we do that, we're really using the uniqueness theorem because what the uniqueness theorem implies is that all solutions to the differential equation are functions of this form. They're either of the form y of t is equal to 1 over t squared plus k or they're the equilibrium solution y of t equals 0 for all t. The reason that there are no other solutions is that we can satisfy every initial value problem with functions of this form. And the uniqueness theorem tells us that there's only one solution for each initial value problem. As a second example, I'd like to consider the differential equation dy dt is equal to y times 1 minus 1. Now the right-hand side of this differential equation is continuous on the entire ty plane and its partial derivative with respect to y is continuous on the entire ty plane. So once again, we know that the uniqueness theorem applies to this differential equation. And in fact, this differential equation should look familiar. It is autonomous. And we used it as an example when we studied slope fields. And when we did that, we observed that there are two equilibrium solutions. There's y1 of t, which is equal to 0 for all t. So there's the equilibrium solution whose graph is the t-axis. And there's an equilibrium solution y2 of t is equal to 1 for all t. So that has the line y equals 1 as its graph. Now, let's consider the initial value problem where y of 0 is equal to 1/2. So we're talking about that initial condition right there. What does the uniqueness theorem tell us about the solution to this initial value problem? It turns out, that uniqueness implies that the solution to this initial value problem satisfies the condition 0 is less than y of t is less than 1 for all t. And the reason that we know that y of t is trapped between 0 and 1 is the fact that this graph of this solution to the initial value problem cannot touch the line y equals 0 nor the line y equals 1 because those lines are occupied by the graphs of the equilibrium solutions. Now in the picture you also see that the graph is increasing as t goes to infinity. But that's not what follows from the uniqueness theorem. That follows from analyzing the differential equation. Basically, what's important here is that the uniqueness theorem is telling us that even though it looks like these graphs are intersecting as t goes to infinity or as t goes to minus infinity, it turns out that the graph of the solution to the initial value problem y of 0 equals 1/2 is trapped in between those two lines. For our third application of the uniqueness theorem, let's return to the initial value problem dy dt is equal to e to the t times sine y with y of 0 equal to 5. As we discussed in Module 5, Euler's method are, in fact, any fixed step size method, has trouble accurately approximating the solution over a large interval of time. Here's the result of Euler's method over the interval from 0 to 7 with a step size of 0.05. As we observed in Module 5, Euler's method produces an approximation that behaves as expected until approximately 5, and then at t equals 5 the numerical errors start to dominate the calculation. In the slides that follow, I will demonstrate how we can use the uniqueness theorem to get a rigorous understanding of the long-term behavior of the solution to this initial value. The differential equation dy dt is equal to e to the t sine y has a right-hand side e to the t sine y that is a continuous function on the entire ty plane. And moreover, its partial derivative with respect to y is a continuous function on the entire ty plane. And so we know that the uniqueness theorem applies to this differential equation. Now, let's see what uniqueness tells us about the solution to this initial value problem where y of 0 is equal to 5. Now if we look more carefully at the right-hand side of the differential equation, we can observe that we have a solution y1 of t of the form y1 of t is equal to pi for all t. In other words, this is an equilibrium solution whose value is pi for all time. Let me draw that graph in. So here's its graph. So that's the graph of y1 of t. And likewise, we have another equilibrium solution which is y2 of t is equal to 2 pi for all t. Let me draw that graph in. And so that's up here. So that's the graph of y2 of t. And then it's helpful if I call the solution to the initial value problem if I call that y3 of t. Now what does uniqueness tell us about y 3 of t? Well, it tells us that the graph of y3 of t cannot touch the graphs of y 1 of t nor the graph y2 of t. So uniqueness tells us that we have pi is less than y3 of t is less than 2 pi for all t. So it tells us that the solution to this initial value problem, the y3 function, is caught in this strip between y equals pi and y equals 2 pi. We can actually observe something more. This does not follow immediately from the uniqueness theorem. Is that if we have a solution in this strip then dy dt is going to be negative because e to the t is always positive and sine is negative inside this strip. So for y3 of t, we have dy dt is negative. And that implies that y3 of t is decreasing for all time, for all t. And therefore, we can conclude that y3 of t is asymptotic to pi as t goes to infinity. So the uniqueness theorem along with a little bit of extra work tells us that what we saw on the computer does not make sense. End of transcript. Skip to the start. ",
                                        "unit_id":"adbd253543ed4a8abbceb8ad29cadb4d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fbc6052fd4424fa392c3da59ad838ae5",
                                "vertical_name":"Video 5"
                            }
                        ]
                    },
                    {
                        "sequential_id":"1d2255d72ff24e1eb56d9c0e88d9585f",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Uniqueness theorem",
                                            "Uniqueness"
                                        ],
                                        "data":" CONCLUSION TO MODULE 6: EXISTENCE AND UNIQUENESS OF SOLUTIONS The Existence and Uniqueness Theorems form the theoretical foundation on which our analysis of solutions stands, and the Uniqueness Theorem has a number of useful consequences. In Modules 7 and 8, we will use geometric techniques to obtain qualitative information for solutions to autonomous equations. In Module 9, we will study linear differential equations for which we will be able to derive closed form solutions in many cases. ",
                                        "unit_id":"b89ff0be67f04e05a03d320f6ef8e436",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e5a0a1913fae489ca1898fd9696c7253",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"cb227c1a7e65437489c07722fb1ffd24",
                "chapter_name":"Module 7: Autonomous Equations and their Phase Lines",
                "sequentials":[
                    {
                        "sequential_id":"de075c6766d24dc8988f162e4fcec969",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dependent variable",
                                            "Time scales",
                                            "Time"
                                        ],
                                        "data":" INTRODUCTION TO Module 7: Autonomous Equations and their Phase Lines Autonomous differential equations are equations of the form dy/dt=f(y), that is, the rate of change of the dependent variable can be expressed as a function of the dependent variable alone. These equations appear frequently as models for two reasons. First, many physical systems work the same way at any time. Second, for many systems, the time dependence \"averages out\" over the time scales being considered. In this module we learn qualitative techniques that help us sketch the graphs of solutions with less computation than with other methods. ",
                                        "unit_id":"4b746e7b3dff42baa4833f439b224353",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9a0072bfe097429e85d3ee5620936ddc",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e1e1b4f0d9aa462898a4602b159cc714",
                        "sequential_name":"Autonomous Equations and their Phase Lines",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "First order differential equation",
                                            "Differential equation",
                                            "Autonomous equation",
                                            "Independent variable",
                                            "Dependent variable",
                                            "Electric circuit",
                                            "Radioactive decay",
                                            "Autonomous",
                                            "Translating",
                                            "Voltage",
                                            "Involved",
                                            "Minus",
                                            "Bt",
                                            "Discussed",
                                            "Sine",
                                            "Term",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Recall that a first-order differential equation with independent variable t and dependent variable y is said to be autonomous if dy/dt is equal to f of y. In other words, its derivative can be expressed in terms of a function f of y alone. And the rate of change of y depends only on the value of y, and the value of y is often called its \"state.\" And the way I like to say this informally is that a differential equation is autonomous if its derivative only depends on its state and not what day of the week it is. Examples of autonomous equations include exponential growth models, radioactive decay, and the logistic population model that we've discussed. It's helpful to compare autonomous equations with non-autonomous equations. So here's an example of a non-autonomous equation. dv/dt is equal to minus k times v plus a times sine of bt where k, a, and b are parameters. And this could be a simple model of voltage in an electric circuit. And the a sine of bt term, which is what makes the differential equation non-autonomous, might come from something like an external voltage source. Now, recall that every autonomous equation is separable, but nobody says that we'll be able to calculate the integrals that are involved. And so what we're going to do in this module is we're going to rely on the basic geometric fact that, if we're given a graph of one solution to an autonomous equation, we can get the graphs of other solutions by translating that graph left or right. And we discussed this principle when we talked about slope fields, and I showed you this example-- dy/dt is equal to y times 1 minus y. And here are seven graphs. And for example, we have these three graphs. Right here, we can get any one of these graphs from either of the other two by translating left or right. In this module, we're going to see what we can conclude about the solutions to autonomous differential equations just from this basic geometric fact. But before we get going on that, I would like you to do an exercise where you work with the algebra involved with translating solutions left or right. End of transcript. Skip to the start. ",
                                        "unit_id":"b8e30ff76a3843ee83ef59e24b3724de",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6de3c7774ee64e639109ef882c7f0276",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Uniqueness theorem",
                                            "Differential equation",
                                            "Equilibrium points",
                                            "Phase line",
                                            "Right hand side",
                                            "Initial conditions",
                                            "Initial condition",
                                            "Coordinate system",
                                            "Increasing function",
                                            "Tick mark",
                                            "Vertical line",
                                            "Slope field",
                                            "Minus infinity",
                                            "Equilibrium point",
                                            "Line",
                                            "Equilibrium",
                                            "Ve",
                                            "Collapse",
                                            "Fact",
                                            "Slope",
                                            "Ll",
                                            "Roughly",
                                            "Term",
                                            "Positive",
                                            "Infinity",
                                            "Approach",
                                            "Draw",
                                            "Point",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Solutions to autonomous equations satisfy the basic geometric fact that they can be translated left or right to produce other solutions. Now let's see what qualitative information we can conclude using this fact. And the way I like to express this fact, sometimes, is to say that the slope field has so much redundant information in it that we can often replace it with what's called the phase line. Now, what do I mean by redundant information? By redundant information, I mean that if we know the slopes in this slope field on any vertical line, we know the slopes in the entire ty plane. And so what we do is take the entire ty plane and collapse it onto a vertical line. And that vertical line is called the phase line. Now, you can think about the phase line as the y-axis, but I'd actually prefer that you don't do that. I'd rather you think about it as just a line with a coordinate system that only involves the variable y. And that's because the phase line doesn't really just correspond to t equals 0. It corresponds to all times. Now, the best way to understand the phase line is to do some examples. And let me start with a familiar one-- dydt is equal to y times 1 minus y. Now, for this differential equation, we can, of course, separate variables. But it's a lot of work to come up with the general solution. So let's see what we can conclude easily by just looking at the right-hand side and trying to come up with qualitative information. So the first thing we'll do is look for equilibrium solutions. And we see by taking the y term there, we can conclude that the function y1 of t, which is equal to 0 for all t, is an equilibrium solution. And let me draw in its graph. That's just the t axis. Also, the term 1 minus y gives us another equilibrium solution y2 of t is equal to 1 for all t. So I'll draw in the line y equals 1. And that's the graph of that equilibrium solution. Now, when we take and collapse the ty plane onto a vertical line, these two horizontal lines collapse to points. The equilibrium solution that corresponds to y1 of t, that becomes the point y equals 0. The equilibrium solution that corresponds to y2 of t, that corresponds to the point y equals 1. And so the equilibrium solutions become points on the phase line. And we call these points equilibrium points. Now, another thing to observe about this differential equation is very nice, and so we know that the uniqueness theorem applies. And so for example, if we take the initial condition y equals a half, and we take a solution with that initial condition, then we know from the uniqueness theorem that that solution is caught in between the lines y equals 0 and y equals 1. Now, if we look more carefully at the right-hand side of the differential equation, we also know that y times 1 minus y is positive. So we can conclude that dydt is positive inside this strip. And so we know that the solution must be an increasing function. On the phase line, what we're going to do is represent that as an arrow that points up. Now, if we're above the line y equals 1, then the right-hand side of the differential equation says dydt is negative. And so the solutions will be decreasing. So we represent that as an arrow that points down on the phase line. And likewise, if we're below the t axis, then we know that dydt is also negative. We have a typical graph right here. And we represent that on the phase line as another arrow that points down. Now, you should observe on the phase line that if you're near the equilibrium point y equals 1, then your solutions approach y equals 1. And so we call that equilibrium point a sink. Likewise, if you have initial conditions that are near y equals 0, then they move away from y equals 0, and we call that equilibrium point a source. So the phase line for this example consists of two equilibrium points and three intervals determined by those equilibrium points and the arrows that I've drawn in. And we should probably label the equilibrium points as sinks and source. Now, let me turn to the computer and illustrate what the phase line is saying about the solutions using an animation that I've constructed for this. Here's the same slope field that you just saw along with a phase line on the right. On the phase line, I've marked the two equilibrium points at y equals 0 and y equals 1 along with a tick mark for each. We have the option of turning on the graphs of up to five solutions. And these solutions are essentially the ones that you just saw in the previous slide. What's new here is that I have the ability to vary t from roughly minus 8 to plus 8. And if one or more of the solutions are graphed, we can see the corresponding y value on the phase line. For example, let's consider the solution that satisfies the initial condition y of 0 equals 1/2. As t goes to plus infinity, we see the y value approaching the sink at y equals 1. And as t goes to minus infinity, we see the y value approaching the source at y equal zero. We can also display the two equilibrium solutions. And as t varies, we see that their corresponding y values do not change. Let's turn off the equilibrium solutions and turn on the two outermost solutions. And with t small-- let's say roughly less than minus 4-- we see that the two lowermost solutions hover near the source at y equals 0 while the uppermost solution approaches the sink at y equals 1. For t between minus 4 and 4, we see the middle solution approach the sink at y equals 1. And for t greater than 4, we see the lowermost solution move away from the source at y equals 0. When you see a static phase line with two equilibrium points and arrows as you saw in the previous slide, I would like you to imagine the motion that you've seen here along the phase line. At this time, I'd like you to consider a different autonomous differential equations and draw its phase line. End of transcript. Skip to the start. ",
                                        "unit_id":"076fee9414974aa1ac58b05eed17d8e2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4f7ab7f5fb55424c94163ae83e821ced",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Differential equation",
                                            "Phase line",
                                            "Initial conditions",
                                            "Initial condition",
                                            "Autonomous equation",
                                            "Equilibrium points",
                                            "Equilibrium state",
                                            "Equilibrium point",
                                            "Heading",
                                            "Dy",
                                            "Ve",
                                            "Equilibrium",
                                            "Put",
                                            "Squared",
                                            "Side",
                                            "Bit",
                                            "Pi",
                                            "Cosine",
                                            "Ll",
                                            "Term",
                                            "Slide",
                                            "State",
                                            "Give",
                                            "Information",
                                            "Enter",
                                            "Point",
                                            "Positive",
                                            "Turn",
                                            "Make",
                                            "Start",
                                            "Arrow",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's do a phase line for a somewhat more complicated example. And I've picked dy dt is equal to y squared cosine of y. Before we get into doing the phase line, let me wish you the best of luck if you actually try to go ahead and separate variables on this example, because I have no idea how to integrate 1 over y squared cosine of y dy. So let's see what qualitative information we can conclude about the solutions to this differential equation, just from studying its phase line. Now the first thing we should do-- we always do when we make a phase line-- is we compute the equilibrium solutions, which is the same thing as calculating equilibrium points. And with an autonomous equation, that corresponds to where the right hand side is equal to 0, the y value is where the right hand side is equal to 0. So we have y squared cosine of y is equal to 0. Now that happens where either y squared is equal to 0 or cosine of y is equal to 0. And of course, y squared is equal to 0 if and only if y is equal to 0, so we have y equals 0. And then if we think about cosine, well, we know that cosine is equal to 0 at y equals plus or minus pi over 2, plus or minus 3 pi over 2, plus or minus 5 pi over 2, et cetera. So let me go over to the phase line. Start putting in the equilibrium points. So in the center let's put y equals 0. We have y is equal to plus or minus pi over 2, so here we'll go y is equal to pi over 2, y is equal to minus pi over 2 below, and then we'll do the same thing with y is equal to 3 pi over 2, and down here, y is equal to minus 3 pi over 2. Now the other thing that we need to do is we need to put into the arrows. Of course, you determine the arrows from whether the derivative is positive or negative, so the S-I-G-N, the sign, of dy dt. If we take a moment here and we look at the right hand side-- of course, y squared cosine y y squared is always going to be positive-- so the sign, S-I-G-N, of dy dt is the same thing as the sign of cosine of y. And we know that cosine alternates positive and negative in between the zeros. So we combined this information, so let's see. We'll put in the sign of cosine of y, so between minus pi over 2 and pi over 2, cosine is going to be positive, so we'll put arrows heading up. Above pi over 2 but below 3 pi over 2, cosine will be negative, so the arrow points down. Down here between minus pi over 2 and minus 3 pi over 2, the cosine is negative, so the arrow will point down. And then we continue along, arrow will point up. Here the arrow will point up. And I should really emphasize that these are equilibrium points, so let me make them a little bit larger. Now let's label the equilibrium points so we can see. Up above here, y equals 3 pi over 2. That is a source. y equals pi over 2. That's a sink. Let me skip over y equals 0 for a second. y equals minus pi over 2. That's a source. And y is equal to minus 3 pi over 2, that's a sink. Now let's go back to this one unusual equilibrium point, y equals 0. On one side of y equals 0 the solutions are heading away, and on the other side they're heading closer. So it's kind of half of a sink, half of a source, and a term we use for this is a node. So here's our picture of our phase line from the differential equation. Now with this example, I'd also like to consider the graph of the right hand side of the differential equation. So let me emphasize, I'm not graphing the solutions here. I'm actually graphing the right hand side of the differential equation. So I'm graphing y squared cosine of y as a function of y. And you can see the places where y squared cosine of y is equal to 0 in this picture. There's 0, there's pi over 2, there's 3 pi over 2, there's minus pi over 2, minus 3 pi over 2. So those five zeros correspond to the five equilibrium points that we saw in the phase line. Here I have kind of a pretty version of the phase line that I've made. And so here are our five equilibrium points. And you really should think about the phase line here as the same thing as this y-axis in this picture. So it's horizontal here, and it's vertical as a phase line. Now let's take a moment and think about the graph of y squared cosine of y. Well, the y squared makes the graph grow very rapidly when we get far away from 0, but the cosine is going to give you something that alternates positive and negative. And so it's good to remember that this graph is actually going to turn around at some point and head down, and then it'll turn around and head up. And it'll do that infinitely often. This maximum value here in this particular picture-- the next maximum is about 40, which is why I didn't draw in the whole picture. And then we can look at the graph of the right hand side of the differential equation. We notice, say between minus pi over 2 and 0, we get a positive value. Also, between 0 and pi over 2 we get a positive value. And you can see, because of both of these positive values, we end up getting a node in that picture. And then you can see that's the only place where we have a zero that doesn't cause the y squared cosine of y to change from positive to negative or negative to positive. And so that corresponds to the fact that we have a node here for y equals 0, but that's the only place that we have a node. Otherwise we just have sinks and sources. Now, I would also like you to be able to think about the phase line, and visualize what the graphs of the solutions look like. And so what I'm going to do right now is I'm going to turn to the solver and show you the graphs of the solution. Now that we have the phase line for this differential equation I want you to be able to visualize the graphs of its solutions. And let's start with the equilibrium solutions. We know that there's an equilibrium solution that corresponds to y equals 0, so let's graph that one first. We also have equilibrium solutions that correspond to y is equal to plus or minus pi over 2. And we could calculate the decimal approximation to pi over 2 and enter it down here, but there's a more efficient way to do this. We use the fact that y is equal to pi over 2 is a sink, and we'll come way over here on the left hand side and we'll enter that initial condition, and it'll give us a graph that appears to be an equilibrium solution. We'll do the same thing at y is equal to minus pi over 2, except in that case it's a source so we'll go all the way over to the right side, and we'll get a graph of that equilibrium solution. Now we'll go up to the y equals 3 pi over 2, and we'll enter and get a graph of an equilibrium solution. And we'll go to y is equal to minus 3 pi over 2 and enter, and we'll get our fifth graph of an equilibrium solution. And so these five graphs correspond to the five equilibrium points that we saw in the phase line. Now that we have these five equilibrium solutions-- the graphs of these five equilibrium solutios-- we'll want to understand what the graphs look like for initial conditions that lie in between. So between 0 and pi over 2, we know that dy dt is positive, so we'll have a graph that increases. The same thing happens between 0 and minus pi over 2. dy dt is also positive, and so we get a graph that increases. And notice that it's consistent with the fact that we're saying that the equilibrium point at 0 is a node. Between pi over 2 and 3 pi over 2, we know that dy dt is negative, and so we get a graph that is decreasing. And likewise, between minus pi over 2 and minus 3 pi over 2 we get dy dt is negative, and so we have a graph that is decreasing. Above 3 pi over 2, dy dt is positive. But it's very difficult to even see what the graph of the solution looks like, because dy dt is quite a bit bigger and leaves the rectangle very quickly. And likewise, down here below minus 3 pi over 2. Now we'll conclude our discussion of this example with one more slide that has both these graphs and the phase line on it, and I'll make one more point about this example. This slide takes the graphs of the solutions that you just saw on the computer and puts them next to the phase line for this example. Now we've already talked about this example quite a bit, so there's very little that I want to add, with the exception of one thing. If we take initial conditions that are near 0 and we look at the corresponding solutions, we notice that they transition from one equilibrium state to another relatively slowly. However, if we move further away from the origin, then the transition from one state to the other is very quick. And that's because the magnitude of dy dt is quite a bit larger because of the y squared term and y squared cosine of y as you move away from the origin. And that's information that you do not see from the phase line, so sometimes there's additional information that you want from the differential equation that you will not get from the phase line. Now at this point, I would like you to do a phase line that's somewhat more complicated than the one that you've already done. End of transcript. Skip to the start. ",
                                        "unit_id":"507bc3364d3642e889bfa2c217d9fee5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0c8fdf3216814e52b4afa25388593ea1",
                                "vertical_name":"Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Equilibrium points",
                                            "Differential equations",
                                            "Differential equation",
                                            "Phase line",
                                            "Right hand side",
                                            "Ll"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Now, sometimes we have differential equations where we don't know what the right-hand side is exactly, we just know roughly some of the properties that f of y might have. And in this case, let's suppose that f of y roughly has the nature of this graph that I've shown here. We can still sketch the phase line and say some things about the solutions to this differential equation, even though we don't have a formula for f of y. Now, first of all, the equilibrium points correspond to the places where f of y is equal to zero, the y values. Now, I haven't put a scale in this picture, so we'll need to label these. And so I'll go from negative to positive. So I'll call this number y1, this number y2, y3 is positive, y4, and y5. So here we have y1, y2 on the phase line, y3, y4, and y5. Where y1 and y2 are negative, and y3, y4, and y5 are positive. So those will be our equilibrium points. Now, the intervals in between the equilibrium points, we need to determine whether the solutions are increasing or decreasing, and we do that by looking at whether f of y is positive or negative. First of all, if we are below y1, then f of y is negative, so that means that the solutions will be decreasing. For between y1 and y2, then we know that f of y is positive, and so the solution will be increasing. Between y2 and y3, we have negative, so we know that the solution is decreasing. Between y3 and y4, we have positive. Between y4 and y5 we have positive. So we have two consecutive arrows pointing up. And then greater than y5, we have negative, so solutions will be heading down. And with that information we can describe what the nature of the equilibrium points is. So we have y1, looks like a source. y2 looks like a sink. y3 is a source. y4 is a node, because the arrows both point in the same direction. And y5 is a sink. And we can see this node at y4 that corresponds to the case where the function did not change from positive to negative or negative to positive at that particular zero of f of y. So this example illustrates how you can go from some information about the right-hand side of the differential equation to its corresponding phase line. And then once you have the phase line, then you have a rough idea of what the graphs of the solutions look like. End of transcript. Skip to the start. ",
                                        "unit_id":"f030ecd0da484492977f10b9574781de",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a900d20be9a745b6b7a37d866fefd771",
                                "vertical_name":"Video 4"
                            }
                        ]
                    },
                    {
                        "sequential_id":"07087b72fd634ce7a421b06a0c09761b",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Autonomous equation",
                                            "Good idea",
                                            "Phase line",
                                            "Line"
                                        ],
                                        "data":" CONCLUSION TO MODULE 7: AUTONOMOUS EQUATIONS AND THEIR PHASE LINES Given an autonomous equation it is relatively easy to sketch its phase line, and with this line, we get a good idea of the qualitative behavior of its solutions. In Module 8, we'll consider one-parameter families of autonomous equations, and we'll use phase lines to study how solutions change as the parameter varies. ",
                                        "unit_id":"76668568e811497ca2d295c6ae6582e2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"51729ab59ed346c59edc2df8749e9e79",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"1e8fefe65b70426a91b72e41a6073e62",
                "chapter_name":"Module 8: Bifurcations",
                "sequentials":[
                    {
                        "sequential_id":"babe52609d5e4ed4ab01eb1e7a2095c0",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Exponential growth model",
                                            "Differential equations",
                                            "Iliac arteries",
                                            "Small change",
                                            "Court case",
                                            "Independent variable",
                                            "Fork",
                                            "Bifurcation",
                                            "Model",
                                            "Change",
                                            "Variable",
                                            "Case",
                                            "Behavior",
                                            "Parameter",
                                            "Study"
                                        ],
                                        "data":" introduction to module 8: bifurcations Many models involve parameters as well as variables. Parameters are quantities that do not depend on the independent variable (which, for us, is often time). However, they assume different values depending on the specifics of the application at hand. For instance, the exponential growth model for population dpdt=kp contains the parameter k. Its value is constant as a function of time t but is different for different species. For example, the value of k for rabbits is significantly larger than the value for humans. In this module, we study how the long-term behavior of solutions depends on the values of the parameters involved. In some cases, a small change in a parameter leads to a large change in the behavior of solutions. Such a change is called a bifurcation. The word bifurcation means fork, splitting, or division, such as a fork in the road, the splitting of the aorta into the left and right iliac arteries, or the division of a court case into separate proceedings. The term was introduced into the study of differential equations by Henri Poincar&eacute; in 1885. Bifurcations lead to surprising conclusions for some models that involve parameters, and we'll study one such example at the end of this module. ",
                                        "unit_id":"052557442bc74938ae2afd84076323f9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a3069084999d4586a52d5d606e1a4274",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"fd36594ecb7a44b9a73f2f59354e3861",
                        "sequential_name":"Bifurcations",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Logistic model",
                                            "Population growth",
                                            "Differential equation",
                                            "Carrying capacity",
                                            "Equilibrium points",
                                            "Harvest fish",
                                            "Model",
                                            "Equation",
                                            "Harvest",
                                            "Fish",
                                            "Time",
                                            "Parameter",
                                            "Harvesting"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: There are many who say that the majority of the major fisheries of the world have been over-exploited. One example is Georges Bank just off the coast of New England. For hundreds of years, Georges Bank provided abundant fisheries of cod and halibut. But in the last half of the 20th century, fishers have started to harvest fish using bottom trawlers, and the fish population has declined rapidly. In an effort to reverse this trend, stringent fishing regulations have been enacted. However, these regulations have caused severe economic hardship for those who make their livelihood catching fish. Various solutions to this problem have been proposed, but there are significant controversy associated with them. Can the theory of differential equations provide some insight into this problem? Let's attempt to answer this question by studying a differential equation that might be relevant, and we're going to start with the logistic model of population growth that we've already discussed Now, recall that that's dp/dt is equal to k times p times the quantity 1 minus p divided by N where k is a growth-rate parameter and N is a parameter which is called the \"carrying capacity.\" So k and N are parameters. The growth-rate parameter k is determined by the reproductive rate of the fish, and the carrying capacity N is determined by the habitat. And now, let's modify this differential equation to count for the harvesting of fish, and we're going to do this modification in as simple a way as possible at first. And so we're going to assume that the fish are harvested at a constant rate, and so we're going to introduce another parameter, C, which is going to be equal to the constant rate of harvesting. Now, while I'm at it, I might as well be clear about the variables. So t, as usual, is going to be time. And I guess, in this case, it may make the most sense to measure time in years, but you can measure time in whatever units you would like that's convenient. And p-- well, we're certainly not going to count the number of fish in this context. We're going to weigh them. So p is going to be tons of fish. So we're going to start with the logistic population model. So that's dp/dt is equal to k times p times the quantity 1 minus p divided by capital N. And then we have a constant rate of harvesting, and we're going to think about that constant rate as a positive constant. And so we're going to subtract C as we harvest. And so this new equation, this modified logistic population model modified with constant harvesting is going to be the model that we're going to study in this module. Now, I'd like you to realize that we're going to treat k and N as fixed parameters. We don't really have any control over them because we don't have any control over the reproductive rate of the fish nor do we have any control over the habitat, but we're going to think of the parameter C as controllable. And so C is going to be the parameter that we vary in this model. And now that we have derived this modified logistic model, I'd like you to do an exercise that involves the computation of its equilibrium points. End of transcript. Skip to the start. ",
                                        "unit_id":"617189350d5648238a1de9a834097b55",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9ddc468b0bd24bb880c17ca7c5a3366c",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial condition",
                                            "Equilibrium point",
                                            "Differential equations",
                                            "Logistic model",
                                            "Square root",
                                            "Decimal places",
                                            "Differential equation",
                                            "Vertical axis",
                                            "Autonomous equation",
                                            "Phase line",
                                            "Equilibrium points",
                                            "Quadratic formula",
                                            "Minus infinity",
                                            "Point",
                                            "Greater",
                                            "Equilibrium",
                                            "Case",
                                            "Minus",
                                            "Put",
                                            "Positive",
                                            "Infinity",
                                            "Bit",
                                            "Side",
                                            "Change",
                                            "Studied",
                                            "Quadratic",
                                            "Time",
                                            "Demonstration",
                                            "Detail",
                                            "Parameter",
                                            "Arrowhead",
                                            "Ve",
                                            "Move",
                                            "Arrow",
                                            "Pointing",
                                            "Negative",
                                            "Moved",
                                            "Parabola"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Before we study this logistic model with harvesting in more detail, let's consider a similar example for which the algebra is simpler. I'm going to consider the one parameter family, dy dt, is equal to y times the quantity 1 minus y minus a. So a is going to be our parameter. And notice that no matter what the value of a is, we have an autonomous equation, and so it makes sense to draw its phase line. What I'm going to do at first is I'm going to draw the phase line for four different values of a, and then we're going to compare them. And I'm going to start off with a equals 0 because if a is equal to 0, then we just have dy dt is equal to y times 1 minus y, and we've already studied that in great detail in the last module. Now in this case, I've drawn the graph of the right hand side. So over here, I have a graph of dy dt as a function of y. dy dt is y times 1 minus y, so that's a quadratic, and we have a parabola as its graph. And that parabola intersects the y-axis at 0 and at 1, and so we have two equilibrium points. We have an equilibrium point at 0 and we have an equilibrium point at 1, so y equals 0, y equals 1. Now, in between these two equilibrium points, we see that the right hand side is positive. So in between, from 0 to 1, not counting 0 and 1, we know that dy dt is greater than 0. And so our solutions are going to be increasing. If we're to the right of 1 or to the left of 0, then dy dt is negative, so our solutions are going to be decreasing. And that means that the equilibrium point at y equals 1 is a sink and the equilibrium point at y equals 0 is a source. So all I've done so far is just review what we did in the last module. Now let's turn to a second value of a. Let's make a be equal to 1/8 and let's see how things change. Now, notice that in this slide, I've kept what we concluded about the a equals 0 case so that we can compare that with this case of a equals 1/8. And so I still have the parabola that corresponds to a equals 0, and now when we subtract 1/8, all we're doing is taking this parabola and translating it down by 1/8. So instead of having a maximum value of 1/4, it now has a maximum value of 1/8. And that means that we still get two equilibrium solutions, but they move closer to the center. They move closer to y is equal to 1/2. So this parabola is the graph when a is equal to 1/8. Now, we should compute the values of these equilibrium points, and that means that we should solve the quadratic y times the quantity 1 minus y minus 1/8 is equal to 0. Now for me, it's easy to use the quadratic formula if I multiply through by minus 8. And if I do that, I'm going to get 8y squared minus 8y plus 1 is equal to 0. And then I apply the quadratic formula. I get 8 plus or minus the square root of 64 minus 32 all divided by 16. And so I end up with 1/2 plus or minus the square root of 2 divided by 4. It's probably easier to think about these as approximately 0.15 and 0.85. These are approximate values. So now I have my two equilibrium points. They're a little bit closer to the center, but lots of what I saw are in the a equals 0 case carries over to the a equals 1/8 case. In between the two equilibrium points, dy dt is positive, so solutions would be increasing, and outside of the equilibrium points, the solutions will be decreasing. And so the larger equilibrium point is still going to be a sink and the smaller equilibrium point is still going to be a source. So in many ways, the phase line for a equals 1/8 is similar to the phase line for a equals 0. Now let's move along. Let's go from a equals 1/8 to a equals 1/4. Something very different happens here. The parabola for a equals 1/4 ends up being tangent to the y-axis. So we get this new parabola right here that corresponds to a equals 1/4, and the other two parabolas are the previous a values. Now, notice I've got the phase line for a equals 0, the phase line for a equals 1/8. Now let's do the phase line for a equals 1/4. Now we only have one equilibrium point, and that's right at 1/2. And then if we're not at that equilibrium point, then dy dt is negative, and so our solutions will be decreasing in both cases. And so on one side, we have the arrow approaching the equilibrium point. On the other side, we have the arrow pointing away from the equilibrium point. And remember, we called this type of equilibrium point a node. So for a equals 1/4, we get a node as our equilibrium point. And for our final value that I want to consider for now, let's do a is equal to 3/8. Again, I've listed a equals 0, a equals 1/8, a equals 1/4, and I had to change the scale a little bit here on the vertical axis so that you could see this parabola corresponds to a is equal to 3/8. And now dy dt is always negative, there are no equilibrium points, and so my phase line just has one arrowhead on it, and that arrowhead points down, and that corresponds to the fact of all of the solutions are coming from plus infinity and heading to minus infinity. Now let's turn to the computer for a demonstration of the meaning of these phase lines. Here's a little demonstration program that was written to illustrate these computations. Now, there are three windows here that you should notice. The first up top is the standard ty plane in which we have the graphs of solutions. To the left is a little window that corresponds to the phase line for this differential equation, and down below is the graph of dy dt as a function of y. And over here to the right is a slider where we can set the value of a to two decimal places. We started out with a equals 0. In other words, the differential equations was just dy dt is equal to y times 1 minus 1. This is the one that we've studied already in great detail, and where we know that we have the two equilibrium solutions corresponding to y equals 1 and y equals 0. And for values that are between 0 and 1-- I'll put in one that's relatively close to zero-- we have the solution is asymptotic in positive time to the equilibrium y equals 1. If we have solutions that correspond to initial conditions greater than one, then they're asymptotic in positive time to y equals 1. And if we take a solution with an initial condition that's just slightly negative, then we see that it heads off to minus infinity. And over here, we have a phase line that has the appropriate arrows, and we can see that y equals 0 is a source and y equals 1 is a sink. Now let's move on. a is equal to 1/8. Now, we can't put in a equals 1/8 directly, so we'll put in a is equal to 0.12. And we see over here for the parabola for dy dt, that parabola has moved down slightly, and so the equilibrium points have moved in toward y equals 1/2. The one that was at 0 has moved up and is slightly positive. The one that was at 1 has moved down just slightly. And if we look at their nature, we can see that that hasn't changed. The one that is just slightly positive is now still a source, and the one that is just below one is still a sink. And if we look at the phase line, the arrows are still pointing in the same direction. The only difference is that the two equilibrium points have moved closer together. Next, if we move to a is equal to 1/4, then we see that something different happened. The parabola is now tangent to the y-axis, and so we only have one equilibrium solution, and dy dt is negative for all the other values of y. And that means that all the other solutions are decreasing, and so this equilibrium solution is a node. Finally, if we go to a is equal to 3/8, we'll put in 0.37, we see that the parabola is now completely below the y-axis and so there are no equilibrium solutions. All of the solutions are decreasing. So here is a graph of a typical solution. It comes from plus infinity, levels out almost, and then goes off to minus infinity. And you see the arrow in the phase line is just always pointing down. There are no equilibrium points on the phase line. Now at this point, I'd like you to do one of these phase lines yourself, so I'd like you to work out the details for a is equal to 3/16. End of transcript. Skip to the start. ",
                                        "unit_id":"ce6d86ddf6814af7877175a83e987b5b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"39bcb51ee725404c9f16d25e06fb6778",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial conditions",
                                            "Phase line",
                                            "Equilibrium points",
                                            "Differential equations",
                                            "Equilibrium point",
                                            "Square root",
                                            "Quadratic formula",
                                            "Bifurcation diagram",
                                            "Right hand side",
                                            "Minus infinity",
                                            "Quadratic function",
                                            "Form",
                                            "Family",
                                            "Point",
                                            "Diagram",
                                            "Quadratic",
                                            "Demonstration",
                                            "Squared",
                                            "Infinity",
                                            "Bifurcation",
                                            "Minus",
                                            "Transitional",
                                            "Opening",
                                            "Put",
                                            "Head",
                                            "Ve",
                                            "Discussed",
                                            "Detail",
                                            "Moment",
                                            "Computer",
                                            "Side",
                                            "Function",
                                            "Parabola"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here are the four phase lines that we have already discussed for the one-parameter family. dy/dt is equal to y times the quantity 1 minus y minus a. We've discussed a equals 0, a equals an 1/8, a equals 1/4, and a equals 3/8 in great detail already. And what we're going to do now is we're going to use the fact that there's a phase line for each value of a, and we're going to put them all together into a diagram that's called the bifurcation diagram for the one-parameter family. Now, the bifurcation diagram for the one-parameter family is a picture of all of the phase lines put together. For each value of a, there's a phase line. And so we're going to draw a diagram in the a, y plane where each vertical line represents a phase line. And the first thing we're going to do is we're going to highlight the equilibrium points. And to find the equilibrium points, we take the right-hand side of the equation, y times the quantity 1 minus y minus a, and we set that equal to 0. And we solve for y as a function of a. So we get y minus y squared minus a is equal to 0. And what I like to do is just rewrite this as y squared minus y plus a is equal to 0. And now I'm going to apply the quadratic formula. And so the equilibrium points will be y is equal to 1 plus or minus the square root of 1 minus 4a all over 2. Now, what this tells us is that we're going to have two equilibrium points whenever what's inside of the square root is positive. And so 1/4, a equals 1/4, is going to be an important dividing line. To the left of a equals 1/4, we're going to have two equilibrium points. And to the right of 1/4, we're going to have no equilibrium points at all. And 1/4 is a special value where we have exactly one equilibrium point. Now, we'd actually like to see what the equilibrium points are as they are shown in the a, y plane. And to do that, I think it's easier to work with this second equation right here, the y minus y squared minus a is equal to 0, and move the a over to the other side. And we get a is equal to y minus y squared. And if we think about what that is, that's a quadratic. a is a quadratic function of y, and so its graph is a parabola. Might want to turn your head sideways to see that. But this graph right here for the equilibrium points is a parabola. Now, what I want to do is I want to put in the arrows that we normally put in with phase lines. And I'm going to do this pretty quickly because we've already talked about this one-parameter family a great deal. So in here, inside this parabola region, we have the arrows pointing up. And to the right, we have the arrows pointing down. We have the node at 1/4, so both arrows point down. And so there we go. We have the arrows showing you what typically happens for the phase lines in this picture. And there's one other thing that I want to mention, and that's that the upper half of this parabola consists of sinks, and the lower half of the parabola consists of sources. So above here in this part of the parabola, I'm going to have sinks. And below down here, in the bottom half of the parabola, I'm going to have sources. Now, we have a better illustration of this bifurcation diagram on the computer. So let me turn to the computer now. Here's the computer demonstration for the one-parameter family of differential equations. dy/dt is equal to y times the quantity 1 minus y minus the parameter a that we saw in the previous video. We have, over here on the left, the phase line. Next to that, the graphs of the solutions in the t, y plane. Down below, we have the graph of dy/dt as a function of y, which, for this family, is always a parabola that's opening downward. And over here on the right, we have a slider that lets us select different values of a. At this point, we're going to introduce one more element to the demonstration, and that is the a, y plane in which we have our bifurcation diagram. Now, as we saw just a moment ago, the a, y plane is going to have its equilibrium points. The equilibrium points are going to be drawn in to the a, y plane. For this one-parameter family, the equilibrium points form a parabola. a is equal to y minus y squared, and that's a parabola that will opening out horizontally. Now, for different values of a, we get different phase lines. For values of a less than 1/4, the phase lines have two equilibrium points corresponding to the two different equilibrium solutions. And as a approaches 1/4, these two equilibrium points approach one another. And then as we pass through 1/4, we no longer have any equilibrium points, and all of the solutions come from plus infinity and head off to minus infinity. Another thing I'd like you to notice in the bifurcation diagram is that we have color-coded the type of equilibrium point if a is less than 1/4. We have the sinks that are up above coded in green, and the sources, which are down below, coded in red. And as a approaches 1/4, becomes equal to 1/4, the sinks and sources come together to form a node. And so we have a sink on one side and the source on the other. Now, there's a term that I will discuss in more detail in a moment but I wanted to illustrate while we still had the computer demonstration going. And that's the term of \"qualitatively equivalent\" differential equations. And in this one-parameter family, we say that all of the differential equations with the parameter a less than 1/4 are qualitatively equivalent. If you have a less than 1/4, you have two equilibrium solutions in between the initial conditions increase and are asymptotic to the sink. Up above, the initial conditions correspond to solutions that are asymptotic to the sink. And down below, initial conditions go off to minus infinity. And that same picture, well, that picture is essentially the same for all a's less than 1/4. And so we say that all of the differential equations corresponding to the a values less than 1/4 are qualitatively equivalent. Likewise, if we make a greater than 1/4, then we have no equilibrium points, and our solutions, as I said, go from plus infinity to minus infinity. And that's true for any a greater than 1/4. And so we say that all of the differential equations with a greater than 1/4 are qualitatively equivalent. And then if we let a be exactly equal to 1/4, we have a transitional point. And that transitional point, that a value, is called a bifurcation value. And in this one-parameter family, there's only one bifurcation value. It's a is equal to 1/4. The term \"bifurcation\" means \"fork,\" like a fork in the road. And here what we say is that there's a bifurcation at a is equal to 1/4. The equilibrium points coalesce at a is equal to 1/4, and then disappear. Now, let me go back to the slides and be a little bit more precise about this terminology. This slide gives an informal definition of some of the terms that I used when I was on the computer. For our one-parameter family of differential equations dy/dt is equal to y times the quantity 1 minus y minus a, we say that all of the systems, the differential equations and their phase lines, with a less than 1/4 are qualitatively equivalent. And by that we mean that they have the same number of equilibrium points, and the arrows between the equilibrium points point in the same direction. And if a is greater than 1/4, all of the systems are also qualitatively equivalent. There are no equilibrium points, and all of the arrows point down. And whenever we have a transitional value of the parameter between one group of qualitatively equivalent systems and another, in this case a equals 1/4, we call that transitional value a bifurcation value for the one-parameter family. And I'd like to emphasize that some one-parameter families of differential equations have more than one bifurcation value. In fact, you can have no bifurcation values, one bifurcation value, any number of bifurcation values. At this point, I would like you to sketch a bifurcation diagram for a different one-parameter family. And then we'll come back to the discussion of bifurcation values and bifurcation diagrams for the model of fishing that we started out this module with. End of transcript. Skip to the start. ",
                                        "unit_id":"8489f01e2c3a449cbbcdc97cee03d1db",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7d34760373b64356bc4958db3ca497a5",
                                "vertical_name":"Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Logistic growth model",
                                            "Equilibrium points",
                                            "Logistic model",
                                            "Low level",
                                            "Carrying capacity",
                                            "Commercial fishing",
                                            "Population biologist",
                                            "Bifurcation diagram",
                                            "Bifurcation point",
                                            "Rate",
                                            "Parameter",
                                            "Model",
                                            "Minus",
                                            "Harvesting",
                                            "Diagram",
                                            "Population",
                                            "Fish",
                                            "Graph",
                                            "Point",
                                            "Capital",
                                            "Amount",
                                            "Bifurcation",
                                            "Move",
                                            "Start",
                                            "Ve",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's return to the logistic growth model with constant harvesting. And let's discuss its bifurcation diagram. Now, remember, the logistic model with constant harvesting is dp dt is equal to k times p times the quantity 1 minus P divided by N minus C. And the parameter that we're considering as being controllable is the C. And because it's a harvesting rate, we might as well considered just C is greater than or equal to 0. Remember, k is the growth rate parameter. And N is the carrying capacity. And we're treating those parameters as if they're fixed. Now, in order to be able to draw the bifurcation diagram, we first need to be able to understand how dp dt depends on p. And if we have C equal 0, then we have dp dt is equal to k times p times 1 minus p divided by N. And that's going to be a parabola. It crosses the p-axis at 0 and at capital N, at the carrying capacity. And then we're going to start harvesting. And we want to see what happens to this parabola as C varies. And to get the bifurcation diagram, we need to know when does this graph move down and become tangent to the p-axis? There is more than one way to figure this out. But what I'm going to do is I'm going to compute this maximum value right here. And this maximum value, because it's a parabola, is going to occur at the midpoint. And, of course, the midpoint of this interval is capital N divided by 2. So let's calculate the value of dp dt when C is equal to 0 at p is equal to N over 2. So we get k times N over 2 times 1 minus N over 2 divided by N. And the N's cancel. So this term becomes 1/2. And so we have k times capital N divided by 4. So this maximum value right there is k times capital N divided by 4. Now, subtracting C means we're going to just move this parabola down, translate it down. And so we need to translate it down k times N over 4 to get a graph that's tangent. So if we do that, we then get a graph that is going to be tangent to the p-axis. So this first graph corresponds to C equals 0. This graph corresponds to C is equal to k times capital N divided by 4. Let's draw the bifurcation diagram. So here we have the CP plane. And in the CP plane, I've already placed the bifurcation value. The bifurcation value is k times capital N divided by 4. I've already placed that on the c-axis. And we should have our equilibrium points. And so our equilibrium points for this one parameter family satisfies the equation k times p times the quantity 1 minus p divided by capital N minus C is equal to 0. So if you move the C over to the other side, we get C is equal to k times p times the quantity 1 minus p divided by capital N. Now this expression right here is quadratic. And so we expect the solutions to this equation to be a parabola. And so we have the parabola C is equal to k times p times quantity 1 minus p divided by N. And that's a parabola that's opening out horizontally. Now, I should also put in the arrows. And this should look familiar. Inside of the parabola, the arrows are pointing up. Outside of the parabola, the arrows are pointing down. So for the top half of the parabola, the equilibrium points are sinks. For the bottom half of the parabola, the equilibrium point points are sources. And we have a node right here at the bifurcation point. Now, this diagram has an interesting interpretation when we think about commercial fishing over a long period of time. At first, the rate of harvesting is below the bifurcation value. There weren't very many fishermen, and there were plenty of fish. So we can think about those times as a point, something like that, on so we have a stable population with a modest amount of harvesting. However, as time evolved, we got more efficient at harvesting fish, and the value of C increased. As the value of C increased, our stable population of fish decreases somewhat, until, at a certain point, our harvesting rate passes the bifurcation value. So let's think about what happens in that case. Well, we've passed the bifurcation value, but we still probably increase our harvesting rate, because we don't realize the bifurcation value. We don't really know what the bifurcation value is. And so what happens is over time, the population decreases until we realize that we're in trouble, and that we have a very low population. Now, let's think about what would happen if we're at this low level of population, and we want the fish population to rebound. What would we have to do to the harvesting rate? Well, look. We have to go way over here before we enter the parabola again, till we get to a point where the fish population can rebound. So we almost have to prohibit completely the harvesting of fish to get the population to rebound. Once it does, then we'd be able to harvest again. Now, I have a disclaimer. I'd like to emphasize that I'm not advocating any particular policy in this case. And I say that because I have no idea if the logistic model with constant harvesting is a good model for this situation. I'm not a population biologist. I'm not a fisherman. So I don't really know if this model makes a lot of sense for this particular situation. But it does make a certain amount of sense. I'm discussing this model because to me, it has a surprising conclusion-- one that I would not have guessed if I had not used a bifurcation diagram as part of my analysis. End of transcript. Skip to the start. ",
                                        "unit_id":"364addde613a4513aa070edaf394775c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6f1254671a8c4e1e92f1dd51a93d6fdc",
                                "vertical_name":"Video 4"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"b3d724f4ca524c99ab40970c9ab8add3",
                "chapter_name":"Module 9: Linear Differential Equations",
                "sequentials":[
                    {
                        "sequential_id":"11f77cfa306d4edab21eff1622731116",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equations",
                                            "Linear differential equation",
                                            "Differential equations",
                                            "Differential equation",
                                            "Linear equations",
                                            "Linear",
                                            "Study"
                                        ],
                                        "data":" Introduction to module 9: Linear differential equations In this module we study linear differential equations. Linear differential equations are probably the most important class of differential equations for two reasons: If a process or phenomenon can be accurately modeled by a linear differential equation, then we can take advantage of analytic techniques that are not available when we study nonlinear equations. A nonlinear model can often be replaced by a linear one over a certain range of values, and by doing so, we are able to make conclusions about the nonlinear model using linear methods. As we continue to study the subject, we shall see both of these principles in action over and over again. This module is longer than a typical one in this course, and we have split the material into three submodules. In Module 9.1 we learn what it means to say that a differential equation is linear, and we study the special structure that their general solutions possess. In Module 9.2 we learn a technique for calculating general solutions that is mostly algebra, and in Module 9.3 we learn a technique for calculating general solutions that is mostly calculus. We conclude our discussion of linear equations with a comparison of these two techniques. ",
                                        "unit_id":"c5c2a2a2b20c4b0b88ceba7c65b27bdb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d4687481cd3945d6bb2c086a939a6d7f",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f7987ded15b4416ea54a7ba21fb79af8",
                        "sequential_name":"9.1 Linearity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equations",
                                            "Differential equation",
                                            "Agricultural runoff",
                                            "Carbon monoxide",
                                            "Salty water",
                                            "Salt water",
                                            "Independent variable",
                                            "Entering",
                                            "Water",
                                            "Salt",
                                            "Variable",
                                            "Ll",
                                            "Liter",
                                            "Tank"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's begin our discussion of linear differential equations by considering a mixing problem. We could be talking about, for example, agricultural runoff containing too much phosphorus entering Lake Erie. Or we could be considering air with too much carbon monoxide being blown into a room. But to keep things simple, let's consider saltwater in a tank. Now here's a tank. And imagine that the tank is partially full of salty water. And imagine that we also have a source of salt water, perhaps with a different concentration, entering the tank. And when that salt water enters the tank, it's mixed with the water that's already there and a well-mixed solution leaves the tank at perhaps a different rate. And we'd like to model the situation with a differential equation. And so we need some variables. Now everything is a function of time. So we'll let t be equal to time. And that will be our independent variable. We're interested in the amount of salt in the tank. And so we'll let s be equal to the amount of salt. And s will be a function of t. Now let's consider a specific example. Let's consider a 200 liter tank that initially contains 100 liters of salt water. And that salt water contains 1,000 grams of salt. And then let's suppose that we have salt water that contains 35 grams of salt per liter being pumped into the tank at a rate of four liters per minute, while a well-mixed solution leaves a tank at a rate of two liters per minute. Eventually, I'm going to ask you to determine how much salt is in the tank when the tank fills up. But for now, let's just discuss the differential equation that models the situation. And we're interested in the rate of change of salt as a function of time, ds dt. And that rate is going to be the difference between the rate of the amount of salt entering the tank, and the rate of the amount of salt leaving the tank. For now, I'd like you to set up a differential equation on your own with a few hints from us. And then we'll talk about why the resulting equation has a particularly nice form. End of transcript. Skip to the start. ",
                                        "unit_id":"9cb564c60fea438486dbbfc0821dc999",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ce950c0f46ab4ae9a88c190730c1bdd5",
                                "vertical_name":"9.1 Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equation",
                                            "Linear differential equations",
                                            "Differential equation",
                                            "Differential equations",
                                            "Linear equation",
                                            "Linear equations",
                                            "Independent variable",
                                            "Salty water",
                                            "Dependent variable",
                                            "Right hand side",
                                            "Left hand side",
                                            "Linear function",
                                            "Equation",
                                            "Form",
                                            "Linear",
                                            "Right hand",
                                            "Left hand",
                                            "Bottom",
                                            "Function",
                                            "Power",
                                            "Minus",
                                            "Squared",
                                            "Cosine",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In the exercise, you determined that the differential equation for salt as a function of time ds dt is equal to 140 minus s divided by 50 plus t. The rate in is 140-- that's 35 times 4. The rate out is more complicated because the concentration of the salty water changes as a function of time. And so we end up with the expression s divided by 50 plus t. And so that gives us an initial value problem of the form ds dt is equal to 140 minus s divided by 50 plus t. And we started out with 1,000 grams of salt in the tank. So s at time 0 is equal to 1,000. Now, when we see this initial value problem, we say, great, because the differential equation involved is a linear differential equation. And we know a lot about linear differential equations. Now, we won't be able to solve this initial value problem until the end of module 9.3. And it will take us a while to get there. First, we need to be specific about what it means for a differential equation to be linear. And then we'll talk about why linear differential equations are so nice. A first-order differential equation dy dt is equal to f of t and y, with independent variable t and dependent variable y, is linear if it can be written in the form dy dt is equal to a of t times y plus b of t. In other words, the right-hand side of the differential equation is a linear function in the dependent variable, in this case y. The functions a of t and b of t can be any functions at all, but we can only have y to the first power. Now, let's take a look at some differential equations. We just said that a differential equation is linear if the right-hand side can be written in the form of a of t times y plus b of t. So let's take a look here at these four equations. On the left-hand side, let's begin with the differential equation dy dt is equal to cosine of t times y. Well, in this case, we have cosine of t as our a of t times y. And b of t is equal to 0, which is OK. And so this is a linear differential equation-- dy dt is equal to cosine of t times y is linear. Also, let's go down here at the bottom left and take a look at dy dt is equal to y minus t squared. Well, in this case, a of t is equal to 1 and b of t is equal to minus t squared. And so this is also a linear differential equation. In the right-hand column, we have dy dt is equal to t times cosine of y. Well, cosine of y is not a linear function of y. And so this is not a linear equation. We say non-linear equation. And dy dt is equal to y squared minus t. Well, y squared is not a linear function of y. And so this is a non-linear differential equation. So the two differential equations on the left-hand side are linear. The two differential equations on the right-hand side are non-linear. It's important to keep track of the variables involved, remember it's the dependent variable, in this example y, that has to appear to the first power. So even though cosine of t times y and t times cosine of y look very similar, the left-hand one is linear, while the right-hand one is non-linear. Same thing happens in the bottom two. We have y to the first power minus t squared. So that's linear. Over here we have y squared minus t. So that's non-linear. So keep track of what's the dependent variable when you're trying to decide whether a differential equation is linear or non-linear. Now, linear differential equations come in two flavors. A linear differential equation dy dt, equal to a of t times y plus b of t, is said to be homogeneous if b of t is equal to 0 for all t. In other words, it's homogeneous if the b of t function really isn't there. Otherwise, we say that it's non-homogeneous. Now, let's take a look at the three examples of linear equations that we've seen so far in this module. And let's determine whether they're homogeneous or non-homogeneous. Well, the first differential equation I want to look at is dy dt is equal to cosine of t times y. So remember, we had an a of t is equal to cosine of t, and b of t is equal to 0. So this differential equation, this linear differential equation is homogeneous. And the middle differential equation is dy dt is equal to y minus t squared. So a of t is equal to 1 and b of t is equal to minus t squared. And since we have a non-zero b of t in this case, we have a non-homogeneous equation. And finally, for our differential equation that comes from the mixing problem, ds dt is equal to 140 minus s divided by 50 plus t. We have that b of t is equal to 140. So this is also a non-homogeneous linear differential equation. At this point, you need to be able to distinguish between linear and non-linear differential equations. Furthermore, if an equation is linear, you need to be able to determine if it is homogeneous or non-homogeneous. The following exercise gives you some practice doing this. End of transcript. Skip to the start. ",
                                        "unit_id":"a2d9f079f88d44398375c8a6de6da47f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ac5825005d984cb890e9fe71c9c805a1",
                                "vertical_name":"9.1 Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Homogeneous differential equation",
                                            "Left hand side",
                                            "Homogeneous equation",
                                            "Differential equation",
                                            "Square root",
                                            "Initial conditions",
                                            "Natural logarithm",
                                            "Good time",
                                            "Minus sign",
                                            "Constant function",
                                            "Equation",
                                            "Side",
                                            "Minus",
                                            "Dt",
                                            "Divide",
                                            "Positive",
                                            "Form",
                                            "Important",
                                            "Ll",
                                            "Logarithm",
                                            "Write",
                                            "Du",
                                            "Turn",
                                            "Constant",
                                            "General",
                                            "Sign",
                                            "Function",
                                            "Ve",
                                            "Time",
                                            "Squared"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's focus on homogeneous linear differential equations for awhile, and let me begin by asking the question-- where have we seen homogeneous linear differential equations in this course before? Now homogeneous equation has the form dy/dt is equal to a of t times y. And if you said that such an equation is separable, that's exactly what I wanted to hear. Now let's go ahead and separate variables. So I'll divide both sides of the equation by y, and I get 1 over y times dy/dt is equal to a of t. And I have to admit, every time I divide by y, I worry about what happens if y is equal to 0. But in this case I don't have to worry because I can make an observation. And that's that the function y of t equal to 0 for all t is an equilibrium solution to this equation. It doesn't matter what a of t is, and we can verify this fact just by putting the function into the differential equation. It's a constant function, so its derivative is equal to zero. So we have dy/dt is equal to 0. But the function is also equal to zero, so the right hand side of the differential equation is also 0. So it's always true for a homogeneous linear differential equation that there's an equilibrium solution that corresponds to y equals 0 no matter what a of t is. So we don't need to worry about dividing by zero in this case because, well, we're always going to get the equilibrium solution. Now I could continue this derivation over here and come up with a general form for the solution of the differential equation for any a of t. But I actually think it's more informative for me to do a particular example. So let me turn to the differential equation dy/dt is equal to minus t times y divided by 1 plus t squared. And if I want to write this in the form of a of t times y, what I'll do is I'll take the minus t divided by 1 plus t squared and multiply that by y. So I'll write it like that. So let's go ahead. We'll divide both sides by y. So we get 1 over y times dy/dt is equal to minus t divided by 1 plus t squared. Now let me integrate both sides with respect to t. And when I do that on the left hand side, I get the integral of 1 over y dy. And on the right hand side, I get the integral of minus t over 1 plus t squared dt. Now the left hand side is just the natural logarithm of the absolute value of y. But to do the integral on the right hand side, I need to do a substitution. And we could do u is equal to t squared, but what I'd like to do is u is equal to 1 plus t squared. Then du is equal to 2t dt. And therefore, 1/2 du is equal to t dt. And so I can take this substitution, and I can change my variables on this integral here. And so what I end up with is minus 1/2 the integral of 1 over u du. And that's minus 1/2 the natural logarithm of the absolute value of u plus c. I need to have a plus c on one side or the other, so I'm going to put it on the right hand side. Now let's convert this back to the original variables. Instead of u's we'll do t's. And so we get minus 1/2 natural logarithm-- now, 1 plus t squared is always positive, so we don't need the absolute value sign here. So natural logarithm of 1 plus t squared plus c. And what about this minus 1/2? Well, a minus sign with a logarithm is the same thing as a logarithm of the reciprocal, and the 1/2 is a square root. So this is equal to the natural logarithm of 1 over the square root of 1 plus t squared. And then we have our plus c. Now we need to do some more steps, so I'm going to do that on the next slide. So let's remember that we've got the natural logarithm of the absolute value of y is equal to the natural logarithm of 1 over the square root of 1 plus t squared plus c. So I've already written that here. And what we need to do now is we need to get rid of the logarithm. So I'm going to exponentiate both sides. When I exponentiate the left hand side, I'm going to get the absolute value of y. When I exponentiate the right hand side, I remember that the exponential of a sum is equal to the product of the exponential. I exponentiate a logarithm, so I'm just going to get 1 over the square root of 1 plus t squared. And then I'm going to exponentiate c, so that's e to the c. Now what do I do about this absolute value sign here above the y? Well I've got absolute value of y here. Notice on this side I have e to the c where c is a constant. So if c is a constant, e to the c is a constant. But it's also important to remember that e to the c is going to be positive. So I can get rid of the absolute value sign here by just writing y is equal to 1 over the square root of 1 plus t squared times a constant k. And k can be any constant now-- positive or negative-- now that the absolute value sign is gone. And so it turns out that this gives us our general solution. Our general solution for this differential equation is y of t is equal to k divided by the square root of 1 plus t squared, where k can be any constant. Now let's take a look at some graphs. So what I've done here is I've drawn the graphs of 11 solutions. I use the initial conditions, which are integers from minus 5 to 5. But there's nothing particularly special about those initial conditions other than they are equally spaced along the y-axis. And the first thing I'd like to observe is that observation that I made a few minutes ago, which is that the function that's constantly zero is always an equilibrium solution. So here we have our equilibrium solution to this homogeneous differential equation. And the other thing I'd like you to observe-- because it will become important in a few minutes-- is that if we have any one of these graphs, we can get the other ones by multiplying by constants. Multiplying by constants, not adding constants. And that'll turn out to be an important linearity principle that we'll talk about, for the nature of solutions to homogeneous linear equations. Now at this point, it's a good time for you to do a derivation like I just did on another homogeneous linear differential equation. So I'd like you to do that now. End of transcript. Skip to the start. ",
                                        "unit_id":"05835a12930746819f0ee79297aedc94",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6754f9156b234aa6bdf090d5abf4ab3d",
                                "vertical_name":"9.1 Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equations",
                                            "Differential equation",
                                            "Homogeneous equation",
                                            "Linearity principle",
                                            "Square root",
                                            "Good time",
                                            "Ll",
                                            "Case",
                                            "Constant",
                                            "Minus",
                                            "Function",
                                            "Squared",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Earlier, I said that linear differential equations are more amenable to analytic techniques than nonlinear equations. And why is that? Well, one reason is that their solutions satisfy important linearity principles. And let's begin our discussion of linearity principles by considering the homogeneous case. And here's a statement of the linearity principle for homogeneous equations. If y sub h is a solution of the homogeneous linear differential equation, dy/dt is equal to a of t times y, then any constant multiple, y sub k of t, which is k times y sub h, is also a solution. In other words, if we're given a constant k that's not equal to 1, and a non-zero solution, y sub h, we can obtain another solution by multiplying y sub h by that constant. Let's return to the example that we did a few minutes ago. We considered the differential equation, dy/dt, is equal to minus t times y divided by 1 plus t squared. And we calculated the general solution, y of t, is equal to k divided by the square root of 1 plus t squared where k is any constant. Now if we consider, as our y sub h, the function 1 over the square root of 1 plus t squared, we see that we can get the general solution by multiplying that y sub h by an arbitrary constant k. So essentially, this picture that we have here is a picture of the linearity principle for homogeneous equations. There are at least two ways to prove the linearity principle for homogeneous equations, and I'm going to do one right now. Let's assume that y sub h is a solution to the homogeneous equation, which is dy/dt is equal to a of t times y. And let's assume that we have another function, y sub k, which is a constant multiple of y sub h. And we're going to show that this y sub k is a solution also by substituting it into the differential equation. So first of all, let's compute its derivative. So the derivative of y sub k with respect to t-- well, we know that that's k times the derivative of y sub h with respect to t by the rules of differentiation. And now we use the fact that we know that y sub h is a solution. So we write this as k times a of t times y sub h. So we go from this step to that step using the differential equation, using the fact that y sub h is a solution. Now we just do a little bit of algebra. We'll take the a of t out and leave the k inside. And what we see is that now inside, we have the function y sub k. So we've shown that the derivative of y sub k, with respect to t, is a of t times y sub k of t. So therefore we verified that y sub k is also a solution to the differential equation. Now I also want to emphasize that the linearity principle is definitely not true for nonlinear differential equations. And I'm going to do that by doing an example. We're going to take the simplest nonlinear equation you can have-- dy/dt is equal to y squared. And I'm going to take a function, y sub 1, which is 1 over 1 minus t. And let me see if that is a solution to the differential equation. So let me calculate the derivative of y sub 1. Well, y sub 1 is 1 over 1 minus t. So that's the same thing as 1 minus t to the minus 1. So its derivative is minus 1 times 1 minus t to the minus 2. And then we have another minus 1 from the chain. Now the 2 minus 1s cancel, and so we end up with 1 minus t to the minus 2. But that is just the function y1 squared. So we see that we have a solution. That y sub 1 is a solution to our differential equation. Now let's take that function, y sub 1, and multiply it by 2. And we'll call that y sub 2. And so that's 2 over 1 minus t. Let's do the calculation. The derivative of y sub 2 with respect to t. Well, using the rules of differentiation, we know that that's 2 times the derivative of y sub 1. And so we have 2 times 1 minus t to the minus 2. And then we observe that this is not the same thing as y sub 2 squared because y sub 2 squared would be 4 over 1 minus t squared. So y sub 2 is not a solution. So you can see the linearity principle in this case for this differential equation, dy/dt, is equal to y squared does not hold. Now this is a good time for you to do a problem where you can work with this linearity principle for homogeneous equations. And so I'd like you to do that problem now. End of transcript. Skip to the start. ",
                                        "unit_id":"fa3dc5895ddb4c23bdaba475c2fd7d86",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"376e8155ef404c4e96fa522527b9efed",
                                "vertical_name":"9.1 Video 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Linearity principle",
                                            "Differential equation",
                                            "Homogeneous equation",
                                            "Square root",
                                            "Minus infinity",
                                            "Principle",
                                            "Term",
                                            "Ll",
                                            "Write",
                                            "Tilted",
                                            "Ve",
                                            "Talk",
                                            "Squared",
                                            "Minus",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: There's also a linearity principle for nonhomogeneous linear equations. It involves two facts and a conclusion that follows from these two facts. And I've written it here on this slide. There's a lot of words here, so I'm going to go through it systematically. And then we'll talk about how to paraphrase the principle and then we'll do an example. So let's begin with the nonhomogeneous linear equation. So we have dy/dt is equal to a of t times y plus b of t. So this will be our nonhomogeneous equation, and associated to this nonhomogeneous equation is what we very cleverly called the associated homogeneous equation. And that's the differential equation, dy/dt, is equal to a of t times y. We just leave off the b of t. So, associated homogeneous equation. So every time you have a nonhomogeneous equation, you have an associated homogeneous equation. And what the extended linearity principle is for nonhomogeneous equations is it's a way of relating the solutions of the nonhomogeneous equation with the solutions of the associated homogeneous equation. So first fact, let's let y sub h be any solution of the homogeneous equation. And let y sub p be any solution of the nonhomogeneous equation. Then you can take and add y sub h and y sub p, and you end up with a solution of the nonhomogeneous equation. And we call y sub p a particular solution of the nonhomogeneous equation. So you take any solution of the homogeneous equation and add any particular solution of the nonhomogeneous equation, and you get another solution of the nonhomogeneous equation. Also for the second fact, if you take a solution of the nonhomogeneous equation, y sub p, and another solution of the nonhomogeneous equation, y sub q, and you take the difference, then you end up with a solution of the associated homogeneous equation. And then it follows from these two facts that if you take any nonzero solution of the associated homogeneous equation, and you take all the constant multiples of that. So that'll give you the general solution of the associated homogeneous equation, and then add any particular solution of the nonhomogeneous equation, you end up with the general solution of the nonhomogeneous equation. It turns out that you can verify this extended linearity principle in pretty much the same way that I've verified the linearity principle for the homogeneous equation. So rather than do that, what I want to do now is I want to talk about how to paraphrase this extended linearity principle, and then I'd like to do an example. So we can paraphrase the extended linearity principle by saying that the general solution of the nonhomogeneous equation consists of the sum of any particular solution to the nonhomogeneous equation, and the general solution of the associated homogeneous equation. And what I've done is I've tried to write this down here in set theory notation, more or less. And so we're talking about the general solution of the nonhomogeneous equation. And that's the sum of any particular solution of the nonhomogeneous equation along with the general solution of the associated homogeneous equation. So I want to emphasize that if you get the general solution of the nonhomogeneous equation, we take one particular solution of the nonhomogeneous equation and add to it the one parameter family that consists of all the solutions of the associated homogeneous equation. Now let's see this in action by doing an example. So here's a differential equation. It's a nonhomogeneous linear differential equation. And its associated homogeneous equation is dy/dt is equal to minus t times y divided by 1 plus t squared. So this should look familiar. This is the example that we worked before when we were talking about the linearity principle for homogeneous equations. And so we have the same associated homogeneous equation here, the same homogeneous part, and then we have a b of t that consists of 2t squared plus 1 divided by 4t squared plus 4. Now let me take the function y sub p of t, which is equal to t over 4, and I claimed that this is a solution of this nonhomogeneous equation. Now don't ask me how I came up with this solution. You might want to think about that yourself-- how I was able to come up with it. But you don't have to take my word for the fact that this is a solution. What we can do is we can check that it's a solution by substituting it into the differential equation. On the left hand side, we calculate the derivative of y sub p. And since this is t over 4, we get 1/4. And then on the right hand side, what we do is we take t over 4, and we substitute that in for y. And so we get minus T divided by 1 plus t squared times t over 4, which is y. Plus our b of t, which is 2t squared plus 1 divided by 4t squared plus 4. And now we need to do some algebra. So that's equal to-- now, notice that in both fractions, the denominator is 4 times t squared plus 4. So we have the same denominator. So let's see what we get. We have minus t squared from the first term, and then the second term is 2t squared plus 1. And the denominator is 4t squared plus 4. Now we see that we get some cancellation. We get-- in the numerator here, we get t squared plus 1. And in the denominator, we have 4 times t squared plus 4. Well, notice that we can think of this denominator really as-- I'll write the numerator first. t squared plus 1 and then 4 times t squared plus 1. So we can cancel the t squared plus 1, and we just get 1/4. So the left hand side of the differential equation is 1/4. The right hand side of the differential equation is 1/4. And so we see that this function, y sub p of t, which is equal to t over 4, is a solution of the nonhomogeneous equation. And now we can use the extended linearity principal. And the fact that we've already solved the general solution to the associated homogeneous equation. And we can summarise the result here for this nonhomogeneous equation. We end up with a general solution of the form y of t, which is equal to t over 4 plus k divided by the square root of 1 plus t squared. Where k is an arbitrary constant. And here's a picture of this general solution. You should compare this picture to the picture that we showed for the general solution of the associated homogeneous equation. And notice that the equilibrium solution that we had in that picture is now replaced by a line, and that's the graph of the particular solution, y sub p is equal to t over 4. So instead of having an equilibrium solution, we'll see we have one solution whose graph is a line. And that is the function t over 4. And then we take the graphs that were in the picture for the associated homogeneous equation, and now they're all tilted by this function when we add the t over 4. So basically, we've taken the picture that we had before and we've tilted it just a little bit. Now down here I ask you what is the long term behavior of the solution? Well, the solution of the associated homogeneous equation all go to 0 as t goes to plus or minus infinity. And so what we have for the nonhomogeneous equation is that we have y of t is going to approach y sub p of t as t goes to plus or minus infinity. We've written an exercise that gives you practice with the extended linearity principle, and I would like you to do that exercise now. End of transcript. Skip to the start. ",
                                        "unit_id":"aec118945f8e4632833211fdd92a4ed9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d0eece02cd0746e1bf2cdc228beefd2a",
                                "vertical_name":"9.1 Video 5"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2e0c346eebda4fdbacecbd6bccd95635",
                        "sequential_name":"9.2 Method of Lucky Guess",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Homogeneous equation",
                                            "Exponential decay",
                                            "Question mark",
                                            "Exponential function",
                                            "Lucky guess",
                                            "Equal sign",
                                            "Equation",
                                            "Term",
                                            "Ve",
                                            "Method",
                                            "Technique",
                                            "Question",
                                            "Alpha",
                                            "Guess",
                                            "Function",
                                            "Minus",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In this sub module, we use the Extended Linearity Principle to develop an analytic technique for solving certain non-homogeneous linear equations. We like to call this technique \"The Method of the Lucky Guess,\" because at first glance, there seems to be a certain amount of luck involved. Here's how the method works-- first, what I like to do is solve the associated homogeneous equation. And then I guess one solution of the non-homogeneous equation. And then the extended linearity principal tells me that my general solution of the non-homogeneous equation consists of that one solution to the non-homogeneous equation plus the general solution of the associated homogeneous equation. So that leads to a natural question which is, how do we go about guessing a solution? And I believe that this question is best answered by doing a few typical examples. So let's begin with the differential equation dy dt is equal to minus 2 times y plus 3 e to the minus t over 2. The associated homogeneous equation is dy dt is equal to minus 2 times y. And you could separate variables on that, but by now you should realize that this is an equation for an exponential decay. And you should know without doing any calculation, really, that the general solution is y of t is equal to k times e to the minus 2 t. Next, we need a particular solution of the non-homogeneous equation. And when I look for such a solution, I like to put all of the y terms on one side. So I get dy dt plus 2 times y is equal to 3 e to the minus t over 2. And I do that so that I can ask myself the question, what function or functions y have their derivative plus 2 times themselves equal to 3 e to the minus t over 2? And I don't worry too much about this 3 here or the 2. But what I think about is that the derivative of the exponential function is itself. And so what I do is I guess a function y sub p of the form alpha e to the minus t over 2, where alpha is going to be some constant that I determined by the calculation. Here's some non-standard notation that I use. We've got our guess, y sub p of t which is alpha e to the minus t over 2. And I want to be a solution to the differential equation. And I use this equal sign with a question mark over it to indicate that that's what I want. And basically, what I'm saying there is, I want to determine a value of alpha where I get equality. So I go ahead and I differentiate my y sub p. And when I do that, I get minus alpha over 2 e to the minus t over 2 plus 2 alpha e to the minus t over 2. And I want that to be equal to 3 e to the minus t over 2. Now you see both terms on the left have an e to the minus t over 2. And so I combine the coefficients, and I get 3/2 alpha e to the minus t over 2, and I want that to be equal to 3 e to the minus t over 2. And I will get equality in this equation here if alpha is equal to 2. In fact, that's the only value of alpha where I'll get equality. So my particular solution, y sub p of t is equal to 2 e to the minus t over 2. And therefore, the general solution of the non-homogeneous equation consists of y of t is equal to this particular solution, 2 e to the minus t over 2. And then we add to it the general solution that we already computed, k e to the minus 2 t, the general solution of the associated homogeneous equation. Now let's look at some graphs. So what I've done here is I've drawn the graphs of six solutions to this differential equation. Here's our formula for the general solution. And notice that I've distinguished one graph here. And this graph is the graph for our particular solution. So this is the graph of y sub p of t, which is equal to 2 e to the minus t over 2. And if I have a solution whose graph is above that one, and see it decreases here. If I have a solution that's below that graph, it increases for a while, then assumes a maximum, and then decreases. And here I've asked, what is the long term behavior of the solutions? Well, in this case, my solution to this differential equation is going to approach my particular solution that I computed, y sub p of t as t goes to infinity. And that's because the general solution of the associated homogeneous equation dies out as t goes to infinity. Now we've written an exercise that involves a similar differential equation, and I would like you try that exercise now. End of transcript. Skip to the start. ",
                                        "unit_id":"12c472b138bc4ceba4fcf4ef4d0931bd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f0102a4c32f241a781193ef65f85d31f",
                                "vertical_name":"9.2 Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Steady state",
                                            "Homogeneous equation",
                                            "Differential equation",
                                            "Initial condition",
                                            "Electric circuit",
                                            "Question mark",
                                            "Equal sign",
                                            "Sine",
                                            "Cosine",
                                            "Equation",
                                            "Minus",
                                            "Find",
                                            "Function",
                                            "Alpha",
                                            "Kind",
                                            "Ve",
                                            "Beta",
                                            "Term",
                                            "Periodic",
                                            "Guess",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: For our second example, we consider the differential equation dy dt is equal to minus y plus 2 cosine of 4t. Although the constants minus 1, 2, and 4 would not be realistic, this differential equation is one that could be used to model an electric circuit. First, let's consider the general solution of the associated homogeneous equation. And in this case, that's dy dt is equal to minus y. So therefore, our general solution is y of t is equal to ke to the minus t. For a particular solution, I'm going to rewrite the equation, as I did in the previous example. I'm going to write it as dy dt plus y is equal to 2 cosine of 4t. And now I'm going to think, what kind of guess would I have to make to come up with a solution to this differential equation? I need a function whose derivative plus itself is 2 cosine of 14. So you might think that the guess involves cosine, but if it just involves cosine, then its derivative is going to involve sine, and that's going to be a problem. You might think that the guess could be some version of sine, but then when we had the function here, then we would have a problem. So in this case, what we have to do is we have to guess something that's a little bit more complicated. We're going to guess y sub p of t, and we're going to make that be equal to alpha cosine of 4t plus beta sine of 4t. So therefore, we want to find two numbers. We want to find alpha and beta such that this function alpha cosine of 4t plus beta sine of 4t is a solution to our differential equation. So let's calculate the left hand side here for a moment. So first, let's calculate the derivative of y sub p, and that is-- well, we differentiate cosine of 4t, so that's going to give us minus 4 alpha sine of 4t plus 4 beta cosine of 4t. Now we need to add the guess, so let's write down y sub p again. So our guess is going to be alpha cosine of 4t plus beta sine of 4t. And then we're going to add these together. So on the left hand side, we'll get the correct form, the derivative of y sub p plus y sub p. And on the right hand side, well, let me take the terms that involve cosine of 4t, and that would consist of a term with an alpha here and 4 beta, so I get alpha plus 4 beta times cosine of 4t. And I'm going to add to that, I have a term with sine as a minus 4 alpha, so I have minus 4 alpha plus beta times sine of 4t. Then we go back to the differential equation and we see we want that sum to be equal to 2 times cosine of 4t. So let me use the equal sign with a question mark over it again. We want that to be equal to 2 times cosine of 4t. So what we do now is we look at these two expressions. The coefficient of a cosine of 4t in the first one is alpha plus 4 beta, and the coefficient of sine of 4t in the first one is minus 4 alpha plus beta. And notice in what we want it to be equal to, we just have a cosine. So what we're going to do is we're going to want to find alpha and beta so that this term is equal to 2 and this term right here is equal to 0. So that gives us a system of equations. That first coefficient is alpha plus 4 beta, and we want that to be equal to 2. The second coefficient is minus 4 alpha plus beta, and we're going to want that to be equal to 0. So let's do the computation. From the second equation, what we can conclude is that beta is equal to 4 alpha, and then we can take that and put that into the first equation. So in the first equation, we have alpha, and then we have 4 beta. But beta is 4 alpha, so this would be 16 alpha, and we want that to be equal to 2. Well, this is 17 alpha is equal to 2. So therefore, alpha would be equal to 2/17. Now, we'll take this value of alpha, bring it over to this equation here, and we're able to conclude that beta is equal to 8/17. And our particular solution is y sub p of t, which is equal to 2/17, times cosine of 4t plus 8/17 times sine of 4t. Here are the graphs of five solutions to the differential equation, and I've also written down the formula for the general solution of the differential equation. And I want to consider one of these graphs which I've distinguished. It has an initial condition of 2/17 and it oscillates in a periodic fashion. The other graphs here oscillate also, but they approach this periodic solution as t goes to infinity. So when we ask, what is the long term behavior of the solutions, what we're observing is that a typical solution, y of t, tends to this y sub p of t that we calculated when we used the guessing technique. So remember, the formula for y sub p is equal to 2/17 cosine of 4t plus 8/17 sine of 4t. And the reason that the y's approach y sub p is because our general solution to the associated homogeneous equation dies out as t goes to infinity. There's a special name for this solution that just involves cosine and sine, and it's called the steady state solution. Steady state doesn't mean that it's constant. It's not an equilibrium solution. It means that it is periodic and repeats itself infinitely often. We have an exercise for you to do now that involves a similar kind of differential equation. End of transcript. Skip to the start. ",
                                        "unit_id":"24632f4a64214192a8831d099611288d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ed373a4872cf46ae90d23a8a76d78bed",
                                "vertical_name":"9.2 Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Homogeneous equation",
                                            "Exponentially decaying",
                                            "Left hand side",
                                            "Product rule",
                                            "Right hand side",
                                            "Equation",
                                            "Technique",
                                            "Ve",
                                            "Ll",
                                            "Differentiate",
                                            "Rewrite",
                                            "Alpha",
                                            "Guess",
                                            "General"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Our third example illustrates an important technical point regarding the nature of our guesses. Let's consider the differential equation dy dt is equal to minus 3y plus 2 e to the minus 3t. Now we'll consider the general solution of the associated homogeneous equation first. The associated homogeneous equation is dy dt is equal to minus 3y. And so we know that its general solution is y of t is equal to k e to the minus 3t. Now we'll proceed as usual to calculate a particular solution to the non-homogeneous equation. Let's rewrite. So we'll rewrite the equation as dy dt plus 3y is equal to 2 e to the minus 3t. And as before in Example 1, we're going to guess y sub p is equal to alpha times e to the minus 3t. Let's go ahead and put that guess into the differential equation. So we differentiate. We get minus 3 alpha e to the minus 3t and then we add 3 times the guess-- 3 times alpha e to the minus 3t. And we want that to be equal to 2 e to the minus 3t. But there's a problem with this, because as you can see, there's a minus 3 alpha in the first term and a 3 alpha in the second term. So it doesn't matter what value of alpha you use. This left-hand side is going to be equal to 0. And so you could never have the left-hand side being equal to the right-hand side. So this is a bad guess. It's not your lucky day. Actually, we should have realized that this was not going to be a good guess, because this function is a solution to the associated homogeneous equation. So there's no way you can get a non-zero function on the right-hand side of the differential equation. So here's a general principle when you're dealing with non-homogeneous equations and this guessing technique is that you'd never guess a solution to the associated homogeneous equation. You never make such a guess. Now, if you're not going to make such a guess, what do you do? Well, what we're going to try is a different guess, y sub p of t, which is alpha t e to the minus 3t. Now you may wonder where I came up with this, but it turns out that in the next module, Module 9.3, I'll be able to derive why this is a good guess. For the time being, I just want you to follow the calculation. So remember, what we need to do is we need to calculate the derivative of this y sub p plus 3 times y sub p. So let's go ahead and do that. We have a constant, alpha. And then notice we have t times e to the minus 3t. So we have to use the product rule when we do this calculation. So I'll differentiate the t, and I'll just be left with e to the minus 3t. I won't differentiate the t. I'll differentiate the e to the minus 3t. So I'll have minus 3t e to the minus 3t. And then I have to add 3 times my guess, so I have 3 times alpha t e to the minus 3t. So now let's do some algebra. So I have an alpha. Both terms here involve e to the minus 3t, so let me write this as 1 minus 3t times e to the minus 3t. And then here, I have 3 alpha t e to the minus 3t. Now notice what happens. I have an alpha times a minus 3t e to the minus 3t, and I have 3 alpha t e to the minus 3t. Those are the same thing, so I cancel this term along with that term, and I'm left with alpha e to the minus 3t. And remember, I want this to be equal to the right-hand side. And that was 2 e to the minus 3t. And so we see that alpha is equal to 2. And that gives us our general solution to the non-homogeneous equation. And that's the function y of t, which is equal to our solution to the associated homogeneous equation, k e to the minus 3t plus 2 times t e to the minus 3t, which you could write as k plus 2t, all times e to the minus 3t. Now let's look at some graphs. So here are the graphs of five solutions to the differential equation. I've also written the general solution that we calculated. And again, I've distinguished the particular solution that we produced with the guessing technique. That solution goes through the origin. And the graphs that are below increase. And then graphs that are above increase, attain a maximum, and then decrease. And I've asked for the long-term behavior of the solutions. And we see that y sub t goes to our y sub p again, as t goes to infinity. And that's because the general solution of the associated homogeneous equation is an exponential and exponentially decaying. Now in this case, what happens is y sub p of t also goes to 0, so all the solutions eventually die out. Now I would like you to conclude this module by solving a similar equation with this technique. End of transcript. Skip to the start. ",
                                        "unit_id":"6e778de445fa41cea3ad754e5e284b43",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8ca336f964614107bb7e4488ece8c74a",
                                "vertical_name":"9.2 Video 3"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9dd40c427fc04e36832c1fe577c6439c",
                        "sequential_name":"9.3 The Magic Function",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equation",
                                            "Left hand side",
                                            "Linear equations",
                                            "Uniqueness theorem",
                                            "Differential equation",
                                            "Minus sign",
                                            "Product rule",
                                            "Inverse functions",
                                            "Exponential function",
                                            "Integrating factor",
                                            "Natural logarithm",
                                            "Good time",
                                            "Left",
                                            "Equation",
                                            "Dt",
                                            "Magic",
                                            "Minus",
                                            "Function",
                                            "Side",
                                            "Notice",
                                            "Product",
                                            "Written",
                                            "Ll",
                                            "Technique",
                                            "Logarithm",
                                            "Exponential",
                                            "Integrating",
                                            "Ve",
                                            "Mu",
                                            "Form",
                                            "Term",
                                            "Sine",
                                            "Constant",
                                            "Graph",
                                            "Remember",
                                            "Apply",
                                            "Cosine",
                                            "Put",
                                            "General",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In in this submodule, we discuss another analytic technique for solving nonhomogeneous linear equations. And after we do a few examples, we'll conclude our discussion of linear equations by comparing this technique to the one that we discussed in module 9.2. For this method, the first thing we do is we rewrite the nonhomogeneous equation, dy dt is equal to a of t times y plus b of t in the form dy dt plus g of t times y equals b of t. In other words, we take this a of t times y term, and we just move it over to the other side. Therefore, g of t is just minus a of t. There's no mathematical significance to this step. It just avoids an annoying minus sign in one of the formulas that you'll see in a minute. But just remember that you want to apply this method when the differential equation is written in this form. Now for the magic. We're going to take a look at this differential equation. And we observe that the left hand side of the differential equation \"looks\"-- and I'll put \"looks\" in quotes-- \"looks\" like the result of the Product Rule for differentiation. It isn't really the result of the Product Rule, but you'll see what I mean in just a minute. What we're going to do is we're going to take this left hand side, right here, and we're going to multiply-- we're going to multiply the left hand side by, what I call, a magic function, mu of t, such that we get the result of the Product Rule. Let me be more precise. We want a function mu of t-- mu stands for magic-- such that when you take mu of t, and multiply it by the left hand side of the differential equation, you get the result of the product rule. And more precisely, you get the result of the product rule applied to the product of the magic function times y. Let's do a calculation. Let's take this left hand side and multiply through by mu of t. So we have mu of t times dy dt plus mu of t times g of t times y. And we would like that to be equal to the result of the Product Rule. And so what we do is apply the product rule to mu of t times y. So that's mu of t times dy dt plus d mu dt times y. Let's take a look at this. And we note that on both sides of this equation is the term mu of t times dy dy. So let's eliminate that. And moreover, notice that, in the two remaining terms, there's also a y. So let's eliminate that. And then what we have is an equation-- and let me put the d mu dt over on the left hand side. Let me take this and put it over here. d mu dt. And we would like that to be equal to mu of t times g of t. mu of t times g of t. But mu of t times g of t is the same thing as g of t times mu of t. And I'll just write it as mu. And the reason I'm doing that is because I want you to see that this is in fact a differential equation. On this side, we have d mu dt. On the other side, on the right hand side, we have g of t times mu. In fact, it's a homogeneous linear differential equation. So we know what mu of t is. We know that mu of t is equal to some constant times e to the integral of g of t dt. We could do that by separating variables, or just remembering back to when we were talking about homogeneous linear equations. I left out the constant in front because we only need one such function. So I'm just going to use a constant of 1 up front, in front of the exponential. So now let me summarise what we've done with this calculation. If we start off with a linear differential equation, nonhomogeneous, and we put it in this form right here, then the magic function-- or actually, I'm the only one that ever calls it a magic function. You'll hear it called an integrating factor. The magic function that we're going to use is mu of t, which is equal to the integral, e to the integral of g of t dt. And then what happens is if we multiply both sides of the differential equation, the magic function is designed in such a way that when we multiply the left hand side, we get the derivative of mu of t times y. And then on the right hand side, we just get the magic function times b of t. And then what we can do is we can solve the differential equation by integrating both sides with respect to t. On the left hand side, we get mu of t times y. And on the right hand side, we get the integral of mu with t times b of t dt. And that's how we will solve this linear differential equation using the magic function. Let me show you an example. This example is one that we've already studied. We studied it in module six when we were discussing the uniqueness theorem. And if you remember, at first glance, it seems to violate uniqueness theorem. But after we looked at it more carefully, we noted that the equation is not defined on the y-axis. And so it wasn't a problem. But now, let's use the magic function to calculate its general solution. So here's the differential equation written as it was written in module six, dy dt is equal to y divided by t plus t cosine of t. And to apply the method of the magic function, what we're going to do is we're going to rewrite it as dy dt. We're going to move the y divided by t term over to the left hand side. And then on the right hand side, we'll just have t cosine of t. So we'll apply the method to the differential equation when it's written in that form. And we have to compute the magic function. So the magic function, mu of t, is equal to e to the integral-- remember, it was the integral of g of t. In this case, g of t is minus 1 over t dt. So that's the integral that we have to calculate to determine the exponent for the exponential function. Now we can take the minus sign outside. And the integral 1 over t-- that's logarithm. So we'll get e to the minus log t. And then, remember, minus log t. So we'll have e to the natural logarithm of 1 over t. And then e and natural logarithm-- they're inverse functions. And so we just end up with 1 over t. So for this differential equation, our magic function is just 1 over t. So now, let's take the differential equation written as we have it up here and multiply both sides by the magic function. So we get 1 over t times dy dt minus 1 over t times y divided by t. And then we have 1 over t times t cosine of t, so that we just get cosine of t on the right hand side. Let me put some more parentheses just to make sure it's clear what's going on. And then, what I would like you to notice, here, is that this side, the left hand side-- notice that that is 1 over t dy dt minus 1 over t squared times y. And that is the same thing as the derivative with respect to t of 1 over t times y. If you apply the product rule, you have the 1 over t times the derivative of y. And then the derivative of 1 over t is minus 1 over t squared times y. So here's what makes the magic function magic. It is exactly the function that makes the left hand side of the differential equation turn into the result of the product rule. Now we have the derivative with respect to t of 1 over t times y is equal to cosine of t. And I need a little more space. So let me have that on the next slide. So this is exactly the same thing-- the derivative with respect to t of 1 over t times y is equal to cosine of t. Here, we have a derivative with respect to t. So we'll integrate. So we'll integrate both sides with respect to t. So on the left hand side, we get 1 over t times y. And on the right hand side-- well, if we integrate cosine of t, we get sine of t. And here's a place-- because we want to do a general solution-- that we should put in the arbitrary constant on one side or the other. I'm going to put it on the right hand side. So plus k, where k is any constant. Sine of t plus k, where k is any constant. Now we'll complete the calculation by multiplying both sides by t. And we get that our general solution has the form, y of t is equal to t times sine of t plus k times t, where k is any constant. So that expression, right there, is our general solution. Let's take a look at some graphs Here's the formula for the general solution that we just calculated. And this picture should look familiar from module six. I've distinguished the graph that corresponds to k equals 0, here. So that graph corresponds to k equals 0 and the formula for the general solution. And then I've shown you two other values of k for these graphs. Now this is a good time for you to do a general solution for a different differential equation using this method of the magic function. End of transcript. Skip to the start. ",
                                        "unit_id":"fff1f44073a5412591c03ddbe31ebaf7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0e267c9a5e1d4cc98649edc095b7e34f",
                                "vertical_name":"9.3 Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Differential equation",
                                            "Natural logarithm",
                                            "Inverse functions",
                                            "Homogeneous equation",
                                            "Lucky guess",
                                            "Step back",
                                            "Initial condition",
                                            "Dt",
                                            "Left",
                                            "Form",
                                            "Term",
                                            "Side",
                                            "Function",
                                            "Equation",
                                            "Guess",
                                            "Ll",
                                            "Calculate",
                                            "Back",
                                            "Ve",
                                            "Tank",
                                            "Constant",
                                            "Initial",
                                            "Liter",
                                            "Multiply",
                                            "Put"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Recall example three from module 9.2. We applied the method of the lucky guess to the differential equation dy dt is equal to minus 3y plus 2e to the minus 3t, and we used a somewhat unusual guess of the form alpha times t times e to the minus 3t. And at the time, I said I would justify this unusual guess, and I can do that now using the method of the magic function. So as always, let's rewrite the differential equation in the form dy dt plus 3y is equal to 2e to the minus 3t, and now I'll calculate the magic function, mu. That's equal to e to the integral of 3dt, so we'll just use e to the 3t as our magic function. So now let's multiply both sides of the differential equation by the magic function. The magic function is e to the 3t, so I'll have e to the 3t times dy dt plus-- let me put the three first-- 3e to the 3t times y, and that will be equal to 2e to the 3t times e to the minus 3t. And you can see that the e to the 3t and e to minus 3t are going to cancel, and we're just going to be left with a constant 2 on the right hand side. And because this is the magic function, we've got the left hand side as the derivative with respect to t of e to the 3t times y. So now what we can do is we can integrate both sides with respect to t. When we integrate the left hand side with respect to t, we get e to the 3t times y. When we integrate the 2, we get 2t. And at some point, we have to have a k, an arbitrary constant, to one side or the other of the equation. I'll put it on the right hand side of the equation, so k can be any constant. And then we end up with a general solution by multiplying through by e to the minus 3t. And so we have our function, y of t, which is 2t times e to the minus 3t plus ke to the minus 3t. And you can see that this general solution consists of a general solution of the associated homogeneous equation, along with one particular solution of the non-homogeneous equation. If you step back and look at this calculation, you'll see that this cancellation between the e to the 3t and the e to the minus 3t term that resulted in the constant 2 ends up producing the 2t after integrating, and as a result, you end up with a function of the form alpha times t times e to the minus 3t as part of the general solution. This is what justifies using guesses of the form alpha times t times e to the minus 3t in problems like this one. Now at this point, I'd like to go back to the mixing problem that we talked about at the beginning of module 9.1. At the time, I promised that we'd be able to solve this by the time we were done with the module, and I can do that now using the method of the magic function. Now, let me remind you of the situation. We have a 200 liter tank that initially contains 100 liters of saltwater, and that 100 liters of saltwater contains 1,000 grams of salt. And then we're supposing that we have saltwater that contains 35 grams of salt per liter being pumped into the tank at the rate of four liters per minute, while a well mixed solution leaves the tank at the rate of two liters per minute. When I talked about this problem in module 9.1, we didn't answer the question, but the question I'd like to answer is how much salt is in the tank when the tank fills up? In 9.1, we derived the initial value problem that corresponds to this situation. So our differential equation is ds dt is equal to 140 minus s divided by 50 plus t, and our initial condition is s of 0 is 1,000. Before I apply the method of the magic function to solve this initial value problem, let me determine the time at which the tank fills up. We're talking about a 200 liter tank that initially contains 100 liters of saltwater, and then we have salty water entering the tank at four liters per minute while a well mixed solution leaves the tank at two liters per minute, so the net increase is a rate of two liters per minute. And we have to have 100 liters added to the tank, and so therefore, the tank will fill up at t is equal to 50 minutes. Now with that information, let's go ahead and solve the initial value problem. And as usual, we're going to rewrite the differential equation in the form ds dt plus s over 50 plus t is equal to 140. And in that form, that tells us what the magic function should be. Mu of t is going to be equal to e to the integral of 1 over 50 plus t dt. And we know that the integral of 1 over 50 plus t dt is the natural logarithm, so we have e to the natural logarithm of 50 plus t. And e and natural logarithm are inverse functions of one another, so our magic function is going to be 50 plus t. So we'll multiply the differential equation by the magic function, so we have 50 plus t times ds dt. And then we multiply 50 plus t times s divided by 50 plus t. We're just going to get s. And then we'll have 50 plus t times 140. So this is going to be our form in which we can solve for the initial value problem. And I need more space, so I've written this formula on the top of the next page already. The only thing that I've done differently is that I've multiplied the 50 plus t out on the right hand side, so I ended up with a right hand side of 7,000 plus 140t. Now, what makes the magic function magic is that this left hand side is the derivative with respect to t of 50 plus t times s. So now I'm in a situation where I can go ahead and integrate both sides. If I integrate this derivative, I just get 50 plus t times s, and if I integrate on the right hand side, I get 7,000t plus 70t squared plus k, where k is a constant that's determined by the initial value. In fact, why don't we determine what that value of k is right now? Remember our initial condition was s of 0 is equal to 1,000, so let's take and put in t equals 0 into this equation here. If we put in t equals 0, on the left hand side, we get 50s, and if we put in t equals 0, we get the first two terms are 0 and we just get k. So if 50s is equal to k, what we do is we take 1,000 and multiply it by 50. So that tells us that k is equal to 50,000. So our expression now is 50 plus t times s is equal to 7,000t plus 70t squared plus 50,000. And now I'll divide through by 50 plus t. I end up with s, which is 7,000t plus 70t squared plus 50,000, and I'll divide that by 50 plus t, Now to finish off the problem, I'm going to use the fact that we calculated just a moment ago that the tank fills up at t equals 50. So what we need to do is calculate s at t equals 50. And when you plug in t equals 50 into this formula, you end up getting 5,750 grams of salt when the tank fills up. Now at this point, I'd like you to do a mixing problem on your own using this method of the magic function. End of transcript. Skip to the start. ",
                                        "unit_id":"c3a1844488c34b49b4464d8b0ea19782",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d138f1edac054a2eb7d78ce650b47b65",
                                "vertical_name":"9.3 Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equations",
                                            "Differential equation",
                                            "Constant function",
                                            "Integrating factors",
                                            "Lucky guess",
                                            "Equation",
                                            "Mu",
                                            "Lucky",
                                            "Dt"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: We have two methods for solving nonhomogeneous linear differential equations. And how do we decide which to use? Do we use the method of the lucky guess, or do we use the magic function? Well, the method of the magic function or the method of integrating factors has the advantage that in theory it always works, but you must calculate two integrals. You have to calculate the magic function mu of t, which is e to the integral of g of t dt. And after you multiply both sides of the differential equation by the magic function you also have to calculate the integral of mu of t times b of t dt. And no one says you're going to be able to calculate either of those two integrals. The method of the lucky guess tends to be faster than the method of integrating factors. It's mostly algebra. But you need to think about the examples that we discussed. A general linear differential equation has the form dy dt is equal to a of t times y plus b of t. But when we did the method of the lucky guess, we only considered a of t, where the a of t was a constant function. That's called the constant coefficient case. Also, we only considered b of t's that were of a special type. They were exponentials, sines, cosines, and when you do some of your exercises, you'll also see some polynomials. So we didn't handle a wide variety of linear differential equations when we talked about the method of the lucky guess. Another thing about the method of the lucky guess is that you need to be lucky when you use the method of the luck guess. You need to be lucky. Module 9 completes our discussion of first order differential equations. The subsequent modules in this course consider first order systems of equations as well as second order equations. And these equations model phenomenon as varied as the motion of the mass spring system, the motion of planets, as well as the spread of disease. End of transcript. Skip to the start. ",
                                        "unit_id":"c9cffe94d82b472a8d4641e8fd3fa22a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c998ab35d26f41908937353ec7966b16",
                                "vertical_name":"9.3 Video 3"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ff13cbbd0ce8479396967a1072bacfbf",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear differential equations",
                                            "First order differential equations",
                                            "Uniqueness theorem",
                                            "Independent variable",
                                            "Studied"
                                        ],
                                        "data":" Conclusion to Module 9: Linear Differential Equations Our first nine modules were devoted to the study of first-order differential equations. We saw how differential equations arise as models, and we discussed three different ways that they can be analyzed. For some equations, their solutions can be computed analytically. We also saw how solutions can be approximated numerically and analyzed qualitatively. The main theoretical result is the Existence and Uniqueness Theorem. More recently we studied equations using qualitative techniques such as phase lines and bifurcation diagrams. Our discussion of first-order equations concludes with this module, a very detailed analysis of linear differential equations. Going forward we will consider systems of first-order differential equations. These systems involve multiple quantities that depend on the same independent variable, for example, two interacting species whose population varies with time. We will also consider second-order differential equations. In this case, the second derivative of a quantity will be given in terms of the quantity and its first derivative. The most basic differential equations of physics fall into this category. The notation and some of the technical details will differ from what we have already studied, but much of our approach to the subject will remain the same. In many ways, the best is yet to come. ",
                                        "unit_id":"2e0354d33122449e8ce3e7a376b06a5a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e09d3ef39c8a47e2b073ca11fa033b87",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"8b535512720c40f7b467d718f5cdc23e",
                "chapter_name":"MidMOOC Exam",
                "sequentials":[
                    {
                        "sequential_id":"2bcabeb1a9204699b21619a4ad45d54c",
                        "sequential_name":"Instructions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Step back",
                                            "Wolfram alpha",
                                            "Page",
                                            "Discussion",
                                            "Content",
                                            "Discussed",
                                            "Time"
                                        ],
                                        "data":" Why are we giving this exam? We want you to step back and take a close look at everything you have learned in this course so far, and one effective way to do that is to ask you to take an exam. Courses that involve mathematics tend to be &ldquo;vertical&rdquo; in the sense that topics discussed later in the course can only be understood if you understand the concepts on which they are built. The process of preparing for an exam helps you make sure that you are ready for what comes next. We require that you do the exam without notes or the aid of certain technologies to guarantee that basic notions have become part of your differential equations DNA. Examination Rules: Three-hour exam to be taken in one or two sittings any time until 16:00 UTC (12 Noon EDT) June 27. You will receive credit for whatever you have done by that time. Nothing that you submit after that time will be graded. No notes, no viewing course content, no third-party content, no Wolfram Alpha, no internet, no &hellip;. Just you, a pen or pencil, blank scrap paper, and the midMOOC examination page on your computer. You may use the edX calculator that&rsquo;s available to you at the bottom right of each page of the exam. We would like you to take the exam in one sitting if possible, but we realize that it might be difficult for some of you to find a three-hour block of time that you can devote to this course. If you opt to take the exam in two sittings, you must follow the rule immediately above during the entire time between sittings. (You can access the internet to check the weather, sport scores, your calendar, etc., but you cannot access it to learn more about differential equations or answers to this exam. You know what we mean.) No posts on the discussion board related to the exam questions or answers until after 16:00 UTC June 27. Comments: Before you start the exam, think about how the material is organized. Review our three-pronged approach to studying the subject, the no-wrong-answers principle, the analytic techniques we discussed for solving initial-value problems and general solutions, etc. Solutions for questions that you answer incorrectly will be visible after 16:00 UTC on June 27. We can explicitly discuss detailed answers to the questions. However, that discussion cannot start until 16:00 UTC on June 27. ",
                                        "unit_id":"e6c1b7e6c3f14824a127c50aa0ba3c8b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5e999820c1d44a619bcc5e6448227fb3",
                                "vertical_name":"Instructions"
                            }
                        ]
                    },
                    {
                        "sequential_id":"1dd9489e203a41e6b626711fe36870fa",
                        "sequential_name":"MidMOOC Exam",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Step back",
                                            "Wolfram alpha",
                                            "Page",
                                            "Discussion",
                                            "Content",
                                            "Discussed",
                                            "Time"
                                        ],
                                        "data":" Why are we giving this exam? We want you to step back and take a close look at everything you have learned in this course so far, and one effective way to do that is to ask you to take an exam. Courses that involve mathematics tend to be &ldquo;vertical&rdquo; in the sense that topics discussed later in the course can only be understood if you understand the concepts on which they are built. The process of preparing for an exam helps you make sure that you are ready for what comes next. We require that you do the exam without notes or the aid of certain technologies to guarantee that basic notions have become part of your differential equations DNA. Examination Rules: Three-hour exam to be taken in one or two sittings any time until 16:00 UTC (12 Noon EDT) June 27. You will receive credit for whatever you have done by that time. Nothing that you submit after that time will be graded. No notes, no viewing course content, no third-party content, no Wolfram Alpha, no internet, no &hellip;. Just you, a pen or pencil, blank scrap paper, and the midMOOC examination page on your computer. You may use the edX calculator that&rsquo;s available to you at the bottom right of each page of the exam. We would like you to take the exam in one sitting if possible, but we realize that it might be difficult for some of you to find a three-hour block of time that you can devote to this course. If you opt to take the exam in two sittings, you must follow the rule immediately above during the entire time between sittings. (You can access the internet to check the weather, sport scores, your calendar, etc., but you cannot access it to learn more about differential equations or answers to this exam. You know what we mean.) No posts on the discussion board related to the exam questions or answers until after 16:00 UTC June 27. Comments: Before you start the exam, think about how the material is organized. Review our three-pronged approach to studying the subject, the no-wrong-answers principle, the analytic techniques we discussed for solving initial-value problems and general solutions, etc. Solutions for questions that you answer incorrectly will be visible after 16:00 UTC on June 27. We can explicitly discuss detailed answers to the questions. However, that discussion cannot start until 16:00 UTC on June 27. ",
                                        "unit_id":"b5dd8905ffd24e46aa373209d9599fba",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6654f3fc52b34d2cb12d257be5758d7a",
                                "vertical_name":"Instructions"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"0c60f45fdd674b288c6fa671d75a09f7",
                "chapter_name":"Module 10: Systems of Differential Equations",
                "sequentials":[
                    {
                        "sequential_id":"ed3dd86471d34c6c9c4d4223897a58d1",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Nonlinear systems",
                                            "Differential equations",
                                            "Vector fields",
                                            "Linear system",
                                            "System",
                                            "Nonlinear",
                                            "Module"
                                        ],
                                        "data":" Introduction to module 10: systems of differential equations In this module we begin our discussion of systems of differential equations. Many phenomena involve two or more quantities whose rates of change are related in fundamental ways. For example, consider the motion of the planets. They move according to the law of gravitation, and they do so as a system. We must know the position and velocity of all of the planets to predict the motion of any one of them. Much of this module involves a comparison of two basic examples---the mass-spring system and the predator-prey system. By the end of MATH226.2, we will be able to answer any question we have about the mass-spring system. It's a linear system, and these systems obey linearity principles that are very similar to the linearity principles we discussed in Module 9. The predator-prey system is not so cooperative. It is nonlinear, and as we will see, this distinction makes a big difference. We do not have many analytic techniques that apply to nonlinear systems, and consequently we'll have to rely more heavily on qualitative and numerical approaches. We also introduce some terminology that we will use throughout the remainder of MATH226. Modules 10 and 11 form an important pair. In Module 10, we discuss examples and terminology. In Module 11, we see how a system of equations can be expressed more succinctly using vector fields, and it is this formulation that provides the dynamical systems perspective that we advocate. ",
                                        "unit_id":"cb92e6dfac79421ba8e43ebb51e3d3c6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1b86542af8f94ccc815c7d6a716475e7",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"bf9427d17e1f4ff290c1f865112e99b0",
                        "sequential_name":"Systems of Differential Equations",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "System",
                                            "Note",
                                            "Derivation"
                                        ],
                                        "data":" Comment on Video 1 The derivation of the mass-spring system in Video 1 ignores the role of gravity. In the video, I use pictures that orient the mass-spring system vertically. This orientation often leads to confusion regarding the role of gravity in the system. There are two ways to resolve this issue. We can assume that the mass-spring system is somewhere in space where gravitational forces are essentially nonexistent, or we can do a more detailed derivation of the system. I have written a three-page note that essentially does that derivation. If you want, you can use this note to replace what I say between 4:00 and 5:33 in the video. -ProfPB ",
                                        "unit_id":"dee09b3c08624efea846607acc6b0f05",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d1b1506d0a3a44b1a960ed9363b77da5",
                                "vertical_name":"Comment on Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Autonomous differential equation",
                                            "Simple harmonic oscillator",
                                            "Partial differential equation",
                                            "Ordinary differential equation",
                                            "Linear differential equation",
                                            "Differential equation",
                                            "Coordinate system",
                                            "Duffing equation",
                                            "Biological systems",
                                            "Proportionality constant",
                                            "Nonlinear circuit",
                                            "Independent variable",
                                            "Dependent variable",
                                            "Spring system",
                                            "Restoring force",
                                            "Spring constant",
                                            "Autonomous",
                                            "Vertical displacement",
                                            "Equation",
                                            "Mass",
                                            "Acceleration",
                                            "Variable",
                                            "Force",
                                            "Notation",
                                            "Consistent",
                                            "Written",
                                            "Distinction",
                                            "Negative",
                                            "Picture",
                                            "Duffing",
                                            "Ll",
                                            "Spring",
                                            "Motion",
                                            "Positive",
                                            "Ve",
                                            "Displacement",
                                            "Minus",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHRD: Let's discuss a simple mass-spring system. We model the motion of a mass-spring system using Newton's second law, F equals ma, and Hooke's law. Now Hooke's law says that the restoring force of a spring is linearly proportional to its displacement from its rest position. This is a law that is verified empirically and is valid over a certain range of displacements from the rest position. Now to be a little more precise, let's imagine our mass spring system and our spring being in its rest position over here on the left. And we'll introduce a coordinate system. And since I'm imagining the motion of the mass-spring system to be a vertical motion, we'll use the variable y. So y equals 0 will correspond to the rest position. We should indicate which side of the line y equals 0 corresponds to positive y. It doesn't matter which we pick as long as we're consistent. For me, it's natural to pick the part of the line that's above y equals 0 as y being positive. Now in the other two pictures, we're indicating what happens if we have a force exerted on the spring that displaces the spring. So in the middle picture, we imagine a force due to adding a mass. And if this spring is in equilibrium, then there will be a corresponding force that's equal in magnitude but opposite in direction exerted by the spring, a restoring force. Now since we're saying that these forces from the spring are linearly proportional to this displacement-- in this case, we have a displacement that we're calling y. And we need a proportionality constant. So that's k. That's called the spring constant. And we always make the spring constant be positive. Well, since this is a negative value of y, and the force is pointing in the positive direction, then we see the restoring force is going to be minus k times y, which in this case would be a positive quantity. Likewise, if we have the spring being compressed by our hand, say, with a certain force, and if the spring system was in equilibrium, then there would be a corresponding force exerted by the spring. In this case, the displacement y is positive. And notice that the restoring force is pointing down so that in this case we would have minus k times y. That would be a negative force. So in both cases, the restoring force is minus k times y. It's just that the sine of y is different in the two cases. So now what we'll do is we'll derive the differential equation for the mass-spring system using Newton's second law, F equals ma. So we have F equals ma. And our force is going to be given by Hooke's Law. Are we just saw that our force due to the spring is going to be minus k times y in both cases. And that's going to be mass times acceleration. Well, acceleration is going to be the second derivative of y with respect to t. And this is the differential equation that models the simple mass-spring system. Now it's usually not written this way. Usually, we move the minus k times y term over to the other side. And so here we'll have m times the second derivative of y with respect to t plus k times y is equal to 0. And this differential equation, probably the second most important differential equation in this course, right after dydt is equal to k times y, is called the mass-spring system or the simple harmonic oscillator. For now, I'm just going to call it the mass-spring system. Simple mass-spring system. Now this is the first time that we've had a second derivative in our differential equation. So that makes it a second order differential equation. And notice that time is nowhere in the differential equation other than as part of the notation to indicate we're talking about the second derivative of y with respect to time. So this is also an autonomous differential equation. So a simple mass-spring system is m times the second derivative of y with respect to t plus k times y is equal to 0. And it is an example of a second order autonomous differential equation. In general, a second order autonomous differential equation is going to have one independent variable. For us, often that independent variable is t because it's going to represent time. When you have one independent variable, you're talking about an ordinary differential equation, not a partial differential equation. And it's going to have one dependent variable. And often, that dependent variable is x or y, in particular if we're talking about displacement. A vertical displacement might be y. A horizontal displacement might be x. In either case, we're talking about a second order autonomous differential equation. Well, that means-- for example, if x were the dependent variable, that would mean that the second derivative of x with respect to t is going to be a function of x and dxdt. It's not going to be a third derivative anywhere. There are also not going to be any t's in the formula for the second derivative of x with respect to t because it is autonomous. And same thing for y. Just replace the x's with y's. I've written down here two other well known examples of second order autonomous differential equations. They're a little more complicated. The first one here is the second derivative of x with respect to t minus the quantity 1 minus x squared times dxdt plus x is equal to 0. This is known as the Van der Pol differential equation. It was originally developed to model a nonlinear circuit but now plays a much more important role in biological systems and in particular neuroscience. This other equation-- the second derivative of x with respect to t plus b times the derivative of x with respect to t, where b is a parameter, plus k times x, where k is another parameter, plus x cubed is equal to 0-- is called the Duffing equation. We will discuss in more detail these equations as the course progresses. They're a little more complicated than the mass-spring. Let me rewrite the mass-spring here. m times the second derivative-- I'll write it with x's right now just to make the notation consistent with what I've got on this slide already. k times x is equal to 0. These two, Van der Pol and Duffing, are a little bit more complicated because they're non-linear differential equations. The mass-spring system is a linear differential equation. And as we'll see, that plays an important role. That distinction is a very important distinction. So now that we have second order differential equations, I have an exercise I'd like you to do where you do some guessing of solutions for the simple mass-spring system. End of transcript. Skip to the start. ",
                                        "unit_id":"fc9d7300192245b1872210870257bc5c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4c4a41ab5e5c40ee8668b3ca7bef80b0",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Malthusian growth model",
                                            "Exponential decay",
                                            "Differential equations",
                                            "Dependent variables",
                                            "Independent variable",
                                            "Differential equation",
                                            "Minus sign",
                                            "Model",
                                            "Good time",
                                            "System",
                                            "Eat",
                                            "Population",
                                            "Variable",
                                            "Equation",
                                            "Based",
                                            "Good",
                                            "Eaten",
                                            "Minus",
                                            "Positive",
                                            "Make",
                                            "Proportional",
                                            "Parameter",
                                            "Term",
                                            "Fox",
                                            "Assumption",
                                            "Rate",
                                            "Ll",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's begin our discussion of first-order systems of differential equations with the most basic predator-prey system. We're modeling the interaction of two populations where one preys upon the other. The prey are often referred to as rabbits, and the predators are often referred to as foxes. This predator-prey system is based on four assumptions. The first says that if no foxes are present, the rabbits reproduce at a rate proportional to their population, and they are not affected by overcrowding. This is the Malthusian growth model that we discussed in module one. The second assumption says that the foxes eat rabbits, and the rate at which the rabbits are eaten is proportional to the rate at which the foxes and the rabbits interact. This kind of assumption is something new to us. The third assumption is that without rabbits to eat, the fox population declines at a rate proportional to itself. This is an exponential decay model. And the fourth assumption says that the rate at which foxes are born is proportional to the number of rabbits eaten by foxes which, by the second assumption, is proportional to the rate at which the foxes and the rabbits interact. Again, we have an assumption based on the rate at which the foxes and the rabbits interact. Now let's take these four assumptions and turn them into a system of differential equations. First thing we need to do is we need to determine some variables. The independent variable is going to be time, so we'll let t be equal to time. Both the rabbits and the fox populations are functions of time. And we're studying these two populations. We'll use the R to represent the number of rabbits and F to represent the number of foxes. Those are the two dependent variables. They're both going to be functions of the independent variable, time. Now let's take a look at the first two assumptions and turn them into what turns out to be one differential equation. So notice if no foxes are present, the rabbits reproduce at a rate that's proportional to the population, and they are not affected by overcrowding. I already said that's a Malthusian growth model. So we're talking about the rate of change of the rabbits so dR/dt. And it's going to be a Malthusian growth model, so we'll say that's a parameter. I'm going to make a be a parameter times R. So that first assumption gives us the term a times R. The second assumption is somewhat different and new to us. The foxes eat the rabbits, and the rate at which the rabbits are eaten is proportional to the rate at which the foxes and the rabbits interact. Now we know that the interaction of rabbits and foxes is bad for the rabbits. And we'll make our parameters be positive. So I'm going to use a minus sign, and we'll have a parameter b. But we need a term that represents the interaction of foxes and rabbits. And for this model, we're going to use a term that's R times F. We're going to measure the interaction of rabbits and foxes by the product R times F. So that's going to be our first differential equation. dR/dt is equal to a times R minus b times RF. Now let's consider the third and fourth assumptions. The third assumption says that without rabbits to eat, the fox population declines at a rate proportional to itself. Now we said that that's an exponential decay. So the rate of change of the foxes with respect to time, that's going to be equal to minus parameter c times F, where the parameter's going to be positive. And the fourth assumption says the rate at which the foxes are born is proportional to the number of rabbits eaten by foxes which, by the second assumption, is proportional to the rate at which the foxes and the rabbits interact. So the interaction of rabbits and foxes is going to be good for the foxes. And so we'll have plus parameter d times RF. So from the third and fourth assumptions we get a second differential equation to go along with the first differential equation that we already derived. And we put these two equations together to form what's called the predator-prey system. So the predator-prey system-- in this case, with these assumptions-- is dR/dt is equal to a times R minus b times Rf. And dF/dt is equal to minus c times F plus d times RF where a, b, c, and d are positive parameters. Now I want to point out something that's different that makes these two equations taken together be truly a system, which is that they both have an RF term. Sometimes people say that these two equations are coupled with one another. You can't figure out the value for dR/dt without knowing both R and F. And similarly, you don't know the value of dF/dt unless you know both R and F. Now this is a good time for you to get some practice interpreting systems that are similar to this predator-prey system. So I'd like you to do an exercise now. End of transcript. Skip to the start. ",
                                        "unit_id":"973c15b1b4a9445cbcd47fa7c29d2863",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2633ff4f12a24b6da36ea7db0fa94a16",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Autonomous system",
                                            "Phase plane",
                                            "Differential equations",
                                            "Initial condition",
                                            "Right hand side",
                                            "Independent variable",
                                            "Initial conditions",
                                            "Left hand side",
                                            "Horizontal plane",
                                            "Dependent variables",
                                            "Closed curve",
                                            "Differential equation",
                                            "Initial",
                                            "Plane",
                                            "System",
                                            "Component",
                                            "Closed",
                                            "Form",
                                            "Representation",
                                            "Two dimensional",
                                            "Curve",
                                            "Introduce",
                                            "Ve",
                                            "Parameter",
                                            "Order",
                                            "Ll",
                                            "Graph",
                                            "Computer",
                                            "Turn",
                                            "Start",
                                            "Evolves",
                                            "Watch",
                                            "Plot",
                                            "Equilibrium",
                                            "Equation",
                                            "Term",
                                            "Constant",
                                            "Time",
                                            "Spiral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: The predator-prey system is an example of a two-dimensional, first order, autonomous system of differential equations. In general, a first-order autonomous system has one independent variable. And for us that's often t for time. And if it's two-dimensional, it has two dependent variables. If the dependent variables are x and y, then the first-order system has the form dx dt is equal to some function f of x and y, and dy dt is equal to some function g of x and y. Note that t does not appear on the right-hand side of either these equations. So note that there's no t. And that's what it means to be an autonomous system. It's just like we talked about autonomous first-order equations. And for the remainder of this course, we'll be considering autonomous systems of equations. We will consider non-autonomous systems of equations, but that won't be until MATH226.2x. At this point, what I'd like to do is I'd like to introduce some terminology for systems that we're going to use throughout the rest of MATH226.1x. And I'm going to use the predator-prey system as an example to illustrate this terminology. I'm going to use the computer to do that. And to do so I need to have some parameter values. And so I'm going to use a equals 2, b is equal to 1.2, c is equal to 1, and d is equal to 0.9. Now there's nothing terribly special about these four numbers other than I like the pictures that it produces. First term is what is an initial condition? So an initial condition is going to be a pair of numbers. And since we're talking about the predator-prey system that pair of numbers is going to be an R sub 0, and an F sub 0. And you want to think about these two numbers as determining the solution. They'll be the values that you initially start with to determine the solution to the differential equation. And the solution to an initial value problem is going to be a pair of functions. Pair them up, an R of t and an F of t. And these functions are going to satisfy the equations. So they satisfy the system of differential equations. So they satisfy both differential equations, and the initial conditions. So that means that at some given time, let's say time 0, we would have R of 0 and F of 0 is equal to the initial condition R sub 0, F sub 0. Now let's turn to the computer so I can illustrate both of these terms, along with a couple of other ones. And when I do the computer calculation, I'm going to use the initial condition R0, F0 is equal to 1 and 0.5. I'm going to show you two geometric representations of this solution. And the first one is as a parameterized curve in space. What we're going to do is we're going to plot triples of the form t comma r of t comma f of t. And these triples are obtained using a numerical approximation technique that's similar to Euler's method. Now when I've plotted these points I've placed the t-axis vertically. Remember t is the independent variable. And I have the R-axis and the F-axis in this horizontal plane here. And our initial condition is going to be the point t sub 0, R sub 0, F sub 0. And we're going to use this initial condition and the system of differential equations to produce new values of R and F as t evolves. So we can watch that happen. And as t evolves, we get new points. And what happens is that these points move along this spiral in three dimensions. And they spiral up as t increases. And we end up getting a spiral in space. Now along with this spiraling curve, there are some two-dimensional aspects to this picture that I'd like you to see. And it's a little difficult to position this. Let me try. Here we go. So the first one is I'd like to show you what that spiral looks like when we project it into the tR plane. And we end up getting a curve, which is the graph of the function, the R of t function, the rabbits as a function of time. We can also do that with the t and the F, and we get the graph of F of t, the foxes as a function of time. And then there's one more two-dimensional aspect to this picture that I'd like you to see. And that's what happens if we project this spiral into the RF plane. And in this case we get a closed curve. It doesn't quite look like it's closed here. But that's just because we're seeing the spiral still, the three-dimensional spiral as well. And it'll turn out that this closed curve is also a convenient representation for the solution. Now as you can see from this little demonstration, there's a certain amount of overhead involved with a three-dimensional representation of a solution. And these difficulties can be avoided if we use some of the two-dimensional aspects that you saw in this representation, and just keep our pictures in two dimensions. And so what I'm going to do now is I'm going to show you how to do this with two dimensions. This is exactly the same solution, just represented differently. On the left, we plot the pair R of t comma F of t in the RF plane. And on the right, we plot the graph of R and F as functions of t. And these two plots together should remind you of the projections that I showed you in three dimensions. Our initial condition is R sub 0 is equal to 1 and F sub 0 is equal to 1/2. And on the left-hand side, that's represented by this point. On the right-hand side, we can see that R equals 1, and F is equal to 1/2. And so we can tell because R equals 1 that corresponds to the dark blue graph. And F is equal to 1/2 that corresponds to the light blue graph. So you can tell which graph is which from the initial condition. Now let's watch what happens as time evolves. And so you can see that the functions, the values of R and F oscillate. You can see the oscillations on the right-hand side. And on the left-hand side, you can see the oscillations in the sense that the point and the RF plane comes back to itself. That's an important observation. So let me just emphasize that. We'll let time evolve, and we'll watch what happens. I'm doing this by hand, so it's not uniform. But we get back, and at approximately 5.04 units of time, we're back to where we started. And so these functions here are periodic with a period that's just a little bit more than five units of time. Now let's return to the slides where I'll introduce the terms that we will use to discuss these graphs and this curve. Let's use one scene from the animation to illustrate three more terms. Whenever we have a solution, we have a pair of functions, R of t, F of t. And I like to call these functions the component functions for the solution. And so when I talk about the component graphs, I'm talking about the graphs of R of t and F of t as a function of t. So they're the graphs on the right-hand side of this picture. Sometimes I call them the R of t graphs and the F of t graphs. Now the phase plane is the RF plane. And that's shown in this picture on the left-hand side. So the plane on the left-hand side is the phase plane. It's the plane determined by the two dependent variables. And when we take the pair of functions that form a solution, and we think about them determining a point in the phase plane for each value of t, we can think about them as sweeping out the solution curve in the phase plane. So the solution curve in the phase plane is the parameterized curve determined by the solution, the pair R of t, F of t. Now I want to emphasize that the term phase plane is absolutely standard. Everybody uses that term in exactly the same fashion. Component graphs and solution curve, that's the terminology I like to use. I'll try to use it consistently throughout the course. But you may hear other terms in other contexts. When we studied first order equations, we saw that equilibrium solutions played an important role. And that's true for systems of differential equations just as much. And what does it mean to be an equilibrium solution for a system of differential equations? An equilibrium solution is a solution for which both of the component functions are constant for all time. Both component functions are constant for all time. For example, if we consider the predator prey system with any values of the parameters a, b, c, and d, the initial condition R sub 0 and F sub 0 equal to 0 corresponds to the equilibrium solution where R of t and F of t are both 0 for all time. This makes a lot of sense because if we don't have any rabbits or foxes to begin with, we don't expect to have any rabbits or foxes going forward. But we can verify this by plugging this function into the differential equation. Now since the function-- both of the component functions are constant, if we look at the left-hand side of the system, both of those derivatives have to be zero, since they're constant functions. Now if we look at the expressions on the right-hand side of the system, for example, if we look at the first expression, the right-hand side that corresponds to dR dt, we see that both terms contain an R. Well, if both terms contain an R, then they have to be equal to 0. Likewise, if we look at the right-hand side of the equation for dF dt, we see that both terms contain an F. Well if F is equal to 0, we see that the right-hand side there also has to be equal to 0. So we basically got 0 equals 0 in both equations. And so this function that's constantly 0 in both components is an equilibrium solution for the predator prey system. Now in the animation we did a particular predator prey system, where a was equal to 2, b was equal to 1.2, et cetera. And it turns out that there's one other equilibrium solution for that example. And I would like you to compute that equilibrium solution now. But let me give you a hint. If you have an equilibrium solution, both component functions have to be constant. And so therefore both dR dt and dF dt would have to be 0 for all time. So go ahead. Take the equation for the predator prey system, and solve for an equilibrium solution that doesn't-- it's not the one that I have here. It's not the one where both functions are constantly 0. End of transcript. Skip to the start. ",
                                        "unit_id":"563521f5c75a4a35a6ee8cd2c05e01b7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c54d096699984bc1a1a1778f0bd9d70d",
                                "vertical_name":"Video 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial conditions",
                                            "Phase portrait",
                                            "Initial condition",
                                            "Phase plane",
                                            "Differential equations",
                                            "Exponential growth",
                                            "Quote marks",
                                            "Closed curve",
                                            "Equilibrium point",
                                            "Initial",
                                            "Periodic",
                                            "Form",
                                            "Exponentially",
                                            "Produce",
                                            "System",
                                            "Back",
                                            "Equilibrium",
                                            "Side",
                                            "Important",
                                            "Period",
                                            "Positive",
                                            "Representative",
                                            "Behavior",
                                            "General",
                                            "Calculate",
                                            "Discussed",
                                            "Point",
                                            "Hand",
                                            "Notice",
                                            "Term",
                                            "Ve",
                                            "Time",
                                            "Curve",
                                            "Minus"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: I just had you calculate the equilibrium solutions for a particular case of the predator-prey system. But it turns out there's nothing terribly special about that particular case. And let me go through the computation in general. So if we want to calculate the equilibrium solutions for the predator-prey system of the form dR dt is equal to a times R minus b times RF. And dF dt is equal to minus c times F plus d times RF. Then we want to find the values of R and F such that the right hand side of both differential equations are equal to 0. So now let's go through the logic that's involved with solving those two equations. Let me take the first equation. It's a times R minus b times R times F. And we want that to be equal to 0. So what I'm going to do is I'm going to notice that there's an R in both terms. And we're going to factor out that R. So I get R times a minus bF. I also want minus c times F plus d times RF to be equal to 0. And I'm going to do the same thing, except I'm going to notice that there's an F in both terms. So I have my F, and I factor out, so I get minus c plus d times R. Now let's go through the logic. And it's important to be systematic. So I know that R comma F equal to 0, 0 is one equilibrium solution. So let's assume that R is not equal to 0 and let's see what happens. Well, if R is not equal to 0, the only way I'm going to get the first equation to be equal to 0 is if a minus b times F is equal to 0. Then I can move to the minus b times F over to the other side and divide by b. And I would get F would be equal to a divided by b. But if F is equal to a divided by b, then that's going to be non-zero. And so if I go to the second equation, I see that minus c plus d times R has to be equal to 0. And then if I move the c over to the other side-- the minus c over to the other side-- then I get that R would have to be equal to c/d. So I get an equilibrium solution where R is equal to c/d and F is equal to a / b. Now, if on the other hand, I assume that F is not equal to 0, then what happens is that I look at the second equation and I see that minus c plus d times R is equal to 0. And then the logic goes pretty much the same from that point on. In both cases, I get exactly the same equilibrium solution. So another equilibrium solution is the pair of functions R of t F of t. R of t would have to be equal to c/d. And F of t would have to be equal to a over b. So there are two equilibrium solutions for any predator-prey system of this form, always two equilibrium solutions. Now let's turn to the computer so that I can illustrate one more important term for first order systems. Once again, I have the RF plane on the left and graphs of solutions on the right. And I've asked the computer to calculate solutions to correspond to three different initial conditions. The first, where R is equal to 1 and F is equal to 1/2, is the example that we've already discussed. And it gives us this pair of graphs that we've already discussed. The second has both R and F just slightly greater than 1. And it produces this pair of functions here in the middle. And the third initial condition corresponds to the equilibrium solution that you've already calculated, where R is approximately 1.1 and F is approximately 1.7. So here we have the graphs of the functions that are constant, where R is approximately 1.1 and F is approximately 1.7. Now I'm going to run the animation. And since we already really know what happens with this first example and the equilibrium solution, you should concentrate on what's happening for this second initial condition. And you should watch to see what happens both in the RF plane and for the graphs of the solutions. So let me run the animation now. So in the RF plane, you can see that the values of R and F are sweeping out a closed curve. And over here, when you consider the graphs as a function of time, then you can see that we produce periodic functions. So both the solution that corresponds to the initial condition here and the solution that corresponds to this initial condition right there correspond to periodic solutions. Now, the first initial condition of the periodic solutions range over a wider set of numbers than the periodic solutions in the second initial condition. And there's something else that I'd like to point out. And let me bring the points back to the initial value. And by hand, I'm going to just drag time. And notice that the middle solution comes back to its initial condition at t just slightly greater than 4 and 1/2. And so this pair of functions is periodic with a period that's slightly greater than 4 and 1/2. And if you remember back to the previous example, this pair of functions was periodic with a period slightly bigger than 5. And you can see that-- notice the RF values have not returned to the initial condition at 4 and 1/2. I have to increase time to that initial condition to where I'm slightly greater than 5 to return to my initial condition. So the period of this top example is slightly greater than 5. The period of this bottom example a slightly greater than 4 and 1/2. Now, what you see in this animation is typical of how we're going to analyze our systems. We're going to use this RF plane to organize initial conditions so that we can understand the various behaviors of solutions. Now let's return to the slides so I can discuss one more term. The animation we just discussed illustrates one more term that we use for systems. And that term is the phase portrait. And we've already talked about the phase plane. I want to emphasize that the phase portrait's not exactly the same thing as the phase plane. The phase plane for the predator-prey system is the RF plane. The phase portrait consists of a representative collection of solution curves in the phase plane. For the predator-prey system, all solution curves are closed curves, except the solutions that correspond to the equilibrium solutions. So on the right here, I have a picture of the phase portrait for the predator-prey system. I've only drawn the first quadrant because we're talking about positive populations. I suppose I left out what happens on the axes. So if we have foxes and no rabbits, then the foxes die out exponentially. And that corresponds to a solution curve. It just heads down towards the equilibrium point at the origin. So we put an arrow pointing down. And if we have no foxes, then the rabbits grow exponentially. And so that corresponds to a solution curve, which is just the positive R axis with an arrow pointing out for exponential growth. But for all of the solution curves, except the two equilibrium solutions, we obtain closed curves. And as we saw, that corresponds to periodic behavior for the populations. In general systems, we'll not have so much regularity. Some solutions will do one thing. Other solutions will do another. And that's where these quote marks come into play with the word \"representative.\" You try to draw enough solution curves so that you have a sense of what all solutions do. Of course there's a solution curve for every initial condition. So you can't draw every solution curve. End of transcript. Skip to the start. ",
                                        "unit_id":"058c70732bd64e9b88bf853a0de575b5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"999c50a9d0f54249837fddedb1aa7f76",
                                "vertical_name":"Video 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Physical system",
                                            "Initial condition",
                                            "Phase portrait",
                                            "Phase plane",
                                            "Vertical axis",
                                            "Mathematical terminology",
                                            "Spring constant",
                                            "System",
                                            "Plane",
                                            "Term",
                                            "Slider",
                                            "Equation",
                                            "Order",
                                            "Equilibrium",
                                            "Spring",
                                            "Demonstration",
                                            "Parameter",
                                            "Ll",
                                            "Illustrate",
                                            "Ve",
                                            "Range",
                                            "Point",
                                            "Curve",
                                            "Velocity",
                                            "Variable",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: An important point that I want to make in this module is that even though the mass-spring system and the predator-prey system seem quite different, one is a second order equation and the other's a first order system. It turns out they have more in common than you might think at first. In particular, the mass-spring system can also be written as a first order system by introducing the new variable, v, which is just dy dt. So v stands for velocity, and that is just dy dt. This technique is called reduction of order. Let me illustrate that. So we have the new variable, v, which is just dy dt. So dy dt is v. Let's take now the dv dt. Well, that's the second derivative of y with respect to t. And then let's use the mass-spring system and write that as minus k divided by m times y. And what we do here is that we then ignore the second derivative and we have system which consists of two variables, y and v, and the equations are dy dt is equal to v, and dv dt is equal to minus k divided by m all times y. And this technique is called reduction of order because we've taken a second order equation and we've reduced the order so that it is a first order system. Plus we added an extra variable along the way. In what ways is the mass-spring system similar to the predator-prey system? Well, we know that the predator-prey system is a pair of coupled, first order, autonomous differential equations. And an initial condition to determine a solution is a pair of numbers, R sub 0 and F sub 0 of population values. Now as we just saw, the mass-spring system can also be expressed as a pair of coupled, first order, autonomous equations. And an initial condition that determines a solution for the mass-spring system is also a pair y sub 0, and v sub 0, an initial displacement and an initial velocity. Now since, we can write the mass-spring system as a first order system, all of the terms that we talked about for the predator-prey system also apply to the mass-spring system. So we have component graphs, and those would be the graphs of solutions y of t And v of t. Solutions lead to solution curves. So we'll take a corresponding pair, y of t and v of t, pair them together, and that will form a parametrized curve. And that'll be in the phase plane, which will be the yv plane. And we have equilibrium solutions. Actually for the mass-spring system, there's only one equilibrium solution. So there's only one. And that's where y of t and v of t are both equal to 0 for all time. And the phase portrait will consist of either circles or ellipses, depending upon the values of the parameters, that are centered at the origin. Now let's turn to the computer where I will illustrate teach terms. This is a virtual mass-spring system that's part of the DE Tools software package that was written by some of our friends to help us teach differential equations. We will use this particular demonstration extensively to help us illustrate the connection between the physical system, the physical mass-spring system, and the mathematical terminology that we've been discussing. So on the left hand side is our virtual mass-spring system. Here's our spring, there's our mass. Next to that is the yv plane, where y is the vertical axis. So it matches up with the positioning of the spring. This is the phase plane for this system. And you can see that different positions in the phase plane correspond to different states of the mass-spring system. To the right is a plane in which we will plot our graphs of y as a function of t and v as a function of t. These are our component graphs. Above that is the second order equation that corresponds to the mass-spring system. There's an extra term that involves damping. And we'll discuss the damping term later. And there's the first order system that we obtain by reducing the order of the equation with the introduction of the variable v for velocity. So dy dt is equal to v. And dv dt is equal to minus k divided by m times y. Below that is a group of parameters. The first slider let's us select m from a range. The second slider lets us select the spring constant, k, from a range. And the third slider lets us select a damping parameter. But for this demonstration, we're always going to leave that parameter equal to 0 because we're not ready to discuss damping. Now let's see what happens if we go and select an initial condition at random in the phase plane. So we get a pair of graphs corresponding to y of t and v of t. The y graph is in red and and the v graph is in blue. And they're very symmetrical. And that's because there are combinations of sines and cosines. And we will discuss this point. Now there's one thing that this tool lets me illustrate very nicely. Let me throw away that solution. Let me turn off velocity just to keep things simple. And I want to select a specific initial condition. It doesn't matter which one I start with. And I wish I had more precision here. I just have to use the mouse. So there's an initial condition where y sub 0 is equal to 2. Now let's see what solution we get. So we get that solution for this particular initial condition. Now let's select another initial condition. And we'll keep y at 2. But we'll use a different v. And let's see what happens. So notice that we get another solution. This is just the y of t graph. But it's good enough to illustrate my point. They start at the same place, but notice the second solution oscillates over a much wider range of values. And that's because we actually had more energy in the system before we started it. So my point is that we really do need both a y value and a v value to determine a solution to this mass-spring system. Now there's one more thing that I want to illustrate. And that's what happens if you have different values for m and for k, for the mass and the spring constant, k. Let's clear off this graph. And then let's see what happens. So notice that before when we had k and m equal, then our solution curves in the phase plane were circles. But in this case where k and m are not equal, our solution curves in the phase plane are ellipsis that are not circular. Now in this video, we discussed the ways in which the predator-prey and the mass-spring system are the same. In the next video, we'll discuss one important difference. End of transcript. Skip to the start. ",
                                        "unit_id":"f456f0885a0d41cfbe1964de2b1f455c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bc34e56c61034e17a286728932e80a51",
                                "vertical_name":"Video 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Second order equation",
                                            "Slope field",
                                            "Vector field",
                                            "Phase plane",
                                            "Phase portrait",
                                            "Initial condition",
                                            "Ll",
                                            "System",
                                            "Pair",
                                            "Cosine",
                                            "Minus",
                                            "Sine"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: An important point in this module is that there's a lot of similarity between the mass-spring system and the predator-prey system. However, there is one way that they are very different-- we can find formulas for the solutions of the mass-spring system, but not for the predator-prey system. Now think back to the beginning of the module where we considered the case where k was equal to m in the mass-spring system and the equation simplified to the second derivative of y with respect to t is equal to minus y. We guessed three solutions. We could have guessed more. One was y sub 1 of t is equal to sine of t. Another was y sub 2 of t was 2 sine of t, and a third was y sub 3 of t is equal to cosine of t. Now let's consider the equivalent system. dy dt is equal to v, and dv dt is equal to minus y. And for each solution that we had to the second-order equation, we have a corresponding pair of functions that form a solution to the system. For example, let's consider y1 of t, which is equal to sine of t. Then we can pair y1 of t up with v1 of t. And so we would get sine of t, comma cosine of t, and that would be the corresponding solution to the system. Same thing for y2 of t, which is 2 sine of t. So we make the pair y2 of t v2 of t, and that would be equal to 2 sine of t comma 2 cosine of t. And finally, y3 of t, which is cosine of t, that will give us y3 of t v3 of t is equal to cosine of t minus sine of t. Now, each of these solutions has a corresponding initial condition. So for example, with the first solution at time 0, we're located at the point 0 comma 1 in the phase plane. For the second solution, we're located at the point 0 comma 2, and for the third solution, we're located at the point 1 comma 0. So each of these solutions corresponds to a different initial condition. In this module, we set the stage for the remainder of the course. We'll rely on concepts such as the phase portrait over and over again. In the next module, we'll introduce the concept of a vector field for a system, and we'll see that it plays an analogous role to that of the slope field for a first order equation. End of transcript. Skip to the start. ",
                                        "unit_id":"76ced25d8f444201893cd0d063779ea4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"637144c30a634f6981845228f089f997",
                                "vertical_name":"Video 6"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"5ceb3e1d71ad4b74930916a13d7dd97b",
                "chapter_name":"Module 11: Vector Fields, Direction Fields, and the Phase Plane",
                "sequentials":[
                    {
                        "sequential_id":"9267e3b7783d4ad2982e68764272beab",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Vector field",
                                            "Vector fields",
                                            "Phase plane",
                                            "System"
                                        ],
                                        "data":" Introduction to Module 11: Vector Fields, Direction Fields, and the Phase Plane In this module we introduce the concept of a vector field for a first-order system of equations. It plays a role for first-order systems of equations that is similar to the role that the slope field played for first-order equations. A vector field is a picture of a first-order system of equations, and we obtain the solutions to the system by finding solution curves whose velocity vectors are given by the vector field. This geometry takes some effort to understand, and you study it carefully. ",
                                        "unit_id":"5c0d68178a214c469f08d34314da1277",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f3a80547dcf94fd68fba7e72656ae45e",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"df7f6f07217d4f76bab9534a7a386a95",
                        "sequential_name":"Vector Fields, Direction Fields, and the Phase Plane",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Spring constant",
                                            "Initial condition",
                                            "Column vectors",
                                            "Initial conditions",
                                            "Differential equations",
                                            "Vertical direction",
                                            "Differential equation",
                                            "Direction field",
                                            "Phase plane",
                                            "Column vector",
                                            "Vector version",
                                            "Position vector",
                                            "Vector field",
                                            "Vector notation",
                                            "Vector equation",
                                            "Capital letter",
                                            "Vector function",
                                            "Introduced",
                                            "Field",
                                            "Notation",
                                            "Direction",
                                            "Equation",
                                            "Plane",
                                            "Speed",
                                            "Slide",
                                            "Component",
                                            "Don",
                                            "Picture",
                                            "Vector",
                                            "Written",
                                            "Called",
                                            "Smaller",
                                            "Closer",
                                            "Talked",
                                            "System",
                                            "Determined",
                                            "Minus",
                                            "Agree",
                                            "Ve",
                                            "Computer",
                                            "Start",
                                            "Cosine",
                                            "Call",
                                            "Put",
                                            "Talk",
                                            "Ll",
                                            "Function",
                                            "Dy",
                                            "Click",
                                            "Point",
                                            "Length",
                                            "Capital",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In this module, we introduced vector notation for first order systems. And by using vectors, we'll obtain a better understanding of the geometry of their solutions. Let's begin with the example of a simple mass-spring system. So what we're going to do is we're going to consider a mass-spring system where the mass and the spring constant agree. And so we end up with the pair of equations dy, dt is equal to v and dv, dt is equal to minus y. What we're going to do is rewrite this system in vector notation. And I'm going to use column vectors. So if we were to have a solution, which would be a pair of functions-- little y of t and little v of t-- I'm going to combine them together into a vector. And I'm going to use a capital letter to represent our vector. So I'm going to say capital Y of t. And that's going to be a combination of a little y of t and a little v of t into a vector. You think about for each t having a point in a plane determined by little y of t and little v of t. So you might want to call that a position vector. Now given a capital Y of t, we have its derivative, d, capital Y, dt. And that is given to us by, in the first component, d, little y, dt, and then the second component, d, little v, dt. Now, I would like you to think about that derivative as corresponding to the left hand side of the system of differential equations. And corresponding to the right hand side of the differential equation is a function, a vector function, that we're going to call capital F of capital Y. And remembering, we're thinking about capital Y as a little y and a little v. Well, we're going to think about it as a function. So capital F of little y and little v. We're going to think about it, using the right hand side of the system. And that's going to be the function v and minus y for this example. Now what we'll do is we'll take our two functions that we've got here and our system of differential equations right here. And we'll see that we can write our system. So our derivative of capital Y is equal to the derivative of little y with respect to t and the derivative of v with respect to t. But our system of equations says that dy, dt is equal to v and dv, dt is equal to minus y. But that's exactly the same thing as our vector, capital F of y and v. And that's the same thing as capital F of capital Y. So notice that using this vector notation, we've taken our system, which has two scalar equations, and we've turned it into one vector equation. And that vector equation is d capital Y, dt is equal to capital F of capital Y. So this system can be written in vector form with that notation or in scalar form with that notation. So this takes a little getting used to. So let me consider a particular solution to this system that we've already discussed. And that solution is the pair of functions, y sub 3 of t, is equal to cosine of t, and v sub 3 of t is equal to minus sine t. And we discussed this pair of functions as a solution to this system in module 10. Now, let's write this in vector notation. So our capital Y sub 3 t is going to be equal to-- well, our little y sub 3 is going to be cosine of t. Our little v sub 3 of t is equal to minus sine of t. So that will be this pair of functions written as a column vector. And when we have this function, we know that its derivative as a vector, dy sub 3, dt is equal to-- the derivative of cosine is minus sine of t. And the derivative of minus sine is minus cosine. Now, let's take our function capital F of y that we wrote down in the previous slide. And remember, that was equal to v and minus y. So in this case, let's take capital F of the function, y3 of t. Well, we're going to get-- well, our v is minus sine of t. And our minus y is minus cosine of t. And notice that we have-- these two expressions agreeing. These two vector valued functions, really, they agree. And that's what it means to be a solution to this system of differential equations when you write it in vector notation. So what we've shown here is that the derivative of y3 with respect to t is equal to this capital F function evaluated at capital Y3 of t. Now, let's talk about the geometric significance of this capital F. So remember, our capital F of y and v is equal to v, comma, minus y. And we're thinking about this as a vector. And so we're going to do something that's very reminiscent of what we did with slope fields. What we're going to do is we're going to take this function and evaluate it at lots of points in the plane. In this case, we can evaluate this function at every point in the plane. So let's take capital F at some points, and I suppose we might as well start with 1, 0. Now, that means y is 1 and v is 0. So therefore, we get 0 minus 1. So let's suppose that point right there is 1, 0. Then what we're going to do is we're going to draw a vector that starts at that point and is given to us by 0 minus 1. We're going to draw this vector right here. OK, let's do a couple more. F of, say, 0, 1. Well, that means that y is 0 and v is 1. So we're going to end up with 1. And y is 0, so we're at 0. So that means that if we're at this point on the v axis, then we have the vector that's 1, 0, so it's going to go like that. And maybe one more. Let's do capital F at the point minus 1, minus 1. So that means little y is minus 1 and little v is minus 1. And so what we're going to get is minus 1, 1. We're at the point minus 1, minus 1, which is about there. And the vector is minus 1, 1. So we'll go minus 1 in the horizontal direction and one unit in the vertical direction. And we'll get that vector, that diagonal vector. Now, we can keep doing this, but I'd make a really messy picture. And so what I want to do is I want to turn to the computer, and I want to talk about this function, capital F of capital Y, which is called the vector field associated with the system. And then I'll talk about the geometric interpretation of our system as represented by the derivative of capital Y with respect to t is equal to capital F of capital Y. This is the software that we often use when we teach systems of differential equations. It's called HPGSystemSolver. Now, one thing that I need to point out is I've entered the simple mass-spring system, but the software has the dependent variables hardwired in as x and y. And so I want x here to be as y would be in the mass-spring system. And I'll have y be as v would be in the mass-spring system. So when I translate the mass-spring system into the x and y notation, I get dx, dt is equal to y, and dy, dt is equal to minus x. Here on the left hand side we have the phase plane. And on the right hand side we'll see graphs of component functions based on initial conditions. And what I want to do now is I want to illustrate the vector field that we saw in the previous slides. And I've got drawn vectors turned on. Now, notice as I move around in the phase plane, at the tip of the cursor I've always got a vector. Notice it gets smaller as I get closer to the origin and longer as I get further away. And what the software is doing, is it's computing the vector in the vector field as I move the cursor around. Now, to get the illustration that I did on the previous slide, notice what I'll do is I'll put the cursor as close as I can get-- oh, I got it exactly this time. So there we go, at 1, 0. Remember, we had the vector 0 minus 1. So I'll click there, and there's my vector 0 minus 1. We also did 0, 1. And let me do my best to get that one. Oh, two for two. And there we have our vector-- resulting vector would be 1, 0. And then we go to the diagonal minus 1, minus 1. And rather than waste too much time on this, I'll just click in one that's close. Oh, no. Oh, close. Anyway, those are the three vectors that we saw in the previous slide. But now that I have the computer doing this for me, I'll just do lots of vectors in the vector field very quickly. So one thing you should notice is that as I get closer to the origin, the vectors in the vector field get shorter. And that just comes from the formula for the vector field. They also look like they want us to spiral around the origin. And that's, in fact, the case. Now, when you start drawing in too many vectors, it gets confusing. So we have this button right here. And when I click on the button, I get a field that does not have the vectors overlapping. Now, this field we call the direction field because the directions are correct. But the lengths of the vectors don't mean anything at all. So they're just short enough so that they don't overlap. And for example, if we would superimpose a vector from the vector field on the direction field, we see this, that they don't agree it all. They agree in direction, but they don't agree in length necessarily. Now, I want to illustrate what it means to be a solution to the vector equation d capital Y, dt is equal to capital F of y. And so let me clear off that vector. And let me enter in an initial condition, the one that corresponded to the solution that we just discussed. That initial condition is 1, 0. So there I have the initial condition. And let me draw the solution that corresponds to this initial condition. And we can see that in the phase plane, we sweep out a circle. And you may have expected that if you're familiar with the parameterized curves that correspond to that solution that we talked about on the slide. And over here we have our graphs of our cosines and our sine functions that were part of the solution. To illustrate my point about the geometric content of the differential equation d, capital Y dt is equal to capital F of capital Y, what I'm going to do is I'm going to click at a lot of points along the curve. And what the software is doing is it's producing the vector in the vector field for me at each step. And you can see that the vectors in the vector field are always tangent to the solution curves. In some sense, you can think about the solution curve as being produced by moving through the vector field in such a way that the curve is always tangent to the vector field, and, in fact, at a speed that corresponds to the length of the vectors in the vector field. So, for example, if we were to get closer to the origin and produce a solution that corresponds to an initial condition closer to the origin. So we get another oscillating function, but with a smaller amplitude. And then we draw in the vectors from the vector field. We see that once again, we have the vectors in tangent to that circle, but the solution does not move as fast in the phase plane. Now, let me go back to one slide where I summarized the terms that were introduced in this little computer demonstration. This slide summarizes everything that I've said so far about the simple mass-spring system. On the left hand side, this picture illustrates the vector version of the differential equations in the system. So we've taken the system of equations, and we've used vector notation, and we've defined the vector field, F. And with the vector notation, the system becomes d, capital Y, dt is equal to capital F of y of t. And the vectors in the vector field here for the mass-spring system are illustrated as these vectors, these are a selected set of vectors. And the solution curves happen to be circles that are centered at the origin. And the solution traverses the solution curve at a speed that's determined by the length of the vector. So these are constant speed solutions, because notice that the vectors all have the same length on any particular solution curve. The middle picture is the picture of the vector field. And even though the vector field for the mass-spring system is relatively symmetric, once you start drawing in lots of vectors, the picture gets very difficult to figure out. And so usually what we do is we don't draw the vector field. We draw the direction field. So we've given up information when we draw the direction field because we've thrown away the length of the vectors, which plays an important role in the differential equation. But we're able to see some things about the direction for the field. And so the lengths in the direction field don't have any meaning at all, except notice here at the origin I put in the equilibrium solution. So I just put a point where there's an equilibrium solution. But the lengths of all the other vectors don't mean anything. They're just set up so the vectors don't overlap. Well, I've talked about this vector notation for enough now. I'd like you to do an exercise involving the mass-spring system where we do not assume that the spring constant and the mass are equal. And so you'll see that things change somewhat. End of transcript. Skip to the start. ",
                                        "unit_id":"36612d7cc11349c7acd7341a8061ac6f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5ed223eb3e734c3f9bd9081db87f9707",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Vector field",
                                            "Vector"
                                        ],
                                        "data":" Typo/misstatement in Video 2 During the 4:16-4:25 portion of Video 2, I mistakenly say and write that the vector at (0,1.5) in the vector field is F(01.5)=(&minus;1.5.45). However, it is F(01.5)=(&minus;1.5&minus;.45). Note that I draw the correct vector. ",
                                        "unit_id":"c975b8c6ab6749319d30067e26cfbd01",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"369dcbb7827644d2b4c7a3524d95c999",
                                "vertical_name":"Typo/misstatement in Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Vector valued function",
                                            "Left hand side",
                                            "Right hand side",
                                            "Phase plane",
                                            "Local maximum",
                                            "Local minimum",
                                            "Initial condition",
                                            "Dependent variables",
                                            "Phase portrait",
                                            "Left side",
                                            "Column vector",
                                            "Vector notation",
                                            "Vector field",
                                            "Direction field",
                                            "Horizontal axis",
                                            "Autonomous system",
                                            "Vector equation",
                                            "Vertical axis",
                                            "Function",
                                            "Ve",
                                            "Time",
                                            "Vector",
                                            "Draw",
                                            "Direction",
                                            "Equation",
                                            "Axis",
                                            "Negative",
                                            "Bit",
                                            "Vertical",
                                            "Give",
                                            "Roughly",
                                            "System",
                                            "Ll",
                                            "Decrease",
                                            "Line",
                                            "Notice",
                                            "Computer",
                                            "Put",
                                            "Cross",
                                            "Curve",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here's the vector notation for an autonomous system with two dependent variables. So let's consider the system dx/dt is equal to little f of x and y, and dy/dt is equal to little g of x and y. Well, we use the right-hand sides-- the little f of x and y and little g of x and y-- to form a vector field. We produce a column vector using little f and little g, And that gives us a vector field in the xy-plane. And if we have a solution to the system, that consists of a pair of functions, x of t and y of t. And we form a column vector from x of t and y of t, and that gives us a vector-valued function, which we denote with a Y. And if you have a vector-valued function, then the derivative of this vector-valued function consists of the derivative of x with respect to t and the derivative of y with respect to t. And that's exactly what we have on the left-hand side of our system of differential equations. So our left-hand side of a system of differential equations gives us the derivative of Y with respect to t, and our right-hand side gives us the vector field. So this system of equations becomes this single vector equation. Let's consider the system dx/dt is equal to minus y, and dy/dt is equal to x minus 0.3y. This system is similar in many ways to the mass spring system that we've already discussed, and we'll talk about that more in Math 226.2x. The vector field associated with this system is F of Y is equal to F of little x and little y. And we take the right-hand side of the differential equations and produce the vector. So the first component of the vector is minus y, and the second component is x minus 0.3y. So that's the vector field associated with this system. On the right here, I've drawn a picture of the direction field that's associated with this vector field. And we should have some practice understanding the difference between the direction field and the vector field. Now I'm going to use the initial condition here where x is equal to 1.9 and y is equal to 0 a lot. So let's compute the vector in the vector field at that point. So x is 1.9 and y is equal to 0, so we're going to get 0, 1.9. The vector in the vector field will be this vector roughly. Let's do one more point-- say, let's calculate the vector field at the point x equals 0 and y is equal to 1.5, so 0 and 1.5. And when we do that calculation, we end up with minus 1.5 and 0.45. So that'll give us a vector that points in this direction, roughly speaking. Now you look at this picture, and you'll notice that the vector field seems to imply that the solutions will spiral around the origin. And if you look more closely, you notice that they should get closer to the origin as time evolves. So now let's try to do a rough sketch of what the solution curve should look like if we start off at the point x equals 1.9 and y is equal to 0. So we're going to be heading in this direction like this. We'll come around like this, then around here, around there, around there like that. Now obviously, that's kind of a rough sketch, and this is why we use the computer. So let's take a look at what this solution curve looks like when we put this solution on the computer. And here's what we got over here on the left side. So you can see the spiraling and heading in towards the origin. Our picture that we drew by hand isn't so bad. Could be a little bit better down here, but not too bad. Now let's go to this picture. And one of the skills that we need to have is we need to be able to have some rough idea of what the graphs of x and y are going to look like if we know the solution curve looks like this. So let's consider that point again. So here's our initial condition, which is 1.9 and 0. And what we're going to do now is we're going to give a rough sketch of the graphs of x of t and y of t as time evolves. We'll begin by putting a scale on the vertical axis, the xy axis. So 2 will be roughly here, 1 roughly there, and minus 1 here and minus 2 there. And when I do this, I like to do the y of t graph first because the y-axis is vertical, like this axis is. And we're going to do the y graph in blue. And we start off with y equals 0. And then notice as time evolves, y will attain a local maximum, which is maybe about 1.7 or so. And so we'll be starting here, and then, say, going up to somewhere about there. And then y will decrease until it gets to 0 again, so maybe here. So we'll have something like this down here. And then y will decrease and attain a local minimum, which is just a little bit larger than minus 1. So let's put that, say, about there. And then y will increase and attain a local maximum, which will be about, I don't know, a half or so. So it'll be 0 and then about a half. So we'll have local minimum and local maximum, then we'll decrease, become 0, and become a little bit negative. Decrease, become 0, and become a little negative. So that's just a rough sketch of y of t. I'll just emphasize, y of t is in blue. Now we'll put in the graph of x of t, and we'll make the graph of x of t be red. So that's x of t. And whenever I do both graphs on the same axes, I like to put in the diagonal line in the phase plane, the line y equals x. And that's because when the solution curve crosses the line y equals x, then we know that the two graphs are going to intersect. So let's see what happens here. Now when you do the x's, you have to kind of turn your head sideways because x is varying along this horizontal axis. So x starts out at 2-- or actually, at 1.9, so we're going to start about there. Now the first thing that's going to happen is that these graphs are going to cross. Then you're going to get to the point where y attains its local maximum, and then you're going to get to the point where x is equal to 0. So x is going to be equal to 0 a little bit further along than where y had its local maximum. So we're going to start off and kind of go like this. And then what's going to happen is that the x's are going to decrease here until where y is equal to 0. And when y is equal to 0, you can see that the x's are like minus 1.2. So here they'll have a local minimum for the x's, so we'll go down. We'll have a local minimum right there. Then the graphs will cross before y will have its local minimum. And so the graphs will go like that. Then we'll have x equals 0 again over here somewhere. Then x will increase until it attains a local maximum, say, I don't know, maybe 0.7 or something like that. And that'll be the same place as y is equal to 0, so that'll be up here. So we're heading off. y equals 0 over there. So y equals 0. Then the graphs will cross, then y will have its local maximum. And then x will be equal to 0. So x will be equal to 0 about here. And then x will have its local minimum, and that local minimum will be maybe minus 0.4 or so. And then it'll just start to increase just a little bit like that. So that'll be our graph of x of t. Obviously, these are rough graphs, and so what we want to do is put this on the computer and see how these graphs correspond. Now there's one thing that I didn't mention, is notice that we didn't put any scale on the t axis. And there's something that you can't tell because I didn't tell you, but it turned out that this particular solution, what I did is I drew this solution for t's ranging from 0 to 10. So when I put this on the computer, I'm going to run t from 0 to 10, and t equals 10 was somewhere over here roughly. So let's turn to the computer and see how close we came with these graphs. I'm using the HPGSystemSolver that I like to use when I teach differential equations. But you can do this demonstration with PPlane or with any number of solvers that are available. I've entered in the system of equations, dx is equal to minus y, and dy/dt equal to x minus 0.3 times y. My x's range from minus 2 to 2. My y's range from minus 2 to 2. And my t's range from 0 to 10. I've entered the initial condition of x0 equals 1.9 and y0 equals 0, and that's for times 0. So let's see what solution the computer produces. Here we have the solution curve in the phase plane, and here we have the corresponding x of t and y of t graphs. x is in red and y is in blue. And this software has a nice little slider that helps us compare x values and y values. So we start at the initial condition, x is equal to 1.9 and y equals 0. So x is equal to 1.9 and y is equal to 0. We move along the solution curve. We cross the line y equals x, and so the graphs cross. Then y attains a local maximum, so that is here. Then x is equal to 0, so that happens here. Now at this point, both x's and y's are decreasing till we get to the x-axis. And x attains a local minimum while y is equal to 0. So that's right here. And the fact that y is equal to 0 is not a surprise because we have dx/dt is equal to minus y. So when you have local mins or local maxes for x, y is going to be equal to 0. Now we move along. Again, we cross the line y equals x, so we get that crossing. Then y attains a local minimum, and that happens right here. Then we have x equals 0 right here. It corresponds to that point. Then we have x attaining a local maximum. Again, that's where y will be equal to 0. Then the graphs will cross again. Then y will attain another local maximum. That's right there. And then again, we have x attaining a local minimum at the same place as y is equal to 0. And that happens right there. So those are the major points that you should be able to locate on these graphs based on this solution curve right there. Now there are two other things that I want to point out while I have this software available. And I'll do that by changing the range of the t values. Instead of 0 to 10, I'll make them 0 to 30. So let's draw the solution again. Just take a little bit longer. But what I want you to notice is that in the phase plane, the solution curve is spiraling in towards the origin. And in the x of t, y of t graphs, you see they continue to oscillate, although the amplitude of these oscillations becomes very small as t increases. I also want to illustrate using this Draw Vectors option, also want to illustrate the geometry of the vector field and the solution curve. So let me start off at the initial condition and draw in the vector. And I'm just going to go along the solution curve at various points, and what the computer is doing is it's calculating the vector in the vector field. In the background, you see the direction field. But when I click, I am drawing the vector that's in the vector field. And notice that the solution curve is always tangent to the vectors in the vector field. But as you get closer to the origin, the vectors in the vector field get smaller in length, and that corresponds to the fact that the solution curve is traveling a shorter distance over the same amount of time. The speed that the solution curve goes is determined by the length of the vector. And it's this picture on the left-hand side that corresponds to the vector equation when we say dY/dt is equal to F of Y of t. And it's this picture in the phase plane that corresponds to this equation. Now I would like you to do a geometric exercise that involves working with a phase portrait for a system. End of transcript. Skip to the start. ",
                                        "unit_id":"0a1838eb37044f549f882efe0eb1db77",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"98743d09c7dd4cce9aa3d9894ed8d950",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Predator prey equations",
                                            "Population model",
                                            "Vector notation",
                                            "Vector field",
                                            "Vector fields",
                                            "Equilibrium points",
                                            "Initial conditions",
                                            "Phase plane",
                                            "Phase portrait",
                                            "Carrying capacity",
                                            "Vertical axis",
                                            "Initial condition",
                                            "Equilibrium point",
                                            "Xy plane",
                                            "Linear system",
                                            "Competing species",
                                            "Autonomous system",
                                            "Geometric analysis",
                                            "Logistic",
                                            "Model",
                                            "Dt",
                                            "Equilibrium",
                                            "Point",
                                            "Xy",
                                            "Initial",
                                            "Idea",
                                            "Fundamental",
                                            "Term",
                                            "Competing",
                                            "Slow",
                                            "System",
                                            "Ll",
                                            "Increase",
                                            "Minus",
                                            "Represent",
                                            "Begin",
                                            "Situation",
                                            "Direction",
                                            "Analysis",
                                            "Part",
                                            "Equation",
                                            "Time",
                                            "Easier",
                                            "Brown",
                                            "Bit",
                                            "Y axis",
                                            "Start",
                                            "Enter",
                                            "Head",
                                            "Plot",
                                            "Left",
                                            "Put",
                                            "Interaction",
                                            "Computer",
                                            "Ve",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: As another example that involves phase portraits of x of t and y of t graphs, let's consider a population model for two competing species. So let's consider the system dx dt is equal to 2x times the quantity 1 minus x/2 minus xy, and dy dt is equal to 3 times y times the quantity 1 minus y/3 minus 2xy. And we should think about x and y as representing populations of two species that compete for the same resource. And since x and y represent populations, we are going to focus our attention on solutions whose initial conditions lie in the first quarter. And before I get involved with the analysis of the example, let's discuss why this model is written the way it is. And let's take a look at the equation for dx dt. And I'd like you to notice there are two terms. There's a term 2x times the quantity 1 minus x divided by 2. And that should remind you the logistic population model that we've already discussed. There's also a term, minus xy, and that term should remind you of the predator prey equations, where we used the product to represent the interaction between the two species. So the xy should remind you of interaction. And the minus indicates that the species are competing because interaction between of the species is going to be bad for x. And there's a similar situation with the equation for y. We have dy dt is equal to 3y times 1 minus y/3. That should remind you of a logistic. And we have an interaction term of minus 2xy, which again reminds you of the predator prey equations. Notice that in this case, the interaction between the two species is twice as bad for y, in some sense, as it is for x. Now that we understand the form of the equations, let's begin our geometric analysis. And we almost always begin by calculating the equilibrium points for the system. So let me write the system up here. dx dt is equal to 2x times the quantity 1 minus x divided by 2 minus x times y. And dy dt is equal to 3 times y times the quantity 1 minus y divided by 3 minus 2xy. Now before I calculate the equilibrium points, it's useful to do a little bit of algebra. So what I'm going to do is observe that in the equation for dx dt, notice there's an x in every term. And I'm going to factor that out. So I'm going to rewrite the equation as dx dt is equal to x. And then I'll have 2 minus x minus y. And in dy dt, notice there's a y in every term. So I'm going to factor out the y. And I'm going to get 3 minus y minus 2x. Now, the second form, at least for me, it's a little bit easier to use the second form to be systematic about solving for the equilibrium points. So that's what I'm going to do. We want both dx dt and dy dt to be equal to 0. So I'm going to start with this first equation. So dx dt is equal to 0 if and only if x is equal to 0 or 2 minus x minus y is equal to 0. And we'll begin with x is equal to 0. So x is equal to 0. And now we'll enter in the second equation. We want dy dt to be equal to 0. So that's going to imply that either y is equal to 0 or 3 minus y minus 2x is equal to 0. Now, if we have x is equal to 0 and y is equal to 0, then we have the equilibrium point 0, 0. If we have x is equal to 0, then this minus 2x is equal to 0. So then we have y is equal to 3. So we have the equilibrium point 0, 3. Now let's go to the second case, 2 minus x minus y is equal to 0. 2 minus x minus y is equal to 0. And dy dt is equal to 0. So again, we know one of the possibilities is y is equal to 0. And if y is equal to 0, then we would have the equation 2 minus x is equal to 0. So we would have x is equal to 2. So that gives us 2, 0. And then we have one more case. So we have 2 minus x minus y is equal to 0. And then the other possibility was this term, 3 minus y minus 2x is equal to 0. So 3 minus y minus 2x is equal to 0. And so we have now a system of equations. 2 minus x minus y is equal to 0. And 3 minus y minus 2x is equal to 0. So the linear system, two equations. Lots of ways to do this. I'm just going to move the y over to the other side. And I'm going to get y is equal to 2 minus x. And then I'll put that into the second equation. And I get 3 minus the quantity 2 minus x minus 2x is equal to 0. And so 3 minus 2, that's 1. I'll have plus x minus 2x and minus x, that equal to 0. And so that implies x is equal to 1. And if x is equal to 1, then I see from this equation that y is equal to 1 as well. And so I get a fourth equilibrium point, and that's equilibrium point 1, 1. Now, I should emphasize that three of these four equilibrium points basically come from the logistic population model. For example, if we look up here where we assume that x was equal to 0, then we're working on the y-axis, in this case the positive y-axis. And so we have the differential equation dy dt is equal to 3 times y times the quantity 1 minus y divided by 3. Forget about this minus 2xy term because x is equal to 0. Then we recall that we have two equilibrium points-- the origin and the carrying capacity. And in this case, the carrying capacity is 3. So this gives us the equilibrium point 0, 0 and 0, 3. And the same kind of logic also gives us an equilibrium point 2, 0. And it comes from looking at the logistic part of the equation for dx dt. But we did have one equilibrium point in the xy plane where neither x or y is 0. Now, let's turn to the computer and use it to sketch a phase portrait. I've entered the system into the HPGSystemSolver software. I've got dx dt is equal to 2 times x times the quantity 1 minus x divided by 2 minus the product x times y. And dy dt is equal to 3 times y times the quantity 1 minus y divided by 3 minus 2 times x times y. I'm focusing on the first quadrant. So I have my x's go from 0 to 3.2 and my y's go from 0 to 3.2. And notice I'm going to let the range of Ts go from minus 15 to plus 15. I'm always going to have my initial t value be 0. But I'm going to plot the solution curves both in positive time and in negative time. And you'll see why I do that in just a second. The first thing you should always do when you're plotting a phase portrait is you should locate the equilibrium points. And so let me do that. I'm going to put in the equilibrium point x equals 2 and y equals 0 on the x-axis. So let me plot the corresponding solution. And we notice that our x values were constantly 2 and our y values were constantly 0. And if we look very carefully over here, you can see that equilibrium point on the x-axis. Now, there's another equilibrium point on the y-axis at y equals 3, that plays a similar role in this phase portrait, as we'll see in a minute. There's an equilibrium point at 0, 0 that's not very interesting. But remember, there was one equilibrium point that was in the first quadrant with both coordinates not 0. So let me enter that. Remember that was 1, 1. So we enter that. And let me clear off the graphs that I have. And now let me solve, and I get the equilibrium solution where both x of t and y of t are constantly 1. And that's located right there in the phase plane, the xy plane. 1, 1 is where that equilibrium point is. Now, the rest of the solution curves that I'm going to put in the picture are going to be determined by my clicking my initial condition in the phase plane. So I'm just going to move off of 1, 1 just a little bit, and I'm going to click and get a solution curve. Actually I'm going to get one solution curve. And I'm going to move just a little bit in the other direction and click and get another solution curve. And it turns out that this collection of curves-- actually, there are four solution curves that are very special in this phase portrait. I don't have them exactly here but picture is close enough. And these four solution curves distinguish and separate the initial conditions that head towards this equilibrium point where x is extinct and y is in equilibrium versus these initial conditions that head towards this equilibrium point where x is in equilibrium and y is extinct. So let's look at some of the other solution curves that I can make with this example. Here's an initial condition, going forward time. See, it goes up to y equals 3. Likewise, right there. We do the same thing down here. All of these initial conditions that I'm clicking on eventually head towards x equals 0 and y equals 3. On the other hand, if I move over in this region right here, I'm going to get initial conditions where my solutions head towards x equals 2 and y equals 0. And one thing that I forgot to point out is that notice the color is changing. There's a green and a brown. And the green is what's drawn first. And the idea is that that transition from green to brown corresponds to t equals 0. And the green is positive time and the brown is negative time. We are going to be able to be more rigorous mathematically when we study the topic of nullclines in Math 226.3. But for now, what we're going to do is we're going to trust the computer. In this case, the computer is telling us the truth. Now let me go back to the slides. Let's use this competing species example to give us more practice sketching x of t and y of t graphs. And what I've done is over here on the left, I've used the computer to sketch two solution curves, solution curves for two initial conditions that are close to one another. The initial condition on the left is approximately x is equal to 0.3 and y is equal to 0.2. And the one on the right is approximately 0.5 and 0.2. So they're not very far apart, but as you can see, the one on the right in the long term heads to the equilibrium point that corresponds to y being extinct. And the one on the left heads to the equilibrium point where the x's are extinct. Let's plot the graphs for the initial condition, x is equal to 0.5 and y is equal to 0.2 first. And we'll plot them down here. The initial condition is approximately 0.5 and 0.2. And as we can see from the solution curve, we have x is increasing towards 2. And y's initially increase and then decrease to 0. And all the while because we remain below the line y equals x, we're always going to have y less than x. So for our scale on the vertical axis, let's go from 0 to 2. So there will be 1. There will be 2. And as we've said before, it's always easier to do the y graph in this case first. So we'll start off here. We'll start off with y is equal to 0.2, somewhere around there. And at first, the y values will increase. Then you'll attain a maximum value, say roughly around 1/2 somewhere. And then they would decrease off to 0. So they'll do something like this. So that'll be our y of t. Our x's will always be increasing. And they'll be asymptotic to 2. So let's put in an asymptote. And our x's are starting at 0.5. So about there somewhere. And they'll increase and become asymptotic to x equals 2. So those will be our x of t graphs. Now let's go to the other initial condition. So that one is x is equal to approximately 0.3 and y is equal to 0.2. And we can see in this case, even though these two initial conditions are close to one another, they have different long term behaviors. This one heads towards the situation where we have the equilibrium point at 0 comma 3. So we'll have a different scale on the vertical axis because we can have wide ranging up till 3. So let's go 1, 2, 3. And we'll begin with our y's because it's always easier to do the y's. And we can see that the y's are increasing for all time and asymptotic to y equals 3. So let's put that asymptote in. Now there's something that you can't see unless you watch this on the computer. Remember there's an equilibrium point at 1, 1, which is very close to right there. And what happens to these solution curves is that they slow down when they get close to equilibrium points. So we're going to start off with y is equal to 0.2. So that's right there. And what's going to happen is we'd come up. And we're going to get close to that equilibrium point, which is just a little bit bigger than 1 here in this part of the curve. And we'll slow down for a while, and then it'll speed up. And then it'll slow down again. So we'll increase, kind of level off for awhile, and head on up like that. Now, let's go to the x's. And now our x's are starting at 0.3. So let's go right there. And remember they're going to be increasing for awhile and then decrease. And you're going to have the two graphs cross one another because you're going to intersect the line y equals x. And that will be just below the location of the equilibrium point that I mentioned. And so what'll happen is these graphs will come like this, still increase a little bit more, and then the x will decrease and head to 0. So something like this. So this would be our graph of x of t. And this will be our graph on y of t. And remember, this top graph is for the initial condition where x was approximately 0.3 and y is approximately 0.2. Now let's see what the computer draws when we try to draw the x of t and y of t graphs with a computer. So here's what we get. Notice this one on the left, this corresponds to the initial condition, which is approximately 0.3 for x and 0.2 for y. The one on the right is the initial condition, which is approximately x is 0.5 and y is 0.2. And we can see we get the graphs crossing. There's some-- they kind of level out for a little while. And so this is our x of t graph that's asymptotic to 0 for this initial condition. And our y of t graph which is asymptotic to y equals 3. We have our x of t graph, which is asymptotic to x equals 2 up above here on the right. And our y of t graph is asymptotic to 0 on the right. So let's compare. This is what we get with the computer. And this is what we did by hand. Now, we're not write by hand. But we have the basic qualitative information. And that's what you're expected to obtain in this case. So you can see that we missed some fine details. But overall, we have a pretty good idea from doing a sketch the way we did up here. In this module, we studied the fundamental mathematical concepts of vector fields and direction fields. And we've seen how an autonomous system of first order differential equations can be written as the single vector equation d capital Y dt is equal to capital F of capital Y, where capital F is the vector field for the system. We've also seen how the mass spring system can be expressed in vector notation. And we spent some time relating solution curves to their corresponding x of t and y of t graphs. These geometric notions will be fundamental to much of what we cover in math 226. You will be well served if you study this material in detail. End of transcript. Skip to the start. ",
                                        "unit_id":"01b5a4ea26e34b49a09a278cb66770f9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c1d3b904b8ba44fa9bfc2af69cbcc2b2",
                                "vertical_name":"Video 3"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"005a801da9cd4f8ba1307ecc21c24ef0",
                "chapter_name":"Module 12: The Damped Harmonic Oscillator",
                "sequentials":[
                    {
                        "sequential_id":"91fdaabcdac84b1d8ada1eb120df2589",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Damped harmonic oscillator",
                                            "Oscillator",
                                            "Technique"
                                        ],
                                        "data":" Introduction to Module 12: The Damped Harmonic Oscillator We add a term that models damping to the simple mass-spring system, and we obtain one of the most important models in this course. In addition to mass-spring systems, it is used to model a range of phenomena including RLC circuits in electric circuit theory and the blood glucose regulatory system in humans. We also introduce a guessing technique that yields important solutions to the oscillator. This technique will play an important role in MATH226.2. ",
                                        "unit_id":"28a86e599d6a4ee389779e00ce0a274b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bbc7dd55b2d84a5bbb6bc98d91a5d629",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9ecbad62027c495bb3da4d28823fdaaf",
                        "sequential_name":"The Damped Harmonic Oscillator",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Damped harmonic oscillator",
                                            "Shock absorber",
                                            "Rlc circuit",
                                            "Qualitative analysis",
                                            "Initial condition",
                                            "Mathematical analysis",
                                            "Restoring force",
                                            "Phase plane",
                                            "Independent variable",
                                            "Dependent variable",
                                            "Damping coefficient",
                                            "Minus sign",
                                            "Mass",
                                            "Spring",
                                            "System",
                                            "Automobile",
                                            "Equation",
                                            "Force",
                                            "Damping",
                                            "Coefficient",
                                            "Call",
                                            "Plane",
                                            "Suspension",
                                            "Oil",
                                            "Important",
                                            "Variable",
                                            "Oscillates",
                                            "Ll",
                                            "Ve",
                                            "Velocity",
                                            "Back",
                                            "Basically",
                                            "Model",
                                            "Road",
                                            "Law",
                                            "Minus",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: In this module, we describe an analytic technique that applies to one of the most important models in this course-- the damped harmonic oscillator. This second order differential equation is used to model phenomena as varied as mass spring systems, RLC circuits and electric circuit theory, and the blood glucose regulatory system in humans. For example, consider the suspension in an automobile. It smooths out the ride on a bumpy road and helps keep the tires in contact with the surface of the road. We are mainly concerned with the spring and shock absorber in the suspension. The springs absorb the forces caused by bumps in the road and keep the tires in contact with the road. The shock absorber consists of a piston that moves through a reservoir of oil. The oil slows the movement of the piston and the spring. Consequently, it absorbs the force caused by the bump. To derive the damped harmonic oscillator, we start with a mass spring system and add a term that models damping. And we're going to assume that the damping force is proportional to the speed of the mass, and that acts as a restoring force. So our variables are going to be t for time as our independent variable, and y for position is going to be our dependent variable. And we're going to use Newton's second law, F equals ma. And there are going to be two forces. There's going to be the standard mass spring force by Hooke's law, so we'll call that F sub s. And that's equal to minus k times y, and that's Hooke's law that we've already discussed. The second force is going to be the damping force. We're going to call that F sub d, and that's going to be minus b times the derivative of y with respect to t. The b is called the \"damping coefficient.\" And because we're talking about a restoring force, we have a minus sign. And the assumption is that the damping coefficient is positive. So damping coefficient is a constant. So we have these two forces, F sub s plus F sub d. And that's going to be our force, which is equal to mass times acceleration. And in this case, that's mass times the second derivative of y with respect to t. So we use our formulas. Hooke's law minus k times y. And our model for damping. So that's minus b times dy/dt, and that's going to be equal to m times our second derivative of y with respect to t. And this is a second order differential equation. We typically write it where we move the terms on the left over to the other side. So we typically write it as m times the second derivative of y with respect to t plus b times dy/dt plus k times y is equal to 0. So this is our second order differential equation that models the damped mass spring system, and you can think about that as a damped harmonic oscillator. Now, this is equivalent to a first order system. So to reduce it to a first order system, what we do is we introduce velocity as a new variable as usual. So we'll let the derivative of y with respect to t-- we'll call that v. And so what happens is that we have-- the first equation is dy/dt is equal to v. And then the second equation is dv/dt. Well, dv/dt is the second derivative of y with respect to t, and so what we'll do is we'll divide through by m. And so we'll get minus k over m times y minus b over m times v. And so this first order system with two equations in it is the first order system that's equivalent to the second order equation. So depending upon the situation, you might want to use the first order system or the second order equation. Now, these equations are so important I've summarized them on a slide all by themselves. So here we have both the second order equation for the damped mass spring system, m times the second derivative of y with respect to t plus b times the derivative of y with respect to t plus k times y is equal to 0. And it's equivalent first order system, dy/dt is v, and dv/dt is equal to minus k divided by m times y minus b divided by m times v. Now, when you see these coefficients represented as m and b and k, you should think about a damped mass spring system. But there are other applications for the damped harmonic oscillator, and you'll see different letters for the coefficients. So for example, if you're modeling an RLC circuit, you'll see different letters, but the equations have basically the same structure. And so the mathematical analysis will be exactly the same. What I'd like to do now is turn to the computer and show you a little virtual demonstration of the mass spring system and damped mass spring system. Here's the virtual mass spring demonstration that we saw before. But this time, we've added some damping to the system. Notice that we've set the coefficient b to be equal to the 0.1. Now, this change is something that I'd like to show you. So let me set it back to 0 for a second, and notice that what's happened is that we just have the spring and the mass. Nothing else in this column here. Now, let's turn on the damping coefficient. And so we'll go back to 0.1. And notice what's happened is that there is-- what's called-- a \"dashpot\" here, and the dashpot should remind you of the shock absorber that we mentioned for the automobile suspension system. Now, let's take a look at some solutions. So let me start off with a solution where I have an initial condition that's on the v axis. So my value of y is basically 0, and we'll see what happens. So we get a solution that oscillates back and forth, but it's dying out as t increases. And over here, in the phase plane, what happens is that the solution curve spirals around the origin, but spirals in toward the origin as well. Now, we could visualize this as a system. So let me turn on velocity and clear off and basically enter the same initial condition, and we'll see that we get a pair of graphs for our y of t and v of t. And these graphs oscillate and die out in the same manner. Now, there's something else I'd like to show you. And to do that, I think it's best if I turn off the velocity. And I'm going to put in that same solution that we've been talking about. So here, we have our oscillating solution, and here we go. Now, that solution corresponded to having y equal to 0 with some velocity. That was our initial condition. On the other hand, let's go over here to the y-axis so that we have the velocity equal to 0, but we have-- our spring is compressed. And so we'll plot the solution that corresponds to that initial condition. And notice, once again, we have a graph that oscillates and is dying out. And if you look at these graphs over here or if you look at them in the phase plane, then what you see is these two solutions have a lot in common. And we're going to study this example in great detail, and the great thing about this is that we're going to be able to say everything that we want. We can do a qualitative analysis. We can do formulas for solutions, and we'll learn that we can compute lots of things about-- and that all the solutions have lots in common. And we'll discuss the damped mass spring system, the damped harmonic oscillator in great detail in Math 226.2. Now, at this point, I would like you to use a solver, such as p plane or whatever you'd like, and make some graphs that are similar to these. End of transcript. Skip to the start. ",
                                        "unit_id":"9b0a7370b3cb4ef3b48d14f929e9393e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3c2e4d72b84b4fcabd142136df8f7356",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Damped harmonic oscillator",
                                            "Harmonic oscillator",
                                            "Initial condition",
                                            "Characteristic polynomial",
                                            "Initial conditions",
                                            "Quadratic polynomial",
                                            "Left hand side",
                                            "Right hand side",
                                            "Phase plane",
                                            "Complex numbers",
                                            "Characteristic equation",
                                            "Differential equation",
                                            "Straight line",
                                            "Exponential functions",
                                            "Quadratic formula",
                                            "Position function",
                                            "Initial",
                                            "Equation",
                                            "Velocity",
                                            "Ve",
                                            "Position",
                                            "Exponential",
                                            "Lambda",
                                            "Technique",
                                            "Curve",
                                            "Minus",
                                            "Point",
                                            "Formula",
                                            "Interesting",
                                            "Constant",
                                            "Factor",
                                            "Special",
                                            "Thing",
                                            "Function",
                                            "Line",
                                            "Put",
                                            "Term",
                                            "System",
                                            "Graph",
                                            "Time",
                                            "Equal",
                                            "Derivative"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: There is a guessing technique for the damped harmonic oscillator. And in some ways, it should remind you of the guessing technique that we've already studied. In this case, we're looking for a function such that m times its second derivative plus b times its first derivative plus k times itself is equal to 0. And I'd like to emphasize that this 0 here is the zero function, the function that's constantly 0. Now let's think about-- we want a function. So constant times second derivative plus constant times first derivative plus another constant times the function is equal to 0. Then it's natural to think about making a guess of the form y of t is equal to e to some exponent. And we're going to write the exponent as lambda times t where lambda is going to be a constant to be determined. So it's going to be a constant to be determined by the algorithm. So what we're going to do is now, with this guess, we're going to calculate its derivatives and then see what happens when we plug the guess into the differential equation. So we calculate the derivative of y with respect to t, which is lambda e to the lambda t. We calculate the second derivative of y with respect to t. So that's lambda squared e to the lambda t. And now we'll put those derivatives in the left-hand side of the differential equation. So we get m times lambda squared e to the lambda t plus b times lambda e to the lambda t plus k times e to the lambda t. And we would like that to be the zero function. And notice each term has an e to the lambda t, so we'll factor that out. I'm going to put this e to the lambda t factor on the right-hand side. And so what we have is we have m times lambda squared from the first term, we have b times lambda from the second term, and we have k from the third term, all times e to the lambda t. And we want that to be equal to the zero function. And what you see is that you have here a quadratic polynomial in lambda. And this is called the characteristic polynomial. And if lambda were a root to the characteristic polynomial-- in other words, a value of lambda such that m times lambda squared plus b times lambda plus k were equal to 0-- then the left-hand side here would be equal to 0. And e to that value of lambda times t would be a solution to the differential equation. And since we're interested in the roots of the characteristic polynomial, there's another name. It's called the characteristic equation. And that equation is m times lambda squared plus b times lambda plus k is equal to 0. So we set the characteristic polynomial equal to 0, and that's called the characteristic equation. And we're interested in the values of lambda that satisfy the characteristic equation because they correspond to solutions to this differential equation when you make a function of the form e to the lambda t. Let's do an example. And in this example, let's consider the harmonic oscillator second derivative of y plus 3 times the derivative of y plus 2 times y is equal to 0. There's nothing special about these coefficients other than I just picked them so the algebra would work out well. So first thing we want to do is we want to write down the characteristic polynomial. And rather than to go through the computation each time, this characteristic polynomial is going to come up so often you should just be able to write down the quadratic polynomial right from the differential equation. So the coefficient to the second derivative term is one, so just write down lambda squared. Coefficient to dy/dt is 3, so plus 3 times lambda. Coefficient to the function y, that's 2, so you'd just have a constant plus 2. So that would be the characteristic polynomial. Of course, we're interested in the roots of the characteristic polynomial, so we're going to have solutions numbered lambda such that lambda squared plus 3 lambda plus 2 is equal to 0. I don't know how important it is, but there are actually two different 0's floating around. Remember, this is the zero function and this is the number that's 0. Now in this case, I can just factor. So I'll factor this into lambda plus 2 times lambda plus 1 is equal to 0. And so therefore, I get that the roots are lambda is equal to minus 2 or minus 1. In general, you could use the quadratic formula. Sometimes that's the best way to go. In this case, it was so easy to factor I just went ahead and factored it. Now each of these values of lambda are going to give me a solution to the differential equation. So I have two solutions. The first one corresponds to lambda equals minus 2, so I'll call that one y sub 1. So that would be e to the minus 2t. And the second solution-- so y sub 2 of t-- that's equal to e to the minus t. And if we're thinking about the system that's associated with a harmonic oscillator, then the other function involved is going to be the derivative. So over here, v1 of t would be equal to minus 2 e to the minus 2t, and v2 of t is going to be equal to minus e to the minus t. So we could either work just with the position functions or we could work with the system that involves the position and velocity. We could also write them in a vector-value formulation, so we could use the Y notation. So Y1 of t would be equal to-- first component would be e to the minus 2t, second component would be minus 2e to the minus 2t. So that's how we write that one. And Y sub 2 of t, that would be equal to e to the minus t and minus e to the minus t. Associated with these two functions are their initial conditions. So Y1 of 0 would be equal to 1 and minus 2. And Y2 of 0 would be equal to 1 and minus 1. Now at this point, what I'd like to do is I'd like to turn to the computer and illustrate these solutions both in the phase plane and the corresponding y of t and v of t graphs. I've entered this damped harmonic oscillator into the HPGSystemSolver. And because I have to use the x and the y notation, I've decided to have x represent position and y represent velocity. So my system becomes dx/dt is equal to y, and dy/dt is equal to minus 2 times x minus 3 times y. Now remember, the first function that we obtained with the guessing technique was y1 of t was equal to e to the minus 2t. And that had as its initial condition 1 minus 2. So I've entered that initial condition here. Now let's see what the solution is. So notice something interesting happens here in the phase plane. Our initial condition is 1 minus 2. And notice that the solution curve heads straight in towards the origin in positive time. Our corresponding x of t and y of t graphs-- well, our x of t graph is e to the minus 2t and our y of t graph is minus 2 e to the minus 2t. So we have our exponential functions here. But the interesting thing is that they sweep out a line in the phase plane. Now remember, the other solution that we got from the guessing technique was e to the minus t, and that had initial condition 1 minus 1. So let me change it to minus 1, and let me clear off the corresponding x of t and y of t graphs. And let's take a look at that solution. So here's our initial condition of 1 minus 1. And again, the solution curve heads in towards the origin as time goes forward. And we have our exponential functions here. This is our e to the minus t with our position function, and this is our minus e to the minus t, which is our velocity function. Now one thing that I want to point out is that not every solution curve for this system consists of a line. For example, let me just click here. Notice it goes into towards the origin, but kind of turns around and definitely has a graph that doesn't consist of just an exponential. And we will see in Math 226.2 that these two solutions are particularly special, but also kind of fundamental to the technique that we're going to use to calculate the general solution to the system. These two solutions are so important that I want to summarize what I showed you with the graphs on a slide, so let me go back to the slides now. Here's this slide that corresponds to the solution y1 of t equals e to the minus 2t. And here we have its graph y1 of t is equal to e to the minus 2t. And here we have the graph of its velocity function, v1 of t, which is minus 2 e to the minus 2t. And on the computer, we saw that the initial condition in the phase plane is the point 1 minus 2. And we saw that its solution curve heads in towards the origin along a straight line. So we'd put an arrow going in that direction. We put an open circle here because it actually never reaches the origin. And the fact that the solution curve sweeps out part of a line makes a lot of sense if you think about the formulas for y1 and v1. Note that you have v1 is equal to minus 2 times y1. And so therefore, the solution curve has to lie on the line v is equal to minus 2y, which of course is a line of slope minus 2 going through the origin. Here's this slide for the second solution. And remember that that is y2 of t, which is equal to e to the minus t. And so its velocity function is v2 of t, which is minus e to the minus t. And since we have v2 of t is equal to minus y2 of t, we see that the solution curve in this case would head in along the line v is equal to minus y. And our initial condition is the point 1 minus 1, so our solution curve is this ray that heads towards the origin along the negative diagonal. So those are the pictures that correspond to these two special solutions that we got from this guessing technique. Now you may have some good questions about this technique. For example, what initial value problems can we solve for it? And what happens if the roots to the characteristic equation are complex numbers? In Math 226.2, we will study linear systems, including the damped harmonic oscillator, in great detail. And we will generalize this technique and answer these questions. End of transcript. Skip to the start. ",
                                        "unit_id":"b21e98d0ecb14b0c85ab91cdcf6a34b5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3bd06f985de14928910b6572f4090141",
                                "vertical_name":"Video 2"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"8fbf97f81227424dab9349c59f96e894",
                "chapter_name":"Module 13: Analytic Methods for Special Systems",
                "sequentials":[
                    {
                        "sequential_id":"b59abe844903459fb0f3bcec5f57e0c6",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lucky guess",
                                            "Equation",
                                            "Formula"
                                        ],
                                        "data":" Introduction to Module 13: Analytic Methods for Special Systems This module illustrates two points: The \"no wrong answers\" principle applies to first-order systems as well as to first-order equations. We can sometimes bootstrap our way to a general solution if the system is partially decoupled. For example, if the first equation in the system is dx/dt=f(x), then we might be able to find a formula for x(t) by separating variables, using the method of the lucky guess, or a magic function. Then we can use the resulting formula for x(t) in the differential equation dy/dt=g(x,y), and we end up with another first-order equation. This approach just might work on a good day. ",
                                        "unit_id":"b743a3a461244c1da313c446b514563e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1ef8b13e736f4992bd46a79dbdd1eedc",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"428e6dc41ed240f08eac902338dcff7f",
                        "sequential_name":"Analytic Methods for Special Systems",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial condition"
                                        ],
                                        "data":" Slight misstatement in Video 1 At the 0:52-minute mark of Video 1, I mistakenly call the system dxdt=2y&minus;xdydt=y along with the initial condition (x0,y0)=(2,1) an \"initial condition.\" To be precise, it's an initial-value problem. I get it right a couple of seconds later. ",
                                        "unit_id":"16b4f8d884834c33b5b4981f267548e0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"793b6fbc356d45fd839ecc6c2bfc4a36",
                                "vertical_name":"Slight misstatement in Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Vector field",
                                            "Column vector",
                                            "Differential equations",
                                            "Differential equation",
                                            "Right hand side",
                                            "Phase plane",
                                            "Vector notation",
                                            "Linear systems",
                                            "Initial condition",
                                            "Exponential function",
                                            "Form",
                                            "Vector",
                                            "Ll",
                                            "Function",
                                            "Ve",
                                            "Notation",
                                            "Apply",
                                            "Linear",
                                            "Initial",
                                            "Capital",
                                            "System",
                                            "Written",
                                            "Exponential",
                                            "Minus"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: The systems of differential equations to which we can apply analytic techniques to find explicit solutions are rare. We'll study the most important class of such systems, the linear systems, at length in Math 226.2. In this module we'll discuss analytic techniques that apply to very special classes of systems. Some are linear, others are not. However, before we do that, let's remember the No Wrong Answers Principle. And I want to illustrate this by considering the example of the initial-condition, dx/dt is 2y minus x and dy/dt is y with an initial condition of 2, 1. And we can write this initial value problem using vector notation where we let capital Y of t represent the column vector with little x of t and little y of t in it. And we can take the right-hand side of the system of differential equations and use that to define the vector field that's associated with this system. So the vector field associated with this system would be this vector, which we've been using capital F to represent that vector field. So capital F of y, which is the same thing as capital F of the vector, little x little y is the vector 2 little y minus little x and little y. And this system is now written in this form over here, which is an example of our notation, our general notation, d capital Y dt is equal to the vector field capital F evaluated at capital Y, and our initial condition of x0, y0 being equal to 2, 1 is now written in a vector form capital Y0 is 2, 1. Before I magically produce a solution to this initial value problem and verify that it is indeed a solution, let's look at its solution curve and its x of t and y of t graphs on the computer. Here's the initial value problem within the HPG System Solver software that I like to use. And I've entered the system dx/dt is equal to 2y minus x, and dy/dt is equal to y. And by trial and error, I've decided that I want to show you what happens in the square in the phase plane where x's and y's go from 0 to 10. And also by trial and error, I've decided that I want to show you what happens when the t's go from minus 3 to 3. And I've entered in the initial condition, which is x is equal to 2, and y is equal to 1. So let's see what happens with the solution. Over in the phase plane, we have an initial condition here at 2, 1. Now I like to call this curve the nose, because it looks like the outline of a nose. And we can see that when we start at the initial condition and go in forward time, it looks like the nose is asymptotic to the line y equals x. And as we head in negative time, it looks like the curve is asymptotic to the x-axis. If we go over here and we look at the x of t and y of t graphs, we see that the x of t graph looks perhaps parabolic, and the y of t graph looks like an exponential function. Now, let's go back to the slides. And what we'll see is the y of t function is indeed an exponential, but x of t is actually the sum of two exponentials rather than a quadratic. I claim that the function capital Y of t, which is equal to, in the first component, e to the t plus e to the minus t, and then the second component e to the t, I claim that this function solves the initial value problem. And to justify this claim, I'm going to apply the No Wrong Answers Principle. And first I'm going to calculate the derivative of capital Y, and the derivative of capital Y is the derivative of the components term-by-term. So the derivative of the first component, that's e to the t plus e to the minus t times minus 1, and the derivative of the second component is just e to the t. And so I have e to the t minus e to the minus t as the first component of the derivative. And e to the t as the second component. On the right-hand side of the differential equation, I have the vector field. I want to calculate the vector field at capital Y of t. And if you remember the formula for the vector field, then the first component is going to be 2 times little y of t minus little x of t. And the second component is going to be little y of t. And so that means that I need to take my formulas for little x and little y, and so I have 2 times little y. So that's 2 times e to the t minus x, so that's minus e to the t plus e to the minus t. And my little y is just going to be e to the t, so that'll be my second component. I'll do a little bit of algebra. So I have a 2e to the t minus an e to the t, so I'm left with an e to the t. I have a minus e to the minus t, so that's minus e to the minus t. And then my second component is e to the t. And notice I have the derivative of capital Y with respect to t is the same thing as the vector field evaluated at capital Y of t. So these agree, and therefore I have a solution to this initial value problem. I should also check that it has the correct initial value, so let me evaluate capital Y at 0. And notice I'm going to get 1 plus 1. So I get 2. And the second component is going to be 1. So I need to do that also to verify that I've got a solution to this particular initial value problem. And we've written an exercise to give you some practice with using the No Wrong Answers Principle for systems, and I'd like you to do that exercise now. End of transcript. Skip to the start. ",
                                        "unit_id":"5e0ea4ec3cd44922a19018ed71600b87",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e4ce0f3b5c6c4d048a11848b31714046",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial condition",
                                            "Differential equations",
                                            "Differential equation",
                                            "Dependent variables",
                                            "Homogeneous equation",
                                            "Lucky guess",
                                            "Equation",
                                            "Constant",
                                            "Technique",
                                            "System",
                                            "Form",
                                            "Minus",
                                            "Principle",
                                            "Add",
                                            "Guess",
                                            "Function",
                                            "Ll",
                                            "Alpha",
                                            "Xp",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: One of the things that make systems of differential equations so difficult, as well as interesting, is that the rate of change of each of the dependent variables often depends on the values of the other dependent variables. However, sometimes there is little inter-dependence among the variables, and in that case, we can often derive the general solution using techniques that we have already learned. And I'm going to illustrate this principle by considering the example that we discussed in the previous video. And remember that's the system dx/dt is equal to 2y minus x, and dy/dt is equal to y. And I'm going to use the fact that the second equation does not involve x to produce the general solution for this system. And as a result, I'll also end up producing the particular solution that I used in the previous video when we discussed the no-wrong-answers principle. So let's get going. I'm going to take this second equation, dy/dt is equal to y. And by now we should know that we'll have a solution y of t is equal to some constant times e to the t. Well that constant, in this case I'm going to write as y sub 0. Because I want to express the initial condition as x0y0. So now I have little y, and what I'm going to do is I'm going to take that formula for little y, put that back into the differential equation for x-- so let's see what we get. Dx/dt is equal to 2. And the formula for y is y0 e to the t. And then we're going to have minus x. And then we look at this differential equation. And what we see is that we have a nonhomogeneous linear differential equation. So we have at least two ways of solving this equation. We could use the method of the lucky guess, or we could use the magic function. What I'm going to do is I'm going to use the guessing technique. And so when we use the guessing technique, remember there were two steps. The first step was the general solution of the associated homogeneous equation. And the associated homogeneous equation is dx/dt is equal to minus x. So we know that the general solution is a constant k times e to the minus t. And the other step is we need a particular solution to the non homogeneous equation. And I'm going to call that particular solution xp. And remember we typically rewrite the differential equation dxp plus xp, move the x over to the other side, and we want that to be equal to 2y0 e to the t. And in this case, we need to have the right form of the guess, and so what we're going to do is we're going to guess xp is equal to some constant alpha times e to the t. We'll substitute this guess into the differential equation. And the derivative of xp is just alpha e to the t. So we'll have alpha e to the t plus xp, which is also alpha e to the t. So we'll add those together, we'll get 2 alpha e to the t. And we would like that to be equal to 2y0 e to the t. So we can see therefore that alpha has to be equal to y0 and therefore our particular solution xp is going to be equal to y0 e to the t. And therefore our general solution for x is going to be this particular solution that we calculated y0 e to the t plus the general solution of the associated homogeneous equation, and that's k times e to the minus t. And it would be good to express the k in terms of our x0. So we'll evaluate this equation at 0. So x0 is equal to x of 0. And at 0 we'll get y0 plus k. And so that tells us that k would be equal to x0 minus y0. Now let's put this all together on another page. We have the general solution. Little x of t is equal to y0 e to the t plus x0 minus y0 times e to the minus t. And we have little y of t is equal to y0 e to the t. And we can write this in vector form, with capital Y of t notation. And our first component, that would be y0 e to the t plus x0 minus y0 e to the minus t. And our second component is going to be y0 e to the t. That would be our vector form. And notice that if we were to add the initial condition y0 equals 2 and 1 then we would obtain the function y of t which is equal to-- the first component would be e to the t, and this would be a 2 minus 1, so that we would be 1, plus e to the minus t. And our second component, y0, is 1, so we just get e to the t. And notice this is the solution that we used when we were illustrating the no-wrong-answers principle. We've written an exercise in which we've asked you to use this procedure to produce a general solution of a similar system, and I'd like you to do that now. End of transcript. Skip to the start. ",
                                        "unit_id":"a20c8e75a6384c4db194628f8db2bb64",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"30956f8ea60f490580d6039ab459e0e9",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Vector notation",
                                            "Initial conditions",
                                            "Equation",
                                            "System",
                                            "Ll",
                                            "Component",
                                            "Respect",
                                            "Constant",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Here's another example of a partially decoupled system that will help us resolve a dilemma that we will encounter in Math 226.2. And the system is dx dt is equal to 3x plus 2y and dy dt is equal to 3y. And we're going to use the same approach to compute its general solution. We'll observe, first of all, that the second equation does not involve x. And so we'll be able to solve for y. And then we'll use the formula for y in the first equation. So here, we have dy dt is equal to 3y. So we know that y of t is equal to a constant times e to the 3t. And we'll make that constant be y0, because we're talking about a general solution, where we'll use the initial conditions as constants. And now, we'll take that formula for y, and we'll put it in the differential equation for x. So we have dx dt is equal to 3x plus 2 y0 e to the 3t. And we again note that this is a nonhomogeneous linear equation. So that means we have a couple of ways of solving it. And just for the sake of variety, let's use the magic function, the integrating factors technique this time. So we use the magic function. And when we use that procedure, we'll rewrite the differential equation dx dt minus 3x is equal to 2 y0 e to the 3t. And our magic function mu is equal to e to the integral of minus 3 dt. And so that gives us e to the minus 3t. We don't have to worry about the constant, because we just need one magic function. So now, we multiply both sides of the differential equation by the magic function. You get e to the minus 3t times dx dt minus 3x e to the minus 3t is equal to 2 y0. And when we take our e to the minus 3t and multiply it by e to the 3t, we just get 1, so we just have 2 y0. Now here, we know that we're talking about the derivative respect to t of the product of e to the minus 3t times x. So that's equal to 2 y0. And now, we'll integrate both sides with respect to t. And we get e to the minus 3t times x is equal to-- well, that would be 2 y0 t plus a constant of integration, so k. And then finally what we do is we multiply through by e to the 3t. And so we get our resulting function, x of t is equal to 2 y0 t e to the 3t plus k e to the 3t. And if we want to continue using the notation x0 y0 as our initial condition-- so if we want to use x of 0 is equal to x0-- well, if we evaluate the formula for x of t at t equals 0, you see the term with the t e to the 3t disappears. And so therefore, k would be equal to x0. So let's take this and summarize the result on another page. We have the general solution. We have x of t is equal to x0 e to the 3t plus 2 y0 t e to the 3t. And we have y of t is equal to y0 e to the 3t. And once again, if we write this in vector notation with a capital Y of t, then as our first component function, we have x0 e to the 3t plus 2 y0 t e to the 3t. And second component is y0 e to the 3t, like this. Now I'd like you to remember this example. We'll return to it in Module 5 of Math 226.2, where it will play an important role. End of transcript. Skip to the start. ",
                                        "unit_id":"f4dff3f35b5e4031b064f8066125aa7b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6ad074bd87f74f65beb3741ee8959ed7",
                                "vertical_name":"Video 3"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5986fa7ca969496d8fd519a6c3bad433",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "General"
                                        ],
                                        "data":" Conclusion to MODULE 13: ANALYTIC METHODS FOR SPECIAL SYSTEMS You should never forget the \"no wrong answers\" principle. It stops you from making mistakes. In addition, one of the important solution techniques that we will study in MATH226.2 is based on it. In general, we do not have many techniques to compute general solutions to systems unless the systems are linear (see MATH226.2). However, if the systems are partially decoupled, we have a chance. In this module, we discussed two examples that illustrate this approach, and we will use the results in MATH226.2. ",
                                        "unit_id":"eec72fcd5b7e4367afd37facddf5a0a5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"18213bddf0b44a889bbfcfc39293ad6d",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"443d02a27ac14dd4aaaf1e2564eeb73a",
                "chapter_name":"Module 14: Euler\u2019s Method for Systems",
                "sequentials":[
                    {
                        "sequential_id":"c14536d0244f446a9c3ec2e971574e79",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Vector notation",
                                            "Language",
                                            "Implement"
                                        ],
                                        "data":" Introduction to Module 14: Euler&rsquo;s Method for Systems In this module we extend Euler's method to first-order systems and second-order equations. The key observation is that we can use the same formula as in Module 5 as long as it is expressed in vector notation. We also show how to implement Euler's method for systems using a spreadsheet. However, if you have a favorite computer language that you would like to use, you can implement the method using that language. ",
                                        "unit_id":"7dca2e89c19d4185a322f23afc9de3ea",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a4d26ebf75624d4082131b985e4c2083",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2444a0ae37fa41cca268a9f29e028d7b",
                        "sequential_name":"Euler's Method for Systems",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Slope field",
                                            "Xy plane",
                                            "Initial condition",
                                            "Vector field",
                                            "Good time",
                                            "Initial point",
                                            "End point",
                                            "Good",
                                            "Initial",
                                            "Ve",
                                            "Put",
                                            "Delta",
                                            "Write",
                                            "Time",
                                            "Vector",
                                            "Point",
                                            "Step",
                                            "Ll",
                                            "Understand",
                                            "Original",
                                            "Calculate",
                                            "End",
                                            "Formula",
                                            "System",
                                            "Euler",
                                            "Method",
                                            "Minus"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Euler's Method for Systems is essentially the same as Euler's Method for First Order Equations, except for the fact that we use the vector field of the system in place of the slope field. Let's begin with a demonstration built by some of my colleagues. For now you should focus on the picture. We'll do the calculations more carefully on a series of slides that will follow. And for this example I'm using the system dx/dt is equal to minus y, and dy/dt is equal to x minus y. And I've picked a step size of 0.5 so that you can see the geometry of what's involved. For this problem that's a relatively large step size. And I'm using the initial condition of x equals 2 and y equals 0. There's nothing terribly special about 2, 0, but it makes a picture that is good for us to look at. And I'm going to move to the initial condition. I'm going to try to get it exactly, which is not the easiest thing to do. I'm located at the point 2, 0 in the xy plane. In other words, I'm on the x-axis. And if I calculate the vector in the vector field I'm going to get a vertical vector of length 2. Now I'm going to enter that into the calculation by clicking the mouse. And you should notice that another vector appeared, which is half as long as the original vector. And that's where the step size is playing a role. We multiply the vector in the vector field by 0.5 and we get a vector that's half as long, but points in the same direction. And that's the first step of Euler's Method. You should think about going from the initial point to the endpoint of that vector as the first step in Euler's Method. Now what I'm going to do is go to that end point and calculate the vector in the vector field. Notice I have a diagonal vector. And I'm going to enter this step by clicking the mouse. And you can see I get a vector that's half as long. And that's the second step in Euler's Method for this example. Then I'm going to go to the end of that vector. And you see I get a horizontal vector in this case. And I'm going to click the mouse to enter that. Notice I get a vector that's half as long. And those three vectors give me the first three steps of Euler's method applied to this system with a step size of 0.5. And if you understand these three steps that I just made then you understand Euler's Method for Systems. And let me do the calculations on a series of slides now. On this slide I've written the initial value problem that we were considering just a moment ago on the computer. dx/dt is equal to minus y. dy/dt is equal to x minus y. You're talking about an initial condition of 2 comma 0, and we're using a step size of delta t is equal to 0.5. And on the right hand side we have the picture that we saw, the result of Euler's Method applied to this initial value problem with three steps. Now let's do the calculations. And throughout all the calculations we need the formula for the vector field. So the vector field associated to this system is f of x and y is equal to, the first component is minus y and the second component is x minus y. So remember that formula for the vector field because we'll use it three times. Now here I've set up a table. And the table has five columns in it. The first column has just the number of the step. The next two columns have the result, the x-coordinate and the y-coordinate for Euler's Method. And then there are two more columns that I'll explain as I go through the calculations. And the picture on the right, I have the initial condition of 2 comma 0 on the x-axis in the xy plane. And so our first step is to use the formula for the vector in the vector field. So the formula I just mentioned f of x and y, which is equal to minus y and x minus y. We're going to use that formula to compute the vector in the vector field at the point 2 comma 0. So f at 2, 0 is equal to 0 comma 2. So the vector in the vector field at the initial condition is a vertical vector of length 2. And I'm going to take the components of that vector. And I'm going to put them-- the first component of the vector is going to be my mk, my value of mk. So that'll be 0. And my second component of the vector 2 is going to be my value of nk. So you should really think about these last two columns as the components of the vector in the vector field. So there we have the vector in the vector field plotted. So this vector is f of 2 comma 0. And what we're going to do now is we're going to use to step size, which is 0.5 and we're going to take 0.5 of this vector as our step. So here's the picture. So instead of taking the whole vector as a step, we're going to go halfway along this vector. So we're going to go from the initial condition to this point right here. And let's do the calculation that's involved with going along that step. So that new point is going to have coordinates x1. It's going to consist of the original x value plus our step size 0.5 times our x component of the vector in the vector field. Now I'm going to write that as m sub 0 just so you can see how the formula works in general. But, of course, x0 was 2. And then we have 0.5. And in this case our x component was 0. So we're still going to end up with 2. And we're going to put that right there in the table. Then we have a new y value. And that consists of the old y value plus our step size times our component for the vector in the vector field in the y direction, which is, I'll write it as n sub 0 so you can see the pattern. But our y sub 0 was 0 before. And we're adding to that 0.5 times our n0, so that's 2. So our new y value is going to be 1. So the result of the first step of Euler's Method is we go from the point 2 comma 0 to the point 2 comma 1. So there we go. That's our result. Now our next step is to compute the vector in the vector field again, but now at the point 2 comma 1. So let's do that. So f at 2 comma 1 is equal to minus 1, and x minus y is 2 minus 1. So that's 1. So we have as our new value of m, we have minus 1. And our new value of n, we have 1. And that gives us our vector in the vector field at this point right there. So we have that vector. So you should think about this vector right here as f at the new point to come. Now to make a step for Euler's Method what we're going to do is we're going to multiply that vector by the step size, which is 0.5. So we do that. And now what we want to do is we want to compute that new point there. So the x-coordinate would be x2. And that will be x1 plus our step size, which is 0.5. And we're going to multiply that by the x component of the vector in the vector field. So that would be times minus 1. And our original x was 2. So we have 2 minus 0.5, and so the result is 1.5. So we'll put in 1.5 right there in the table. Our new y value, or y sub 2 is y sub 1 plus our step size. And we want to use the y component of the vector in the vector field. So that's going to be times 1. And our value y1, that was 1 before. And now we're adding 0.5. And so we also have 1.5 for the y-coordinate. That's 1.5. So that's the calculation for the result of the second step of Euler's Method. So there we go. That's the second step right there. That result is 1.5, 1.5. Now for the third step we once again calculate the vector in the vector field, but now at 1.5, 1.5. And what we get-- the new y here gives us a minus 1.5. And the x minus y gives us a 0. So we have minus 1.5 and 0. And that's our new vector in the vector field. So there we go. That's a horizontal vector. It goes all the way over to the y-axis in this case. And what we're going to do now to do the third step of Euler's method is we're going to take one half of that, 0.5 times that vector. So there we go. And the result of our third step will be right there. And we need to calculate that point. So we have x3 is equal to x2 plus 0.5 times our x component for our vector in the vector field. So minus 1.5. And our x2 before was 1.5. And so we're taking 0.5 of minus 1.5, so that's minus 0.75. And so the result is 0.75. So here in the table we have 0.75. And our new y3 is our y2 plus 0.5 times our y component of the vector in the vector field, but that's just 0. And so we just get the value we already had for y. And that's 1.5. So this result here is 1.5. And there we go. That's the picture. We've computed three steps of Euler's Method. So we started at the initial condition. We got a point x1, y1. We got another point x2, y2. We got a third point, x3, y3. So what we really care about are these two columns, the x column and the y column. You can do this computation without bothering to enter in these other two columns, but I like to put them here at least when we're doing calculations initially. So you can see how the calculations are done. Now I thought you might also like to compare the result to the actual solution curve. And so on this slide you can see the result of Euler's method. There's three steps of Euler's Method. And you can compare that with the actual solution curve. We'll see that curve later on. We'll see that it's a spiral into the origin. And actually when we do this calculation with a spreadsheet and we can pick a smaller delta t we'll see that Euler's Method actually does a pretty good job of spiraling in towards the origin, just like the actual solution does. So at this point this is probably a good time for you to do a calculation like this. Check to see if you understand how to calculate Euler's Method. End of transcript. Skip to the start. ",
                                        "unit_id":"41c9132cd4c143faa7c9de0587e1df92",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9d5b88a378c84f75af5967b2952e24c7",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Initial condition",
                                            "Initial conditions",
                                            "Phase plane",
                                            "Xy plane",
                                            "Dependent variables",
                                            "Vector notation",
                                            "Computer language",
                                            "Computer languages",
                                            "Vector field",
                                            "Autonomous system",
                                            "General formula",
                                            "Ll",
                                            "Computer",
                                            "Cell",
                                            "Function",
                                            "Anymore",
                                            "System",
                                            "Vector",
                                            "Point",
                                            "Equation",
                                            "Capital",
                                            "Minus",
                                            "Hand",
                                            "Put",
                                            "Start",
                                            "Copy",
                                            "Ve",
                                            "Notice",
                                            "Delta",
                                            "Step",
                                            "Formula",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's derive the general formula for Euler's method for a system. So what I've done here is I've written down a system with two dependent variables. So I have dx/dt is equal to f of x and y and dy/dt is equal to g of x and y. So it's actually an autonomous system, two variables. And I have an initial condition at time t0, the solution will be at the point x naught y naught. And we're going to have a step size of delta t. Now, the trick with Euler's method is that it's best if you write everything in terms of vectors. So I'm going to use the standard vector notation that we've been using. I'll combine our little x of t and little y of t functions into a function, a vector function capital Y of t. And I'll define vector field-- in this case, it would be a vector field in the plane capital F of capital Y, or capital F at little x and little y. And that's given by the right hand sides of the system. So the first component is little f of x and y, and the second component is little g of x and y. And I have our initial condition written down here as capital Y sub 0 is equal to little x sub 0 little y sub 0. And capital Y sub k, which is little x sub k and little y sub k, that's going to be the result of the kth step of Euler's method. So here's a picture. So what I'm going to do is I'm going to start with an initial condition in the xy plane. So here we have our initial condition. And what we're going to do is we're going to calculate the vector in the vector field at that initial condition. So we're at our initial condition. We calculate the vector in the vector field. Use the horizontal notation in this case rather than the vertical notation. But I'm calculating that capital F at x naught, y naught. And then we're going to use the delta t to step along that vector. And we get a new point. That delta t is a factor. In this picture, I used delta t is equal to 0.25. So I'm going one fourth of the way along this vector to get the result of the next step of Euler's method. And then forget about the vector in the vector field. And we just keep that point x1 y1, and that'll be the result of the first step. And that's the basic process. Let's go through it a few more times. So we're at x1 y1. We compute the vector in the vector field. Then we use the delta t to produce a step. So in this case, we went one fourth of the way along that vector and we got a new point x2, y2. And that new point is the result of the second step of Euler's method. So there we go. That's our result. For the next step, we do the same thing over again. We calculate the vector in the vector field. We use delta t to step along that vector. And we get the result of our new step, x sub 3, y sub 3. And we throw away the vector because we don't need it anymore. Same thing. We calculate the vector in the vector field at x3, y3. We use delta t to calculate the new step. And we don't need that vector anymore. And one more time, we calculate the vector in the vector field at x4, y4. Then we use delta t to step along the vector. We get x5, y5. And we don't need the vector anymore. And so there's our result. So this is five steps of Euler's method for this system. I actually used a real system to generate this picture, the Van der Pol system. Notice that the steps aren't all of the same length, because the lengths of the vectors in the vector field change for different points. Now I want to go through the formula. And I've decided to back up to calculate the third step. So what you see in this picture is the essence of what goes on when you calculate the third step. So we're at the second step. This was the result of the second step. We calculated the vector in the vector field at that point x2, y2. And then we used our delta t to produce this third step. So we calculated that vector and then we went one fourth of the way along that vector to get the new result. And so x3, y3 is the result of the third step. Now over here on the left, I have the formula for Euler's method for a system all just condensed into one line because of the vector notation. And a way to think about this is you're at the kth point, so the result of the kth step. You calculate the vector in the vector field. You use your delta t to determine how long you're going to go along that vector. And you add that vector to the place that you were at before, and that will give you the result of the next step. And if you go back and look at the formula we had for Euler's method for our first order equation, it's basically the same formula. So that's the advantage of using vectors here. Now occasionally, you'll need to keep track of the time. So if you're going to do an x of t graph or a y of t graph, or if the system was non-autonomous, then you would have to keep track of the time. And you would have to use that as part of your calculations. So if you need to keep track of the time, the time for the k plus first step is the time for the kth step plus delta t. So that's the formula, just that one line. Now what I'm going to do is I'm going to turn to the computer and show you how to do this with a spreadsheet in the same way that we did Euler's method for first order equations with a spreadsheet. But before I discuss the spreadsheet, I want to emphasize that it's not important to me that you use a spreadsheet. You can use computer languages such as Matlab, Python, Mathematica, Maple, or any computer language that makes sense for you. But it is important that you have a chance to experiment with what happens with various step sizes and initial conditions. For this spreadsheet, what I'm going to do is I'm going to use the A column to contain the t values. I'm going to use the B column to contain the x values. The C column is going to contain the y values. And then I have two columns, D and E that correspond to the columns that I had in the table when I was doing the calculations by hand. The D column is going to correspond to the first component of the vectors in the vector field. And the E column is going to correspond to the second component of the vectors in the vector field. And then I'm going to use the cell F1 to contain my delta t. And the calculation that we did before by hand consisted of the system dx/dt is equal to minus y and dy/dt is equal to x minus y. And if you remember, the initial condition was 2 comma 0. So let's get going. So we want to put in the x component, the first component of the vector in the vector field. And that is minus y. So the y's are in the C column. So that's equal to minus C1. So there we go. That's our first component of the vector in a vector field. Now the second component is x minus y. So we're going to have the x's of B1. And the y is C1. So we have B1 minus C1. So that gives us our vector in the vector field. Now we can start to fill in. And so we want to get our new t from our old t. So our entry for A2 is going to be A1 plus-- we want to put in delta t, but we want an absolute reference to delta t. So we're going to do $f$1. Now for our new x, we're going to have our old x plus-- and here's where the formula for Euler's method comes into play. We want our delta t-- so $f$1. And we're going to multiply that by our first component of the vector in the vector field. And so that is the cell D1. And we're going to do the same kind of thing with the y's. So we want to have our old y, which was C1, plus our delta t. So $f$1 times our second component of the vector in the vector field, and that's E1. So there we go. The result of the first step of Euler's method is 2 comma 1. Now we want to update the vector in the vector field. And so what we're going to do is we're going to copy that cell to here. We're going to copy E1 to E2. So the vector in the vector field at 2 comma 1 is minus 1, 1. These numbers should look familiar. Now once we've done this second row, we're all set. Because what we're going to do is we're going to copy that row. And let's do 10 steps of Euler's method. There we go. 10 steps of Euler's method for this system of equations with a delta t of 0.5, where the initial condition is 2 comma 0. And of course, at this point, what we really care about are the times and the x's and the y's. And you should notice that these numbers look very familiar, because those are exactly the numbers that we calculated when we did three steps of Euler's method by hand. Now, those of you who know spreadsheets-- and my students taught me some things about spreadsheets-- you can jazz this up quite a bit. And so what I've done in this example here-- I actually have exactly the same example. But what I've done is I've put in a slider for delta t. And I've also drawn the graph. So I set up the spreadsheet in exactly the same way, except that I have many, many more entries. And what I'm going to do now is I'm going to lower the value of delta t. Before I do that, maybe I should show you these two other graphs. So besides having the approximate solution curve in the phase plane, I've also got approximations to the x of t and y of t graphs. And you can see some kind of decaying oscillation for those graphs. So now let's see what happens-- Actually, before that, notice the first few steps here look exactly like the picture that we talked about when we were calculating by hand. So now let's start lowering delta t. So we start off with 0.5, then 0.4, then 0.3, then 0.2, then 0.1. And you'll notice that the graph of the solution curve is still an approximation. But it looks a lot smoother. And you can see it's a lot closer to what I showed you was the graph of the actual solution curve when we were doing the slides. We also see our x of t and our y of t graphs. And they smoothed out as well. At this point, I think it's important that you do some calculations with a spreadsheet or a computer language of some sort so that you can work with some small delta t's and some different initial conditions. So we've got an exercise for you where you can get started on that. End of transcript. Skip to the start. ",
                                        "unit_id":"e81452d2ee6f48e2a28e8a1afb1f457b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f7ed9439270d4a4584dce4fa8ec88788",
                                "vertical_name":"Video 2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"10fac5f28ea949d2919bf1b06f492298",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Vector notation",
                                            "Euler",
                                            "Method"
                                        ],
                                        "data":" Conclusion TO MODULE 14: EULER&rsquo;S METHOD FOR SYSTEMS In this module we saw that we can extend Euler's method to systems of differential equations with almost no effort if we use vector notation. In Video 3 of Module 5 we discussed the fact that Euler's method is a first-order method, and we mentioned some of its limitations. Exactly the same limitations apply to Euler's method for systems, and for that reason robust solvers use more sophisticated algorithms. ",
                                        "unit_id":"a2667738985d4cd59a04731423e4f930",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3af49c65e62f4f9aae609747d31450ec",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"73e04467a0b348e39422057a9b89920a",
                "chapter_name":"Module 15: Existence and Uniqueness for Systems",
                "sequentials":[
                    {
                        "sequential_id":"38884db126b1409ea21cf4491e27811d",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Uniqueness theorem",
                                            "Devoted",
                                            "Module",
                                            "Uniqueness",
                                            "Theorem"
                                        ],
                                        "data":" Introduction to Module 15: Existence and Uniqueness for Systems There is an existence and uniqueness theorem for solutions to first-order systems. It is very similar to the one we discussed in detail in Module 6, and many of the same issues arise. For example, solutions can go to infinity in finite time, and to guarantee uniqueness of solutions, we must assume a slightly stronger hypothesis on the system. In this course, we are not concerned with the most precise statement of the theorem. If that were all that needs to be said, then we would not have an entire module devoted to this topic for systems. However, for autonomous systems, there is an important consequence of uniqueness that we will use repeatedly in MATH226.2 and 226.3. The bulk of this module is devoted to discussing this result. ",
                                        "unit_id":"46d3696de812475f922e5875136facc6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f9209fabff434a4a8cea81e009556202",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0fe2f656f7e64cc081c14f892e11dbbf",
                        "sequential_name":"Existence and Uniqueness for Systems",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Parking lot",
                                            "Parking spaces",
                                            "Continuously differentiable",
                                            "Trig identities",
                                            "Home depot",
                                            "Phase plane",
                                            "Mathematical notation",
                                            "Minus sign",
                                            "Vector field",
                                            "Initial condition",
                                            "Good time",
                                            "Uniqueness theorem",
                                            "Autonomous system",
                                            "Noon time",
                                            "Precise",
                                            "Large",
                                            "Lot",
                                            "Statement",
                                            "Form",
                                            "Minus",
                                            "Dt",
                                            "Autonomous",
                                            "Uniqueness",
                                            "Vector",
                                            "Initial",
                                            "Late",
                                            "Related",
                                            "Individual",
                                            "Sweep",
                                            "Pi",
                                            "Equation",
                                            "Notation",
                                            "Check",
                                            "Theorem",
                                            "Function",
                                            "Epsilon",
                                            "Time",
                                            "Sine",
                                            "Derivative",
                                            "Noon",
                                            "Consequence",
                                            "Ve",
                                            "Thing",
                                            "Capital",
                                            "Thelma",
                                            "Notice",
                                            "System",
                                            "Cosine",
                                            "Louise"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: There is in existence and uniqueness theorem for first order systems. It's essentially the same as the theorem that we studied for first order equations. And I've stated a version of it here. There's a lot of words, so let me go through the statement carefully. So let's consider a system of the Form d capital Y dt is equal to capital F of t and y. So this statement is for both autonomous and non-autonomous systems. And let's suppose that we have an initial time t sub zero. And capital Y sub zero is an initial condition. And suppose the right hand side of the differential equations form a function that is continuously differentiable. Now by that I mean a function that has all of its partial derivatives existing and let's suppose they're all continuous. I don't want to get too involved in the precise statement the differentiability of f. What I've got here is fine. And what the theorem says is that there's an epsilon greater than zero. It's like the epsilon that we had before. And a function capital Y of t that's defined on the interval from t zero minus epsilon to t zero plus epsilon. Such that that function capital Y of t is a solution to the system of differential equations. And it satisfies the initial condition, capital Y of t zero is equal to Y zero. In other words, what it says is there exists a function that satisfies the initial value problem. And in fact, because we're assuming that the right hand side is continuously differentiable, this solution is a unique solution to this system of differential equations. The epsilon is here because we can have solutions that go to infinity in finite time just as we did for first order equations. Now if this was all I was going to say about this particular theorem, I wouldn't have bothered to state it. I would have just said we have existence and uniqueness for systems just like we have for equations. However, it turns out that there's one important consequence that we're going to take advantage of that follows from the uniqueness theorem for autonomous systems. And I want to emphasize that what I'm going to describe now applies to autonomous systems. And to help us understand this consequence, what I'm going to do is talk about what we call the metaphor of the parking lot. So I want you to imagine a parking lot, a very large parking lot. Say something per a Walmart or a Home Depot, very large. And in this parking lot, there's actually a vector for each point. Imagine a vector field painted on the parking lot instead of parking spaces. And then we've got two individuals in two different cars who are going to arrive at different times. And I'm going to call the first individual Thelma. And she's going to arrive at 12:00 noon. And let's imagine that she's right there at 12:00 noon. And she has a specially equipped automobile so that she can see the vector field on the windshield. And she's going to drive in the direction that the vector field is pointing. And she's going to vary her speed according to the lengths of the vector in the vector field. So for example, when she's here she might do something like this. In the beginning, she's going a certain speed. As she progresses notice the vectors get a little smaller, so she would slow down. Now she has a friend, and her friend's name is the Louise. And Louise is one of these people who is always late. And she arrives at 12:10 PM. So she's 10 minutes late. But Thelma's used to this fact and she just took off at noon time. So Louise is at the same spot. Her car is also equipped with the special equipment where she can see the vector field. And she's going to do the same thing. She's going to follow the vector field. And the direction is going to be according to the vectors in the vector field. And her speed is going to vary according to the length of the vectors in the vector field. So Louise gets here, and what does she do? Well, she's going to follow the same path because her velocity vectors are given by the vectors in the vector field. And there's one very basic thing that you can say about the two paths that Thelma and Louise sweep out. And what you can say is that they both sweep out the same path. But moreover, what you can say is that Louise is always going to be exactly 10 minutes behind Thelma. And Louise is always 10 minutes, I'm going to put behind in quotes. Louise is always 10 minutes behind Thelma. And the reason I'm putting behind in quotes is they might actually be on a circular track. And they might be both on circles, or ovals, or something. And it's not always so easy to see who's ahead and who's behind. But I think you know what I mean by Louise is always 10 minutes behind Thelma. Now this makes common sense. And this is exactly the consequence of the uniqueness theorem for autonomous systems that we're going to take advantage of. So let me now restate this very commonsensical statement in mathematical notation. So we're given an autonomous system. So dY dt is equal to capital F of capital Y. And we're given a y zero as a point in the phase plane. Now you should think about that dY dt is equal to capital F of capital Y as the vector field, in the metaphor of the parking lot. And you should think of the Y zero as the place where they both start. where both Thelma and Louise both start. And let's suppose that we have a function Y1 of t. Which is a solution to the system that satisfies the initial condition Y of t sub 1 is equal to Y sub zero. And you should think about this as Thelma. And suppose we have another solution to this system, Y sub 2 of t. And you should think about this as Louise. And Louise has the same initial value, but she assumes that initial value at a different time, Y of t 2 is equal to Y zero. Then the precise mathematical statement is that the relationship between the two solutions is that they are time translates of one another. So in our scenario that we talked about before, t sub 1 was equal to noon. t sub 2 is equal to 12:10. So t sub 2 minus t sub 1, that was 10 minutes. And so, what we're saying here in our formula is that Louise at time t is the same thing as Thelma. But it was Thelma 10 minutes ago. So notice the t minus the quantity t2 minus t1. And so there is our 10 minutes. And we call these time translates of one another because what we're doing is we're translating the argument of the first function capital Y 1 by t2 minus t1. And we're getting the second function. Now it helps to see some examples. So let me do a precise example of this. And what I'm going to do is start with the second order equation, which is basically a mass spring situation. But I've used the x notation. So let me start with this second order equation. Second derivative of x with respect to t plus x is equal to zero. So an undamped mass spring. Or its equivalent system, and this is probably what's more relevant for this conversation, is that we have I introduced a new variable y. So its a dx dt is y. And dy dt is equal to minus x. And the first observation that we're going to make is that we have two functions here. And they're both solutions to this equation or system. I guess the capital Y is we're talking about solutions to the system. And we can use the no wrong answers principle. And just double check derivative of cosine is minus sign. So the derivative of x is equal to y in this case. And the derivative of y, the derivative of minus sign, is minus cosine. And that's minus x. Likewise, if we were to do the check on Y2, capital Y 2, then the derivative of x of sine t is cosine of t. So the derivative of x is y. And the derivative of cosine, well, that's minus sine of t. And that's minus x. So we have two solutions to this system here. And the question here is, how are these two solutions related? So let's do a little computation. Let's look at what we get if we compute Y1 at time zero. Well at time zero, cosine of zero is 1. And sine of zero is zero. So we get the point 1 zero. So the point on the x-axis, with x-coordinate, equal to one. Then if we do the same thing for Y2 at time zero, well, sine of zero is zero. Cosine of zero is 1. So we get zero one. So we get that point on the y-axis. So it's not entirely clear out the solutions are related, from that computation anyway. But I'd like you to notice something. Suppose if instead, we take Y2 and we evaluate it at pi over 2. Let's go, sine of pi over 2 is 1. And cosine of pi over 2 is zero. So notice that these two functions, and I'm going to think about the y 1 of zero equals 1 zero, I'm going to think about that as Thelma. And I want to take Y2 of pi over 2, I'm going to take that as 1 zero. So I'm going to think about that as Louise. And notice that they differ the time where Thelma is at 1 zero is time zero. And the time that Louise is at 1 zero is pi over 2. So what the consequence said was that Louise at time t, Louise is always going to be pi over 2 units behind Thelma. So the Louise at time t, is going to be Thelma at time t minus pi over 2. Now what we can do is, we can check this. And we can check this by plugging in. So we can take and calculate Y1 of t minus pi over 2. And we can see what we get. Y1 at t minus pi over 2, well that's cosine of t minus pi over 2. And it's minus sine of t minus pi over 2. And here's a place where you can remember some trig identities. Or you can think about the graphs. If you take the graph of cosine and you shift it to the right by pi over 2 units, you get the graph of sine. So it turns out that cosine of t minus pi over 2 is sine of t. And if you take minus sine of t minus pi over 2, you end up getting cosine of t. And this is exactly Y2 of t. So in this case, we can see that the conclusion of the theorem follows by just using some trig identities. Now I think it's probably a good time to pause and have you do an example that's similar to this one. So you get the hang of this business about shifting solutions or doing time translates of solutions. End of transcript. Skip to the start. ",
                                        "unit_id":"c486e9c5408147d9ae052dc6c66b9856",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"dd95cf8853824741bc48eb753a733532",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase plane",
                                            "Uniqueness theorem",
                                            "Autonomous system",
                                            "Equilibrium point",
                                            "Closed curve",
                                            "Touch",
                                            "Point",
                                            "Eventually",
                                            "Curve",
                                            "Periodic"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: We have discussed how the Uniqueness Theorem for Autonomous Systems gives us the fact that two solutions that go through the same point in the phase plane are time translates of one another. And this statement can be restated informally as saying that for an autonomous system, if two solution curves in the phase plane touch, then they are identical. And let's consider the geometric implications of this fact. And let's begin with what cannot happen. So the first thing that cannot happen is that we cannot have two solution curves that cross. So, can't have a solution curve that comes like this and another solution curve that goes like this. And they cannot cross at that point because that would violate uniqueness there. So we have, two solution curves cannot cross. Also, we cannot have two solution curves that are tangent. We cannot have a solution curve that goes like that. And a solution curve comes up and is just tangent to that curve-- bounces off so to speak. So they'd be tangent at that point. And again, that would violate uniqueness at that point. So we cannot have, two solution curves cannot be tangent. And a third thing that cannot happen is, we cannot have a solution curve that starts off, say, spiraling and then comes around and forms a closed curve and becomes a periodic solution. So what you cannot have is, you cannot have a solution that is-- I'll put quotes around it-- \"eventually\" periodic. If your solution is eventually periodic, it really had to be periodic to begin with. It can't start off not being periodic and then become periodic. On the other hand, let's consider what can happen. We could have an equilibrium point and another solution whose solution curve approaches that equilibrium point as t increases. And on the other side-- a similar kind of thing-- a solution curve that approaches that equilibrium point as time increases. We could also have a solution whose solution curve approaches the equilibrium point as t decreases and say, on the other side-- a similar kind of thing-- a solution curve that approaches the equilibrium point as t decreases. And it might look like this violates the uniqueness theorem, especially when you have this on a computer, but it does not because this is actually five distinct solutions. So you have five distinct solutions. If you forget about the arrows, they might look like a pair of solution curves crossing. But they're not. They're just five different solutions. And you could also have a situation where you might have a periodic solution-- so a closed curve that forms a periodic solution. And perhaps inside, you would have an equilibrium point. And heading out from that equilibrium point would be another solution curve that spirals out. And as t increases, that spiral will get closer and closer to the periodic solution. So that's OK. On the computer, it might even look like these solutions agree, but the Uniqueness Theorem tells us that these two solution curves will never actually touch. So you could have a periodic solution and other solution curves limiting on it. And this will often be important for us when we're doing our phase plane analysis. And I'd like to think about this as a situation where we say that what's inside the closed curve is like Vegas, and what we're saying is that what happens in Vegas, stays in Vegas. And the solution curve cannot leave this inside of this periodic solution. So those are some of the geometric implications of the Uniqueness Theorem when it's applied to autonomous systems. End of transcript. Skip to the start. ",
                                        "unit_id":"7e67098a77004deeb05502fe8ceea9df",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"da2610a6568a40db815d151de691e3c2",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Phase plane",
                                            "Chain rule",
                                            "Uniqueness theorem",
                                            "Uniqueness",
                                            "Suppose",
                                            "Consequence"
                                        ],
                                        "data":" proof of the important consequence of the uniqueness theorem To verify our assertions about the consequences of uniqueness for systems, we suppose that two solution curves intersect at the point Y0 in the phase plane. In other words, suppose Y1(t1)=Y0=Y2(t2) for two solutions Y1(t) and Y2(t). Then we consider the function Y3(t)=Y1(t&minus;(t2&minus;t1)). Both Y1(t) and Y3(t) sweep out the same solution curve because Y3(t) is a time translate of Y1(t). On the other hand, dY3dt(t)=dY1dt(t&minus;(t2&minus;t1))(by the Chain Rule)=F(Y1(t&minus;(t2&minus;t1))(because Y1(t) is a solution)=F(Y3(t))(because the system is autonomous). Hence, Y3(t) is a solution to the system. Moreover, Y3(t2)=Y1(t1)=Y2(t2), so uniqueness implies that Y2(t)=Y3(t) for all t. In other words, Y2(t)=Y1(t&minus;(t2&minus;t1)). ",
                                        "unit_id":"2006fc43c5094109ab5c7a0c0878744b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"37f6dd380c46417b85ddd897991d946e",
                                "vertical_name":"Optional Proof"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ee779030bdad489c899376efc49cb327",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Existence"
                                        ],
                                        "data":" Conclusion to Module 15: Existence and Uniqueness for Systems We have a theorem that guarantees existence and uniqueness of solutions, and more importantly now we understand what can and cannot happen for solutions to autonomous systems. We will use these facts for the remainder of MATH226, usually without even mentioning the theorem. ",
                                        "unit_id":"944ef49d902446ef8efbf12ced1c3a5c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b74990f51251431bb19f6280fe6adead",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"3aa5ce918df448e4ab1fa51258836269",
                "chapter_name":"Module 16: The SIR Model of an Epidemic",
                "sequentials":[
                    {
                        "sequential_id":"5ef568439c7e45098a7b585b7360df60",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dependent variables",
                                            "Computer simulation",
                                            "Conserved quantity",
                                            "Initial conditions",
                                            "Disease",
                                            "Model"
                                        ],
                                        "data":" Introduction to Module 16: The SIR Model of an Epidemic We decided to end MATH226.1 on a practical note. In this module we discuss what is perhaps the most basic of all systems that model the spread of a disease. It is called the SIR model. A population is split into three distinct classes&mdash;the susceptibles, the infective, and the removed/recovered individuals. We begin with a model that involves three dependent variables, but we quickly reduce it to a model that involves two variables. We use a combination of computer simulation, phase plane analysis, and a conserved quantity to derive general information about the spread of the disease based on the initial conditions. ",
                                        "unit_id":"1472e0bb444742c6aa90e80c340f2620",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"63c2bdeab18247b8bdc82dd1d36c62df",
                                "vertical_name":"Introduction"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5a4eda3de4b74d78a00bd3d5c8138042",
                        "sequential_name":"The SIR Model of an Epidemic",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Phase plane",
                                            "Phase space",
                                            "Incubation period",
                                            "Dependent variables",
                                            "Differential equation",
                                            "Independent variable",
                                            "General population",
                                            "Good time",
                                            "Flu",
                                            "Equation",
                                            "Alpha",
                                            "Removed",
                                            "Beta",
                                            "Parameter",
                                            "System",
                                            "Model",
                                            "Variable",
                                            "Form",
                                            "Thing",
                                            "Population",
                                            "Susceptible",
                                            "Ll",
                                            "Move",
                                            "Interaction",
                                            "Term",
                                            "Group",
                                            "Disease",
                                            "Equal",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: One basic model for the spread of the disease is called the SIR model. And in this model a population is divided into three distinct groups. The first group is the susceptible individuals. The second group is the infective individuals. And the third group consists of the removed individuals. The susceptible individuals are those who are susceptible to catching the disease. The infective individuals are those who have the disease and can affect others. And the removed individuals consist of those who have recovered, those who may be immune for some reason or another, or those who may be isolated. So they cannot transfer the disease to others. And the basic idea is that those who are in the susceptible class move to the infected class. And those who are in the infective class move to the removed class. Now let's set up some variables so that we can model the spread of a disease with this model. And as is often the case in this course our independent variable is going to be t, which is time. And one of the examples that we'll use a lot, time will be measured in days because we'll be talking about an outbreak of flu. For our populations we'll have S of t is equal to the number of susceptibles at time t. I of t is the number of infectives at time t. And R of t is equal to the number of removed individuals. And of course, since we're talking about populations, we'll be assuming that all these population numbers are non-negative. So S of t is greater than or equal to zero. I of t is greater than or equal to zero. And R of t is greater than or equal to zero. Now let's discuss the assumptions that form the basis of the SIR model. And there are six of them. First of all we're going to assume that the overall size of the population is constant. And there are two assumptions that are related. We're going to assume that the gain in the infective class is at a rate that is proportional to the number of infectives and susceptibles. And similarly the number of susceptibles are lost at the same rate because you go from the susceptibles to the infectives. We're going to assume that the rate of removal of the infectives is proportional to the number of infectives. We're going to assume that the incubation period is short and can be ignored. And basically what that means is that as soon as you get the disease, then you can pass it along. And finally, we're going to assume that these groups are uniformly mixed in the sense that every pair of individuals has an equal chance of coming into contact with one another. And this will lead to a fundamental choice for the terms that are in the system of differential equations. So those are our assumptions. Now let's set up some differential equations. And we'll begin with the differential equation for dS/dt, the rate of change of S with respect to time. And remember one of our assumptions said that the number of susceptibles are lost at a rate that's proportional to the number of infectives and susceptibles. And then we have this assumption that the groups are uniformly mixed. So that leads to a differential equation of the form dS/dt is equal to minus alpha times S times I and alpha is a positive parameter. And we want to think about it as what's called a contagion parameter. And what that means is that it's a measure of how much the disease transfers when you have an interaction between a susceptible and an infective. If the disease is very contagious, then alpha will be large. If it's had to transmit the disease, then alpha will be small. I want you to notice that we're measuring the interaction by the product of S and I and this is where the assumption about the groups are uniformly mixed comes into play. So s times I is our interaction term. And this should remind you of the predator-prey system. We did a similar thing in the predator-prey system when we wanted to measure the interaction of the predators and the pray. So our differential equation for dS/dt has one term, minus alpha S times I. Now let's move on to the differential equation for dI/dt. And remember for dI/dt, well, our gain in the infective class is proportional to the number of infectives and susceptibles, just like we just discussed. There's a new assumption. The rate of removal of the infectives is proportional to the number of infectives. And again, we have that the group is uniformly mixed. So what that means is that we have a differential equation for the rate of change of the infectives. And remember, we're moving from the class S to the class I so our term in dS/dt are minus alpha S times I. That's now going to become plus alpha S times I. And that's this first assumption up here. And then we have that the rate of removal of the infectives is proportional to the number of infectives. And this is a rate of removal so we have minus beta times I. And you could think about beta, so beta is another parameter which is greater than or equal to zero. And you can think about beta as a recovery parameter. Beta measures how long it takes to recover from the disease or how long it takes to be removed from the general population after contracting the disease. So dI/dt is equal to alpha times S times I, which is the rate at which individuals are entering the class and minus beta times I, which is the rate at which individuals are leaving the class. Finally, let's consider the differential equation for dR/dt. And one assumption that's relevant here is that the size of the population is constant. And also the rate of removal of the infectives is proportional to the number of infectives. Remember that individuals move from the infective population to the removed population. Now for the differential equation for dR/dt, we could actually use either of these two assumptions individually. And we end up with dR/dt is equal to beta times I because that's the same thing as the rate of removal of the infectives. So in summary, we get the SIR model dS/dt is equal to minus alpha S times I. dI/dt is equal to alpha times S times I minus beta times I. And dR/dt is equal to beta times I. Now note that if you add the right hand sides of these three differential equations together, you get cancellation in the terms. The minus alpha SI cancels with the alpha SI. And the minus beta I cancels with the beta I. And so we end up with the sum of these three derivatives being equal to zero, which implies that the size of the population is constant in time. And whenever we need to refer to the size of the population we'll call it capital N. So this is the total population. Now if you notice, the right hand sides of these differential equations do not involve R. So what we can do is we can remember that these three terms are going to add up to capital N for all time. And so we can remove the differential equation for R and we end up with just a system of two equations. So that would give us a planar system, so a two-dimensional system. And it's always easier to analyze a planar system than it is to analyze a system with three dependent variables. And so for the purposes of this module, we're going to just concentrate on this planar system of two differential equations. And so we can work in the phase plane rather than having to work in phase space. So this is going to be our SIR model for the purposes of this module. Now this is a good time to stop and do a little bit of computation on the computer so you can see what this model is predicting. So we're going to give you some values for alpha and beta and capital N that correspond to an interesting flu epidemic that hit a British boarding school in 1978. We're going to have you experiment with it on the computer now. End of transcript. Skip to the start. ",
                                        "unit_id":"c64b2f4cfacf454aaacb02a6d145cb52",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"66749e2eadae48169b15b5f0a9d904e7",
                                "vertical_name":"Video 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Equilibrium points",
                                            "Decreasing function",
                                            "Increasing function",
                                            "Dt",
                                            "Di",
                                            "Beta",
                                            "Decreasing",
                                            "Model",
                                            "Equation",
                                            "Result",
                                            "Function",
                                            "Population",
                                            "Rho",
                                            "Alpha",
                                            "Increasing"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: Let's derive some basic consequences of the SIR model, and let's begin by computing the equilibrium solutions for the system. We're going to get equilibrium solutions when both of the equations are equal to 0. So let's go through the logic. The first equation is minus alpha S times I is equal to 0. So that equation will be equal to 0 if either S is equal to 0 or I is equal to 0. And in the second equation, we have alpha S times I minus beta times I, so we should do a little bit of algebra. There's an I in both terms, so let's factor that out. So alpha S minus beta times I would have to be 0. And so therefore, either alpha S minus beta is equal to 0 or I is equal to 0. And alpha S minus beta would be equal to 0 if S is equal to beta divided by alpha. So either S is equal to beta divided by alpha or I is equal to 0. We'll check the logic here. So we can see from the first equation, either S has to be equal to 0 or I has to be equal to 0. So if we have I equals 0, then we'd also have the second equation being equal to 0. So we definitely have equilibrium points whenever I is equal to 0. Now, what happens if I is not 0? Then the first equation says S would have to be 0, but the second equation says S would have to be beta over alpha, and because beta and alpha are non-zero, then you would have a nonzero value of S. So the only case that can happen is when I is equal to 0. We have infinitely many equilibrium points and they're precisely the equilibrium points where I is equal to 0. So the equilibrium points are the points for which I is equal to 0. Of course, that's the same thing as the non-negative S axis. And I put in non-negative because, remember, we're always assuming that both S and I are non-negative. Now, let's consider the consequences of the differential equation dS dt is equal to minus alpha times S times I. Well, if we take a look at minus alpha times S times I, and remember that S is non-negative and I is non-negative, and then if we assume that in fact they're not 0, then both S and I would be positive. So both S and I are positive. So S times I would be positive, alpha is positive. So the net result is minus alpha times S times I would be negative, and that would imply that the function S of t is a decreasing function. So the population S of t, the susceptibles, is a decreasing population. If we consider the differential equation for R, the removed, we have a situation where dR dt is equal to beta times I. Again, we're assuming that I is positive here. Then beta times I would be positive, and therefore, R of t would be increasing. So the removeds is an increasing function. And now let's consider the differential equation dI dt is equal to alpha times S times I minus beta times I, and let's do the algebra that we did when we were calculating the equilibrium points. So we factor out the I, and then let's consider the case where I is positive. We don't worry about I equals 0 because we know that corresponds to the equilibrium points. Then the sign, S-I-G-N, of dI by dt is the same thing as the sign of this term, alpha S minus beta. So what we should do is we should do a little calculation. Alpha S minus beta is equal to 0 if S is equal to beta divided by alpha. And that turns out to be a particularly important number for this model, so we'll give it a name. So we'll denote it by rho and we'll call rho the threshold value for the SIR model. Now, let's consider the sign of dI dt. So that's the same thing as the sign of alpha S minus beta, and that sign will be positive if S is greater than the threshold value, rho, and that sign will be negative if S is less than the threshold value, rho. So the conclusion is that the function I of t is increasing if S is greater than the threshold value, and I of t is decreasing if S is less than the threshold value. And the way we should interpret this is that the disease is spreading if the value of S is greater than the threshold value and the disease is starting to die out if S is less than the threshold value. Now, we would like you to go back to the example with the British boarding school, calculate the threshold value, and then look at its significance on the computer and compare what you did in the previous exercise to the results on this slide. End of transcript. Skip to the start. ",
                                        "unit_id":"c13479684c87498393fe2134339ffdb9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"094bbd899d4b4daabd605381d54712b5",
                                "vertical_name":"Video 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Phase plane",
                                            "Extra space",
                                            "Initial condition",
                                            "Conserved quantity",
                                            "Minus sign",
                                            "Differential equation",
                                            "Minus",
                                            "Rho",
                                            "Side",
                                            "Plane",
                                            "Alpha",
                                            "Beta",
                                            "Move",
                                            "Equation",
                                            "Constant",
                                            "Ll",
                                            "Sign",
                                            "Maximum",
                                            "Divided",
                                            "Time",
                                            "Number",
                                            "Max",
                                            "Threshold"
                                        ],
                                        "data":" Start of transcript. Skip to the end. PAUL BLANCHARD: We conclude our discussion of the SIR model with a conserved quantity. It turns out that the solution curves in the phase plane for the SIR model lie on curves that satisfy the equation I plus S minus rho times log S is equal to a constant. In other words, once you have one point on the solution curve-- and over here, what I did is I evaluated that formula at the initial condition-- that determines a number, and then as t changes, then the I plus S minus rho log S stays constant. So whenever we have something like this, we call it a conserved quantity for your system. Let me explain this in a little more detail. Let me begin by drawing a picture. So here, let's consider a typical solution curve for the SIR model in the phase plane. So we'll have an initial condition and we'll have our solution, and this is typically what the solution curves look like. We're talking about an initial condition about there. What happens is at first, the solution would increase, and then it will decrease and head towards a value on the S-axis. So when we're thinking about this as a solution curve, we're considering the curve S of t and I of t. And I won't use the vertical vector notation because I need extra space here. So my first component is S of t, my second component is I of t. But remember, one of the things that we proved about the SIR model is that the value of S is going to decrease as time evolves. And so we can actually think about this graph here, this solution curve, as the graph of a function. So we can think about this curve also as a graph of I as a function of S. So what we're going to do is we're going to consider the solution curve as a graph of I as a function of S. Now, if we do that, then what we can do is we can calculate the derivative of I with respect to S because the derivative of I with respect to S is the derivative of I with respect to t divided by the derivative of S with respect to t. And then we can use the differential equation, alpha times S times I minus beta times I divided by minus alpha times S times I. And then we can see we have alpha SI and minus alpha SI, so we get a minus 1, and then we have a minus and a minus, so that gives us a plus. And notice that we have beta over alpha. Beta over alpha, that's the threshold constant, so that's rho. We have an I and an I so they cancel, and an S, so we have rho over S. So that's the derivative of I with respect to S. Now let's integrate the derivative of I with respect to S. Let's integrate with respect to S. And so we get I is equal to minus S plus rho log S-- don't have to worry about any absolute value signs because S is positive-- plus a constant. And so we get our conserved quantity by taking I-- we'll move S over to the left hand side-- so plus S minus rho log S, and that would be equal to our constant, c, and that's what our conserved quantity is. And then one way to determine what the value of c is would be to evaluate this expression at the initial condition. So what we could do is evaluate at the initial condition, and then we would get I plus S minus rho log S is equal to I sub 0 plus S sub 0 minus rho times log of S sub 0. Let's apply this formula to get something interesting about the solution. Let's calculate the maximum number of infectives for a given solution. I'm going to call that number I sub max. Now, let me draw a picture again. So here's our S I plane, and here's a typical solution curve. We know that we're going to get a maximum for the number of infectives because we know that below the threshold value, I is increasing, and then after the threshold value, I is decreasing. There's the threshold value, and that corresponds to I max. And remember, the threshold value we're calling rho. So now let's calculate I max by evaluating the conserved quantity at the threshold value. So if we do that, we get I max plus-- well, the threshold value is S is equal to rho, so plus rho-- minus rho log rho is equal to I sub 0 plus S sub 0 minus rho log S sub 0. So now let's keep I max on the left hand side and we'll move everything else over to the right hand side. So we have an I 0 plus an S 0. We're going to move this rho over, so we'll have minus rho, and then we'll have two terms that involve a logarithm. This term had a minus sign, so when we move it over to the other side, it's got a plus sign, so it's got plus rho log rho. And we have minus rho log S sub 0. And we could evaluate that expression and determine a value, the maximum value of the number of infectives. We could, if we wanted to, also go one step further. I sub 0 plus S sub 0 minus rho, and then we could take these two terms that involve a logarithm, factor out the rho, so plus rho, and then we'd have a logarithm, and we can combine that as logarithm of rho divided by S sub 0. Analyzing the SIR model involves a nice blend of analytic techniques such as this one, phase plane analysis, and numerical techniques. More sophisticated models of how a disease spreads would certainly be more complicated, but the SIR model is a good place to start. End of transcript. Skip to the start. ",
                                        "unit_id":"8e092de2a28044d2aa0b1ad3232bb40d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2efabafa78b84ea2883588f77d512149",
                                "vertical_name":"Video 3"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c8c80749f8a946dca9f3ba0d5e4132a5",
                        "sequential_name":"Conclusion",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Conclusion to Module 16: The SIR Model of an Epidemic Clearly the SIR model assumes that the population involved lives in a closed environment and has simple social dynamics and limited geographical separation. For a pandemic, we should also include geographical effects as well as differences in rates of contact among and within different subpopulations. In these cases, the SIR model is the starting point for more involved models. ",
                                        "unit_id":"fc8f6351021445c49f55673cfd1412f6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9117ae94d97449698fdc77c94701651b",
                                "vertical_name":"Conclusion"
                            }
                        ]
                    }
                ]
            }
        ],
        "course_id":"course",
        "course_name":"Introduction to Differential Equations"
    },
    {
        "course_chapters":[
            {
                "chapter_id":"19c4c218802742e3b64486d0f954171f",
                "chapter_name":"Getting Started",
                "sequentials":[
                    {
                        "sequential_id":"05b7715ba1584b249c17051255c308f5",
                        "sequential_name":"Welcome to the Course!",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Web applications",
                                            "Linear algebra",
                                            "Data mining",
                                            "Associate professor",
                                            "Computer program",
                                            "Computer graphics",
                                            "Computer science",
                                            "Weekly",
                                            "Linear",
                                            "Coding",
                                            "Ll",
                                            "Mooc",
                                            "Thinking",
                                            "Content",
                                            "Book",
                                            "Part"
                                        ],
                                        "data":" TIM CHARTIER: Welcome to this DavidsonX MOOC on applications of linear algebra. My name is Tim Chartier and I'm an associate professor of mathematics and computer science at Davidson College. This introductory video will give you a roadmap of what's to come in this MOOC. By the end, you'll be ready to jump right into unit one and begin learning applications of linear algebra. First, let's talk about the goal of the lectures and the activities throughout the course. Many of the lectures will end in an activity. My goal is to lay a foundation in the lectures that springboard you into your own areas of discovery and exploration. In the lectures, we'll discuss computational tools of linear algebra. Then we'll think about how to use those methods in applications. This type of thinking can be important in today's world. Innovation can come from a new theoretical idea or computer program. It can also come from finding existing pieces of knowledge and having the creativity to put them together. Moving from lecture to activity will allow us to use this type of mathematical thinking. OK, now let's talk about the content itself. All of the lecture content is available now. This will allow you to move through the content at your own pace. Have more time this week? Then move through more units. Have less time? Then look to next week. While the lecture content and activities are all available now, we will have weekly surprises that come your way. The weekly email will indicate what units will keep you on pace. If you get ahead, that's great. Fall behind, that's fine. And everyone that's on pace will be eligible for our weekly book giveaway. We'll also have some other surprises that come your way weekly to keep you connecting linear algebra to applications. What will the surprises be? Well, they won't be a surprise if I tell you everything. But here are some hints. Sports analytics, Pixar, supercomputing. OK, now let's talk about the activities in this MOOC. Those that use coding are ready for you as web applications. In this way, this course can have wide appeal and not require coding experience. Want to code? You can do it on your own. Need software? MathWorks is offering a free copy of Matlab for every one in this MOOC for the duration of the course. Matlab is a powerful tool in mathematical computation, especially in the area of linear algebra. Now what if you want more linear algebra? This is part one of a two part series. Part two will have more advanced ideas and will have its activities designed in Matlab. So part two will involve coding and even more linear algebra. Finally, if you'd like some hard copy content related to this course, you may want to look at my book, \"When Life is Linear. From Computer Graphics to Bracketology.\" The book's published by the Mathematical Association of America. The content of this MOOC parallel the topics in the book. Sometimes the content is similar, and sometimes it differs. If you're interested, a coupon for the electronic version of the book is on the MOOC web page. So, that's our roadmap for our journey through this MOOC. We'll see a variety of applications in computer graphics and data mining. Ready? I am. So let's move to unit one and start learning applications of linear algebra. Downloads and transcripts ",
                                        "unit_id":"42d3d8f94bb84daa989d27b6cfe00117",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d946263a9a814a66b51f0704d98d9088",
                                "vertical_name":"Introduction to D003X"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9af2c4dd13b8483a9ee8e34fb98c3156",
                        "sequential_name":"Grading and Verified Certificates",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Discussion boards",
                                            "Good luck",
                                            "Progress",
                                            "Learning",
                                            "Count"
                                        ],
                                        "data":" A large amount of our learning about linear algebra in this course will happen through creatively investigating applications of our mathematical topics. Successful learning in this course will depend more heavily on your participation in exploratory activities. The more you participate and reflect on these, the more you will learn. Multiple attempts are allowed on all quizzes. These are meant to be instructional. Every activity includes a self-assessment that you must complete to receive credit for participation. Activities count for 60% of the grade. At specific stages of the course, you will also need some basic understanding of linear algebra concepts to continue. These quizzes will count for 40% of your grade. To pass the course, you need at least 70% . Verified certificates require passing the course at 70% or above. Certificates will be issued on April 6. The course has TAs who will, along with the Dr. Tim Chartier, will monitor and offer feedback on the Discussion Boards. You can track your progress using the Progress menu link at the top. Good luck! ",
                                        "unit_id":"47ec21e2d17e41dcae01c77a9ce7d231",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"96547deaafd645c09b8646380c4d2ad0",
                                "vertical_name":"Grading Requirements"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5514d4351d3247668e507d1d4d47d689",
                        "sequential_name":"Introduce Yourself!",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Discussion forum"
                                        ],
                                        "data":" Let's Get to Know Each Other! Welcome to Applications of Linear Algebra. We are glad you are here and look forward to learning math through creative exploration. Please take a moment to introduce yourself on the discussion forum below and get to know each other. We've also included a map if you'd like to add your location. ",
                                        "unit_id":"101fc6f1c828478090217817576c0388",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"598cb434e3ec48a69ba79792ebbfb413",
                                "vertical_name":"Introductions and Our Community Map"
                            }
                        ]
                    },
                    {
                        "sequential_id":"54c456997e5f44a78b4080e9e5e4a7aa",
                        "sequential_name":"Opening Survey",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Survey"
                                        ],
                                        "data":" Opening Survey Welcome to the Applications of Linear Algebra. Whether you are just browsing or you are determined to complete the entire course, the more we know about you, the better we can design this experience to serve all students in this course. As one of the first students in this course, your responses will be especially important to us. There are no right or wrong answers, and this does not count toward your final grade. For more information about how we use and protect this data, please refer to the edX terms of service . This survey has about 15 questions and should take about 3-5 minutes. Thank you for taking this survey. The questions are below. Sincerely, Dr. Tim Chartier, and the D003X Course Team ",
                                        "unit_id":"22677e51d6d949f7ac8234ae6b406abb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a6aff6ed6ac941a0962823a84224c5f5",
                                "vertical_name":"Opening Survey"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"4557012c51c04ad39caab3e7611e334d",
                "chapter_name":"Unit 1: Entering the Matrix",
                "sequentials":[
                    {
                        "sequential_id":"e9f5669c17ad4aa5980ea16db20da8ca",
                        "sequential_name":"Introduction and Learning Goals",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Charlie chaplin",
                                            "Mona lisa",
                                            "Linear algebra",
                                            "Learn",
                                            "Ll",
                                            "Linear",
                                            "Mooc",
                                            "Goal",
                                            "Unit"
                                        ],
                                        "data":" TIM CHARTIER: Welcome to Unit One of our DavidsonX MOOC on applications of linear algebra. This MOOC is on applications of linear algebra. So this unit gets us thinking about applications, and also about linear algebra itself. We'll talk about overarching applications, so we see where linear algebra is being used. A main goal will be gaining an appreciation for how linear processes can model our world, even though such models are generally only approximations to what's really happening. Then, we'll look at what it means to be linear. What's linear? And what isn't linear? Then, we step into a matrix. We'll learn terminology related to matrices, as we'll be using them throughout this MOOC to create images and to do data analytics-- specifically, ranking sports teams. Then, we'll end by learning an algorithm that creates images from ASCII characters. Indeed, you could sit at an old-fashioned typewriter, when you're done, take a few steps away, and the typed page could look like the Mona Lisa or Charlie Chaplin. Another goal in this unit will be thinking about our ideas in creative ways. In fact, an overarching theme of this entire MOOC is to find interesting, fun, and creative applications of often very simple ideas. Another goal is to learn from each other's creativity, so we'll be sharing some of our work in this unit as a group. Let's begin Unit One, and enter the matrix. Downloads and transcripts ",
                                        "unit_id":"e54c5e94fec548349bc12d4aa6f4bb76",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a0e3b08667f5486abcc1668a99531fa8",
                                "vertical_name":"Introduction to Unit 1"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5f83f740cd934c779bed5631e095bee3",
                        "sequential_name":"1.1 - When Life is Linear",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Pixar movies",
                                            "Wireframe models",
                                            "Computer graphics",
                                            "Sci fi film",
                                            "Linear algebra",
                                            "Higher dimensions",
                                            "Data mining",
                                            "Learn",
                                            "Approximate",
                                            "Linear",
                                            "Find",
                                            "Ll",
                                            "Read",
                                            "Close",
                                            "Wireframe",
                                            "Standing",
                                            "Data",
                                            "Flat",
                                            "Printing",
                                            "Handwriting",
                                            "Campus",
                                            "Building",
                                            "Shape",
                                            "World"
                                        ],
                                        "data":" What Will We Learn? In this section you will gain an appreciation for how linear processes can model or approximation the world. We will also look specifically at wireframe models that create 3D models. Let's get started... TIM CHARTIER: I'm standing on the campus of Davidson college where I teach. Among many things, I see the beautiful facades of the buildings and the wonderful trees that fill the property. As we'll see in this MOOC, I like applications of linear algebra. I look at the world and think how life is linear or at least can be modeled by linear processes. In this MOOC, you'll learn applications of linear algebra in computer graphics and data mining. So in this first lecture, let's be focused on what I mean when I say that linear processes can model or approximate physical phenomenon. We'll do this by looking at this campus. First, when I'm talking linear, I mean lines in 2-D or planes and lines in 3-D. We can be in higher dimensions, too, and work in hyperplanes and 10, 50, or 100 dimensions. I can see lines and planes standing here. Take the bricks that decorate the buildings and decorate various parts of the Davidson campus. But even there, they usually aren't perfectly straight or flat. There is often some variation, but they are close enough to think of as consisting of planes or lines. But look toward the top of the main entrance of the Chambers Building that is behind me. You'll see the sculpture that since the 1930s has been called the Chamber Maidens. Are they created with planes? Probably not, but from this distance I can't tell. Really? They could be made of planes? How do I know that? Well, the world of 3-D printing makes this clear. Let's go to sketchfab.com. Here, we see all kinds of shapes, from cars to characters that could be in a sci-fi film. They're made of planes. You can tell when you view a shape's underlying wireframe. Here's a piece by Dr. Henry Segerman of Oklahoma State University. When we make its wire frame visible, we see the flat polygons that are stitched together to make the shape, even with its apparent smooth curvature. On Sketchfab, shape after shape is created in this way. This isn't distinct to 3-D printing. Characters in Pixar movies, for instance, use wireframes, too. Generally, the natural shape being modeled isn't comprised of polygons, but we can approximate it with these shapes. In this MOOC, we will use a linear process to read handwriting or find similar movies from a data set of user ratings. We will rank sports teams or create predictions of future games. Now, will our algorithms be perfect? Can we perfectly predict future sporting events? Will we read anyone's handwriting? No, our goal is to do well overall. If you zoom close enough in to a wireframe on Sketchfab, the underlying shape may not be recognizable. But from a distance, you may not know. Like the Chamber Maidens. They are stitched out of polygons? Well, from here we can postulate, but, again, we don't know. In this MOOC, our goal with linear processes is often to model the world or, loosely, to look at the world as if it is linear. So for this exploratory exercise, you will go to sketchfab.com and explore 3-D models. In the video with the activity, I'll show you how to find different models and view the associated wireframes. Find ones you like and look at the wireframe that creates the shape. Have fun exploring the site. In time, we'll be doing math with equations, but for now let's be sure that we see the power of approximating the world with linear processes. And then one last thing-- if I say, X minus 5 equals 10, what's X, that's easy enough. But can you think of an application of this type of problem? What type of applications can you think of that use this type of equation? We'll talk about these 1-D linear algebra problems next time. But for now, go to sketchfab.com and look at modeling the digital world using linear processes. Downloads and transcripts ",
                                        "unit_id":"8bdd7b4a013b440aa5b0fa7fb2cab323",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"536c6a9364d74258b9326d52b451a1e6",
                                "vertical_name":"Learning Goals"
                            }
                        ]
                    },
                    {
                        "sequential_id":"41d507b6050f4a3b9a622c590a963d96",
                        "sequential_name":"1.1 Exploratory Activity: When Life is Linear",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear modeling",
                                            "Wire frame",
                                            "Web browser",
                                            "Ghost character",
                                            "Number",
                                            "Explore",
                                            "Ll",
                                            "Refinement",
                                            "Select",
                                            "White",
                                            "Begin",
                                            "World",
                                            "Polygon",
                                            "Helpful",
                                            "Sketchfab",
                                            "Character"
                                        ],
                                        "data":" TIM CHARTIER: In this MOOC we'll often model the world with linear processes, which means we usually are approximating the world. Getting a sense of how linear modeling can be effective is the goal of this exploratory activity. We'll go to sketchfab.com and look at 3D sculptures. Look for ones you especially like and then look at the wire frames that made them. Try and find one that uses what you consider to be quite a few polygons versus one that doesn't take a lot. I'll show you a few in a moment when I log on to sketchfab.com. If you don't find two models that you like with distinctly varying number of polygons, then simply look for one model that has areas in the sculpture that have a coarser and finer grid of polygons. Why do you think the artist who made the sculpture used more or less polygons on the piece or in that region of the piece? Looking at algorithms that you or others implement in analyzing why we see what we are seeing will be an important skill in this MOOC, so we'll start here and begin thinking this way. Enjoy exploring images and shapes. Now let's dive into Sketchfab together and look at a few models. So let's see how to explore sketchfab.com to see when the world, or at least the digital world, of characters and models can be done in linear ways. So first we launch a web browser and then we put in sketchfab.com. Once I get there I have a number of ways that I can explore the community and look through various wire frames. So I'm going to look at the staff picks that they have right now, and I just need to select a model so I'll select this one over here on the right. Here's the model. I can rotate it around and look at the character, and then I go over here and I can say, you know what? I want to see the wire frame. You can select the color. I'm going to select white and there it is. Look at the amount of refinement needed. Look at all those polygons needed for the face to get the refinement that we see. Toward the top we see much less, and there's relatively less needed for, I presume, this ghost character up here. Well, let's go back and look at another one. So now we can try this character here. There we go. So we have the character and we can turn on the wire frame. Let's try red. And now we see much less polygons needed. So this is the type of thing I'm asking you to look for. Where do you see more, where do you see less, and can you begin to think why? Sometimes it helps to look at another color. White may be helpful, yellow might be helpful depending on the particular colors that you have. Sometimes it's helpful after you see it to turn it off and see if you can see the polygons. It isn't easy because they've been designed with these textures that sometimes makes the polygon seemingly disappear. So explore sketchfab.com and look at the models and see how this modeled world is being done in linear ways. Have fun. Downloads and transcripts ",
                                        "unit_id":"37875f75f60040a492d9df3127f11f3f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"35b09b387b354a1593d9f368e638069b",
                                "vertical_name":"Activity: Finding Linear Art"
                            }
                        ]
                    },
                    {
                        "sequential_id":"27344d8cdbf44524ae27e3493f1191a0",
                        "sequential_name":"1.2. Being 1 Dimensional",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Percent sign",
                                            "Computer graphics",
                                            "Linear inequality",
                                            "Linear equations",
                                            "Book covers",
                                            "Magic trick",
                                            "Linear algebra",
                                            "Linear equation",
                                            "Linear term",
                                            "Magic",
                                            "Linear",
                                            "Algebra",
                                            "Step",
                                            "World",
                                            "Xy",
                                            "Mathematically",
                                            "Final",
                                            "Equation",
                                            "Pick",
                                            "Book",
                                            "Important",
                                            "Trick",
                                            "Chose",
                                            "Writing",
                                            "Thing",
                                            "Predict",
                                            "Math",
                                            "Ll",
                                            "Term",
                                            "Life",
                                            "Time",
                                            "Variable",
                                            "Number"
                                        ],
                                        "data":" TIM CHARTIER: In our MOOC, we're going to be working with applications of linear algebra. So we need to talk about what does it mean to be linear? Often, we talk about linear equations, so what makes a linear equation? A key to this is the word \"line.\" That is a substring of the word \"linear.\" A line is an example of a linear equation. For example, y equals 2x minus 5 is a linear equation. A linear equation is an equation in which each term is either a constant or the product of a constant and a single variable that's taken to the first power. So let's unpack that definition a little bit. We see all the components in the equation we looked at earlier-- y 2x minus 5. First, we have an equation since we have the equality. For example, y is less than 2x minus 5 isn't a linear equation, but instead, is a linear inequality. Then all the variables that we see-- in this case, we have x and y are to the first power and are essentially alone. If we had xy minus x equal 5, then we don't have a linear equation. Since we have xy, the equation is non-linear. So y equal 5 is a linear equation. Remember, y equal 5 is a line in two dimensions. But y squared equals 5 is not a linear equation since the variable y is taken to the second power. Keep in mind, an equation like cosine x equal 1 is an equation, but isn't linear, because cosine x isn't a linear term. This is very important in this MOOC. We're going to model our world with linear equations. I like to talk about this as, we are looking for when life is linear. In fact, we're usually talking about when life can be modeled as linear. This is why the book that is connected with this MOOC is called \"When Life Is Linear-- From Computer Graphics to Bracketology.\" It's published by the Mathematical Association of America. The book covers many of the ideas of this MOOC in printed form. So when is life linear? Well, it helps to know when something is and is not linear. Let's look at an application that is linear. And our application will be a magic trick. So here we go. Think of a number between 1 and 20. Now double the number. Now add eight. Divide by 2, and now subtract your original number. OK. So now that you've done that, I'm going to predict your number. Let's see if I can get through the power the power of MOOCdom, the power of DavidsonX. I predict that you have four. Now, if you did your math right, I should have gotten it. But how do I know that? Well, I used algebra. And not surprisingly, I used linear algebra. Before I show you how, let's put what we're about to do in context. Again, this MOOC uses linear algebra. In two dimensions, we're talking about a line. In three dimensions, we're talking about a plane. In this MOOC, we're going to look at two dimensions, three dimensions, and hundreds of dimensions. The magic trick I just did was in one dimension. So at the end of the last lecture, I mentioned the problem x minus 5 equal 10. Did you think of an application that would use this? Well, this magic trick is my application. An important step in applying math is writing the problem mathematically. So that's what we're going to do for the magic trick we just looked at. When we write out what we're doing algebraically, or in algebra, that allows us to see how the trick works. That's what we'll do often in this MOOC. By writing things in linear algebra, in modeling the world linearly, we are able to see things that otherwise might seem surprising or mysterious. So in algebra, we use letters for the unknowns. For instance, x minus 5 equal 10, which in a sense is a puzzle asking us to find x. What's x? I don't know, at least directly from the equation without doing some math. So it's an unknown. For x minus 5 equal 10, I have one unknown and one equation. For the magic trick, I don't know the number you picked. Note, I never actually mentally predict the number you picked, either. So your picked number is an unknown to me. And I'll denote it with the variable x. Now, I asked you to double the number. Mathematically, this can be written as 2x. Then I asked you to add eight. So that's written as 2x plus 8. Then you divided by 2, which leads to 2x plus 8, that quantity, divided by 2, which simplifies to x plus 4. Do you remember the next step in the trick? You subtracted the number you picked. I never knew the value of the number that you picked, but I did know that it equaled x. More importantly, I know that subtracting x from x plus 4 will give me 4. That's exactly how I knew that if you did your math right, you got 4. Well, that's part of linear algebra. It uncovers things mathematically. So my magic trick was really algebra rather than magic. In fact, this trick is linear algebra since our computations used terms like x, 2x, and 2x plus 8, which are all linear terms. Now let's think a bit more about my never needing to know your original number. Think about it. It wouldn't have mattered if you selected a number like negative 500, 2 million, or even pi. Whatever you chose as x, your final value would always equal 4. This trick relied on algebra in which all the terms were linear. Let's try another magic trick. OK, this time pick a number between 10 and 83. Find the sum of those two digits. For instance, if I picked 21, then the sum is three since that equals 2 plus 1. Now take the sum and subtract it from the number you originally chose. For me, I'd subtract 3 from 21. Now look at the table on the screen. Find the number you just computed using subtraction and concentrate on the character to its right. For example, if I ended up with five, then I would be concentrating on the percent sign, as you see on the screen. So again, find the number you just computed and concentrate on the character to its right. Now, let me see if I can figure out the character that you're concentrating on. Keep concentrating. The character is the asterisks. Did I get it? Well, how did that work? Well, let's try it one more time. Again, pick a number between 10 and 83. Find the sum of the two digits that you just formed, or of the number you just chose. Now subtract that sum from the number you originally chose, just like you did before. Find the number you just computed in the table on the screen-- this is a new table-- and concentrate on the character to its right. OK. Just like before, keep concentrating. This time, the character you're looking at is the percent sign. OK. Let's see how this works. Now, is this really based on linear terms like before? It is, but it can be harder to see. In fact, for me, I already knew this trick, but I had never really thought about whether it used linear algebra or not. That's one of the things that we'll be able to do in the exercise, the exploratory activity, with this particular lecture. OK, so back to trick. The trick to the trick is writing the number you originally chose as 10a plus b. So a is the first digit and b is the second digit. So a would be 5, and b would be 1 if you chose 51. Now, remember, you're subtracting the sum of the digits. So the sum of the digits would be a plus b. So that means that what you end up with is 10a plus b-- that's your original number-- minus a plus b. Well, if you work that out, if you write that down and look at it, that equals 9a. OK, now think about that for a second. 9a, what does that tell us? That tells us that no matter what you chose, after the computation, after that subtraction, you have a multiple of nine. Now look at the table. Look at the multiples of 9. They all are the same character. Now, to make that a little harder to see, I randomized all the other characters, and then I did one last tricky thing. I made the element next to 81 something else. Why? Because if you picked 83, then when you added the digits and subtracted, you would get 72 as your final number. So 81 isn't an attainable value. So I made it something else to possibly disguise how that trick is working, to make at least one of the multiples of 9 a different number. OK. Now it's time to have you working on this. First, we need to keep identifying things as linear or nonlinear. We also want to take applications and think of them mathematically. In this lecture, our first magic trick had one variable, and we called it x. We wrote it in algebra, and we saw it was linear. Another goal of this exercise is to think creatively about the topic, and frankly, to have some fun as we work with our goal of identifying equations as linear or non-linear. So let's delve further into math and magic like the trick we just saw. If you pay attention, you'll see these types of tricks posted on Facebook and zipped around through email. Create or find a magic trick that is based on math that can be written down as a process of linear operations. In the first trick, we used linear terms to create the trick. In the second trick, the underlying math used linear operations on our unknowns of a and b. What trick do you find? You can, if you like, create an adaptation of mine. You can also create something that while adapted can feel different. So let's see what we come up with. And let the magic begin. Downloads and transcripts ",
                                        "unit_id":"992e503e9e534320a409879253871dfd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1889bfe3fe4e4961a5ec4d11c45e86ab",
                                "vertical_name":"Learning Goals"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5e1b7f36ef314192947b3af9c4e1edf9",
                        "sequential_name":"1.2 Exploratory Activity: Being 1 Dimensional",
                        "verticals":[]
                    },
                    {
                        "sequential_id":"2a22143793d2408db5566cddd7eb6a0a",
                        "sequential_name":"1.3 Matrix Magic",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical structures",
                                            "Square matrix",
                                            "Magic trick",
                                            "Linear",
                                            "Ll",
                                            "Magic",
                                            "Worked",
                                            "Called",
                                            "Trick",
                                            "Choose",
                                            "Final",
                                            "Number",
                                            "Matrix",
                                            "Row",
                                            "Column"
                                        ],
                                        "data":" TIM CHARTIER: So far we've worked with 1D linear algebra, which has given us a little review of what it means to be linear. I also created a magic trick. In this lecture, we're going to step into using matrices. And we'll do it with a quite effective magic trick. The trick indeed uses a matrix. Since this trick is one that I've performed on stage, we're here at the Duke Family Performance Hall that hosts performances by the Davidson College Theater Department, The Davidson Community Players, which is our local theater company, visiting productions, and even the Royal Shakespeare Company in a multiple-year residency. Let's set this trick in context. In this course, we'll use matrices, which are essentially tables of numbers. However, we'll see them as mathematical structures since we'll perform mathematical operations on them. For now, we'll simply use a matrix. Every entry in the matrix is called an element. A matrix that has the same number of rows as columns is called square, otherwise it's rectangular. Our trick will use a square matrix. So here's the trick. I want you to pick an element in the matrix and circle it. Then cross out every other element that lies in the same row as the element you chose. Then cross out every other element that lies in the same column as the element you chose. For example, if I choose 6 in the second row. Then as you see on the screen, I cross out all the other elements in that second row and all the other elements in that second column. Then I choose another element. For example, I could choose the 9 in the third column. Then I cross out all the other elements in that third column and fourth row. I'll keep going until I pick six elements. Every other element should be crossed out. I'll do this on the screen for what we have. I've picked 6 and 9. Now I'll choose 5 in the upper left-hand corner. I cross out everything that's in that first row and first column. Now all choose the 0 in the second to last column of the matrix. Then I zero out all the other elements in that row and column. Then I'll choose the 5 in the last column. And again, I cross out the corresponding row and column elements. And I'm left with my final choice, the remaining 5 in the matrix. And where's the magic? That's contained in this envelope, but I won't reveal the magic. I want you to give this a try. So I'll clear the board. And it's your turn. Now, you stop the video and pick your own numbers, and cross out the remaining elements in the row and columns corresponding to that element. Then hit play and we'll move forward with the trick. So stop the video and give it a try. OK. You have your six circled numbers. Now, add those numbers together. Now, through the magic of DavidsonX, I'll try to take your number out of the screen and toss it into this envelope. So here I go and all right. So now I'm going to open it up and see what I predict. My prediction is 30. Did I get it? More importantly, did you see how it worked? Well, let's return to the numbers I had earlier. We see the circled numbers, and again, we add them up. And the sum will be 30. In fact, of course, I knew it was 30. Which is, in a way, the magic that we're looking at. And the real magic is the math behind the magic that we're going to learn. Remember, I crossed off a row and column every time I picked a number. So only one number appeared in the final six from every row and every column. That's hard to see some times. So if it is for you, try again and look at your final answer and look at the matrix. Notice, again, how there's only one number from each row ",
                                        "unit_id":"a34fdf879f0547c8a82cb0cb5e24632d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ac57b7b3bc95426aa182de22f3e13315",
                                "vertical_name":"Learning Goals"
                            }
                        ]
                    },
                    {
                        "sequential_id":"114aa117bdf842b8b8a4e2e7390b4ac3",
                        "sequential_name":"1.3 Exploratory Activity: Matrix Magic",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "York city",
                                            "Underlying structure",
                                            "National museum",
                                            "Magic trick",
                                            "Duke",
                                            "Gardner",
                                            "Structure",
                                            "Piece",
                                            "Ll",
                                            "Pick",
                                            "Museum",
                                            "Surprising",
                                            "Exhibit",
                                            "Make",
                                            "Trick"
                                        ],
                                        "data":" TIM CHARTIER: In this activity, you'll get to make one of your own tables like the one I used when I was in Duke Family Performance Hall at Davidson College. But first, let's review how to make one of those matrices for these tricks. And for that, I'll use the whiteboard. So the first thing you need to do is decide how big of a table are you going to use. I'm going to pick a small one so that it goes relatively quickly for us. So I'm going to make mine three by three. Now what I want to do is I want to assign each row and column a number. So I'm going to do one, and then four, and zero. And then two, one, and three. Those will be my numbers. Now, for each element, I let it equal the sum of the number for its row and its column. So 1 plus 2 is 3. 1 plus 1 is 2. 1 plus 3 is 4. Then here, it's 4 plus 2 is 6. 4 plus 1 is 5. 4 plus 3 is 7. And finally, 0 plus 2 is 2. 0 plus 1 is 1. 0 plus 3 is 3. And there I have it. Now, what will the prediction be? One way to think about that is just to do the trick. But you just take the sum of those numbers for the rows and columns. And that will give it to you. So I have 4 plus 1 is 5. And I have another 5 here, which is 10, plus 1. So my prediction will be 11. Now, you don't want to write that on the board or on the piece of paper. Like at Duke, you want to actually put it on a separate piece of paper that you give to the person before they do the trick. And then they can hold it, or your can give it to someone else. Let's try the trick here, just to review those elements. So pick any number. All right. I'll pick the three. And I cross out the row and column in which it resides. Now pick another number. OK. I'll pick the one. And then I cross out, and then that leaves me the seven. Then you ask them to find the sum of those numbers. 1, 7, 3-- and indeed, that's 11, which is exactly what I predicted. So that's what you'll get to do. So you can do this with larger matrices. Three by three is probably not the best, just because it's small. But you can do it. It depends partially on the age of the person you're trying it on. And then you can actually look at it. So you can do five by five, or four by four, or go for six by six. Now, I want to show you another one of these matrices. The one that you see on the screen is from an exhibit called the sixth sense-- like the number six. And it's at the National Museum of Mathematics in New York City. The exhibit is one of the exhibits at the museum that honors Martin Gardner, who we talked about earlier. In fact, Gardner selected this as one of the exhibits that should be in the museum from his extensive writings. Why? Because it's so surprising when it's done. The fact that Gardner said that this trick was especially surprising is saying a lot, because so much of his writings had surprising elements. So you'll create your own matrix, and then perform it on someone. Are they surprised? Were you surprised when you saw it? Notice how there's underlying structure in the matrix. But unless you're told what that structure is and how that structure led to the matrix, it can be hard to see. Linear algebra will enable us to uncover structure and information within matrices. For now, we'll use that structure of this matrix to be magical. So now, it's time for you to make your own version of this matrix and try it as a magic trick. Downloads and transcripts ",
                                        "unit_id":"4f3f9ca467d8424182b521806fc629c6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4b137f0242514632bd1eca3eb47aef40",
                                "vertical_name":"Activity: Build Your Own Matrix"
                            }
                        ]
                    },
                    {
                        "sequential_id":"90ba413bccf04c8b9efcd1b8e7e7eb42",
                        "sequential_name":"1.4 Spying Submatrices",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Grayscale images",
                                            "Online software",
                                            "Mathematical object",
                                            "Question marks",
                                            "Lion cub",
                                            "Everyday life",
                                            "Chosen",
                                            "Data",
                                            "Cub",
                                            "Size",
                                            "Important",
                                            "Plot",
                                            "White",
                                            "Life",
                                            "Matrix"
                                        ],
                                        "data":" TIM CHARTIER: The power of a matrix comes through its properties as a mathematical object, and not just as a structure for storage. Let's begin with the anatomy of a matrix. The matrix A that you see on the screen has two rows and three columns, and is said to be a two by three matrix. If you want to talk about the element in the first row, second column, which is a zero, then you refer to this as the 1, 2 element in the matrix. Sometimes matrices come from large data sets, and the best way to get a sense of the data is to plot it, sometimes called a spy plot. Let's work with the matrix that you see on the screen. Do you see structure in this matrix? Look carefully. Whether you see it or not, an easier way to see that structure is indeed to plot the matrix by putting a white square in the place of every zero element, and filling it with black otherwise. For this matrix M, the spy plot is what you see on the screen. Now compare that to the matrix. Can you see the structure now? Can you return to the matrix and quickly see the structure that you see in that spy plot? Can you imagine the structure in the matrix simply by looking at the plot of the matrix? These are important skills in working with data sets, and they can be what gives us insight on the underlying data. To see how we're doing this, let's try another plot of a matrix. How about this matrix? What structure would there be in the underlying matrix for this picture? In fact, could you write down the matrix that I used to produce this image? In many cases, this can be done much quicker by looking at the image than looking at the large matrix of numbers that produced the image. The matrix M that we saw earlier appears within the larger matrix that produced the image we just saw. We call M a sub-matrix. Pictures can be stored as matrices. For example, grayscale images are matrices with values between zero and 255. I think of zero as off or black. Essentially I'm standing in the dark. 255 is fully on or white. Everything in between is a gray value on the spectrum from black to white. With this in mind, for fun let's look at three more images. See if you can think of the matrix that I used to create the image. In each case, I literally did create a matrix of numbers and then graph it. So see if you can figure them out. In this case, I'm not going to tell you what I did. Why? I want you to come up with how you would do it. If you're not sure, then let it remain as something you can think about. That's important in life. Life has its question marks. And those are the areas where you make discoveries and gain new insight. Regarding these images, I programmed a computer, in each case, to create the matrix. What is the structure of the matrix? If you program, you might want to create your own version of the image. If you don't program, just have fun looking and thinking about it. Programming and just looking and thinking about the structure of images and the associated matrices are both good skills and can often be done in everyday life on the images that surround us. OK, how did you do? You may want to step through them again to see what you can figure out. Now let's create a graphic that uses sub matrices. We'll use the images of the lion cub and the adult lion that you see on the screen. Now remember, I'm somehow going to use a submatrix-- in fact, submatrices-- to produce a new image. So here's the image. Can you figure out how I produce them? Take a moment and consider it. You might want to pause the video, as I'm about to tell you how I created these new images. OK, these new images were created by randomly choosing a pixel location in the image of the lion cub. Then a random size of a submatrix was chosen within a particular range of options. Then each of the submatrices of the chosen size, with its upper right-hand corner at the chosen pixel location, were swapped between the images of the cub and the adult lion. Doing this several times formed the composite images that you see. So, here's your assignment. We'll use online software we've developed for this DavidsonX MOOC for you to create your own composite images. Remember, the images have to be the same size, and that's really about it. You'll have parameters that you can alter. So see what you can create through a bit of randomness, and by altering small pieces of a larger matrix. Have fun, and explore matrices and submatrices. Downloads and transcripts ",
                                        "unit_id":"093cf44fc8f24a0aa9ddf9eab1932274",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2a28abb5d2de4f6db529692e558d7c4a",
                                "vertical_name":"Spying Submatrices (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"1e1e520755774ecf8de8c2143f48e8c0",
                        "sequential_name":"1.4 Exploratory Activity: Spying Submatrices",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "White spots",
                                            "Pablo picasso",
                                            "Lion cub",
                                            "Graduate school",
                                            "President obama",
                                            "Instructional technology",
                                            "High school",
                                            "Good idea",
                                            "Linear algebra",
                                            "Friendship network",
                                            "Online code",
                                            "Image manipulation",
                                            "Picasso",
                                            "Large",
                                            "Code",
                                            "Reload",
                                            "Friendship",
                                            "Created",
                                            "Davidson",
                                            "Element",
                                            "Kristen",
                                            "Find",
                                            "Facebook",
                                            "Mooc",
                                            "Generate",
                                            "Size",
                                            "Create",
                                            "Row",
                                            "Ll",
                                            "Image",
                                            "Matrix"
                                        ],
                                        "data":" TIM CHARTIER: Plotting matrices, as we saw in the lecture, can enable us to graphically see the structure of a matrix. This can be important for large data sets and even interpreting the structure of a matrix in the context of an application. For example, here is a spy plot of a matrix containing the friendship network of my friends on Facebook. Every row corresponds to a person. So Row I, for instance, associates with someone, and Column I is associated with that same person. A specific element of the matrix has a 1 if the people associated with that element's row and column are friends on Facebook. So we are seeing dark spots in the matrix where there are friends and white spots where they are not. There doesn't appear to be much structure in my friendships. But suppose I re-order the rows and columns. Why? Well, the picture really indicates why. Take a look at the spy plot now. Now, we see sub-matrices with a lot of blue. These are groups of my Facebook friends that know each other. One group is from high school, another from graduate school, and another from here in Davidson, where I teach and live. How do I know how to re-order? That's actually a topic of Part 2 of this MOOC. The structure and nature of sub-matrices comes up in other applications, too. Given how important looking at graphical image of sub-matrices is, this activity looks at matrices in this manner and allows you and asks you to spot sub-matrices. In particular, our matrices come from pixel information of images. So we will look at images and work with sub-matrices of them. Using the online code we've made for you, you'll use two images of the same size. Then the code will swap random sub-matrices of those images. Once the new images are created, take a moment and find where the sub-matrices were swapped. As we discussed, seeing that structure of matrices visually can be a powerful tool. Here, we'll do this with image manipulation. We'll share our work in a gallery so we can learn from each other's creativity. A tutorial by Kristen Eshleman will show us how to use the gallery. Kristen is the Director of Instructional Technology here at Davidson College. On the MOOC page, you'll also find some materials addressing copyright, since we will be working with images. When you complete this activity, remember that the content of this MOOC is available all at one time. So you may want to return and see what others have done later. But first, let me show you the software that we've made to create images by swapping sub-matrices. So let's see the software that we've created for you to swap sub-matrices. You'll find the software at math365.org/lifeisli near/Picasso/Picasso.html. We called it Picasso because it reminds us of some of Pablo Picasso's artwork. We, of course, do it computationally using linear algebra. The first piece that you'll be able to create uses the adult lion that you see on the left and the lion cub that you see on the right. Then below that, you see that you can specify the minimum and maximum size of the sub-matrices. Sub-matrices can be a rectangular matrix, but in this case, we'll take them to be square. Then you specify how many sub-matrices you want swapped, and the default is 5. So hit generate. And then we'll see what we get. So there is our first image. If you like it, it's generally a good idea to Right Click and Save As, save the image as. Or you can just take the image and drag it, depending on your software. If you don't like what you got or you want to see something else, then just hit Reload and then continue and look at the image. So here's our second one. And I'll do it one more time. You can continue to look if you really think you have a nice idea. Now, you can also choose your own images. So here, I'm going to choose the White House portrait of former President Bush and the White House portrait of President Obama. And then, again, I can say please generate the swapped images. And there I go. Now, that one, I'm not very fond of that. And I also kind of notice that these sub-matrices are smaller because these images are rather large. So I'm going to go between 100 and 150 so they won't all be the same size. And I'll say, you know, I'm going to try 10 of them now. And I can say generate. There I go. And then I can say, you know, I'm going to try it again. So I can reload, and look again. And there's another one. And then try it one more time. You can look for ones that you particularly like, that give the kind of impression that you're trying to actually work with. So there you go. So when we go back, these are the various options you have so that you can become a computational Pablo Picasso using linear algebra. Have fun. I look forward to seeing what you create. End of transcript. Skip to the start.Start of transcript. Skip to the end. TIM CHARTIER: Plotting matrices, as we saw in the lecture, can enable us to graphically see the structure of a matrix. This can be important for large data sets and even interpreting the structure of a matrix in the context of an application. For example, here is a spy plot of a matrix containing the friendship network of my friends on Facebook. Every row corresponds to a person. So Row I, for instance, associates with someone, and Column I is associated with that same person. A specific element of the matrix has a 1 if the people associated with that element's row and column are friends on Facebook. So we are seeing dark spots in the matrix where there are friends and white spots where they are not. There doesn't appear to be much structure in my friendships. But suppose I re-order the rows and columns. Why? Well, the picture really indicates why. Take a look at the spy plot now. Now, we see sub-matrices with a lot of blue. These are groups of my Facebook friends that know each other. One group is from high school, another from graduate school, and another from here in Davidson, where I teach and live. How do I know how to re-order? That's actually a topic of Part 2 of this MOOC. The structure and nature of sub-matrices comes up in other applications, too. Given how important looking at graphical image of sub-matrices is, this activity looks at matrices in this manner and allows you and asks you to spot sub-matrices. In particular, our matrices come from pixel information of images. So we will look at images and work with sub-matrices of them. Using the online code we've made for you, you'll use two images of the same size. Then the code will swap random sub-matrices of those images. Once the new images are created, take a moment and find where the sub-matrices were swapped. As we discussed, seeing that structure of matrices visually can be a powerful tool. Here, we'll do this with image manipulation. We'll share our work in a gallery so we can learn from each other's creativity. A tutorial by Kristen Eshleman will show us how to use the gallery. Kristen is the Director of Instructional Technology here at Davidson College. On the MOOC page, you'll also find some materials addressing copyright, since we will be working with images. When you complete this activity, remember that the content of this MOOC is available all at one time. So you may want to return and see what others have done later. But first, let me show you the software that we've made to create images by swapping sub-matrices. So let's see the software that we've created for you to swap sub-matrices. You'll find the software at math365.org/lifeisli near/Picasso/Picasso.html. We called it Picasso because it reminds us of some of Pablo Picasso's artwork. We, of course, do it computationally using linear algebra. The first piece that you'll be able to create uses the adult lion that you see on the left and the lion cub that you see on the right. Then below that, you see that you can specify the minimum and maximum size of the sub-matrices. Sub-matrices can be a rectangular matrix, but in this case, we'll take them to be square. Then you specify how many sub-matrices you want swapped, and the default is 5. So hit generate. And then we'll see what we get. So there is our first image. If you like it, it's generally a good idea to Right Click and Save As, save the image as. Or you can just take the image and drag it, depending on your software. If you don't like what you got or you want to see something else, then just hit Reload and then continue and look at the image. So here's our second one. And I'll do it one more time. You can continue to look if you really think you have a nice idea. Now, you can also choose your own images. So here, I'm going to choose the White House portrait of former President Bush and the White House portrait of President Obama. And then, again, I can say please generate the swapped images. And there I go. Now, that one, I'm not very fond of that. And I also kind of notice that these sub-matrices are smaller because these images are rather large. So I'm going to go between 100 and 150 so they won't all be the same size. And I'll say, you know, I'm going to try 10 of them now. And I can say generate. There I go. And then I can say, you know, I'm going to try it again. So I can reload, and look again. And there's another one. And then try it one more time. You can look for ones that you particularly like, that give the kind of impression that you're trying to actually work with. So there you go. So when we go back, these are the various options you have so that you can become a computational Pablo Picasso using linear algebra. Have fun. I look forward to seeing what you create. Downloads and transcripts ",
                                        "unit_id":"32c26f767d314c5d89232cfa8d385be9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"237570dba5c7441e853473dfa1ec598a",
                                "vertical_name":"Activity: Submatrices"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a6ed51dd063f40129dad0c2a95c27dcc",
                        "sequential_name":"1.5 ASCII Art",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square space",
                                            "Web page",
                                            "Linear algebra",
                                            "Marilyn monroe",
                                            "Mona lisa",
                                            "Grayscale images",
                                            "Element",
                                            "Explore",
                                            "Submatrices",
                                            "Grayscale",
                                            "Digit",
                                            "Learning",
                                            "Approximate",
                                            "Fill",
                                            "Ll",
                                            "Average",
                                            "Back",
                                            "Matrix",
                                            "Created",
                                            "Number",
                                            "Image",
                                            "Replace"
                                        ],
                                        "data":" TIM CHARTIER: Mosaics approximate an image with tiles, which can be ceramic or photos themselves. Many beautiful mosaics have been created around the world. Mathematicians have also studied tiling and mosaic. Here's one I created of Marilyn Monroe with M&amp;Ms, using techniques in my book, \"Math Bytes-- Google Bombs, Chocolate-Covered Pi, and Other Cool Bits in Computing\". Note the less M&amp;Ms that I used, the more abstract the image becomes. We're going to learn to create a mosaic with a matrix, just with numbers in a matrix. Let's start with the matrix you see on the screen. Doesn't look like much, but let's back out. It could still be hard to see anything right now, so we'll back out again and again. Do you see it now? Look carefully. Here is a bit more of the matrix and then, finally, the full image. Do you see it now? Well, that is the image-- the well known image, of course-- of the Mona Lisa. Remember, this image that you're looking at is made entirely with numbers. Can you recognize where that original image or matrix was in the image? Remember that three-by-three matrix that we started with? It's part of the Mona Lisa's right eye. Here lies an important lesson in linear algebra. Sometimes we need an entire matrix to get insight about the underlying application. Other times, we just need those small submatrices. OK, back to the image. Take a moment. How did I create this? How do you think I created this? First, remember from last time how grayscale images are stored. Each pixel is a value between 0 and 255, with a zero being black and 255 being white. So the first step for me in creating the image is to break the interval from 0 to 255 into four intervals. The first interval goes from 0 to 63. The next is 64 to 127, then 128 to 191, and finally 192 to 255. Now I replace all the pixels that have values between 0 and 63 with a 5 or an 8. Any pixel that has a value between 64 and 127, I replace that by a 0 or a 3. All remaining pixels will be replaced by a 1. When there is more than one choice for a number, like choosing 5 or an 8, I pick the number randomly, as if I flipped a coin. Why did I make these choices? The darkest pixels are replaced by a 5 or 8, since that digit requires more pixels to draw than a 1, which replaces the lightest pixels in the image. How would you make different choices? You'll get a chance in the assignment, so think about that. So let's perform this replacement on the image of the Mona Lisa's eyes. Look carefully at the image. Do you notice anything? You may notice that Mona Lisa's face is actually thinner. Why? It turns out that typed characters, particularly in the font I'm using, do not fill a square space. The digits fill a rectangular space. See the text on the screen and notice how each letter fills a rectangular space. So each character is almost twice as tall as it is wide. So we will adapt our algorithm to match this, what's called aspect ratio. Now we'll replace two pixels with a number. So we take two by one submatrices of the larger matrix, which should have an even number of rows for this to work out nicely. Let's see the steps on the matrix that you see on the screen. We break the matrix into non-overlapping, two-by-one one submatrices matrices, again, as you see on the screen. Here's the last step. Replace each submatrix with a single element equaling the average of the elements in the corresponding submatrix. For instance, the submatrix in the top left is 71, 174. So we replace that submatrix by a single number. It equals the average of those two numbers, which of course equals 71 plus 174 divided by 2, which equals 122.5. When we do this for every submatrix, we get a matrix with half as many rows and the same number of columns as the original matrix. The number we just placed is the average grayscale value over the two pixels. We replace that value with a digit that will approximate the grayscale value that is the average of the other two. So we had 122.5 as our average earlier. So from the intervals that we created earlier, that means that we would replace that with a 5 or an 8. How does this new algorithm do for the Mona Lisa? Here's the image. And as you see, we now have the proper proportion of her face and eyes. Here are the things for you to think about. First, can you remember the algorithm? What steps did we take? Learning to think in the steps of an algorithm can be very important in linear algebra. We'll be learning steps to create other graphics or to explore data sets for meanings. Second, how robust is this algorithm? What image do you think would look really nice? What image do you think would not work well for this algorithm? Thinking and exploring the limits of an algorithm are also important. Knowing when something will and won't work can be as important, sometimes more important, than knowing the steps of the algorithm itself. OK, go to the web page for this DavidsonX MOOC and explore making this type of image. It's called ASCII art. You'll again have parameters to explore as you push the limits of the algorithm, possibly improving it or decreasing its accuracy in approximating an underlying image. So it's time to explore and see what you can discover. Downloads and transcripts ",
                                        "unit_id":"539b6cf32fc741ed998ea1e52af17e62",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e6d267dee8a7412eb2a07c91b5421375",
                                "vertical_name":"ASCII Art (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e8428030e281442c9301ba4af4fbbbd1",
                        "sequential_name":"1.5 Exploratory Activity: ASCII Art",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascii art",
                                            "Step back",
                                            "Mona lisa",
                                            "Screen capture",
                                            "Courier font",
                                            "Great idea",
                                            "Bit",
                                            "Davidson",
                                            "Smaller",
                                            "Visual",
                                            "Ve",
                                            "Create",
                                            "Default",
                                            "Click",
                                            "Screen",
                                            "Generate",
                                            "Ll",
                                            "Make",
                                            "Show",
                                            "Idea",
                                            "Expect",
                                            "Created",
                                            "Simply",
                                            "Share",
                                            "Courier",
                                            "Algorithm",
                                            "Image",
                                            "Work"
                                        ],
                                        "data":" TIM CHARTIER: This activity lets you, again, tinker with code that we've produced for you. I will again produce an image. But this time, the image is a matrix. You'll be able to take a step back and see an underlying image in the matrix. For this, I want you to produce an image that you like. I also want you to produce an image that you're not as fond of. Learning to know the limits of algorithms, as we've already talked about, is important. Sometimes you might think of an idea that doesn't happen to work. And the issue is that it simply isn't applicable to the example that you're studying. You could have a great idea. But it just happens to be applicable in another context. So as you work with the code, keep the underlying algorithm in mind as you tinker. That will allow you to explore in informed ways, and create questions that you can answer by playing with the code. Further, can you describe what types of images you expect will work well? Then, can you describe what types of images you expect won't work well? Those will be the fundamental questions I want you to answer as you're playing and tinkering with the code. I really look forward to what you create. So we will, again, post what we've made, and share and learn from each other's creativity. But first, let me show you how to create the images using ASCII art with the software that we've created for you. Now we're ready to create ASCII art to look at what matrices can be, and structure. In this case, that's visual, that when you step back, you see an ASCII art image. So to get to the software, you want to go to lifeislinear.davidson.edu/asciiart.HTML. If you don't select your own image, then you get the Davidson College logo, as you see here. The default parameters is a height of 2 and a width of 1. And then we have default parameters for you in terms of the digits that will replace the pixel values to create image that you generate. And then, here you go. It's rather large. But you can see the image if you take a little bit of a step back. So that may be too big. I'll show you in a minute how to make it into something. But you might go, whoa. That's bigger than I want. So here I go. I can change it. Make it smaller. That's a little more manageable. And I might even want to make it-- what happens if I make it 8 by 4? Mm, that's pretty coarse. That one's kind of hard to see. So maybe I'll try 6 by 3. OK? So that's a little stronger. Now, maybe, instead, you want to actually try other types of parameters. So you can do that. And click Generate. And then you see the image with other things. And remember, they're not necessarily digits now. It's more of ASCII art where it isn't-- it's a matrix of ASCII characters, but not necessarily numbers. Now, you can choose your own image as well. And so I could click this image of the Mona Lisa. I'll keep it 6 by 3. I'll just keep the parameters I have, and click Generate. And there you began to see the Mona Lisa, as we saw in image. We had different defaults for that in there. So let me keep the Mona Lisa for a moment. And I'll make her just a tiny bit smaller. So I'll make it 8 by 4. There we go. So if I have an image like this, and I want to-- if it's small enough, I can just screen capture it. But if it's not, I can copy the image. So this is literally text. I copy it. And then I open something like Word or PowerPoint. And then you just paste it in. You paste in the letters. It's like, whoa. That looks terrible. You Select All. And then I simply want to select a Courier font. So I say, please, please give me Courier. And then I need to make it very small. So I'll make it-- let me try 6. Not quite. Let me try-- whoops. Let me try 5. 4. See if that-- yup. There it is. 4. And there is the image. That one's looking a little pixely on the screen. I got some room. So I'll make it 5. See what that does. Yeah. There it is. So I could screen capture this. That created an interesting visual effect. Or you can, on some software, you can say, make it like Acrobat. Save it or create a PDF. So I could say, please make it a PDF. And then I could actually see the image in that form. So that's what you want to do. And then we'll share our images and see what people create. And we'll see what kind of parameters you choose, and what images you choose. And remember, some images work better than others. So push the boundaries on this. See where it works well for you. And discover where it produces things that you're not as fond of. Have fun. ",
                                        "unit_id":"d807c4fd74004331a20dcae2f285f883",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3fb2ca695b9d4a79b1f36ecee887377d",
                                "vertical_name":"Exploratory Activity Overview"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"5ebe5623063e40a1b485254c40c254cb",
                "chapter_name":"Unit 2: Sum Matrices",
                "sequentials":[
                    {
                        "sequential_id":"f4f5235b864f40288290f01138170665",
                        "sequential_name":"Introduction and Learning Goals",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical operations",
                                            "Scalar multiplication",
                                            "Matrix addition",
                                            "Convex combination",
                                            "Computer graphics",
                                            "Color channels",
                                            "Linear algebra",
                                            "Image",
                                            "Learning",
                                            "Linear",
                                            "Ve",
                                            "Ll",
                                            "Matrix",
                                            "Learned",
                                            "Idea"
                                        ],
                                        "data":" TIM CHARTIER: Welcome to Unit 2 of our MOOC on applications of linear algebra. In Unit 1, we gained overarching perspective on what linear algebra is. Then we learned terminology, such as linear, nonlinear elements, and sub-matrices. We even did some image creation from these fundamental ideas. In this section, we learned to perform arithmetic on matrices. The ideas will be relatively simple and soon we'll see several applications for computer graphics. In particular, you will learn to perform matrix addition and what's called scalar multiplication. Then we'll talk about what are called linear combinations of matrices. And we'll work on a specific one, a convex combination. With these mathematical operations, we'll perform image manipulation. Like? Like having someone teleport from one location to another. We'll also learn to take an image and change the intensity of its color channels. Those two applications both rely on matrix addition and scalar multiplication, which will actually only take us a few moments to learn. In the last unit, there were quizzes after each section. In this unit, there will only be quizzes for a few of the sections. Quizzes test you on the fundamental mathematical ideas of the unit. Learning those ideas allows us to explore the applications in knowledgeable ways. In sections without a quiz, the exploration of the mathematical idea that you've already learned is the key learning goal. In a sense, we learn some math and then we get to play with it. In this unit, pay attention to how the basic mathematical operations of matrix addition and scalar multiplication can have multiple applications. Moreover by the end, you may have thought up some new ideas yourself. This is part of what I've been looking forward to in this MOOC. What will we create together? Our hope is that the software we've created encourages creativity, which can allow us all to learn. So let's learn some matrix arithmetic so we can start creating. ",
                                        "unit_id":"c39e70607f5c4961becdff643be40cec",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"77045f147c1e4dcc8812b9fbacfe5329",
                                "vertical_name":"Introduction to Unit 2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"70aeca04be834eb0bbbc4a8ea30fbef5",
                        "sequential_name":"2.1 Get Inverted",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mona lisa",
                                            "Scalar multiplication",
                                            "Blue channel",
                                            "Higher dimension",
                                            "Color image",
                                            "Matrix addition",
                                            "Red",
                                            "Equal",
                                            "Gray",
                                            "Scale",
                                            "Color",
                                            "Grayscale",
                                            "Scalar",
                                            "Intensity",
                                            "Blue",
                                            "Image",
                                            "Minus",
                                            "Ll",
                                            "Simply",
                                            "Addition",
                                            "Dimension",
                                            "Make",
                                            "Find",
                                            "Line",
                                            "Matrix",
                                            "Black",
                                            "Pixel",
                                            "White"
                                        ],
                                        "data":" TIM CHARTIER: We are now ready to do math on matrices. Our first operation will be addition. Let's see it in action. To add two matrices both matrices must have the same number of rows and columns. Then we add what's called element-wise This is easiest to see in an example. So consider the matrices that we have on the screen. We want to add A plus B. Now, first, we check those dimensions. Both matrices are two by three. So we can add them. The resulting matrix will also be two by three. The element in the first row and first column of the matrix that's the sum is 1 plus 0. The element in the first row and second column of the matrix that's the sum is 2 plus 4, which is 6. We simply continue this operation to find every element, as you see on the screen. That enables us to find the sum. Easy enough, it's almost too easy. This might seem like something that wouldn't result in interesting applications. We'll see a number of applications that use matrix addition, or scalar multiplication. For scalar multiplication, you are multiplying a matrix by a number like 4. To do that, you take the matrix and multiply each element by that scalar. If my matrix is 4, 3, and then the second row is 5, 1, and I'm interested in 4 times that matrix, then the resulting matrix would be-- the first row would be 4 times 4 and then 3 times 4. The second row would be 5 times 4 and then 1 times 4, which of course, is easy to do. And equals-- the first row is 16, 12 and the second row is 20, 4. What can we do with that? Let's look at a grayscale image of the eyes of the Mona Lisa. In a grayscale image, zero is black, or I think of it as off, the light is off. And 255 is white. The light is fully on. All the numbers between 0 and 255 are shades of gray between black and white. Suppose I take the matrix representing the gray scale values of the Mona Lisa's eyes. I add 40 to every element. What would that do? It would brighten the image, as you see on the screen. Now, that raises an important issue. In the software I use, if a pixel has a value of 250 and I add 40, then the new pixel has a value of 290. You could test for this and lower the value to 255. My software already knows this and treats 290 as 255, or white. So it's not like super white or something like that. You can also darken an image. You could subtract, but you could also use scalar multiplication. For example, suppose I take 0.8 times the matrix. Can you envision that? Let's look at that for the Mona Lisa's eyes. So now, let's do a bit more and invert the colors of a grayscale image. To do this, we want to change the pixel that's white, and that equals 255, and make it black, or 0. So we take white and we make it black. And we make black and make it white. That's inverting. Well, we can think of that as a line passing through two points. The point 255, 0, the pixel 255 becomes 0, and 0, 255. In other words, the point that's 0, or black, becomes 255. Well, we know how to find an equation of a line. You have two points. If you work it out, the slope would be minus 1. We already are given the y-intercept, which is 255. So the equation becomes y equals minus x plus 255. That's what I want to do for every pixel. I could do that, but I can also scale this up to a matrix that contains the intensity of all the pixels and use matrix arithmetic to do it all at one time. So let M equal the matrix of grayscale values that form the original image of the Mona Lisa. Let N equal the inverted image. Then we find N by computing N equals minus M plus 255 times the matrix 1. Now that 1 is a matrix the same size as M with all ones. Note how similar this is to the line we created. It's analogous, but now it's not simply a line, but in a way, it's a line, or a linear surface, in a higher dimension. Now let's play with this idea. In our formula, we have minus M. We can also look at this as minus 1 times M. To each element we are adding 255. Suppose we change those values. What if we change the minus 1 to a minus 0.5 and change 255 to something like 150. Now what happens? Soon, you'll have computer code online that you can test your hypothesis. But for now, what do you think would happen? Think about it and postulate. OK, now let's create another variation. We're working with grayscale as that enables us to work with just one matrix that contains the intensity of values from black to white. We can also work with color images. One way to store color is with three matrices, R, G, and B. Those matrices store the amount of red, blue, and green intensities that comprise a color pixel. Now, let's take this color image of the Mona Lisa. Again, we have three matrices. For our edited Mona Lisa, we'll let our new red intensities equal R minus 80 times that matrix that's of ones. This is the same as subtracting 80 from every element in the matrix R. This will darken the resulting red intensity of the pixels. For our edited Mona Lisa, we'll let the green intensities equal negative 0.75 times G plus 150. That is a lot like inversion, but now we have a slope of minus 0.75 rather than minus 1. And we add 150 rather than the 255 that we did earlier. Now finally, we have our blue channel. For the blue intensities, we'll compute minus 0.5 times the matrix B plus 200. What does that do? Well, when you combine that all together here's the resulting image. Well, what would you try? What values would you try? These are the ones I tried for an image that I liked what I got. But what would produce what you like? In fact, what image would you try? Rather than the Mona Lisa, what would you do? These are great questions that you can now explore. You'll find an application on the page for this MOOC to play around with these ideas. What images do you create? As we see each other's creations, do you get new ideas? What did they try that you haven't? It's time for us to learn that together. ",
                                        "unit_id":"f9d20c99de3c49ae9f628be0ab24f2ca",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b39063ed3ad7454082829a2effc00959",
                                "vertical_name":"Get Inverted (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"57189b3f9c004552b3629b487beb85de",
                        "sequential_name":"2.1 Exploratory Activity: Get Inverted",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear transformations",
                                            "Mona lisa",
                                            "Mathematical operations",
                                            "Color channels",
                                            "Web address",
                                            "Computer graphics",
                                            "Bill gates",
                                            "Original idea",
                                            "Red channel",
                                            "Green channel",
                                            "Blue channel",
                                            "Color",
                                            "Red",
                                            "Green",
                                            "Input",
                                            "Create",
                                            "Channel",
                                            "Bit",
                                            "Idea",
                                            "Invert",
                                            "Perform",
                                            "Begin",
                                            "Blue",
                                            "Important",
                                            "Ll",
                                            "Image",
                                            "Grayscale"
                                        ],
                                        "data":" TIM CHARTIER: Matrix arithmetic is a relatively simple mathematical operation. In this activity and the overall unit, we'll see a variety of ways we can use this in computer graphics. In a moment, I'll show you how to use the software that we've developed to adapt images of your choosing. When you first begin, you may just input values and look at the resulting image. If you do, please stop and try to explain to yourself why the image looks the way it does, given the values you inputted. In time, I want you to begin guessing what the resulting image will look like from your inputted values before you click and then see what results. When the resulting graphic doesn't meet your expectations, you may want to change the input values. But before doing so, try and learn from what did result from your input. Can you see why the image differed from what you expected? Then, as you continue to work with the code, do your expectations more frequently or better match the results of the computation? As you work, think about the following question. If someone asked you for tips on using the software, what could you say to help them? You'll be asked to talk about this in the reflection for this particular activity. Anticipating the results of mathematical operations is an important skill. Here, we're working to gain a graphical sense of what will happen as we work with images. We can learn a lot from attempts that failed to match our expectations. But to do so, we must stop and learn from an unintended outcome. This reminds me of a quote of Bill Gates, in which he stated, \"it's fine to celebrate success. But it is more important to heed the lessons of failure\". So with all this in mind, let's learn how to use the software that can invert images and create linear transformations from the color channels of pictures. So now we're ready to do linear transformations of the images. In the tutorial, we saw that you might want to invert an image that's black and white, or you can change the color scale of the image. So the particular site that you want to go to is lifeislinear.davidso n.edu/inversion.html. We're really doing more than inverting the colors, but that is the original idea, and so that was the web address that we have. So here are the different parameters. Remember that you can think of this as a line, mx plus b. So here, the m for the red channel will be minus 1, and then I'm adding the 255. So that's inverting the red channel. Then I get the green channel and then the blue channel. So here, I see that I'm actually inverting the entire image. And then I can select which channels I actually want to be taking advantage of. You could also ask that it be turned to grayscale. So I'll just take this as the default. And there I have the color Mona Lisa actually inverted. Now, remember, you don't have to use all of them. So I could say, well, let me take the red one off. It'll just remain the same. And I'll perform this on the red and green channels-- red and blue-- or green and blue, I'm sorry, channels. And then let's just try it one more time, just with blue removed. And there we go. So then you can actually change the parameters that you have. So you could try, like 1.5, minus 50, 2.2, negative 20, negative 1.5, and then 55. There. Let's try that. Those are literally random values. So what do we get? Oh, that's not bad. Mona Lisa, if she'd been sitting out in the moss for a while. So that's that particular image. And then you might be a little too green. So you could say, well, that's a bit green. So I want to change that a little bit. And there you pick up a few other tones that you have. Now it is different if, maybe, you just remove the green channel entirely. Oh, that's why. I didn't have the blue selected. Yeah. So I went and just made the red redder. So let's add the blue in. That's part of the reason it was so green. And, well, yeah. You kind of have the blue and the green combined. You can turn it to a grayscale initially and then perform it on those three channels. In grayscale, the images will be the same. So there's the grayscale, and there's the inversion performed on the grayscale. So sometimes that has a nice visual effect. Again, you can select your own image. You can select something else and try that. And then see what you can create. We'll share these with each other and see what we create and see if we get ideas from the ways that we have linear color transformation of images. Have fun. Downloads and transcripts ",
                                        "unit_id":"ff9a97ac13db4a158f32814bdf29c475",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6cd8267eb5cc4f3a90c81ca2db44df96",
                                "vertical_name":"Activity Overview: Get Inverted"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3d96a81af7384e7c99b822a594884b90",
                        "sequential_name":"2.2 Take the Combo",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Visual effect",
                                            "Linear combination",
                                            "Lion cub",
                                            "Alpha",
                                            "Simply",
                                            "Ll",
                                            "Scalar",
                                            "Pixel",
                                            "Animation",
                                            "Cub",
                                            "Talking",
                                            "Matrix",
                                            "Lion",
                                            "Information",
                                            "Image"
                                        ],
                                        "data":" TIM CHARTIER: In this lecture, we'll add two matrices to construct a visual effect. We'll take what's called a linear combination, which is simply a scalar times one matrix plus a scalar times another matrix. We'll use this to combine two images. We'll need to think a bit carefully, though, as simply adding images can result in a lot of values greater than 255. So we'll be thoughtful in our choice of those scalars. We'll still take a linear combination, but now we're going to try a very specific one. We're going to take alpha times a matrix plus 1 minus alpha times another matrix. Alpha is simply a number that we're choosing. For example, take alpha equal to 1/2. Then we have 1/2 times the first matrix plus 1/2 times the second. In this case, every pixel of the resulting matrix is half the value of one image and half the value of the pixel in the same location in the second image. It's simple, and it's quite powerful. Let's let our matrices come from the pictures you see on the screen of a lion and a lion cub. For simplicity, I'll simply say that there is a matrix storing the information of the image. If the image is 200 by 100 pixels, I would use three 200 by 100 matrices to store the red, green, and blue intensities. I could also store this in a matrix that is 200 by 100 by three. In a certain sense, this type of matrix has a depth of three. There are various ways to store the information, but I'll talk about the matrix, in the singular, since we are talking about one image. So let L be the matrix storing the information of the lion. Let C be the matrix storing the color information of the cub. What would 0.5L plus 0.5C look like? What do you think? Well, here it is. Now, notice you see elements of both images. This type of operation allows you to make an image transparent. For instance, you could try 0.25L L plus 0.75C. Here's another idea. I'll simply create 50 equally-sized, vertical strips of the resulting image. For the first strip, I'll let it equal 1 times L plus 0 times C. This can be viewed as alpha times L plus 1 minus alpha times C, where alpha equals 1. Well, that's just the lion. It's a very fancy way, but it's just the lion. Now, as we progress through the strips, we'll progressively increase alpha until for the very last strip we get 0 times L plus 1 times C. That's just the lion cub. Can you see what's happening in the middle? We're progressively increasing. Well, here's the resulting image. Do you see what happened? Indeed, we are beginning with a strip that contains the full pixel values for the image of the lion, then we are getting more of the cub and less of the lion as we progress through the image. For some, the image looks like one image until you look closer. That took a little planning and careful placement of the two images on my part. And when you play with this, you'll need to check that, too. In our next lecture, we'll talk about adapting this to animation rather than a still image as you saw here. So we'll stop here for now. It's time for you to experiment. What image would you try? What values would you use for alpha-- one value, or would you vary it? I really look forward to seeing what you try. The idea of the vertical strips came from a Davidson student, when he saw the types of animation ideas that we'll see in the next lecture. So I'm going to stop talking, so we can begin thinking, creating, and learning together. Downloads and transcripts ",
                                        "unit_id":"0ddc5dbccc27462a9db0ae4f81154910",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"475ec90b2f3c4ae09bdb9db013499b7f",
                                "vertical_name":"Take the Combo (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9add9d93818a41b482405afd0fadc3ff",
                        "sequential_name":"2.2 Exploratory Activity: Take the Combo",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Visual effects",
                                            "Visual effect",
                                            "Linear algebra",
                                            "Mathematical operation",
                                            "Convex combination",
                                            "Linear combinations",
                                            "Lion cub",
                                            "Shane",
                                            "Lion",
                                            "Pixel",
                                            "Ll",
                                            "Create",
                                            "Blend",
                                            "Code",
                                            "Fun",
                                            "Image",
                                            "Top"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In this activity, we're using the same mathematical operation as the last activity-- matrix arithmetic. But we explore a different visual effect. Note we are working with linear combinations, in particular convex combinations. Throughout the image, every pixel is created using an alpha times x, plus the quantity 1 minus alpha, times y, where x and y are the pixel values in the two images you'll select. Since x and y are values between 0 and 255, this means that the resulting pixel will also have a value between 0 and 255. As we create our blended images, let's think about the following. First, you'll be able to blend from right to left or top to bottom. So if you blend from top to bottom, does it make a difference which image is fully visualized on the top versus the bottom? If it makes a difference, can you gain a sense, by looking at the two images, where they should be placed? Which one should be the top? Which one do you think should be the bottom? Does the resulting image generally meet your expectations? Remember, this will require swapping the placement of the images so the image that was on top is selected for the bottom. This activity has a parameter that varies through the image and impacts two inputted images. Work with a variety of images and see what you can learn about your preferences and what types of images you tend to use for different visual effects. Again, we'll share our images in a gallery. Now, let me show you how to use the software. I'll use two images that a Davidson math major used as we developed this software. It demonstrates a creative way the software can be used. So let's learn to use the software now. OK. It's time to blend some photos using linear algebra, where we move from left to right and progressively increase the amount of one image versus another that we're using. So we default at the adult lion and lion cub that you see on the screen, and then you simply select blend from left to right. The webpage is math365.org/lifeisli near/blendphoto/blendphoto.html. Once you get that, you can generate, and there we have it. We have the adult lion and the lion cub, which almost looks like a single large cat picture but if you look carefully is not. Then you have this reverse, and that just flips what appears on each side. So now we go from the lion cub to the adult lion, rather than the other way around as we saw previously. You can also go from top to bottom. So this will have the adult lion on top and the lion cub on the bottom. And then you can also say reverse, and that'll put the lion on the bottom, which always looks like a lion cub with a beard to me. So those are the options that you have. And then you can try your own images. Again, you want them to be the same size. So we're going to try the two that we talked about in the lecture. We take Drew Gill, and we take Spencer Gill, who are both on the Davidson College swim team. This idea of trying the twins in their roster photos came from the student Shane McNamara, who create a lot of the codes that you're working with. And he wondered I wonder what that would look like. And we click it. At first, we actually weren't sure that the code worked, because it looks like one person. If you look carefully, you see that it's blurry, so that helps. But where you really see that you are doing this convex combination is here on the coat, because one of them had it more zipped up than the other. And of course you can try it the other way around to see if you prefer it. And to me, either way, it still pretty much looks like one person, which was fun for us. Now, it's important to note that this entire way of blending photos is actually Shane's idea-- Shane McNamara, the undergraduate. When he saw what I was doing with the blending photos and using it for animation, he wondered if this might be a way of actually working with the codes to create still images. So we coded it up, and now you're going to get to experiment with it. So be open to the ideas that you have. What ideas do you have? What images will you try? See if it works. See if it matches your expectations. As you go along, have fun experimenting and becoming more informed about how you can use convex combinations to create visual effects. Have fun. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"6c640f65061e46ab93587b398c92cc24",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6eda8f198a2b4449a48d95d07f5e4894",
                                "vertical_name":"Activity: Blended Photos"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6216d3389fa7496c8adc9d97e149bb32",
                        "sequential_name":"2.3 Fade Away",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Red box",
                                            "Convex combination",
                                            "Moving pictures",
                                            "Linear algebra",
                                            "Flip side",
                                            "York city",
                                            "Online software",
                                            "National museum",
                                            "Frame",
                                            "Noah",
                                            "Ll",
                                            "Depends",
                                            "Coefficient",
                                            "Software",
                                            "Alpha",
                                            "Back",
                                            "Mooc",
                                            "Create",
                                            "End",
                                            "Image",
                                            "Museum",
                                            "Teleport",
                                            "Disappear",
                                            "Front",
                                            "Matrix"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In the last lecture, we learned to use a convex combination of matrices to create a blended image. In this lecture, we adapt this idea to create an animation. In moving pictures, a series of still images are shown in quick succession. Our minds interpret it as movement. 24 frames per second is suitable for the movies we'll create, or you can slow it down. So now, let's go and see the type of animation that we'll be able to create. So we're going to work with matrices to create animations. To do what we're doing in this particular part of the MOOC, you need to have two images. You need to have the starting image and the final image. The first one we're going to do, we see Michaela in front of the entryway to the Museum of Mathematics in New York City. Then on the right, we see that same entryway without Michaela in the picture. Now, we're doing this as linear algebra, so we'll think of these as matrices. The picture with Michaela is the beginning image, so we'll call that matrix B. The matrix without Michaela will be denoted as F. Now in reality, these may actually each comprise of three matrices. The one that's Michaela may be three matrices containing the R, G, and B values. But I'll just again refer to those as just simply matrix B and matrix F. So what we're doing is we're taking a convex combination. So I will pick a value between 0 and 1 and place it in front of B. Then I will take 1 minus that value-- the value that will be within that gray box-- and that's what goes in this red box. That is the scalar coefficient of F. Once I have that, I'll add those two resulting matrices together. And that gives me C, which is the current frame that I will visualize in my animation. So I'll begin with B. I'll end with F. And then by letting the values in the gray box vary between 0 and 1, I'll end up with my animation. So here we go. If I let B equal 1, then I have 1 times B plus 1 minus 1, which is 0F, which is, of course, just B, our beginning image. On the flip side, at the very end, I'm going to let the value in front of B be 0. So 1 minus 0 is 1, which will be the coefficient of F. So therefore, I have the closing image. That'll be my closing frame of the animation. So here we go. I have 1B plus 0F, then 0.7B plus 0.25F, then 0.5B plus 0.5F, and finally, 0.25B plus 0.75F, and then finally, 0B plus 1F. So she disappeared. Well, let's have her reappear, just going backwards-- the other direction. And then I could have her disappear again. It's that simple. If you create more frames, the animation is even smoother. But remember, it takes 24 frames per second. So that also kind of helps you know how long the image will take to visualize. And that partially depends on how long you want it to visualize. Well, now let's look at another idea. But before we get there, let's remember that again, these are convex combinations. You can either denote it as alpha B plus 1 minus alpha F, which is what we were doing in the preceding slides. You can also write it as 1 minus alpha B plus alpha F. And in that case, you would let alpha range between 0 and 1, because when alpha is 0, then you get 1 minus 0, which is B, and then plus 0F, and so forth. So it just depends on which way you want to think of looping through the images. Here's the second application. We're going to take teleportation. So here I have Noah standing in front of the Chambers Building at Davidson College. So this is my beginning image. Now here we go. I go to 0.75B, and then 0.5B, and 0.25B, and 0B. Well here, Noah teleported from Davidson College into, again, the National Museum of Mathematics. So earlier, we had that image of Michaela in the National Museum of Math. If I were to rotate myself 180 degrees, then I would be looking out of those front doorways that you see with that pi-handled door, looking out at Madison Square Park, which is where we're looking behind Noah. So here we have him teleport back to Davidson College, and then back to the Museum of Mathematics. Now notice, I used PowerPoint for this to enable Noah to do this teleportation. I had an image of the Museum of Math, and I had the image of Davidson College. And then I also had an image of Noah that I cut and paste into those two images, being sure that he was placed in the same place. I used Photoshop for that, but you could use other software, as well. Then, for Michaela, I did a similar thing, where I had the image of the Museum of Math and also an image of her. And I just cut her and paste her into the image so that she could appear and disappear from the resulting image. So that's how you can use images to create animations using some linear algebra. Now, I've used a convex combination to have someone disappear. In another case, I used it to teleport between two places. But what ideas come to mind for you? What type of effect could you make visually? What would you make disappear, or where could someone teleport? Have fun with the idea. Think of the images that you're going to use. And look at the MOOC page for online software that will help you explore your ideas. And then we can watch each other's animations. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"d8f1978eeab04f9b813f87d8eadf9e72",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3fa6107e85a0436baaf317f8a9b15d19",
                                "vertical_name":"Learning Goals"
                            }
                        ]
                    },
                    {
                        "sequential_id":"acf0e18a35724215bf0620ddceccda14",
                        "sequential_name":"2.3 Exploratory Activity: Fade Away",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Animated gif",
                                            "Web pages",
                                            "York city",
                                            "Visual effect",
                                            "Noah",
                                            "Page",
                                            "Fun",
                                            "Disappearing",
                                            "Create",
                                            "Make",
                                            "Slow",
                                            "Folder",
                                            "Michaela",
                                            "Visualize",
                                            "Put",
                                            "Generate",
                                            "Ready",
                                            "Effect",
                                            "Image",
                                            "Ll",
                                            "Start",
                                            "Learn",
                                            "Open"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In this activity, we move from stillness to motion. We create animations. We already saw two examples of the visual effect. In one example, a person in the image disappeared, and in another image, someone teleported from one location to another. What other ideas come to mind? Our gallery will be a place to learn from each other's work. This is your second activity in this unit that uses convex combinations. As you work with the software for this activity, pay attention to whether you seem to be better at anticipating the results of computation than when you started the last activity. Are you learning to visualize what will be created with convex combinations? In this activity, your ability to visualize results will help you create new variations of this effect. I remember thinking about teleportation. It was a matter of, oh, wow. I think maybe I could make someone teleport. I put in the two images and watched the results several times when it came out. It worked. In fact, it worked better than I thought it would. So what comes to mind for you? We'll learn from each other on the gallery. It will be fun to see if we also create variations on each other's variations. I hope so, and time will tell. But first, let me show you how to use the software for this activity. So we're now ready to create animated gifs using convex combinations. To do that, we want to go to the web page lifeislinear.davidso n.edu/blendinggif.html. I'll start with the two images that we see here. The one on the left is Michaela in the Museum of Math in Manhattan in New York City. In the right, we just see the lobby of the Museum of Math. We'll use the default of 10 images. I click generate, and that creates the frames. It's important to note that it actually creates one more than the frames that you actually have, so it creates 11 total frames. So it's like 11 steps, the step from frame one to two, two to three. So it kind of depends on the way you look at it. Then I have them all here, so you can move down and kind of see how she's progressively disappearing. Then you need to download those into a directory. Which through the magic of preparation, I've already done. So here I have them, in terms of I have all 11 frames ready. Then what I want to do is I want to create an animated gif. So I'll put in animated gif builder online. There are lots of free tools that do this. I'll just take the first one. And now this is gifmaker.me, and it's asking me for the desktop that I'll use, or the folder. So there I go. And then I just want to upload all of them. So I select them all and hit open. And now it's just uploading them one at a time. And there we go. And so I have that, and then I may want to reduce the animation speed a little bit. And there it is, so I see it. So I can kind of decide how fast or slow do I want. That's pretty slow. So maybe around there. No, maybe a less. There we go. And I can see her disappearing. So I can say create now. It takes a moment and it creates it. Once I have that, I can download it, and then I actually have an animated gif. So it's taking a moment to create this animated gif, and then I'll see it. And then that's the one I would be able to post on-- Youtube. So now I'm going to download it on Facebook or Twitter and actually be able to see it. So here's the actual image that I created. And the best way to view these, at least in my opinion, is to open in a browser. So there it is. Open, and then I like to open it in a browser because they will open. And because it's an animated gif, it will actually show it to you. And there we go. Then we see Michaela disappearing in the Museum of Math. Now one other quick thing in here is that in the pages that we had, in the web pages that we were looking at-- so lifeislinear and then blendinggif. Somehow I don't see it in the list. There it is-- blendinggif.html. I can choose two photos, so I'll do that now. I need to go back into the image folder that I have. And so I'll take the image of Noah in front of the Chambers Building at Davidson College Campus and then the one of him in the museum of math as well. And I could ask for more frames if I wanted to. I might as well, just to show that. I'll make it 15. And I say, generate. So it will be 15 times steps, which make 16 frames. And here we see Noah progressively transporting from one location to the other. OK? So what would you do? What comes to mind? What do you want to try? It's your turn to explore and see what you can create, and for all of us to learn from each other. So have fun blending images using context combinations to create animated gifs. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"079aa899dd914019b6e38ad125b05112",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1f555820413643aea6fbf214bd252f23",
                                "vertical_name":"Activity Overview: Creating Animated GIFS"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"7250363845e34516af96fa8b4e593013",
                "chapter_name":"Unit 3: Fitting the Norm",
                "sequentials":[
                    {
                        "sequential_id":"3fc775bed8b64d1e83367460a34a27b1",
                        "sequential_name":"Introduction to Unit 3",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Computer vision",
                                            "Data mining",
                                            "Learn",
                                            "Information",
                                            "Measure",
                                            "Glean",
                                            "Application",
                                            "Important",
                                            "Data",
                                            "Model",
                                            "Ll"
                                        ],
                                        "data":" TIM CHARTIER: Unit 3 of our MOOC is called Fitting the Norm, because we will learn distance measures. An important part of measuring distance is getting a sense of why there's more than one way to do it. So pay careful attention in this unit to the differences in measurement. I'll motivate the two measures we'll explore using different ways of thinking about travel. Then, we'll look at two applications. We'll get movie recommendations using this type of idea. The movie recommendation application is a bit like Netflix. Users rate movies, and we use this to glean out information. This is our step into data mining. We look at a lot of data to gain information. We'll look specifically for where this works and where it doesn't work. We're using math to glean information about life. A model isn't the real thing. It's a model. So it is important to know where it works and its limitations. The second application will be a very simple algorithm for reading handwriting. This is a subfield of computer vision. So let's learn how to measure distance between vectors and launch into applications. ",
                                        "unit_id":"b300ad7d5a9e408ea9d008ed8be2cfb3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"65b343feef7e4e1192abfb249c3f5cc5",
                                "vertical_name":"Introduction to Unit 3"
                            }
                        ]
                    },
                    {
                        "sequential_id":"939bb2dd7779434bb4e32ee8ceb59875",
                        "sequential_name":"3.1 The Norm in Movies",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Random number generator",
                                            "Empire strikes back",
                                            "Mile high city",
                                            "City streets",
                                            "Fourth dimension",
                                            "Pythagorean theorem",
                                            "Star wars",
                                            "Curved surface",
                                            "Linear algebra",
                                            "Descriptive statistics",
                                            "Snow white",
                                            "Taxicab norm",
                                            "Flight paths",
                                            "Square root",
                                            "Taxi driver",
                                            "Euclidean norm",
                                            "Data analytics",
                                            "Data mining",
                                            "North carolina",
                                            "Euclidean distance",
                                            "Total",
                                            "Fly",
                                            "Flew",
                                            "Minus",
                                            "Quantity",
                                            "West",
                                            "Preference",
                                            "Oscar",
                                            "Mathematical",
                                            "Norm",
                                            "Called",
                                            "Create",
                                            "Ve",
                                            "Measuring",
                                            "Ll",
                                            "Data",
                                            "Sense",
                                            "Element",
                                            "South",
                                            "Movie",
                                            "Notice",
                                            "Point",
                                            "Simply",
                                            "Fun",
                                            "User",
                                            "East",
                                            "Emmy",
                                            "Step",
                                            "North",
                                            "Application",
                                            "Important",
                                            "Turn",
                                            "Distance",
                                            "Gravity",
                                            "Equal",
                                            "Find",
                                            "Work",
                                            "Closest",
                                            "Vector",
                                            "Denver",
                                            "Measure"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: Measurement is an important application in mathematics. We're interested in how much we weigh or, possibly how much weight we've lost, for instance. If an artist or a mathematician wants to 3D print a sculpture, the volume of the piece is important, as is the total size. We're also interested in distances. I received my PhD from the University of Colorado at Boulder, so let's consider a trip from Charlotte, North Carolina, where I live now, to Denver, Colorado. Suppose I start in Charlotte, charter a private plane, and fly straight west. After flying 1,290 miles, I'd be directly south of Denver. Then, if I could turn north and fly 310 miles, I'd arrive into Denver. Now, if I had started in Charlotte, pointed the plane directly at Denver, and flew straight until I reached the mile high city, I would have flown just over 1,300 miles. Let's think of Denver in Charlotte in the xy coordinate plane. Notice this is actually an abstraction since they exist on the curved surface of the Earth. I live in Davidson, North Carolina. That's my origin, so I'll let that be the point 0, 0. Charlotte is about 20 miles south and about two miles west of Davidson, so Charlotte is located at the point negative 2, negative 20. This places Denver at the point negative 1,292, 290, since the mile high city is west and north of Charlotte. Now let's think again about those two flight paths I took. First, I flew directly west, which took me from the point negative 2 to negative 1,292 on the x-axis. That's a total distance of 1,290 miles. Then I flew from negative 20 to 290 on the y-axis, which is a total of 310 miles, so my total distance traveled was 1,600 miles. Now alternatively, I could fly from the point negative 2, negative 20 straight to negative 1,292, 290. If you plot this, you're looking for the distance between the points, which equals negative 1,292 minus negative 2, that quantity squared, plus negative 20 minus 290, that quantity squared. You take that sum and you take the square root. Well, that's the Pythagorean Theorem because this distance can be seen as the length of the hypotenuse of a right triangle with the sides of lengths 1,290 and 310. That distance is about 1,330 miles. If you are flying, you want to make as direct a route as you can, so flying along that hypotenuse would be ideal. But if you're a taxi driver in Manhattan, then you need to drive along the grid of city streets, so driving east and west, north and south may be your only options. These are two ways of measuring distances and they have mathematical names, too. We might in various situations beyond traveling between locations want to measure distance in these ways. So let's look at the points x1, y1 and x2, y2. Then we can measure the distance between the points. First, we can use that distance along the hypotenuse. That equals x2 minus x1 squared plus y2 minus y1 squared. That whole quantity, that sum, we take the square root of. Here, we're measuring what is called the Euclidean Disance between the points. Now we'll turn to the other measure that we had, the one where we drive only east, west, north, and south. In this case, we're measuring distance using what can be called Taxicab Geometry. The distance between the points x1, y1 and x2, y2 equals the absolute value of x2 minus x1 plus the absolute value of y2 minus y1. This gives us two measures. In each case, we've been working with the distance between points. When we measure the distance from the origin, we are often thinking about the length of something. For instance, how far you stand from the ground is your height. In linear algebra, we also talk about length, but we often talk about it in the context of a vector or a matrix. Well, when we talk about these measurements, we talk about them as norms. We can talk about the Euclidean norm of a vector. Suppose we have a vector, x equal x1, x2, x3, which is a 3D vector. Then its Euclidean norm is x1 squared plus x2 squared plus x3 squared. That sum we take the square root of. Note that this also equals the distance between that point x1, x2, x3 and the origin. Similarly, we have the Taxicab norm, which is also called the one norm, and that equals the absolute value of x1 plus the absolute value of x2 plus the absolute value of x3. Interesting? Possibly. Powerful? Most certainly. And to get a sense of that, we're going to move into an application. We'll work with the Euclidean norm in a dimension higher than three. Let's see how we can use it to find a movie buddy for us. We'll step into the fourth dimension, something that we can't graph, and we'll find someone with similar tastes in movies. Every year, the Academy Award nominations come out, and I get a \"to see\" movie list. I've seen some of them, but quite a few of them I often just haven't had the time to see. So here are a few films that were nominated for a 2014 Academy Award for Best Picture-- American Hustle, Gravity, Her, and Philomena. Now, suppose you are thinking about seeing all four films with a friend, and you'll see it either with Oscar or Emmy. So you each rate the films between minus five and five. A rating of five correlates to wanting to see the film for the first time or again and a minus five means definitely not wanting to see it again. Oscar rates American Hustle with a zero, Gravity with a five, Her a minus three, and Philomena with a four. Emmy rates the films keeping the same order, five, two, five, four, and you rate the films minus three, three, five, minus four. Now, in order to use linear algebra, we're going to turn these into vectors. We're going to turn them into preference vectors. So your preference vector is minus 3, 3, 5, minus 4. We've simply taken your ratings and placed them as elements in a vector. We'll call your vector v. Easy enough. So we can do the same thing quite easily for Oscar. His vector would be 0, 5, minus 3, 4, and we'll call it o. Emmy's vector is 5, 2, 5, 4, and we'll denote that by e. So now we're ready to find distance. Who has the closest taste? Well, we're going to find that as the distance between those preference vectors. So the distance between your and Oscar's preference vectors is the length of the vector v minus o. Remember, we decided to use Euclidean distance, so this equals minus 3 minus 0, that quantity squared, plus 3 minus 5, that quantity squared, plus 5 minus minus 3, that quantity squared, plus minus 4 minus 4, that quantity squared. We take that sum and we take the square root. Well, when you work that out, the length is about 11.87. Similarly, the length of v minus e-- that's you and Emmy-- is about 12.08, and Emmy minus Oscar, e minus 0, is 9.95. In terms of seeing a movie with someone, Oscar has closer choices under this norm for these movies. But notice Oscar and Emmy may enjoy a movie together more, at least if their experience aligns with Euclidean distance. So now let's think about this a little bit more. What does a distance of zero mean in terms of preference? That would mean you have exactly the same choice as someone else in movies if those were each of your vectors. So we've found a mathematical way to do this, but what does it really mean? For those earlier movies, I just used a random number generator to create those ratings, but can it really glean helpful information? Can it help us find things that might otherwise be difficult to find? This is when we step into the arena of data analytics. So we're going to use the movie lens data set collected by the GroupLens Research Project at the University of Minnesota. This data set contains 100,000 ratings, where a rating is between one and five, from 943 users on 1,682 movies where each user rated at least 20 movies. The data was collected from September 1997 through April 1998. The dates are important, as it helps you think of movies that might be contained in the data set. For example, Gravity won't be in the data set since it came out after the data was collected. Now, what are we forming as our preference vectors, or just simply our vectors? Well in this case, we're going to create movie vectors, so each vector correlates to one movie and all of its ratings. So in this case, a vector contains the ratings of all 943 people in that data set when an element equals 0, it means that the user did not rate the movie. We will find the Euclidean norm of the vector that is the difference between two movie vectors. If we take a film, then the closest, or most similar films, at least according to this mathematical approach, are the movies that create the shortest vector, just like we did earlier with Emmy, Oscar, and you. So let's take a movie. Let's take one from my childhood, Star Wars from 1977. We take its vector containing all the ratings and then we take that minus every other movie, and which one is the closest? Well, it turns out that the top three in order is Return of the Jedi. That's the closest. Then comes Raiders of the Lost Ark, and then finally, The Empire Strikes Back. Well, let's try something else. How about Snow White and the Seven Dwarfs from 1937? Its top three are Pinocchio, Cinderella, and Dumbo. Well, those are films I decided to try. What films would you try? Do you agree with these results, or would you agree with the results that you find? Usually in data mining, algorithms can work well in some cases but not all cases. Can you determine when this particular measure does and doesn't work well, when you agree with it and when you don't? That is an important part of data mining. Would it be better to take the taxicab norm? We didn't even try that. You'll get to explore that later. Finally, note this idea could be applied to data sets that contain descriptive statistics on athletes or ratings data on cars, restaurants, or recipes. What comes to mind for you? If you can grab a data set in code, you might want to try it yourself and share what you've found with our MOOC community. It would be great fun to see what you find, to see what you mine out of data that interests you. So go onto our MOOC site and you'll be able to experiment with this movie lens data set and play around with movies that interest you. What do you find? Well, let the mathematical sense and measure of distance help you explore a very large data set. Have fun. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"93d4812418d24fccb11d76b275d01fe0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"45d4f1920ad14bd4ab701900e336e3f6",
                                "vertical_name":"The Norm in Movies (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e6926cd56341453896512bc9f68193fa",
                        "sequential_name":"3.1 Exploratory Activity: The Norm in Movies",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Swiss family robinson",
                                            "Linear algebra",
                                            "Euclidean norm",
                                            "City block",
                                            "Vector norms",
                                            "Web page",
                                            "Davy crockett",
                                            "Taxicab norm",
                                            "Escape characters",
                                            "Data",
                                            "Interesting",
                                            "Funny",
                                            "Mathematics",
                                            "User",
                                            "Movie"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In this activity, it's your turn to try your hand at using linear algebra to find similar movies. To help with this, we've created computer codes to let you explore the movie lens data set like I used in the lecture. There are data sets of various sizes available for this. For example, the data set with 100,000 ratings contains ratings from 943 users on 1,682 movies, where each user rated at least 20 movies. The ratings are between one and five, and a zero means a user did not rate a movie. Now it's important to remember that the data was collected from 1997 to 1998, and that plays into what films are possible to search on. So pay careful attention to where the recommendations fit and where they may not. A recommendation is inherently an opinion. For example, I like the movie The Imitation Game. That's my opinion. You may or may not agree. In the same way, try and see where you agree with the opinion of the mathematics. Is there anywhere that the math might simply get it clearly wrong? Yes, it's an opinion, but one that virtually no human would ever have? That is important to recognize. Thinking about your results in this way can help pinpoint the limitations of the math. Explore and look where the mathematics works well, and possibly where it struggles or breaks down. So let me now show you the code that we've created for your activity. So now, we get to use this movie recommender, which uses vector norms to determine movies that are like other movies. So let's try one. Let's try 200,000 Leagues Under the Sea. You have a large selection of movies to try here, and there it is. So there we go. From 1954. We'll use the Euclidean norm on the data set containing 100,000 ratings. So we have a data set in a larger data set. Please note that all the movies are not in both data sets, so sometimes you'll try one and it won't be there, but it means it's generally in the other one. So there we go. So movies that are considered most like that movie are Swiss Family Robinson, Davy Crockett, and so forth. Well, let's try the City Block, the taxicab norm. And that gives us, huh, fairly similar results, which is interesting. Well, you could have tried it with both distances with that button there, and now you get to actually compare them side by side and see that there are indeed differences between the two. The other thing you can do is to try it with the two data sets. So this will compare both data sets against each other. So on the left, we have the 100,000 data set, and on the right, we have the 1,000,000 data set in terms of those differences. So there's quite significant differences between those, and you want to try films that you know. So, see how you do. Try films that you find interesting. Keep in mind that occasionally, we get kind of funny characters because sometimes the characters don't-- they are kind of escape characters or different types of characters that appear kind of funny on the web page. But this lets you use a large data set and mine some information. So where do you agree? Do you think one of these is better than the other one? Try it out and see the limits of this as a movie recommender. End of transcript. Skip to the start. Start of transcript. Skip to the end. TIM CHARTIER: In this activity, it's your turn to try your hand at using linear algebra to find similar movies. To help with this, we've created computer codes to let you explore the movie lens data set like I used in the lecture. There are data sets of various sizes available for this. For example, the data set with 100,000 ratings contains ratings from 943 users on 1,682 movies, where each user rated at least 20 movies. The ratings are between one and five, and a zero means a user did not rate a movie. Now it's important to remember that the data was collected from 1997 to 1998, and that plays into what films are possible to search on. So pay careful attention to where the recommendations fit and where they may not. A recommendation is inherently an opinion. For example, I like the movie The Imitation Game. That's my opinion. You may or may not agree. In the same way, try and see where you agree with the opinion of the mathematics. Is there anywhere that the math might simply get it clearly wrong? Yes, it's an opinion, but one that virtually no human would ever have? That is important to recognize. Thinking about your results in this way can help pinpoint the limitations of the math. Explore and look where the mathematics works well, and possibly where it struggles or breaks down. So let me now show you the code that we've created for your activity. So now, we get to use this movie recommender, which uses vector norms to determine movies that are like other movies. So let's try one. Let's try 200,000 Leagues Under the Sea. You have a large selection of movies to try here, and there it is. So there we go. From 1954. We'll use the Euclidean norm on the data set containing 100,000 ratings. So we have a data set in a larger data set. Please note that all the movies are not in both data sets, so sometimes you'll try one and it won't be there, but it means it's generally in the other one. So there we go. So movies that are considered most like that movie are Swiss Family Robinson, Davy Crockett, and so forth. Well, let's try the City Block, the taxicab norm. And that gives us, huh, fairly similar results, which is interesting. Well, you could have tried it with both distances with that button there, and now you get to actually compare them side by side and see that there are indeed differences between the two. The other thing you can do is to try it with the two data sets. So this will compare both data sets against each other. So on the left, we have the 100,000 data set, and on the right, we have the 1,000,000 data set in terms of those differences. So there's quite significant differences between those, and you want to try films that you know. So, see how you do. Try films that you find interesting. Keep in mind that occasionally, we get kind of funny characters because sometimes the characters don't-- they are kind of escape characters or different types of characters that appear kind of funny on the web page. But this lets you use a large data set and mine some information. So where do you agree? Do you think one of these is better than the other one? Try it out and see the limits of this as a movie recommender. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"b417e992d368427dac782143eab9745c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7c0587ffd74d46f680d9ee75ede0fd34",
                                "vertical_name":"Activity Overview: Finding Similar Movies"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f5b7aa3953b041b8b78cad291bfba0a9",
                        "sequential_name":"3.2 Reading the Mail",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "United states",
                                            "Linear algebra",
                                            "Zip codes",
                                            "Vector norms",
                                            "Test vector",
                                            "Success rate",
                                            "Classify",
                                            "Office",
                                            "Handwritten",
                                            "Average",
                                            "Image",
                                            "Create",
                                            "Vector",
                                            "Digit",
                                            "Ll",
                                            "Mail",
                                            "Success",
                                            "College",
                                            "Number",
                                            "Store",
                                            "Part",
                                            "Denote",
                                            "Norm",
                                            "Simple",
                                            "Equal",
                                            "Compare",
                                            "Data",
                                            "Algorithm",
                                            "Screen"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: I'm at the Campus Post Office at Davidson College. This post office serves faculty, staff, and students of the college. Now, an inherent part of mail service is reading addresses, whether typed or handwritten. In the United States, the US Postal Service delivers over 150 billion pieces of mail in a year. That's a huge task. To aid in this, computers help read the zip codes on the envelopes. The first prototype algorithm debuted in 1997 and correctly identified addresses with a success rate of 10%. Think about that-- 10% That means that 9 out of 10 weren't aided by this new technology. While that may not seem like a success, it was. Reading handwriting is a difficult task for a computer and, frankly, even for you and me sometimes. So let's see how linear algebra can aid in reading handwritten numbers. We'll use the MNIST data set of over 60,000 handwritten digits. Each digit in the database is a 28-by-28 grayscale image. The pictures are oriented so the center of mass of its pixels is at the center of the picture. To give you a sense of this, four different examples of the number 3 from the database are on the screen. Can we create an algorithm to automatically recognize that each of these is, in fact, the digit 3? We'll create our algorithm with two databases. The first will train the algorithm. That data set contains 60,000 handwritten digits. The second data set contains new digits not part of that original 60,000. We use that to see if our algorithm can accurately classify previously unseen digits. We'll call these new digits \"test digits.\" Now, we could store each digit as a 28-by-28 matrix, but we're going to use vector norms. So instead, we'll store the image of a handwritten digit as a 784-by-1 vector. So test digits become test vectors. Having our vectors, we're ready to apply our vector norms. The training set of the number 0 contains 5,923 images. Rather than compare our test digit to each of these images, we'll create an average handwritten 0 from this training set. The algorithm's fairly simple. Let a pixel in our average 0 equal the average-- or mean-- of the pixel in the same location of all the 0s in the training set. For the pixel in the upper left-hand corner of the average 0, take the average of the pixel in the upper left-hand corner of all the 0s in the training set. What does such an average digit look like? You can see all 10 digits on the screen. So now, we're ready to classify a test digit. We'll denote the associated test vector by t. We'll also denote m as the vector associated with the average number i-- again, formed from the pixels of all numbers classified as the number i in the training set. In particular, we'll subscript m. So m sub i is the average vector for the digit i. To classify our test digit, we'll compare the distance between the test vector and the vector for each digit-- in fact, the average digit that we just computed. Mathematically, we write this as the norm of m sub i minus 2, and we'll do that for i is greater than or equal to 0 and less than or equal to 9. Whatever average digit is closest to our test digit is our guess at what the digit is. So if the smallest norm comes from the distance between the vector for the average 4 and the test digit, then we classify the test digit as a 4. So how do we deal with this algorithm? This method classifies the 3s that we saw on the screen earlier, but it won't capture everything. That's why more complicated algorithms exist for digit recognition. For example, the digit on the screen is a 3, but our algorithm classifies it as a 5. Can you see the elements of the digit 5, specifically the average 5 we computed in that digit? While not perfect, this is a simple and accessible algorithm for classifying digits. Do any ideas come to mind as to how you might alter this algorithm? In the assignment portion of this MOOC, we'll get to classify digits and compare your ability as a person to classify digits versus the algorithm that we just saw. Then you'll also work to anticipate where the algorithm will be wrong. If you know the limits of an algorithm, it can be of great usefulness and you also know where to build and expand its robustness. So go into the MOOC now and explore digit recognition using vector norms. Have fun, and see how you do. End of transcript. Skip to the start. ",
                                        "unit_id":"931c49f814fb4f06954defe724ffb60f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d38327f3302b4f3aa47c0140aeac6b2b",
                                "vertical_name":"Fitting the Norm (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"14dc38016f154a0ebc468a578045f9ee",
                        "sequential_name":"3.2 Exploratory Activity: Learning Where Algorithms Work and Don't Work",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Program",
                                            "Computer",
                                            "Ll",
                                            "Thinking",
                                            "Identify",
                                            "Digit",
                                            "Algorithm"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In this lecture we saw a simple algorithm for digit recognition. Much more complicated algorithms exist in order to better identify digits. So the algorithm we learned will work, but not perfectly. In this exercise I'd like you to explore where it is and isn't working. Further let's take a first step in anticipating where it works and won't work. That can take time. So again we're taking a first step. Learning to recognize where an algorithm can work and not work is very important. With that knowledge you can anticipate where to use and not use a method. Further this type of thinking helps you determine where you'd want to make improvements to the method, which is part of research. On the MOOC web page you'll find handouts to help with this type of thinking. First, you'll find handouts containing images that were correctly identified as the digit that was written. You can look at those to help you better get a feeling for where the algorithm is working. Then you'll find handouts with images where the computer program incorrectly identified the digit. You'll see what the digit is and what the computer thought it was. This helps you get a sense of where the algorithm is failing. Remember to compare the images in the handouts to the average digits we computed. You'll find a handout with those average digits for you to look at. Finally, you'll find a handout with digits that are programmed correctly and incorrectly identified. You'll give your guess for the digit and your guess for what our algorithm will choose. Are you better at identifying the digits than the computer? Are there some that you both fail at identifying? And how well do you do at guessing what the program will say? So let's take this first step in analyzing the effectiveness of an algorithm and learning to see where it succeeds and fails. It can take a lot of time to identify how to improve an algorithm. Here, again, we take a first step. So do your best. And see how you do. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"f88c2b9e18b7448bb3aec2051e2e0e0c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2f04ffd7dd8b409c9ca268f2ad60cb09",
                                "vertical_name":"Activity Overview: Learning Where Algorithms Work and Don't Work"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"e58d949a11244533a596b54ecad9f48d",
                "chapter_name":"Unit 4: Go Forth and Multiply",
                "sequentials":[
                    {
                        "sequential_id":"f3e23e04043946cbaf71b4a295908f0c",
                        "sequential_name":"Introduction to Unit 4",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Computer graphics",
                                            "Matrix multiplication",
                                            "Mathematical operation",
                                            "Image manipulation",
                                            "Linear algebra",
                                            "Data",
                                            "Ll",
                                            "Multiply",
                                            "Linear",
                                            "Idea"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In Unit 4, we're going to learn to multiply. We'll multiply vectors, and then learn to multiply matrices. Matrix multiplication is a powerful tool. In Section 1, we'll apply it again to movie recommendations, like we did in Unit 3, but now in a new way. So again, we'll want to see where this method of data mining works and may fail. Further, you can think of other applications. If you can think of it, think about whether you can grab the data. Then you can test your ideas. A Davidson student read about these ideas in my book When Life Is Linear-- From Computer Graphics to Bracketology. He immediately thought of an application in sports. That idea became a new research idea for us that we pursued. So pay attention to what comes to mind for you. Then, we're going to move back into image manipulation, and learn a few ways to create images using matrix multiplication. If you like 3-D printing, you might even want to look at my book, When Life Is Linear, as it talks about 3-D rotation and how it can be fun to take those wireframes and rotate them using linear algebra. Many of the wireframes are publicly available. So now it's time to learn to multiply and look at applications of this mathematical operation. I hope you come up with your own ideas, so we can all go forth and multiply. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"3cba803c6f9b4ff4b878b49c2503851a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"abbc6ae213874ab8bc6bae6b3b033186",
                                "vertical_name":"Introduction to Unit 4"
                            }
                        ]
                    },
                    {
                        "sequential_id":"22cf263eec5843e9aed695bc7dcbceb9",
                        "sequential_name":"4.1 Scaly Byproduct",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Empire strikes back",
                                            "Cosine similarity",
                                            "Angular distance",
                                            "Column vectors",
                                            "Euclidean distance",
                                            "Snow white",
                                            "Higher dimension",
                                            "Star wars",
                                            "American hustle",
                                            "Column vector",
                                            "Row vector",
                                            "Euclidean norm",
                                            "Commutative property",
                                            "Scalar multiplication",
                                            "Scalar product",
                                            "Dot product",
                                            "Length",
                                            "Cosine",
                                            "Movie",
                                            "Matrix",
                                            "Addition",
                                            "Distance",
                                            "Measure",
                                            "Taste",
                                            "Product",
                                            "Vector",
                                            "Transpose",
                                            "Similar",
                                            "Return",
                                            "Ll",
                                            "Scalar",
                                            "Pretty",
                                            "Helpful",
                                            "Rate",
                                            "Theta",
                                            "Suppose",
                                            "Property",
                                            "Mine",
                                            "Dot",
                                            "Minus",
                                            "Closest",
                                            "Norm",
                                            "Oscar",
                                            "Rating",
                                            "Multiply",
                                            "Emmy"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In a past unit, we learned matrix addition. It's very intuitive. Scalar multiplication is also pretty easy. Now, what about multiplying two matrices together? Once we learn it, what can we even do with it? Well, to begin, let's learn to multiply. So we'll multiply a row vector by a column vector. Now, to even be able to multiply, the vectors must have the same number of elements. So a 1 by 5 row vector cannot be multiplied by a 4 by 1 column vector. So let's multiply the row vector 3 2 5 by the column vector 2 4 1. Now, they both have three elements, so we're OK. Now, the product will be a single number-- a scalar. To find the product, multiply the first elements of the vectors together, then add to this the product of the second elements of the vector. This process is continued for all elements of the vectors. For this example, we need only to add the sum of the product of the third elements of the vectors. So multiplying our row vector by our column vector equals 3 times 2 plus 2 times 4 plus 5 times 1, which equals 6 plus 8 plus 5, which equals 19. Now, we can perform a similar computation on two column vectors. Suppose both of our vectors in the previous example were column vectors. We'll let u equal 3 2 5, and we'll also let v equal 2 4 1. We find the scalar product, or dot product, by performing u transpose times v. Note that u transpose is the row vector 3 2 5 and v is the column vector in our previous example. So u transpose times v gives us 19, as we saw before. It can be helpful to know and use properties of the dot product. First, we get a commutative property. c dot v equals v dot u. I'm sorry, u dot v equals v dot u. The dot product also distributes over addition. So u dot the quantity v plus w equals u dot v plus u dot w. We can also easily deal with scalars. If k is a scalar, then k times the quantity u dot v equals k u dot v. Or we can move it on the other side and get u dot k v. We can also connect the dot product to norms. That will be important to us. u dot u equals the two norm, or the Euclidean norm, of u squared. And what happened there? What are we finding? Maybe another way to ask this is how can we use this to uncover things. Well, the dot product can be used to identify people with similar tastes. In a way, this isn't that surprising given the connection we just saw between the dot product and norms. In fact, the dot product leads to a different measure of distance. It can connect to Euclidean distance, but we're going to use it in another way. We again need to vectorize each person's tastes. So let's again use a questionnaire with numeric answers. We'll return to movie preferences selected by Oscar, Emmy, and this time we'll take me, but now only the film's \"American Hustle\" and \"Gravity.\" Well again rate movies between minus 5 and 5 with 5 correlating to really wanting to see the film and minus 5 being definitely not seeing it. So as before, Oscar rates \"American Hustle\" with a zero and \"Gravity\" with a five. Emmy rates the films five and two, and I rate the films minus 3 and 3. So Oscar's taste vector is 0 5. Emmy's is 5 2, and mine minus 3 3. Earlier, we found the norm of u minus v. The two vectors that result in the smallest value are identified as the most similar. This time, we'll measure similarity as the angle between the taste vectors, which is called cosine similarity. Euclidean distance measured length with a ruler. Cosine similarity measures length with a protractor, and it's called angular distance. The smaller the angle, the closer the vectors are in terms of angular distance. We compute cosine similarity between the vector u and v as the cosine of theta equals c dot v divided by the quantity-- that is the norm of u-- times the norm of v. If you want to find the angle, then you simply take cosine inverse of both sides, which will give you theta. The numerator is the scalar product of the vectors, and the denominator is the product of their lengths. So let's find the angle between Oscar's and my taste vectors. This is 45 degrees. Emmy's and my vectors form an angle of 113 degrees. So Oscar and I mathematically are matched up as movie buddies at least in terms of angular distance. It turns out that Oscar and my movie tastes are closest under the Euclidean norm, too. The two distances will not always be the same, though. Suppose Oscar's ratings were 1 1, Emmy's were 3 4, and mine were 4 4. Emmy and I are closest under Euclidean distance. But Oscar and my rating vectors have an angle of zero. Note, 1 1 and 4 4 are pretty different ratings, and cosine similarity is saying that they are the same. Is this not a helpful measure, then? Indeed, not always. But it can be, even for ratings data. To help us see this, let's move into a much higher dimension. Let's return specifically to that movie lens data set that we used before. Again, this contains 100,000 ratings from 943 users on 1,682 movies. Rather than a vector containing one person's ratings, like we just did for Oscar, Emmy, and me, we'll have movie vectors with the ratings of all users. So a movie preference vector consists of 943 ratings, which means that that vector is close to being in 1,000 dimensional space. So how does cosine similarity do in this case? Well, let's look at the films we looked at before. First, there's the 1977 film \"Star Wars.\" The three closest films under cosine similarity are \"Return of the Jedi,\" \"Raiders of the Lost Ark,\" and \"The Empire Strikes Back.\" These movies were the closest under Euclidean distance, too. But we do get a difference. And we see that with \"Snow White,\" that we again looked at before, now the closest films are \"Beauty and the Beast\" rather than \"Pinocchio.\" Then comes \"Cinderella,\" and then \"Pinocchio.\" So again, what movies would you try here? Which measure of distance do you prefer? You can explore these and your own questions in the exploratory assignment for this lecture. Have fun mining through the movie data using angles and Euclidean Distance. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"f5b348fea5704f48a21662f1f52feda5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"46caa513e808487e9e49b6dcdbab7d36",
                                "vertical_name":"Scaly Byproduct (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c26817a1cbee4e2ea2be1f0e3cef9713",
                        "sequential_name":"4.1 Exploratory Activity: Scaly Byproduct",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "City block",
                                            "Angular distance",
                                            "Distance measures",
                                            "Euclidean norm",
                                            "Cosine similarity",
                                            "Cosine distance",
                                            "Vector norms",
                                            "Euclidean distance",
                                            "Similarity",
                                            "Cosine",
                                            "Distance",
                                            "Euclidean",
                                            "Algorithm",
                                            "Similar",
                                            "Vector",
                                            "Data",
                                            "Ll",
                                            "Movie",
                                            "Find",
                                            "Measure"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In this activity, we again find movies that are similar using linear algebra. Now, we have a totally different way of determining when two movies are similar. With Euclidean distance, we find the distance between movies as if we were using a ruler to find the distance between two points. With cosine similarity, we find the angle between the points as if a line were drawn from the origin to the points. And then we use a protractor to find the angle between those lines, but keep in mind that we'll be working in higher dimensional space. In fact, we have 943 users, so we're comparing angles of vectors in 943rd dimensional space. Linear algebra helps us do this quickly. With the code, you'll be able to use the distance measures from our earlier lecture. You'll also be able to measure with cosine similarity. As before, you'll put in movies and see similar movies as determined by your selected measure of distance. Do you have a preference between the measures of distance? Do you always or sometimes have a preference of one over another? Again, look for the limits of the mathematics in this application. It could be that one measure is always better or possibly sometimes better. Euclidean distance and cosine similarity are not the only measures of distance, but they are common ones. Let's see how to use the codes so you can begin exploring the movies with mathematical distance. So now, we're ready to do our movie recommendations with the addition of cosine similarity-- the angle between the vectors. So just like before, you pick a film. So let's try Star Trek III: The Search for Spock from 1984. So we can ask for the Euclidean norm on the 100,000 data set, and there we have it. Not surprisingly, it's pretty similar to other Star Trek films. Well, what about cosine where we use the angle? And you can look there. Well, it can be kind of hard in a case like this to tell what the differences are. So again, you can click Distance, and you can look at all of them at one time. So we have a Euclidean and then cosine and then city block. And notice that there is a certain similarity between the city block and Euclidean because those are really distance measures, and then cosine distance is different because, again, it's an angular distance. If you want to compare them in the actual data set where you change the size of the data set, then you have something like this. So you can see the actual differences in the method as you have more ratings. So we have 100,000 ratings here and a million ratings over here, and you do see that those produce different results. So what movies interest you? What movie might you want a recommendation for? Remember, this is a simple algorithm. So where does it work and not work? Do you want to get a movie based on this? Well, it may depend in part what kind of movie you look up. So as is often the case in data-mining, look at the algorithm. See how it does. Push its limits and see where it succeeds and where maybe it fails and play around with getting recommendations with movies using vector norms and cosine similarity. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"8fadffb9c9044971944d928dd67c3e88",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6d0f571138a24e01a1cf9819c1d6d374",
                                "vertical_name":"Activity Overview: Finding Similar Movies (Again, but Different)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8290ce2e5e2949929c9ef21ed2463703",
                        "sequential_name":"4.2 Spinning Out With Mutliplication",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square root",
                                            "Column vector",
                                            "Gear wheel",
                                            "Mathematical art",
                                            "Geometric shape",
                                            "Scalar product",
                                            "Dot product",
                                            "Negative",
                                            "Matrix multiplication",
                                            "Square",
                                            "Thing",
                                            "Point",
                                            "Spirograph",
                                            "Rotate",
                                            "Column",
                                            "Multiply",
                                            "Type",
                                            "Ll",
                                            "Section",
                                            "Multiplication",
                                            "Matrix",
                                            "Product",
                                            "Find",
                                            "Shape",
                                            "Ring",
                                            "Create",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In the previous section, we multiplied vectors. Now, we're ready to multiply matrices which may or may not be row and column matrices. So first, it's very important to realize that a times b may not equal b times a. In fact, a times b may not even be computable even when b times a is. So we know when matrix multiplication is possible by looking at the dimensions of the matrices in the product. To compute a times b, the number of columns in a must equal the number of rows in b. So let's give this a try. Let's look at a, and we'll let that equal minus 1, 2, 0, 3, minus 2, 3, 1, 0, 4. Then we'll take b, and we'll let that equal 2, 1, minus 1, 3, 0, 4. Now, we're going to be interested in a times b. And first, we need to see if it's computable, so we check. a has three columns, and b has three rows. So we can compute a times b. The product will be a matrix with three rows and two columns. Now, how did I get that? This can be done by writing down the dimensions of a and b. a is three by three, and b is three by two. So if you write those dimensions side-by-side, you get three by three, three by two. Those inner dimensions-- the three and the three on the inside-- those have to match, but I like to just cross them out. And that gives me the outer dimensions, which are the dimensions of the product, which in this case is three by two. So we can multiply a times b, and the resulting matrix will be a three by two matrix. Now, we find that product one element at a time using multiplication that we already know how to do. Specifically, the element in row i in column j of c where we're finding c equal a times b is found by computing the scalar product of row i of j with the jth column of b. So let's do that for the a and the b that we're using in this example. When we find the element in the first row and first column of c, that equals the first row of a, which is minus 1, 2, 0, times the first column of b, which is 2, minus 1, 0. This is what we learned in the last section. We know how to find a scalar product and a dot product. So this equals minus 2 plus minus 2 plus 0, which is minus 4. We do this type of multiplication to calculate every element in c. And if you do this, you'll find that c equals minus 4, 5, 8, 9, 2, 17. Now, you may want to stop the video and actually verify that for yourself. But also notice that, if we flipped it and we looked at b times a, that's not computable since b has two columns and three rows. Now, on the MOOC page, you'll find a handout that lets you practice this type of multiplication on a few matrices. Well, now we know how to multiply matrices, but how can we use this? Well, we're going to use it to create shapes that remind me, at least, of a geometric drawing toy I had as a child called a \"spirograph.\" To use a spirograph, you pin a plastic ring to a piece of paper. The ring had geared teeth on the inside and the outside of its circumference. Then you placed a pen in a hole in the gear wheels. Then you spun that gear wheel in a ring to produce a geometric shape on the paper. Now, rather than gear wheels, we'll rotate a matrix-- I mean, we'll rotate with matrix multiplication. That's going to be, this time, how we actually create our shape. So if you have a point xy in two dimensions, you can rotate it about the origin by multiplying the column vector xy on the left by the matrix r which equals cosine theta, minus sine theta, sine theta, cosine theta. So let's try that. Specifically, we'll take the point 2, 0, and we'll rotate it by 60 degrees about the origin. The rotated point equals 1/2 negative the square root of 3 over 2, negative the square root of 3 over 2 1/2 times the column vector, 2, 0. This equals the column vector 1 square root of 3. So that's it. We rotated our point, and the point moved to the new point-- 1 square root of 3. OK. So how does that help us create a spirograph type thing? Well, to create my linear algebra spirograph, I'll follow the following steps. Step one. Begin with a square with the points at 0, 1; 1, 1; 0, 0; and 1, 0. We'll call this our current square. Step two. Create a rotated square by rotating the current square by 6 degrees. Step three. Draw this rotated square that we just found. Step four. Let the current square that we just found be defined as the current square. Then step five. Repeat Steps 2 through 4 60 times. Well, when I do that, here is my shape. This is where you can play with things. Rather than 6 degrees, try something else. Rather than 60 times, change it to some other number. What image can you create? What images do you prefer? Well, go to the MOOC page and this exploratory activity and play around with matrix multiplication to make some mathematical art. Have fun. End of transcript. Skip to the start. ",
                                        "unit_id":"130e7e229cef464b9d2b0916e73bbd4d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d94fe69e220e4d7fb7ffb55ff035b403",
                                "vertical_name":"Spinning Out With Multiplication (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ed1189322749442a91fbbe6619d67889",
                        "sequential_name":"4.2 Exploratory Activity: Spinning Out With Multiplication",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Screen capture",
                                            "Linear algebra",
                                            "Matrix rotation",
                                            "Artwork",
                                            "Create",
                                            "Move",
                                            "Spirograph",
                                            "Interactive",
                                            "Rotation",
                                            "Polygon",
                                            "Created",
                                            "Underlying"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: Growing up, I used a Spirograph to create pieces of art. In this exercise, you get to create artwork similar to what I created, but you'll be using linear algebra. You'll have parameters that you can vary. Play around with the parameters and see what you discover. Are you able to anticipate what the code produces? Maybe, but sometimes you may just input numbers for the parameters and see what you get and iterate to what you actually want. Both approaches are valid and important. Sometimes, we know where we're going and move directly to our destination. Other times, we essentially plop ourselves down and then journey ahead, discovering the path as we go. Which way works for you in this activity? Well, have fun. I look forward to seeing the artwork that we create, but now let's learn how to use the software that we've created for you. So let's see how we can create the computational artwork using linear algebra that we've discussed. So what we have is we have a nice, interactive code here made by friend and colleague David Borland. And it uses D3.js. What that means is it's interactive. So you can hold the handles and you can change the size of the underlying polygon. So the polygon that you see here is the one that is actually being rotated. Now, to get a better handle on that that's occurring, you can actually change the number of rotated quadrilaterals. So if you go down to one, you can see your underlying one and then increase it. Then you also have a sliding bar the lets you change the angle of rotation. So maybe I like having them tighter, and then I can move them over like that. So this is the tool that you have to create your artwork. When you get something you like, then take a screen capture and share it with the group. So enjoy playing around and using linear algebra in matrix rotation to create your computational Spirograph. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"7fe179ca6d6946ce9f476a7be4e7d03a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"41ec3c65a0904724b10679d682ee48ab",
                                "vertical_name":"Activity Overview: Creating Spirographs With Linear Algebra"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2b3fe5bc332a4ebeaff63087fc285778",
                        "sequential_name":"4.3 Seeing Double: Symmetry",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Computer game designer",
                                            "Cartesian coordinate",
                                            "Computer games",
                                            "Vertical line",
                                            "Cartesian coordinates",
                                            "Horizontal line",
                                            "Homogeneous coordinates",
                                            "Linear algebra",
                                            "Theta",
                                            "Matrix addition",
                                            "Mc escher",
                                            "Single point",
                                            "Minus",
                                            "Rotation matrix",
                                            "Called",
                                            "Kim",
                                            "Original",
                                            "Game",
                                            "Work",
                                            "Bird",
                                            "Create",
                                            "Ll",
                                            "Puzzle",
                                            "Master",
                                            "Flip",
                                            "Ambigrams",
                                            "Word",
                                            "Matrix",
                                            "Rotation",
                                            "Origin",
                                            "Multiplying",
                                            "Escher",
                                            "Created",
                                            "Adding",
                                            "Vector",
                                            "Image",
                                            "Rotate",
                                            "Tile",
                                            "Point"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In the last lecture, we multiplied matrices at the end and saw how to multiply a matrix and a vector, in order to rotate an object. Let's take that another step. We'll take the bird that you see on the screen that was designed by Elaine Nicholas. It's constructed with 10 points. We'll call the bird in this particular orientation the model bird. Now, let's rotate the model bird by 180 degrees about the point 0.712 and 0.4320. That looks like this. That was pretty specific. Why are we doing that? Well, again, we'll rotate it. And from this model bird, we're going to create four tiles and fit them together. We just created one of those tiles. Again, why? Well, let me hold off on that for a moment. Now, we'll create our second tile. For the second tile, we'll flip, or reflect, the model bird about horizontal line y equal 0.6180 and then translate the image 0.4084 units along the x-axis. Again, that creates that second tile. Then we create a third tile. And that comes from reflecting the model bird, but this time about the vertical line x equals 0.5078 and translating the image by negative 0.3720 units along the y-axis. So now we have three tiles. And we create our fourth and final tile by reflecting once more, this time about the vertical line x equal 0.5078 and then translating along the y-axis by negative 0.3720 units. Now, graphing all four tiles produces an image reminiscent of the tiling of MC Escher. Now, we could continue this type of process and tile the plane, as seen on the screen. In the last lecture, we rotated a point using linear algebra. In this section, we'll see how to use linear algebra to perform the types of maneuvers we just used to produce the tiles. As we saw in the last section, rotating a point x, y about the origin takes the vector x, y and multiplies it by the rotation matrix, cosine theta minus sine theta, sine theta cosine theta. Now, translating a point x, y by h units along the x-axis and k units along the y-axis is found by adding the vector h, k to the vector x y. Notice though, if you want to rotate and then translate a point, then our previous computations would involve multiplying and then adding. This may seem simple, as matrix addition was simple enough. But multiplying adding, multiplying and then adding is easier if we can consolidate all of that into multiplication. In this way, we can take successive multiplications and combine them into one matrix for multiplication. The desire to treat everything as multiplications moves us into homogeneous coordinates. So for that, we take a Cartesian coordinate like x, y. Now, we can represent that point in homogeneous coordinates as xz, yz, z, where we take z as any nonzero real number. So let's look at an example of that. Take the Cartesian coordinate 1,3. That can be represented in homogeneous coordinates as 1, 3, 1 or 2, 6, 2. Now, the original Cartesian coordinate can be recovered from homogeneous coordinates by dividing each of the first two positions by the third. For example, the homogeneous coordinate 5, 10, 5 corresponds to the Cartesian coordinate 5/5 and 10/5, five or the point 1, 2. Note that any single point in Cartesian coordinates can be represented by infinitely many homogeneous coordinates. OK, so we've got that down. So now let's see how easy it is to take the model bird from earlier and create each of our tiles, when we're using homogeneous coordinates. Now, if we want to translate in homogeneous coordinates and we have the point x, y, 1 by h units along the x-axis and k along the y-axis, we multipliy that vector for the point by the matrix 1 0 h, 0 1 k, 0 0 1. You can check that this works by multiplying that matrix we just talked about 1 0 h, 0 1 k, 0 0 1 by the vector for the point, which would of course be x y one. When you do, that forms the vector x plus h, y plus k, 1 which is what we want. Now, we also did rotation. If we rotate by theta degrees about the origin, we multiply the point by cosine theta minus sine theta 0, sine theta cosine theta 0, 0 0 1. Now, suppose we want to rotate by theta degrees. But this time, rather than about the origin, we want to be about the point a, b. Now, if you think about it, this can be done by translating the point a, b to the origin, rotating, and then translating from the origin back to the point a, b. This equates in linear algebra to multiplying by the matrix 1 0 a, 0 1 b, 0 0 1. We multiply that by that rotation matrix we just spoke about, which is cosine theta minus sine theta 0, sine theta cosine theta 0, 0 0 1. And then again, remember, we translated back to a, b. And that corresponds to the final matrix in that multiplication being 2 0 minus a, 0 1 minus b, 0 0 1. The product of these three matrices is cosine theta minus sine theta and then a rather large unit-- minus a cosine theta plus b cosine theta plus a. The second row is cosine theta cosine theta and then minus a cosine theta minus b cosine theta plus b. And the third row is quite easy. It's 0 0 1. Well, that enables us to rotate about any point. As an example, suppose we want to rotate by 180 degrees. Do you remember which point? It was 0.7120, 0.4320. That created one of our tiles. Well, we do that in homogeneous coordinates by multiplying that homogeneous coordinate vector by the matrix negative 1 0 1.424001, 0 1 0.8640, and 0 0 1. That's it. So you simply take the points that you have-- the theta and the a and the b. And you just plug them in, and you get a 3 by 3 vector. Now, let's move to something beyond rotation. Suppose we want to reflect, to create a tile. So we're going to reflect about the x-axis. If we want to do that, we multiply by the matrix 1 00, 0 0 minus 1 0, 0 0 1. To reflect about the y-axis, we multiply, again, by a matrix. And in this case it's negative 1 0 0, 0 1 0, 0 0 1. That gives us a lot of options, the options that we need to do Escher-like tiling and to also create interesting art work that has symmetry in it. To have some fun with symmetry, we're going to look at the work of Scott Kim, who is an American puzzle and computer game designer. He's an artist and an author. Scott holds the elite status of a puzzle master. He's created hundreds of puzzles for magazines, such as \"Scientific America\" and \"Games\", as well as thousands of puzzles for computer games. Kim is one of the best known masters of the ambigrams. Isaac Asimov called Kim the Escher of the alphabet. Well, ambigrams relate to what we're doing in this unit. For example, consider the word mirror, that you see on the screen. Now, that word contains symmetry over the dotted vertical line. That means you can take half the image and reflect it about the vertical line, to produce the word mirror as you see it. Well, let's try another one. But I'll only show you the piece that you have to then use those reflections and translations and rotations to form the actual word. So like before, this will form a word. You can make another copy and then slide one on top of the other, until you see the word that it's forming. You may have to turn or flip the other copy. So take a moment and see if you can think what underlying word this creates. As you think about that, you may want to know that Scott Kim has an entire book of this type of artwork. It's called \"Inversions\". The book sits in my office and is something that delights me and students. OK, did you get the word? Well, you reflect the copy of the image. And then you translate either that copy or the original, until you see the word that you now see on the screen. So on the MOOC web page, you'll find a handout with other options that you can play with. In the activity, you'll also play with matrix operations like those that we saw earlier. So remember, if you want to rotate, reflect, or translate an image, you need only to multiply. There are various applications, like tiling the plane, like Escher, or creating images with symmetry, like Scott Kim. What ideas do you have? You might want to give it a try. And linear algebra, of course, can help. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"767d7c778241444ba9ec74fc6f6f583f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ad561c28753c488f876232fa8bdeacbe",
                                "vertical_name":"Seeing Double: Symmetry (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"25095cb8cf7242259e09f1b14d32b88a",
                        "sequential_name":"4.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear transformations",
                                            "Visual effect",
                                            "Matrix multiplication",
                                            "Math operations",
                                            "Mona lisa",
                                            "Gray scale",
                                            "Ambigram",
                                            "Perform",
                                            "Fun",
                                            "Original",
                                            "Ll",
                                            "Activity",
                                            "Create",
                                            "Reflection",
                                            "Image",
                                            "Rotate"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In this activity, you get to rotate, translate, and reflect an image. As you saw in the lecture, all three of these operations can be performed with matrix multiplication, so they are all done with a linear process and are also called linear transformations. So you'll be able to perform such linear transformations on an image on its own, or you can perform linear transformations to an image, and then another set of transformations to a copy of the image. Both images can be combined to create a visual effect. In a moment, you'll see that you can perform this on an image of your choice. However, the default image is part of a Scott Kim ambigram. Your challenge will be to piece it and a copy of itself together to form the word \"mathematics.\" It's a challenge, so do your best. After 10 minutes, if you haven't gotten it, and would like to stop, that's fine. The activity isn't about successfully producing the ambigram with linear transformations. The activity is designed to get you to think in terms of transformations, rotations, translations, and reflections. It's fun, and sometimes, quite challenging. So let's move to the software and see what we have ready for you to explore. So let's use matrix operations to create artwork of Scott Kim. Here, we have part of an ambigram that, in the end, will form the word \"mathematics.\" So the question is, how do you take a copy of this, place it together, and create that word? Well, we have code here that will enable you to do that. So you take the original image. And I'll rotate it by 0. And then I won't move it in the x or y direction, and I'm not going to reflect it. Then, I am going to include a copy of it. And then I simply decide, am I going to rotate it? On this particular one, I won't. But then I am going to move it down 10. I'm sorry, I'm going to move it vertically 10, and then horizontally 20. And then maybe I'll flip it on the y-axis. That didn't quite work. So then I go back and I say, hm, well, maybe if I tried this, too. And you can continue to play. If that isn't working, and you want something a little less experimental, one way to do it is just to take the image itself-- as you see here-- to print it, print a copy, hold it up to the light, and make it form the word \"mathematics.\" And then think about the types of math operations that we learned-- reflection, rotation, translation-- that would actually fit them together. That's what I did, and I indeed produced the word \"mathematics\" when I worked on it on my own. The other thing you can do is that you can take an image, such as the Mona Lisa here, and you can do this type of maneuver again. So I'm going to leave the original in its form. I'm going to take a copy. And I'm going to-- I won't rotate it the first time. I'll just move it 10 and 20. And I'm just going to reflect it about the y-axis. Now it always turns things into gray scale, and then it makes it slightly opaque, as you see. So this is a very ghost-like image. And then maybe I want to begin to make it more of a mush of kind of harder to interpret images, as you see there. And if I like that, I could say, you know, maybe I'll even rotate by 90 degrees, and you see there. So see what you can get, and see what type of images you want. One thing to point out about Scott Kim is that you might want to take the pieces off his handout and take screen captures of those. And then you could upload them and try to form other words beyond \"mathematics.\" It's really up to you. So have fun playing around with linear transformations that allow you to do rotation, reflection, and translation. ",
                                        "unit_id":"19f85e8ec2f746bdaa79a8203043b833",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ad507c3845724ec7a13b9d7d969a1ac7",
                                "vertical_name":"Activity Overview: Linear Transformations"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"97925100dd6046359da17e4b707c9280",
                "chapter_name":"Unit 5: It's Elementary",
                "sequentials":[
                    {
                        "sequential_id":"ae362a9d242d41dba4726e0289d228de",
                        "sequential_name":"Introduction and Learning Goals",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Linear equations",
                                            "Huge",
                                            "Math operations",
                                            "System",
                                            "Solving",
                                            "Make",
                                            "Important",
                                            "Ll"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: Solving linear systems is an important part of linear algebra. For example, suppose we have x plus y equal 4, x minus y equal 2. Solving this linear system means finding x and y that make both equations true at the same time. This is an important topic of linear algebra. Modern computer simulation code solve huge linear systems. By huge, I mean millions of equations. That means finding millions of numbers that make millions of equations true at the same time. That's hard to do. It takes modern computers that use today's efficient algorithms, which are also currently being developed. We'll be talking about the solution method in this unit that's called Gaussian elimination. The first section, we'll walk you through what we mean by solving a system of linear equations. And you'll practice and have a quiz. There won't be an activity that follows. In the following sections, we'll apply what we've learned. First, we'll have some fun with the math operations that enable us to solve linear systems. We'll use two of the three operations to manipulate images. I look forward to seeing what you create with this. Then, we'll have two sections on cryptography. And see how linear algebra enables us to encode secret messages. So let's dive in and learn to solve linear systems. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"79776fd08db64cc893767e6c483dfd90",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b0ea7eef800b4347ae7a235d96996ac2",
                                "vertical_name":"Introduction to Unit 5"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f4fb2125cf274eb69aed893aee50c817",
                        "sequential_name":"5.1 Getting Eliminated",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear equations",
                                            "Gaussian elimination",
                                            "Mathematical equations",
                                            "Computer graphics",
                                            "Great wall",
                                            "Web page",
                                            "Negative",
                                            "Matrix methods",
                                            "Minus",
                                            "Written",
                                            "Make",
                                            "Find",
                                            "Matrix",
                                            "Previous",
                                            "Solving",
                                            "Work"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: So far we've seen applications of linear algebra largely in modern applications like computer graphics and data science-- specifically finding preferences in movies. Applying linear algebra isn't new though. For example, such problems arose in 200 BC, which is the time when the Great Wall of China was completed-- again, 200 BC. In particular, a Chinese manuscript was written and contained 246 problems. The eighth chapter contained the first known example of matrix methods with a technique known as Fang Cheng. The technique became known centuries later as Gaussian Elimination and is the topic of this unit. In the last unit, we computed the vector b where Ax equals b. In this unit, we'll find x when Ax equals b. Let's look at an example from that ancient Chinese text. The document was intended to illustrate methods of solution for everyday problems in areas such as engineering, surveying, and trade. Here's the problem. There are three classes of grain of which three bundles of the first class, two of the second, and one of the third make 39 measures. Two of the first, three of the second, and one of the third make 34 measures and one of the first, two of the second, and three of the third make 26 measures. How many measures of grain are contained in one bundle of each class? Now our unknowns are the measure of each grain in one bundle of each class. So we need to transcribe this into mathematical equations. Sometimes that can be quite difficult. For this particular problem, we get x plus 2y plus 3z equals 26, 3x plus 2y plus z equals 39, and 2x plus 3y plus z equals 34. Now, in this type of question, we're asking what values of x, y, and z make all three equations true at the same time. That's the topic of this unit. In time, we'll work with the matrix, but for now let's stick with the linear systems written in the form we just saw. To solve such a system, we essentially eliminate variables by adding and subtracting appropriate multiples of one equation to another. So to eliminate the variable x from the second equation one could subtract three times the first equation from the second to obtain-- the first equation was 3x plus 2y plus z minus 3 times the second, which is 3 times the quantity x plus 2y plus 3z. So that equals minus 4y minus 8z and on the right hand side we get equals negative 39. Now to eliminate x from the third equation one could subtract two times the first equation from the third and in that case when you work it through you get negative y minus 5z equals negative 18. Now, we have two equations and two unknowns. They are negative 4y minus 8z equals negative 39 and minus y minus 5x or 5z equals negative 18. To eliminate y we multiply the last equation by 4 and subtract it from the previous one, which produces 12z equals 33. Well, that's easy to solve so we get z equals 2.75. We can easily substitute this value into the previous equations. So we can choose minus y minus 5z equals minus 18 and find that y equals 4.25. Knowing y and z makes it easy to find x by substituting these two values into one of our original equations, which again had all three presence-- all three equations present. For example, 3x plus 2y plus z equals 39. That becomes 3x plus 2 times 4.25 plus 2.75 equals 39. Solving for x we get x equals 9.25. In time, we'll explore these ideas in applications, but for now let's be sure we can get this math down. So you'll find a few more examples on the web page for our MOOC and have a quiz. Then we'll move ahead. So first let's work on solving systems of linear equations in this particular way. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"4ca84dd974144d12ad1868c428c8e4b4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ade4c3063ff24c2a80203c7fd1c14a8f",
                                "vertical_name":"Getting Eliminated (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0bdab649da834a5785be76bcac1da79f",
                        "sequential_name":"5.2 Seeing Diagon-alley",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Elementary row operation",
                                            "Gaussian elimination",
                                            "Diagonal form",
                                            "Linear equations",
                                            "Row operations",
                                            "Right hand side",
                                            "Mona lisa",
                                            "Left side",
                                            "Linear system",
                                            "Vertical line",
                                            "Image manipulation",
                                            "Scalar multiple",
                                            "Equal sign",
                                            "Elementary",
                                            "Called",
                                            "Operation",
                                            "Ll",
                                            "Minus",
                                            "Multiply",
                                            "Line",
                                            "Row",
                                            "System",
                                            "Image",
                                            "Scalar",
                                            "Matrix",
                                            "Column",
                                            "Activity",
                                            "Easy"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In the last lecture, we saw the linear system x plus 2y plus 3z equal 26, 3x plus 2y plus z equals 39, and 2x plus 3y plus z equal 34. The question again is, what x, y, and z satisfy all three equations? Now, I can't simply look at that and know what values solve that system. But what if I have the system x equal 9.25, y equal 4.25, and z equal 2.75? I still have three unknowns and three equations, but now asking what x, y, and z satisfy these equations almost seems like a joke. But it's not. In fact, it uncovers a key to solving linear systems. The former system of linear equations was easy to know the solution, but both systems have the same set of solutions. So what if we can move from the first to the last in a series of maneuvers that always keeps the solutions to the systems the same? That's what we're doing and actually wanting to do when we eliminate variables as we did in the last lecture. We had x plus 2y plus 3z equal 26 and 3x plus 2y plus z equals 39. We subtract 3 times the first equation from the second to obtain negative 4y minus 8z equals negative 39. Now, let's do this with matrices. First, we take our linear system and place it into what's called an augmented linear system. So x plus 2y plus 3z equals 26, 3x plus 2y plus z equal 39, and finally, again, 2x plus 3y plus z equals 34. That linear system becomes the matrix 1, 2, 3, and then we put a vertical line. That denotes that equal sign. And then we get the entry 26. So again, that first line is 1, 2, 3, a vertical line, 26; 3, 2, 1, that vertical line, and 39; and then 2, 3, 1, and then 34 again on the right-hand side of that vertical line. Notice how we're taking the coefficients of the variables and placing them on the left side of that vertical line. The right-hand side of the equations goes on the right-hand side of the vertical line. Let's try the same thing with our second system. Again, in this case, we had x equal 9.25, y equal 4.25, and z equal 2.75. That becomes the matrix 1, 0, 0, and then the line, 9.25; 0, 1, 0, the vertical line, and 4.25; and then 0, 0, 1, the vertical line, and 2.75. This is called diagonal form, and we can see that it is easy to know its solution. If the system has a solution, we keep working until we see the system in diagonal form. So we want to move from any given linear system to diagonal form while always keeping the same solution to the linear system. So we have three operations that allow us to move from one linear system to another where both have the same solution. These are called elementary row operations. So what are they? Well, elementary row operation one, switch any two rows. Now, this is like saying, well, x plus y equal 5, x minus y equals 3. And then saying, oh, well, actually, sorry, I prefer to say it, x minus y equals 3 and x plus y equal 5. The x and y that make both equations true would be the same in either case. Well, easy enough. Well, let's have some fun with this row operation and use it for image manipulation. What we'll do is we'll swap random rows of an image, in particular, we'll take blocks of rows, like rows 25 to 40 or maybe 61 to 85. Then we'll swap those with a block of rows that have the same size. What does this do? It scrambles an image a bit. For instance, here's the Mona Lisa after such row swapping. Can you tell what famous painting this one is? We'll have fun with this in the exploratory exercise with this activity. But before that, let's learn the second elementary row operation. In this case, you multiply any row by a non-zero scalar. For instance, you might have x minus y equal 3. That can become, if you multiply it by 2, 2x minus 2y equals 6. That's pretty easy too. Again, we'll multiply various rows of an image by random scalars and then see the resulting image. In this case, we'll multiply rows of matrices storing the red, green, and blue intensity information of each pixel. Here's one I got for the Mona Lisa. OK, so now we're ready for the last elementary row operation, and that's replacing a row by the sum of a non-zero scalar multiple of that row and another row. This is how we eliminated variables in the last lecture. For instance, we started with the matrix system 1, 2, 3, the vertical line, 26; 3, 2, 1, the vertical line, 39; and then, finally, in the last row, we get 2, 3, 1, the vertical line, 34. Do you remember what we did? We subtracted 3 times the first row from the second, but now we'll let that replace the second row. When we do that, that produces the matrix system 1, 2, 3, the line, 26; 0, minus 4, minus 8, the line, negative 39; and then the last row remains the same, 2, 3, 1, the line, and then 34. When we replaced row 3, we did that by taking the sum of minus 2 times the first row and the third row. Well, we, again, let that replace that third row, so we get, in the first row, 1, 2, 3, 26; the second row is 0, minus 4, minus 8, negative 39; and then 0, 0, 12, 33. Notice how the first column matches what we want the first column to be in diagonal form. We would then use row operations to put the entire matrix in diagonal form, giving us the solution. This is called Gaussian elimination. If you are not familiar with it, look it up. You'll find plenty of videos and web pages describing it. For our activity, we'll explore two of the three row operations in the context of image manipulation. These row operations are used beyond Gaussian elimination. So let's move to the exploratory activity and do some image manipulation in a relatively elementary way. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"e2ea2dd6036a492dae0dccb9ce3a8202",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b1fdafd32edf40b58a187788423a8d98",
                                "vertical_name":"Seeing Diagon-alley (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ec4407f8653a4c49aaa98b935fe5b5f1",
                        "sequential_name":"5.2 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Elementary row operations",
                                            "Elementary row operation",
                                            "Row operations",
                                            "Lower bound",
                                            "Graphic art",
                                            "Gaussian elimination",
                                            "Blue channel",
                                            "Mona lisa",
                                            "Image manipulation",
                                            "Color image",
                                            "Randomly generated",
                                            "Row",
                                            "Operation",
                                            "Swap",
                                            "Randomly",
                                            "Image",
                                            "Lion",
                                            "Generate",
                                            "Create",
                                            "Pick",
                                            "Section",
                                            "Ll"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In Gaussian elimination, you have three elementary row operations. Swapping rows, multiplying a row by a nonzero scalar, or adding a nonzero scalar of one row to another row. With those three operations we solve linear systems. In this activity, we'll explore two of the three row operations in the context of image manipulation. Playing with these ideas should help you remember those row operations. In particular, you will swap rows of a matrix-- essentially scrambling the image. I particularly like it when well-known images are used. And then I ask people what the original image was. I wonder what you'll do, and I look forward to seeing it. We will also multiply rows in the red, green, and blue channels of a color image to create variations of that image. These types of images remind me of some of the graphic art that we see in advertisements. Again, I'm wondering what you'll do. In the end, we'll see how to of the three elementary row operations can, on their own, be used for image manipulation. And in the process, we'll have a hands-on experience with these operations which are important in solving linear systems with Gaussian elimination. So let's learn how to use the codes that we've prepared for you. So now we're ready to use elementary row operations to do image manipulation. First we'll do row swapping. So we'll take a region of consecutive rows and swap it with another region of the same size. And that will be considered one row swap, if you will. It's really a section of rows, but we'll just talk about it that way. If you don't choose an image, you'll get this image of the adult lion. And then here I've decided to do 10 of those row swaps, or sections of row swaps, if you will. Click Generate. And there you have it. You have those swapped. You can pick less if you want. So here's three, which I think is the lower bound of what you can choose. And then again, if you want to look at another option, you like what you have, but would like to see what else can be randomly generated, you can continue to Refresh. I also like to pick images of well-known paintings and see if I or a friend can get it. So let's try 20. Generate. And there you have the Mona Lisa with it swapped. Again, you could Refresh and get a new image and see what you might generate. So there you have it. OK. So now the second row operation we also have is row multiplication. So another elementary row operation is multiplying a row by a nonzero scalar. So in this particular case, you're going to pick a random section of rows again. But this time it will be randomly chosen to be in the red, green, or blue channel of the particular color image that you have. By doing that, you're taking that particular matrix and then multiplying that section of rows by a nonzero scalar. Again, if you don't choose something, then you get the lion, as we see here. And then you determine the number of sections that will be used. So here I have 10. So I click Generate. And then there I have consecutive rows. For this particular image, I'm not real fond of when I get this really light value. So I\"m going to say Continue. And try it again. And there, there's something I like a bit more. I'll try it again. That one I definitely don't like. I'll try it one more time. There you go. And you actually get overlapping regions. So it's fun to sit and try to think about how is this actually generated, even though it was done randomly. Again, you can try a larger value like 20. And you get much more of the image generated with these crossovers. There you go. OK. So let's go back and try the Mona Lisa. And I'll keep it at 20. I click Generate. And there you go with the Mona Lisa. I like that a lot. Let's generate one more time. So there you go. So with this you have options for flipping and row multiplication to do image manipulation. Again, we'll put these up on the gallery, and we'll see what we create together. Have fun. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"545489e62395482fa0888a0d35f159a7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e11f20dba2e14878a7eb3fb76af74dad",
                                "vertical_name":"Activity Overview: Gaussian Elimination Via Image Manipulation"
                            }
                        ]
                    },
                    {
                        "sequential_id":"69b86f723fe04694b3e489242d8ecda7",
                        "sequential_name":"5.3 Being Cryptic",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Observable universe",
                                            "Credit card",
                                            "Alphabetical order",
                                            "Caesar cipher",
                                            "Gaussian elimination",
                                            "Julius caesar",
                                            "Matrix multiplication",
                                            "Big numbers",
                                            "Find",
                                            "Ll",
                                            "Encryption",
                                            "Vector",
                                            "Linear",
                                            "Data",
                                            "Divided",
                                            "Message",
                                            "Big",
                                            "Back",
                                            "Matrix",
                                            "Number"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: When was the last time you made an online purchase using your credit card? The security of such websites comes from encrypting the data. Encrypted data looks like gibberish unless you know how to decipher it. Broadly speaking, many of the most secure encryption techniques are based on factoring really, really huge numbers. Now how big is big here? I'm talking 10 to the 75th power. Keep in mind that the number of atoms in the observable universe is estimated to be 10 to the 80th power. So we're talking really big numbers here, Let's learn one of the simplest encryption methods, named the Caesar cipher, after Julius Caesar. To begin, letters are enumerated in alphabetical order from zero to 25. So the letter A is assigned to the number zero, B is assigned to one, and so on, with 25 equating to the letter Z. So let's suppose we look at the word, linear. We first put it into its corresponding sequence of numbers, which are 11, 8, 13, 4, 0, and 17. You can verify that or just take my word for it, but that's the actual enumeration. The Caesar cipher, as it's called, adds three to every number in that sequence. So if the vector, v, is the numbers corresponding to our word of interest, then we encrypt this by computing v plus 3 times u, where u is the vector of ones that is the same size as v. So, for the word, linear, v would equal 11, 8, 13, 4, 0, and 17, as we saw earlier. So the encrypted vector is 14, 11, 16, 7, 3, and 20. Now finally, we form the encrypted message by writing the letters associated with the entries of the encrypted vector. So this message becomes O-L-Q-H-D-U. I don't even know how to say that, but that's what you would get on the other side. The receiver that gets that message, and the goal now is to decode it. In this case, the receiver gets the vector 14, 11, 16 7, 3, 20. Decoding is easy for this case. You simply subtract 3 from each entry, which would return us to 11, 8, 13, 4, 0, and 17. When we look at the letters associated with those numbers, we get back, linear. Easy enough. There is one more thing, though. Suppose you receive the encrypted message, P-D-W-U-L-A, and you want to decrypt that. First, we create the vector associated with these letters. That gives us 15, 3, 22, 20, 11, and 0. Do you remember what we do now? We subtract 3 from each of these entries. That would give us 12, 0, 19, 17, 8, and minus 3. What do we do with the minus 3? Well, a similar issue arises if I have 25, which is Z, and I add 1 or I add 3 in that case. But for now let's just add 1. Well, what do I want to have happen in that case? Well, returning to letters, if I have a Z and I'm shifting by 1, I want it to become an A. In that sense, it loops back around. Well, we can do this mathematically by finding the remainder of a number divided by 26. So if you have a number larger than 25 or smaller than 0, the remainder becomes the new number to help us find the associated letter. So negative 3 corresponds to the same letter as negative 3 plus 26, which is 23. A way to talk about this is finding the vector modulo 26. In this case, the decrypted factor becomes 12, 0, 19, 17, 8, 23. That allows us to look for the letters, and the letters correspond to the word, MATRIX. Note. I could shift by any amount from 1 to 25. And you could shift by 0, but you're really not doing anything because it just gives you back the same word that you started with. So we chose 3. And that's because that's associated with the Caesar cipher. But we could shift by anything. For instance, 4. So let's encrypt the word, matrix, with a shift of 4. Now our beginning vector is 12, 0, 19, 17, 8, 23. Encryption occurs with a shift of 4, so it becomes 16, 4, 23, 21, 12, 27. Notice we have a 27, so we have to take the remainder of that when divided by 26. That's a 1. So that becomes 16, 4, 23, 21, 12, 1. And that becomes the word, QEXVMB. Decrypting is the same idea as before. Now we simply subtract 4. So on the MOOC web page, you'll find examples of this type of encryption. Let's play around with this. And then in the next section, we'll see an example of using matrix multiplication for encryption and solving linear systems, which we've seen can involve using Gaussian elimination. In this particular section, we used vector arithmetic. But with Gaussian elimination, things become a little more cryptic. But for now, let's just try using the Caesar cipher to get cryptic with messages that you want to pass. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"10fa1d7cc5af4864a75eecfe4fa29549",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"088ade76b7ba4f2c9227742b49d1e85d",
                                "vertical_name":"Being Cryptic (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"57dc8f7b325343148d96c84082691d48",
                        "sequential_name":"5.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Tom sawyer",
                                            "Linear algebra",
                                            "Number theory",
                                            "Mark twain",
                                            "Shift cipher",
                                            "Text",
                                            "Hit",
                                            "Sensitive",
                                            "Encode",
                                            "Cipher",
                                            "Ll",
                                            "Activity",
                                            "Message",
                                            "Decode",
                                            "Part",
                                            "Encoded",
                                            "Line",
                                            "Thing",
                                            "Shift",
                                            "Method"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: With this exploratory activity, you get to delve into the area of cryptography. An important part of this field is easily and quickly encoding a message that can also be easily and quickly decoded. But you don't want just anyone to decode the message quickly. In this activity, you'll get to explore codes that encode messages using the shift cipher. We'll also see how easy this cipher is to break, especially with a computer. Still, if you don't know what I was using as a method for encryption and knew little about encryption, this method might work. But anything truly sensitive, you'd want to use a more complicated method. For that, look into the field of cryptography, as it uses linear algebra and a lot from the field of number theory. OK, let's see the codes that we have ready for you. So let's see the codes that we've created to help you, if you will, shift to the cryptic. The page uses a shift cipher to encode and then decode text. The shift is chosen randomly. So you get a value from 1 to 25, and it performs that shift. The text is a random line taken from the first chapter of The Adventures of Tom Sawyer by Mark Twain. The neat thing is each time you hit that Encode button, you get a new line with a new shift. And part of it is, can you figure out what it's actually using? So here we go. So we'll hit Encode, and then here is the encoded text that it used. And then it uses all the shifts between 0 and 25. And then look to see if you can figure out which one you think it used. There it is, \"you are.\" Now at the bottom, it tells you. So one thing you might want to do is actually shrink the page a little bit so you can't see it. Then you hit Reload, and you can try a new one. So there we go. So can I spot the one that it had? Hm. There it is, [? 24-- ?] \"well, I will.\" And then you go down and check it was 24. One of the biggest things to notice in this is how fast it produces. It encoded, and then look how fast it produced all those decoded text lines. And then you just spot the one that actually has English in it, as we have there. That's one of the reasons why the shift cipher is not a great cipher if you have highly sensitive information. Nonetheless, if someone doesn't know what you're doing, it can be effective. So enjoy playing around with this and seeing an introduction to cryptography that uses linear algebra. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"606650972c6d4f26afd178758026ad4d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"109d73f51a284541b0b6b9095edb8b7a",
                                "vertical_name":"Activity Overview: Shifting to the Cryptic"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6a5f84ce4e2d4360a6c9ce9ac8591305",
                        "sequential_name":"5.4 Deciphering Linear Systems",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Elementary row operations",
                                            "Linear systems",
                                            "Linear algebra",
                                            "Mathematical models",
                                            "Gaussian elimination",
                                            "Identity matrix",
                                            "Linear system",
                                            "Matrix multiplication",
                                            "Column vector",
                                            "Matrix inverse",
                                            "Inverse matrix",
                                            "Caesar shift",
                                            "Solve",
                                            "Linear",
                                            "Row",
                                            "Powerful",
                                            "Encode",
                                            "Multiply",
                                            "Inverse",
                                            "Matrix",
                                            "Ll",
                                            "Vector",
                                            "Internet",
                                            "System",
                                            "Unit",
                                            "Work",
                                            "Encrypt",
                                            "Remember",
                                            "Break",
                                            "Cipher",
                                            "Shift"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In the last section, we saw how to use a shift to create encrypted messages. Fairly easy, but be careful building this into a website to encrypt data. This cipher is fairly easy to break regardless of your shift, even if I don't know what shift you used. If I suspect or know this type of cipher was used, I could try all shifts between 1 and 25, and see if I get a recognizable message. This would be really quick to try on a computer. So let's try a more complicated cipher. Now, we'll multiply a vector by a matrix to get the encrypted vector. This time, we'll break our vector into groups of three before encoding. You can pick another number, like groups of four or five or something else, but we'll do three. For this example, we'll multiply by the matrix, minus 3, minus 3, minus 4, 0, 1, 1, 4, 3, 4. Again, here you can make other choices as well. This will result in the sequence of numbers for the encrypted message. Let's again encrypt the word \"linear.\" Now last time we found the vector that corresponds to those letters. It is 11, 8, 13, 4, 0, 17. Now we break this vector into units of three, and treat that as a column vector. So our first column vector would be multiplied by are matrix. That gives us minus 3, minus 3, minus 4, 0, 1, 1, 4, 3, 4, times the vector 11, 8, 13. Well, that gives us-- remember we're working modulo 26, 21, 21, 16. You might want to verify that that's the case. And as you're doing that, also verify that multiplying by the vector 4, 0, 17, which is that second group of three. That gives us 24, 17, 6. Now, we combine those encoded vectors to form the larger encoded vector, which is 4, 0, 17, 24, 17, 6, and that corresponds to the encrypted message V-V-Q-Y-R-G. So there we have it. But of course, we want to decode, too. It needs to be quick and an easy process for the receiver. First of course, we would transfer from those letters to the first encrypted vector in a packet of three. Our first would be 21, 21, 16. To decrypt, we want to find the vector x, such that minus 3, minus 3, minus 4, 0, 1, 1, 4, 3, 4-- that vector times x-- equals 21, 21, 16. Well, look at that a moment. Not surprisingly, that's the topic of this entire unit. Elementary row operations could be used within Gaussian elimination to solve this linear system. If you do, you find that x equals 37, 216, and negative 195. Again, we work modulo 26, and that gives us 11, 8, 13. It is also helpful here for us to talk about a matrix inverse. Note that if a equals minus 3, minus 3, minus 4, 0, 1, 1, 4, 3, 4, and the matrix b is equal to 1, 0, 1, 4, 4, 3, minus 4, minus 3, minus 3, then a times b equals the three-by-three identity matrix 1, 0, 0, 0, 1, 0, 0, 0, 1. And b times a also equals that three-by-three identity matrix. So b, in this case, is said to be the inverse of a. This helps because if a times x equals the vector d, then we multiply both sides of the equation on the left by b. That gives us b times a times x equals b times d. But remember, b times a equals that identity matrix, and that identity matrix times x is simply x. So when you work that out, all we end up with is b times d equals x. This means we just need the inverse matrix, and then the problem moves from being one of Gaussian elimination to one of matrix multiplication. It does mean though that you need that matrix inverse. So for our problem, the solution would be the matrix b times 21, 21, 16, which equals 37, 216, and negative 195, which we saw earlier becomes the vector 11, 8, 13, when we work modulo 26. Now this is very important. Not every matrix has an inverse. For this method to work, your matrix must have an inverse. Else you can encode, but you can't decode. On the MOOC site, you'll have an opportunity to practice using linear algebra to encrypt and decrypt using this particular technique. This technique is more powerful than the Caesar shift because you need to know that matrix and you need to know the matrix inverse. You don't have to know the matrix inverse because, again, you can use Gaussian elimination. But this means that you can now-- if you want-- pass notes, and encode them using linear algebra. But keep in mind even fancier methods are used to encode credit card numbers on the internet, as even this method can be broken quickly enough to be insecure for internet transactions. Solving large linear systems is used for applications beyond cryptography. For instance, many mathematical models are solved using linear systems. Some of the world's fastest and most powerful computers solve such linear systems. Why? The systems are huge. How huge? Having millions of rows and millions of unknowns. But for now, let's solve linear systems to encrypt messages. And of course, be a bit cryptic. So have fun playing around with linear algebra and cryptography. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"5597536127114a5e8cd191b468873234",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b33cc86f36894ae9b4ff26eaa6eab819",
                                "vertical_name":"Deciphering Linear Systems (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6f5e57fcc1fa44d1ba8e2349d22ec296",
                        "sequential_name":"5.4 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Credit card",
                                            "Caesar cipher",
                                            "Shift cipher",
                                            "Linear system",
                                            "Linear algebra",
                                            "Shift",
                                            "Linear",
                                            "Hit",
                                            "Decode",
                                            "Encode",
                                            "Online",
                                            "Matrix",
                                            "Ll"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: In this activity, we'll see how linear algebra can play a role in encryption. This technique is much harder to break than the one we just saw with the simple shift. We'll decode using the inverse of a matrix or solving a linear system as we discussed in the lecture. With the shift cipher, we could easily try every combination as they were only 25 possible shifts. Consider a 3 by 3 matrix. How many are there? Clearly, we can't try, literally, every 3 by 3 matrix, so breaking this code is more complex. Still, this isn't the level of security that you'd use when you submit a credit card for an online purchase. Nonetheless, this gives us a sense of how things generally become more complex as they become more secure. Notice, still how this is very quick to encode and decode as long as you have the information necessary to know what process to use to get the information in the form you want. Let's see the codes we've prepared for you. So let's do some cryptography as we discussed in lecture. We'll actually do both encoding techniques that we've learned in this particular unit. We have the shift cipher, and then we'll also have the use of a matrix. So first thing you need to do is type in some text, so I'll do life is linear in this MOOC. Then, you pick a shift. I could take it down to three to make it the Caesar cipher, and then I need a matrix. So for instance, if I want to take-- remember it needs to be square, so 2 by 2 is square. How about 1, 2, and then 5, 7 for instance. So that would be a 2 by 2 matrix where the first row is 1, 2, and the second row is 5, 7. Then, I just hit encode. And so the shift cipher is giving me this particular text, and then the matrix cipher is giving me this. Now, one thing to notice is that I actually removed the spaces, so I actually removed all non-alphabet characters. I did make it lowercase, and then I actually performed the matrix encoding that you see here. It does need to be divisible by the size of the matrix if you want to get the whole word. There are ways to get around that, but I'm not actually doing that in this particular MOOC. So for instance, if you, instead, decided I'm going to do a 3 by 3 matrix-- so there you go-- so the first row is 1, 2, 5. The second row 7, 1, 2, and the third row is 2, 1, 3. If I hit that, now, it actually turns out that I believe I lost a character because I think the number of letters in the alphabet that is in life is linear in this MOOC, I think, is 22. So you would actually lose one here, so just keep that in mind as you're looking. If you want to do other things you can find these online, and you can play around with it more if this is something that you're quite interested in. But this lets you dabble in encryption using linear algebra. Have fun! End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"c301bedfc663417fa68a4fabcd22a257",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9a4ff701356946439040d4330cbfb03a",
                                "vertical_name":"Activity Overview: Encoding"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"cbe1b50fb2e147a48ee57cf06d68291c",
                "chapter_name":"Unit 6: Sports Ranking March MATHness",
                "sequentials":[
                    {
                        "sequential_id":"5ba031e8a2e64d4893a1dd07308c8d2e",
                        "sequential_name":"Introduction and Learning Goals",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Tournament bracket",
                                            "Dramatic film",
                                            "United states",
                                            "Data mining",
                                            "Basketball tournament",
                                            "Mathematical research",
                                            "March",
                                            "Don",
                                            "Ll",
                                            "Sport",
                                            "Davidson",
                                            "Math",
                                            "Predict",
                                            "Ranking"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: \"Who's number one?\" is a question often heard in sports. It's a question beyond sports, too. Who's the funniest? What was the best dramatic film? Which CEO has the largest salary? These are all questions that we hear. This is an area of mathematical research for me, ranking. I study and explore ways to rank items, either using existing methods or designing new ones. With a Davidson student researcher, I worked with a successful London-based startup company, Twizoo, to rank restaurants based on the buzz on Twitter. With another Davidson undergraduate, I applied methods you'll learn in this unit to rank users on Twitter in terms of their importance. Now, not all my work is on Twitter. I also consulted the ESPN Sport Science show on their series that unveiled their best athlete ever. In this unit, you'll learn methods designed for sports ranking. You'll determine who's number one, but also who's number two, three, four, and so on. This can help you predict the outcomes of future games. We've used it to help predict the outcomes of sporting tournaments. Here in the United States, considerable energy revolves each year in March around the Division One NCAA Men's Basketball Tournament. It's often called March Madness. In this unit, we'll begin with ideas related to the math connected to ranking. We'll do that in two units. Then, once we've got the math down, we'll learn how to take the outcomes of games and rank teams. With that, you'll be ready to create a March Madness bracket. Whether you live in the USA or not, you'll be ready to participate. Not a basketball fan? In my classes, the biggest fans don't always win. They don't always have the best tournament bracket. So give it a try and see how to predict sports, which again remember, has both skill and luck. Ranking is a component of data mining, and we'll explore this in the context of sports. So enough talking about all of this. Let's get into the game and jump into the math. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"19ff5c4516114dc099bf8ce91c9f3f69",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"239ca1e9013b4c14a6724ac9d0f350fc",
                                "vertical_name":"Introduction to Unit 6"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0c22d3ab43e4439b888087f851828b9b",
                        "sequential_name":"6.1 Catching the Madness",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ncaa basketball tournament",
                                            "Sports fan",
                                            "United states",
                                            "Linear algebra",
                                            "March madness",
                                            "Google calculator",
                                            "March",
                                            "Google",
                                            "Madness",
                                            "Round",
                                            "Basketball",
                                            "Predict",
                                            "Million",
                                            "Create",
                                            "Part",
                                            "Tournament",
                                            "Bracket",
                                            "Perfect",
                                            "Predicting",
                                            "Team",
                                            "Calculator",
                                            "Number",
                                            "Math"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Here I am in Belk Sports Arena on Bob McKillop Court. Why? Because in this section, we're going to delve into sports ranking. This has been a major part of my research for a number of years, in particular using linear algebra in such research. In Part Two of this MOOC, we'll go into more detail in terms of the linear algebra. In this unit, our goal will be to participate in the March Madness tournament in the United States. Not a sports fan? That's fine. You've got math on your side. You've got linear algebra on your side. So first, what is March Madness? Every March, there is a Division I NCAA basketball tournament. There's both a men's and a women's tournament. On Selection Sunday, the initial pairings of teams are announced. For instance, here are some pairings from the 2014 Men's Tournament. Your job is to predict who will win those first round match ups. Your predictions create second round match ups. Now who do you predict will win that second round? This creates a bracket. And eventually you have one undefeated team in the tournament. That's your predicted national champion. So? Well, even if you aren't interested in basketball, or have ever caught this madness that sweeps through the United States, this is a fun way to test math and to test analytics. You can use your math to compete literally against millions of others. That's what we will learn to do in this unit. There are 32 games in the first round of the tournament. In all, you need only to predict 63 games correctly. So how hard can this really be? Well, in 2014 Warren Buffett ensured a billion dollar prize for anyone who could perfectly predict the tournament. That's $1 billion. There were millions and millions of entries. No one-- absolutely no one-- was perfect after the second round. I often submit my brackets to ESPN's Online Tournament. After the first round in 2014, no one was perfect. There were 11 million brackets submitted. So why is this so hard? First, it's important to realize how many unique brackets are possible each year. There are two to the 63rd power brackets. That's 2 times 2, where you multiply two by itself 63 times. What number is that? That's nine quintillion. OK, well how big is that? If you could produce one billion unique brackets per second, how long do you think it would take to create nine quintillion? Close to 300 years. That is one huge number. In sports analytics, you're often simply trying to slightly improve what you're doing. Why? Well, maybe we move from 70% correct to 71. Come on, that's it? That's all you did? Well yes. And let's see why in this particular contest. If you're 50% correct in predicting every game in the tournament, then your odds of a perfect bracket are about one in nine quintillion, as we spoke about before. You can think of that as flipping a coin to predict the winner of every game. You're not taking in any information about the teams. Historically, people have been about 70% correct in predicting outcomes in the overall tournament. So on average, you have a 70% chance of predicting the outcome of a game. Now the odds of a perfect bracket in that case are about 1 in 5.7 billion. Now how did I get that? First, let's go back to 50% correct in your predictions. So what you do is you put 0.5 to the negative 63rd power in your calculator. You can even type that into Google. You go to the Google search bar and you put 0.5 caret negative 63 and the Google calculator will return the number. It's nine quintillion. So can you see what to do with that 70% predictability? You put in 0.7 to the negative 63rd power into a calculator and out pops 5.7 billion. So now let's move to that 71% predictability. You want to try it? Then go ahead. Just stop the video and give it a whirl. If not, I've already done it, so you get 1 in about 2.3 billion. Still not all that likely, but notice how we dropped from 1 in 5.7 to 1 in 2.3 billion. That's a significant drop. In the exercises for this unit, you'll be asked to find other odds like these. Then you can answer anyone who asks, how does that help? It does, possibly a lot. It may still be that it's not all that likely that you'll be perfect, but things just became much more likely. So let's be sure we have the math down. And then we will launch into the next unit that will move us forward in creating brackets and competing against the masses in basketball, at least using math. ",
                                        "unit_id":"2d12568be916473dbddb15c62efb395c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bd127f24ded849a6a18463549bf5492c",
                                "vertical_name":"Learning Goals"
                            }
                        ]
                    },
                    {
                        "sequential_id":"bed67d45c6c94fa5926a7bd738017bfc",
                        "sequential_name":"6.2 Who\u2019s Number 1? Sports Ranking",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear system",
                                            "March madness",
                                            "Linear systems",
                                            "Linear algebra",
                                            "Web pages",
                                            "Ordered list",
                                            "Main diagonal",
                                            "United states",
                                            "Search engine",
                                            "Directed graph",
                                            "Square matrix",
                                            "Winning team",
                                            "Games played",
                                            "Mooc",
                                            "Approach",
                                            "Play",
                                            "Ll",
                                            "Method",
                                            "Played",
                                            "Graph",
                                            "Vector",
                                            "Small",
                                            "Equal",
                                            "Number",
                                            "Ranking",
                                            "Place",
                                            "Start",
                                            "Put",
                                            "Matrix",
                                            "Beat",
                                            "Season",
                                            "Team",
                                            "Column",
                                            "Win",
                                            "Create",
                                            "Learn",
                                            "Row",
                                            "Element"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: A lot of my research lies in the area of sports ranking. Essentially, we're finding who is number 1. But really, you are doing much more. You're also finding who is number 2, 3, 4, and so forth. Why? It depends on the application. For example, when you search Google, you get an ordered list of web pages. That order is a ranking by relevance and quality. If you didn't agree with the ranking ever, then you wouldn't use the search engine. In sports, rankings can help predict outcomes of games. It's important to remember that the outcome of sporting events combine skill and luck. You might be right in ranking one team or player over another. And it may be that the outcome of a game, for example, is 90% likely. But even at 90%, you truly never exactly know what will happen. So let's learn to rank sports teams, as that's a ranking method I've used a lot. And in the next section, we'll adapt it to create brackets for March Madness. The methods have been used to rank college teams that play American football in the United States. First, why use linear algebra? The key to these methods is that they integrate strength of schedule. So the quality of my win plays into my rating. A win over a strong team is a bigger deal than a win over a weak team. But to know this, I need to know everyone's rating at one time, which happens when I solve the linear system Ax equals b for these models. So let's learn how to create the linear system Ax equals b. We're going to learn the Colley method, which is named after Wesley Colley, who proposed this approach. We'll learn to create the matrix system. If you're interested in the details behind the method, you can look it up, or you can enter part 2 of this MOOC, when we'll do more with brackets and the linear algebra with them. OK. So first, we're going to represent a season with a mathematical structure called a graph. The vertices or nodes will be the teams. I'll have a directed graph, where directed edges or arrows point from the winning team to the losing team for every game in the season. So here is a season with the teams A, B, C, and D. Looking at the directed graph, we see that team A beat B, B beat D and lost to C. C beat D, and D also beat A. Now, let's learn to create the linear system Ax equals b. Now, the vector x contains our unknowns. What do we not know for this problem? We don't know the ratings for the teams. That's what we're trying to find. Let's learn to create the matrix A first. OK. So first, you'll assign to each team a row of the matrix. We'll assign team A to row 1, team B to row 2, C to row 3, and D to row 4. That also assigns the columns. Column 1 will be team A because row 1 was team A, column 2 team B, column 3 C, column 4 D. Now we're ready to fill in the entries of the matrix. First, we'll work with the main diagonal of the square matrix. We'll start with the element in the 1,1 position. This is in the first row, so it is associated with team A. Into that element, we place the sum of 2 and the total number of games played by that team. Team A played 2 games. If you look at the graph, it had 2 games, so we put 2 plus 2 or 4 into the 1,1 element of the matrix. Into the 2,2 element we put a 5, since team B played 3 games and, of course, 3 plus 2 is 5. Into the 3,3 element, we put a 4, into the 4,4 element, we place 5, since team C and D played 2 and 3 games. Now we focus on the off-diagonal elements. Into those elements, you place minus 1 times the total number of games the associated teams in the row and column of that element played. So let's look at the 1,2 element in the matrix. This corresponds to teams A and B, again, because team A is in row 1, and team B is in column 2. They played once, so we put minus 1 times 1, or minus 1 into the 1,2 element. If they played twice, we would have put a minus 2. Into the 1,3 element, we place a 0, since teams A and C didn't play at all. A 1 goes into the 1,4 element, since teams A and D played once. So here's the matrix A with all the entries entered. I encourage you to verify at least the second row, if not the entire matrix. So now we're ready to create the right-hand side vector b. Now, the Colley method looks only at wins and losses. In the next lecture, we'll also discuss the Massey method, which naturally integrates scores. First, the rows of that vector b had the same association of the teams as the matrix A did. By that I mean that, for instance, row 1 corresponds to team A, row 2 to team B, and so forth, just like we had for the matrix. For the element in any row of b, you look at the associated team and let the entry of the vector equal 1 plus 1/2 wins minus losses for that team. So for our small, little, pretend season, team A had a win and a loss, so wins minus losses is 0. So the first element in the vector b will be 1/2 times wins minus losses, which was 0, so that's 0 plus 1. So we put a 1. Team B had 1 win and 2 losses, so wins minus losses is 1 minus 2 or minus 1. So 1 plus 1/2 wins minus losses for this team is 1 minus 1/2, or 1/2. Now, you can verify that the third element would be a 2, and the last element would be a 1/2. This gives us the entire linear system for this particular season. Now, I'll let the vector x equal the unknowns A, B, C, and D to denote the ratings of the corresponding teams. We need only to solve this linear system. When we do, we find that x equals 0.458, 0.417, 0.708, and 0.417. So what do we do that? Well, again, that's the ratings of the teams. So the rating of team A is 0.458, which puts them in second place, since the rating for team C is 0.708. Then, note the teams B and D are tied for third with a rating of 0.417. Now, how do we do bracketology with that? How do you take a bracket of teams that are in a tournament? Well, if we had a bracket with these four teams playing, we'd already see that we predict team A to win because their ranking predicts they'll beat everyone. They're ranked number 1 with their rating of about 0.7. Keep in mind there's a difference between ranking and rating. Rating is the number we find, and ranking is we're number 1, for instance. So let's get this down so we know the linear algebra behind the bracketology in sports ranking that we'll talk about in the next section. On the MOOC web page, I'll have a couple more small seasons that you can create the linear systems for to check your understanding. Get the math down, and then we'll be ready to learn how to approach March Madness using what I often call March Mathness. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"19cacee2af37413183c77bc254db85b0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"098528065447451f86c79ce1543f0455",
                                "vertical_name":"Who's Number 1? Sports Ranking (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8991dc1454774e3eae7b1880275701b4",
                        "sequential_name":"6.3 March MATHness",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "March madness",
                                            "Basketball teams",
                                            "United states",
                                            "Linear system",
                                            "Linear algebra",
                                            "Sporting events",
                                            "Winning streak",
                                            "Main diagonal",
                                            "Basketball tournament",
                                            "Good idea",
                                            "Simply",
                                            "Total",
                                            "Won",
                                            "Called",
                                            "Method",
                                            "Winning",
                                            "Worth",
                                            "Division",
                                            "Team",
                                            "Integrated",
                                            "Diagonal",
                                            "Ncaa",
                                            "Cap",
                                            "Ranking",
                                            "Activity",
                                            "Solve",
                                            "Playing",
                                            "Win",
                                            "Ll",
                                            "Ve",
                                            "Integrate",
                                            "College",
                                            "Tournament",
                                            "Half",
                                            "Start",
                                            "Season",
                                            "Idea",
                                            "Game"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: Last time, we talked about ranking, particularly a method developed for sports. Along with my main collaborator, Amy Langville at the College of Charleston, I've applied this to creating brackets for sporting events. Using the linear algebra we learned last time, you rank the teams and simply assume the higher-ranked team will win. We've used this annually since 2009 in the NCAA Division I Men's Basketball Tournament, often called March Madness in the United States. In 2009, we had a bracket that outperformed over 4 million brackets on ESPN's online tournament. In 2010, a bracket using these methods outperformed 99.9% of over 5 million brackets. So let's learn how to do that. In the last lecture, we learned the Colley method and how to set up the associated linear system. For March Madness, we rank all Division I men's basketball teams in the NCAA. That's almost 350 teams playing each other in about 5,000 games. Once we solve the linear system, we get a rating for every team, and the higher-rated team, again, is predicted to win. Great. But that means you and I would have the same predictions and thus the same bracket because we've only learned one way to do the Colley method. This is where Amy Langville and my research came in. We want to weight the games. You can weight by various things, whether the home team won, if they were on a winning streak, or when the game occurred in the season. That's what we're going to do. We're going to weight on time with the intent that a team with momentum might be better prepared to win in the tournament. Now, remember, this is the Colley method. So you will get a bump with our soon-to-be-determined weights for winning close to the tournament. But you'll also get more of a bump if you're winning close to the tournament against strong teams. Now, how? Well, essentially, you ask yourself, how much of a game will any game be worth? In what we did before, every game was worth 1 win for the winner and 1 loss for the loser. Now you'll simply change that. Maybe it isn't as important, so you make it worth 1/2 a win and 1/2 a loss. But right there, you need to be very careful. It's possible to think of instances where you might want to let it count as a 1/4 of a game for the loser and maybe something like 3/4 of a win for the winner. That can cause problems with the method due to the theory that derives it. So try and keep it where the game counts as the same amount for the winner and the loser. The codes that we have for you will do this automatically. But if you're a coder and you do this yourself, be careful. You'll know when it picks it up because suddenly unknown teams that you've never heard of are going to be predicted to win March Madness. Maybe they will, but usually it means you made a mistake. So let's say we break the season into two parts. We decide to count the first half of the games as 1/2 a game and the second half of the season as full games, or 1 win and 1 loss. In doing this, we're saying that the second half games are more predictive of how a team would play in the tournament as opposed to games occurring in the first half of the season. Now, do you agree with that? If not, what would you do? In a bit, you'll be able to try your ideas. In the exploratory exercise for this activity, I'll show you how to use codes that make this easy for March Madness. And if you code, then you can adapt this to other sports because it's mainly just a matter of downloading the season's results. Now, you might have ideas beyond what is available in the code that I'll show you. Then if you do, again, program, you can do it yourself or get a friend to help you. Students here at Davidson College have integrated many ideas. In fact, many of the bells and whistles that you'll see in the code to come are from students here at the college. Now, how does this affect that linear system? This is the part that surprised me in the research. It is very easy to integrate. Remember that main diagonal of that main matrix? We had Ax equal b, that a? We had 2-plus total games going down that diagonal. Now, total games is simply total weighted games. So I might have played 2 games in the second half of the season and 3 games in the first half. It's a fairly short season. In that case, I played 2 plus 3 half games, or 3.5 total games. In the same way, I look at that right-hand side vector, which I had 1 plus 1/2 wins minus losses. Now you simply look at weighted wins and weighted losses. So I might have 2 wins, 1/2 a win, 1 loss, and another 1/2 of a loss. So in total, I have 1-- or excuse me, 2.5 wins and 1.5 losses. So I have 2.5 minus 1.5, or 1 as my wins minus losses. That's it. Once you've integrated that, you can still form Ax equal b. And you simply solve the linear system and find your ratings. The best part is, they can be quite different than when you don't weight at all. And again, it can pick up teams in those 5,000 games that are playing well against strong teams at the parts of the season or in the way that you think is predictive. And that's how we found teams that others think won't be winning, which pops us up into like the 97th or 99th percentile when we submit to ESPN. Now, there's one more thing. Do you really want to integrate scores, not just wins and losses? You can do that with what's called the Massey method. This is named after Kenneth Massey. So when you see the codes that we have for you, you'll be able to integrate either the Colley method, which looks at wins and losses, or the Massey method, which looks at scores. Now, sometimes people cap the size of a win. So if you wish to say that anything over 15, for instance, is just a blow-out and you really don't want to differentiate between a 30 or a 25-point win versus a 15-point win, you'll be able to actually cap that at a 15-point win? Is that a good idea? It can be. It depends sometimes on the year and also on what else you're doing in your weighting. So I learned the most from what others try in these methods. So now let's learn together and start using linear algebra to put some mathness into March Madness. So go to the exploratory activity to see how to start ranking. Have fun. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"9b1056e5bb1547d29cea28c99ba76e02",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5e67d875e31247a481129394b8852f8d",
                                "vertical_name":"March MATHness (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2ffd4804704e4b70aa0d91c8660e968a",
                        "sequential_name":"6.3 Exploratory Activity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Sports fan",
                                            "Linear algebra",
                                            "United states",
                                            "Basketball tournament",
                                            "March madness",
                                            "Home game",
                                            "Home",
                                            "Ranking",
                                            "Fan",
                                            "Uniform",
                                            "Weighting",
                                            "Team",
                                            "Massey",
                                            "Interval",
                                            "Madness",
                                            "Number",
                                            "Create",
                                            "Log",
                                            "Tool",
                                            "Davidson",
                                            "Weight",
                                            "Start",
                                            "Win",
                                            "Game",
                                            "Make",
                                            "Method",
                                            "Ll",
                                            "Math",
                                            "Bracket"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: After two sections in this unit, being sure we have the math down, we're now ready to enter the madness of March Madness. And you'll get a chance to make a bracket for the NCAA Division One Men's Basketball Tournament. I generally do research early so I'm ready when Selection Sunday happens. It's at that moment that I know, and we'll all know, who the initial pairings are. Then I input the season and run the codes to get my personal, math-generated bracket. This activity will help you design your own bracket. You'll have access to various past years of data, then you can explore and see what you get. Remember, you make the decisions on how to model what is predictive of tournament play. So the method that you design will be your own, and you'll need to think it through. Also be careful if you are a big sports fan. Sometimes you can actually overfit the ranking to be what you would have done without the math. In classes here at Davidson College, it is often the students who aren't sports fans that win our class pools. They depend on the math and not as much what they think should be right. So if you're a sports fan, think about what to include. If you aren't, or at least aren't a fan of March Madness in the United States, give it a try and see if you can make your way through the madness with math. Let's have fun and on the way learn some math modeling. So now let's learn to use the codes that we've prepared for you. So let's learn to create sports ranking that can help you create a bracket for March Madness. So the site that you go to is MarchMathness.Davidson.edu. You can say start ranking. Now you have a choice of two methods. You can either use the Colley or the Massey. They're both named after the scientists and mathematicians who created it. Colley looks only at wins and losses, and Massey integrates scores of the game. So let's first try with Colley. Now you have four choices for weighting. Uniform weighting makes all of the games the same. Every game is worth one win and one loss. Log waiting is where you have A log B, so you end up kind of having an increase in the weight as you move on and then less at the end, and then interval waiting, which is that you break it into different pieces, so like four, and then you decide how much each piece will be weighted. Then finally linear weighting is where you use a line to weight the games. Linear weighting often isn't very good. But if you're teaching slope and lines, it's a fun one to use, just to look at different ways of using lines in this context. So let's do uniform first. So first of all, you decide what year you want to rank. And we have quite a bit of years available, so let's look at 2014. Number of teams to display could be something like 30. And then there's this home team weight. If the home team wins, what do you want that to be as a weight? So let's make that like 0.7. I'll make that worth a little less. But if you can win away, I'm going to upweight that to something like 1.2. And then if you're on a neutral court, where neither team is at home, I'll make it 1.2. And now I just hit Submit, and there it is. So this says that Arizona is number one, Iowa State number two, Florida, three, Virginia four. And this would be for last year. So this would actually say that Arizona would win the entire tournament. Don't like it? Well, go back and change some values. Is that not working? Well, maybe go back and try a different weight. So let's try interval weighting. Interval weighting, I'll say, you know, show me the top 30 teams. The intervals-- so here you just enter the weights for each interval. So I'm going to say that the first quarter of the season is 0.3, then it's half a game, then a full game, then 1.5 games. A home game will be worth 0.75, away win will be 1.25. And a neutral win will be 1.25. You can make those different. I happen to be making them the same. You hit Submit, and there you go. See, this is quite different. It's saying Virginian, then Florida, then Arizona. Neither of them predicted the winner, but I'm just putting in very quick values. So you'd have to take more time to think about it as it comes out. It's easy to predict it when you already know who won, so keep that in mind. Then the Massey is a different method. With the Massey method, you have scores integrated. And so again you can say how many teams. Now you have max score here. What that's doing is it's saying, look. Anything above a 15-point win, I'm going to treat as a 15-point win. That kind of minimizes the effect of blowouts. And then here I'll take 1, 1.5, 1.5, and hit Submit. There you go. So we have Arizona, then Florida, then Kansas. So this is a tool that can help you create the brackets that you're interested in. And then once you get your weighting for a particular year-- let me just put in something simple-- you just always assume that the higher-ranked team wins. So when two teams play, you just look at who's higher ranked, and that's the team that you're predicting will actually win. All right. Well, I wish you well with March Madness, and I hope that this is a helpful tool. If nothing else, have fun using linear algebra to mine through 5,000 games of data. Soon we'll have the data for 2015 to get you ready for this year. Have fun. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"6d076845c6af417cb32fa254270544a1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c4c8f8ef91cb44a799968a022ac2892f",
                                "vertical_name":"Activity Overview: Sports Ranking"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"1c7cd643c14642898767c6b045731f63",
                "chapter_name":"Unit 7: Least Squares",
                "sequentials":[
                    {
                        "sequential_id":"1be24072c8094024833c259041c2809b",
                        "sequential_name":"Introduction and Learning Goals",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Data mining",
                                            "Linear regression",
                                            "Science",
                                            "Data",
                                            "Regression",
                                            "Question",
                                            "Tool",
                                            "Model",
                                            "John"
                                        ],
                                        "data":" Start of transcript. Skip to the end. TIM CHARTIER: An important tool of data mining is regression. One way to model data is using linear regression or least squares. This unit is short. Its goal is to give you tools and prepare you for a sports question. I'm excited to be partnering with John Brenkus, host and creator of ESPN's Sports Science program. John has a question for you. One way to tackle the problem is with least squares. This unit will give you a section on that topic, which can help you see how to analyze the data that you'll have. Then you'll have John's exciting problem about baseball. Want more? Well, think about registering for part 2 of this MOOC. We'll do more with data mining there, and we'll also learn more about regression. For now, let's learn a bit about linear regression and how it can help us model and understand the science and math of sports. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"120de7e33f6247029060f2d998c5a79a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3dd7706fe6e34b6fa03f5fa97554bba8",
                                "vertical_name":"Introduction to Unit 7"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Start of transcript. Skip to the end. JOHN BRENKUS: Hey everybody. I'm John Brenkus. And I'm excited to partner up with Dr. Tim Chartier's DavidsonX Massive Open Online Course to pose a question for you to answer. It's a multi-layered problem relating to baseball, that I'm sure will have all of you thinking outside of the box. Can't wait to see what the class comes up with. Thanks for participating. End of transcript. Skip to the start. ",
                                        "unit_id":"56a98edc02dc4e21999740b66070ec22",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ef51f13ec4af4df7a890b6ac0875cf07",
                                "vertical_name":"What Will We Learn?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"23d2dc41338d41f69b553992fac389a5",
                        "sequential_name":"7.1 Dash of Math",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Gold medal",
                                            "Usain bolt",
                                            "Top speed",
                                            "Euclidean norm",
                                            "Social sciences",
                                            "Online forums",
                                            "Linear equations",
                                            "Linear algebra",
                                            "Decimal places",
                                            "Linear system",
                                            "Linear trend",
                                            "Olympic games",
                                            "Gold",
                                            "Won",
                                            "Side",
                                            "Analyze",
                                            "Linear",
                                            "Left",
                                            "Transpose",
                                            "Bolt",
                                            "Ll",
                                            "Fastest",
                                            "System",
                                            "Make",
                                            "Vector",
                                            "Fit",
                                            "Decrease",
                                            "Time",
                                            "Line",
                                            "Trend",
                                            "Solve",
                                            "Race",
                                            "Equal",
                                            "Don",
                                            "Data",
                                            "Run",
                                            "Equation",
                                            "Point"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Behind me is the Irwin Belk Track at Davidson College. Today we're going to ask the question, when might someone run the fastest 100 meter dash ever? To make a prediction, we're going to analyze data naturally using linear algebra. In 2012 in London, Usain Bolt ran 100 meters in 9.63 seconds to win his second gold medal in the 100 meter dash. That time was the fastest time to date in the Olympics. No previous medalist could have beaten him. There are 28 gold medal times for the men's 100 meter race in the Olympic games between 1896 and 2012. The slowest time was Tom Burke's 12 second sprint to gold in 1896. Bolt was the fastest in 2012. How fast do the times decrease over time? To help us with this, let's graph the data. We see an overall trend of the data decreasing. It's a trend, so there are times when the times don't decrease. For example, in 1968 Jim Hines won gold in 9.95. That time would hold as the fastest time that that race would be run in the Olympics until 1984 when Carl Lewis took the gold. There is another trend in the data. It can be approximated by a line. While the line won't pass through every point, it can get close. If we assume that this same trend continues, we can make predictions of times to come. Let's first see how to build such a line, and then we'll make a prediction. We want to find a line y equals that well-known equation mx plus b, where x is a year and y is the time run in that year. Suppose the points did lie on a line. Then we'd have 9.63 equal m times 2012 plus b, using Usain Bolt's gold medal time from the 2012 games. We can do the same thing with Tom Burke's time to get 12 equals m 1896 plus b. The two linear equations for Bolt and Bure correspond to the linear system of equations. First, we get the matrix 20, 12, 1, the second row is 18, 96, 1, times the vector mb equals the vector 9.6312. We can easily solve this system, and when we do, we find m equals negative 0.0204, and b equals 50.7372. Now remember, we're finding that equation for the line, and that equation becomes y equals negative 0.0204x plus 50.7372. If all the times were on a line, this would mean we could perfectly predict them with the equation we just found. Take the race in 1984. You put in 1984 for x and get y equals negative 0.024 times that 1984 plus 50.7372. That equals 10.2636. So this line predicts a time in 1984 of 10.26 seconds. But remember, Carl Lewis ran that race in 9.99. So can we produce a better estimate with another line? Yes, but this time we won't connect two points. When we do that, we throw out a lot of information from all those other races. Remember, we had 28 points in our data set. In fact, for now, none of the points may lie on the line we're going to find. To see how to do this, let's just add one more time that Carl Lewis time that we had and we'll create a small system and see how to find the line that fits that data. We're now interested in the linear system. The first row of the matrix on the left hand side is 20, 12, 1. Then the second row is 18, 96, 1. Then the last row now is 19, 84, 1. We again multiply that times the vector mb, and that'll equal to 9.63, 12, 9.00. We will denote this as mx equals b. This system doesn't have a solution. If it did, then we could have found a line passing through those points. But now we're going to find a line that's as close to these points as we can get. Take a moment and consider this task. We have infinitely many choices for m and b. How can we find the closest ones? It takes some calculus to show what to do, but amazingly, it all comes down to simply multiplying by the transpose of m on the left of both sides of the equation. The transpose makes the rows columns. So m transpose is-- the first row is 2012, 1896, 1984. Then the second row is 1, 1, 1. So when we solve n transpose times mx equals m transpose b, that gives you that best fit line. Now, what do I mean by best though? For best here, I'm looking at the vector r, which equals b minus mx. Now notice, r will equal 0 if x is the solution to mx equal b. But otherwise, this method finds the vector r that has minimal length under the Euclidean norm, which we talked about in an earlier section. Now this really amazes me because we went from having infinitely many choices to solving just this little linear system that we form. Now you often don't actually multiply by m transpose. It can cause issues numerically on a computer. You can get round off error. But there are ways to solve the system without round off error. When you do, you get the best fit line. And for you, you can turn to programs like Excel or other online forums to actually solve the system. Now, rather than using three times from the Olympics, let's use every gold medal time, up to and including 2012. When we do that, the line becomes negative 0.133x plus 36.31. For 2012, this line predicts Hussein's bolt's time to be 9.599, which is only 0.003 seconds off his actual time. What else does it tell us? Well, first let's look at the slope, which equals negative 0.0133. Remember, x denotes the year and y is the time. So this slope indicates that every year we expect a drop in the gold medal time of just over 1/100 of a second. Now let's use this line to make the prediction. Do you remember what we're looking at? We want to know the fastest race that can ever be run. Now we don't know exactly what that time would be, but clearly such a time would exist. No one can run the 100 meter dash in one second. So the fastest time has to be somewhere between one second and 9.63 seconds. In his book The Perfection Point, John Brenkus considers such a question. Brenkus analyzes four distinct phases of 100 meter dash race-- first reacting to the gun, second getting out of the blocks, then accelerating to top speed, and finally, hanging on for dear life. Well, his work predicted that 8.99 seconds is the fastest that 100 meter dash can possibly be run. Well, now we can turn to our model-- our equation-- to actually use that number and answer our question. So we simply solve 8.99 equals negative 0.0132x plus 36.31. In actuality, I'm going to keep more decimal places for the slope and the y-intercept. When I do, it gives me more accuracy. And when I solve for x, I find that x is 2059.84. So this model predicts that we'll see the fastest possible 100 meter dash for the men in the Olympics in the 2060 games. Will we? It depends if this trend continues. Could it actually slow down as we approach such a time? Can people keep improving on that same trend in at that same rate? That's where assumptions in modeling comes into this type of process. Today, we've used least squares to quickly get insight on data that has a linear trend. Least squares is a powerful tool. It's also called linear regression. It's used a lot in fields such as sports analytics, econometrics, and studies in the social sciences. Here, you've gotten to get a sense of how to do least squares. Often it helps to graph the data and see if there is an overall trend of the data being linear. If so, then you can do a least squares solve of the linear system and see what you get. Like our problem, the slope can give you information. And sometimes you can even make predictions. So now, what data comes to mind for you? What would you like to analyze? What predictions would you like to make mathematically? Find the data, graph it, and if it fits, solve a Lee's Squares system, and see what you might uncover using linear algebra. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"31295f0aa1b645b2a6387c945d1226e2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5b7bcfc09b1e425ca99a3895129908cf",
                                "vertical_name":"Dash of Math (Lecture)"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d01abf8af98b4e4dab3bc3d5689e455c",
                        "sequential_name":"7.1 Exploratory Activity: John Brenkus Sports Question",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Chicago cubs",
                                            "World series",
                                            "World championship",
                                            "Championship drought",
                                            "Discussion forum",
                                            "Inside joke",
                                            "Discussion board",
                                            "Data science",
                                            "United states",
                                            "Data mining",
                                            "Urban legend",
                                            "Wrigley field",
                                            "Linear algebra",
                                            "Computer graphics",
                                            "Chinese year",
                                            "Good luck",
                                            "Open",
                                            "Chicago",
                                            "Show",
                                            "Team",
                                            "Science",
                                            "Won",
                                            "John",
                                            "Money",
                                            "Year",
                                            "Learning",
                                            "Winning",
                                            "Sianis",
                                            "Haven",
                                            "Ain",
                                            "Goat",
                                            "Spend",
                                            "Good",
                                            "Ve",
                                            "Create",
                                            "Work"
                                        ],
                                        "data":" TIM CHARTIER: As the last piece of our course we get to work on a problem together. Indeed, we will globally and collectively work together to offer solutions to a problem posed by John Brenkus, host and creator of ESPN's Sports Science show. If you aren't familiar with the show look it up and watch some of their pieces giving a scientific and mathematical view of sports. John has come to us, participants in our course, to help solve a problem he's thinking about in sports. In the video that comes you'll see his problem. The question will ask us to do data science about the American baseball team, the Chicago Cubs. The question of relates to their not having won the World Series in the last 100 years. One of the answers is really a reference to an inside joke about the team. For those of you living outside the United States let me provide a little context. It's an urban legend in the city of Chicago, Illinois that the reason the Cubs haven't won a world championship in 100 years is a curse that was placed on them in 1945 by a local restaurant owner, Billy Sianis, when he was attending a World Series game at the Chicago Cubs ballpark known as Wrigley Field. Sianis was asked to leave the game due to the odor of his pet goat. So he cursed the Cubs saying, the Cubs ain't winning. Ain't going to win no more. And the Cubs went from one of the winning teams to a championship drought that continues. Maybe things will change this year, the Chinese Year of the Goat. So we will see our question. And we'll have four answers. Pick the answers you want to contribute to and enter the discussion forum for our course. The key is contributing and us learning and discovering together. We will define our path of discovery together through the discussion forum. So share data, share analysis, share insight, and upvote what you like on the discussion board. That will be how we keep track of how our ideas are collectively evolving. The TAs for this course and I will keep track and work to summarize the content for you as well. And in the end we will demonstrate what our group can collectively create and discover regarding this question. The problem will be open until the course closes. So keep working, discovering, and engaging. But keep in mind there generally isn't one answer. Further Brenkus isn't looking for a right answer. We may have multiple answers, and moreover create really neat, possibly new ways to look and analyze data. Finally you may use methods outside linear algebra. As is often the case the question is calling. So dive in. And use math you know. And possibly look for or create new ideas. OK, let's hear the question from John Brenkus and begin learning and exploring together. I've been waiting for you to help. And for us to give our answers to John's question. So let's get started. [VIDEO PLAYBACK] -Hey everybody, I'm John Brenkus. In Doctor Tim Chartier's DavidsonX Massive Open Online Course you've been using math for computer graphics and data mining. Now you can use what you've learned to answer this question: Why haven't the Chicago Cubs won a World Series in more than 100 years? Was it because (A) They didn't spend enough money, meaning front office decisions to not spend money affected the quality of their players. Or how about (B) If they did spend enough money perhaps the players they had just weren't that good? (C) They were cursed! If they did spend enough money, and their players were good enough, maybe their futility is outside the statistical norm? Or is the answer (D) None of the above. And if so, then what was the reason? Pick an answer and do the research to defend that answer using the math and science of sport. Good luck, and I look forward to seeing what you guys come up with. ",
                                        "unit_id":"8862643bb4774ba0ae89c6c9d4196900",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f015f8a5a4d249a18b5f4039e87e58ba",
                                "vertical_name":"Introduction & John Brenkus Question"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Data mining",
                                            "Computer graphics",
                                            "World series",
                                            "Good luck",
                                            "Money",
                                            "Ve",
                                            "Spend",
                                            "Good"
                                        ],
                                        "data":" Start of transcript. Skip to the end. JOHN BRENKUS: Hey everybody, I'm John Brenkus. In Dr. Tim Chartier's DavidsonX Massive Open Online Course, you've been using math for computer graphics and data mining. Now you can use what you've learned to answer this question-- why haven't the Chicago Cubs won a World Series in more than 100 years? Was it because A, they didn't spend enough money-- meaning, front office decisions to not spend money affected the quality of their players. Or how about B, if they did spend enough money, perhaps the players they had just weren't that good. C, they were cursed! If they did spend enough money and their players were good enough, maybe there [? were futilities ?] outside the statistical norm. Or is the answer D, none of the above, and if so, then what was the reason? Pick an answer and do the research to defend that answer using the math and science of sport. Good luck, and I look forward to seeing what you guys come up with. End of transcript. Skip to the start. Downloads and transcripts ",
                                        "unit_id":"ac7f642873b041309bfe4aed5e672eac",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e259223f39cf46db9b3d087cccf0522e",
                                "vertical_name":"John Brenkus Sports Question & Activity"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d4257d0d1d234685a55ca64c8a213926",
                        "sequential_name":"End of Course Survey",
                        "verticals":[]
                    }
                ]
            }
        ],
        "course_id":"course",
        "course_name":"Applications of Linear Algebra Part 1"
    },
    {
        "course_chapters":[
            {
                "chapter_id":"527afe8541a4487ab020e27b0885142b",
                "chapter_name":"Week 0 Getting Started",
                "sequentials":[
                    {
                        "sequential_id":"3470f90e9d9d41088099da58e14130fe",
                        "sequential_name":"0.1. Opening Remarks",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Massively parallel computers",
                                            "Years ago",
                                            "Entire world",
                                            "Fast forward",
                                            "Robert",
                                            "Good",
                                            "People",
                                            "Systematic",
                                            "Learn",
                                            "Maggie"
                                        ],
                                        "data":" Hello. My name is Robert van de Geijn. And I'm one of the instructors for LAFF-On Programming for Correctness together with Dr. Maggie Myers, who unfortunately doesn't want to be on camera. So you only get to see her hands in various videos. Let me start by discussing why we decided to create LAFF-On as a course. Many years ago, Maggie and I taught a course here in our department that was called analysis of programs. And in it, one of the topics was how to, on the one hand, prove a program to be correct, and on the other hand, how to derive it to be correct, although the part of the course that dealt with derivation was actually very short. Now, at the time when I would have students come up to me and ask, so why should we learn this, we would try to say, well, it's a good training of the mind. And you'll learn how to think through how to program better. And therefore, you will write better programs. But the fact is that the examples that we would use in class were relatively simple. And therefore, it was hard to really convince people that this was useful in general. Now, fast forward to the mid 1990s at a time when I did research on how to port algorithms that computed linear algebra operations to massively parallel computers. At the time, people would come visit me. And they would say, Robert, here's an operation with matrices. We've taken the algorithm that everybody uses on a regular computer. We've tried to parallelize it. And it just doesn't work very well. It doesn't scale. Scaling means that you can take the algorithm and run it on many processors and still get very good performance. And they would show me what the operation is that they were trying to parallelize. And I would go to the whiteboards, and I would doodle a little bit. And after about half an hour, I would say, well, here's a whole family of different algorithms that compute that same operation. And if we pick this particular algorithm, then it will parallelize well. And then we would sit down. We would implement it. And before you know it, we would have another paper. We would submit it. And this was all very good. So after a while, we started thinking-- so what is the systematic principle behind what I'm doing here? So I collaborated with several of my PhD students and with Maggie. And what we did was we really thought through what made the process so systematic and what allowed us to do this. So that led to what in the second part of the course we will call the worksheet for deriving linear algebra algorithms. What we have done now is we've gone back to this original material that we used to teach in the early 1990s. We have repackaged it with all of the insights that we've had over the years. And we've now created this online course, so that we can, not only teach this to the few students that we get in our classes here at The University of Texas, but we can actually share this with the entire world. So we invite you to join us for LAFF-On Programming for Correctness, so that you too can master these very fundamental techniques and, hopefully, so that you can then apply these to your own problems. ",
                                        "unit_id":"12dbaa6c65c948b3b73ffc6a0850f33b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bac42cd6a9d44f609c0c4d7a28e6390d",
                                "vertical_name":"0.1.1. Welcome to LAFF-On Programming for Correctness"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Homework"
                                        ],
                                        "data":" Each week is structured so that we give the outline for the week immediately after the \"launch\": 0.1. Opening Remarks 0.1.1. Welcome to LAFF-On Programming for Correctness 0.1.2. Outline 0.1.3. What you will learn 0.2. How to LAFF-On 0.2.1. What should we know? 0.2.2. When to LAFF-On 0.2.3. How to navigate LAFF-On 0.2.4. Homework and LAFF-On 0.2.5. Grading and LAFF-On 0.2.6. Setting up to LAFF-On 0.3. Software to LAFF-On 0.3.1. Activating MATLAB Online 0.3.2. MATLAB basics 0.3.3. MATLAB Live Script 0.4. Typesetting LAFF-On 0.4.1. Typesetting mathematics 0.4.2. Downloading and testing TeXstudio 0.4.3. LaTeX and TeXstudio primer 0.5. Enrichments 0.5.1. The origins of MATLAB 0.5.2. The origins of LaTeX 0.6. Wrap Up 0.6.1. Additional homework 0.6.2. Summary ",
                                        "unit_id":"0ccbae6c578b4bcbb17d11e3baa912e2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"94794f86e39e46f1bc68a94e9caba67f",
                                "vertical_name":"0.1.2. Outline Week 0"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" The third unit of the week informs you of what you will learn. This describes the knowledge and skills that you can expect to acquire. In addition, this provides an opportunity for you to self-assess upon completion of the week. This week gets you started. Upon completion of this week, you should be able to Recognize the structure of a typical week. Navigate the different components of LAFF-On. Activate MATLAB Online. Better understand what we expect you to know when start and intend for you to know when you finish. ",
                                        "unit_id":"5cb77351ba1744179d2950bc1ca31737",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f09870eee3cd474c965766b4b3e6021c",
                                "vertical_name":"0.1.3. What you will learn"
                            }
                        ]
                    },
                    {
                        "sequential_id":"23ac78de5146406eae7897d19cd3df37",
                        "sequential_name":"0.2. How to LAFF-On",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Matrix",
                                            "Logic",
                                            "Part"
                                        ],
                                        "data":" The material in this course is intended for learners who have already had an exposure to linear algebra, logic, and simple proofs. We do briefly visit these topics to ensure that we are all on the same page to allow us to communicate exactly and efficiently. For those who want to dig deeper, we try to give pointers to other materials. For Part I, Foundation of Deriving Correct Programs, you don't need to know any linear algebra. We use simple operations with one dimensional arrays for most of our motivating examples. The focus is on applying logic to reason about the correctness of programs and, ultimately, to allow you to systematically derive programs hand-in-hand with their proofs of correctness. We hope you will make Dijkstra proud! For Part II, Frontiers of Deriving Correct Matrix Algorithms, we use progressively more complicated linear algebra operations to illustrate how to apply the ideas from Part I to practical situations. Abstracting away from the intricacies of indices is key to making this possible. The \"slicing and dicing\" that was a hallmark of our Linear Algebra: Foundations to Frontiers (LAFF) MOOC plays a central role there. Those not comfortable with thinking about vectors and matrices as subvectors and submatrices may want to explore Weeks 1, 3, 4, and 5 of LAFF. To what depth you would want to do so is up to you. ",
                                        "unit_id":"3f452b4001884f4fbbe910a07521308c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2ffc5741baf6417c922a5e8412149614",
                                "vertical_name":"0.2.1. What Should We Know?"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Navigation bar"
                                        ],
                                        "data":" The beauty of an online course is that you get to study when you want, where you want. Still, deadlines tend to keep people moving forward. To strike a balance between flexibility and structure, we release the materials roughly one week at a time. There are no intermediate due dates but only work that is completed by the closing of the course will count towards the optional Verified Certificate. To help you structure your time, we give a suggested course calendar with proposed due dates. It can be found by clicking the \"Calendar\" tab of the navigation bar of the course on the edX platform. Each Week is posted on a Tuesday at UTC 23:00. Please reference this schedule often as any official changes will appear here. ",
                                        "unit_id":"fc0103f62d61429191a6b20192b7e1d3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b7a72b8355fc4f409126854a5159e33e",
                                "vertical_name":"0.2.2. When to LAFF-On"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Good luck",
                                            "Primary resource",
                                            "Discussion board",
                                            "Discussion boards",
                                            "Home page",
                                            "Tab",
                                            "Reading",
                                            "Discussion",
                                            "Page",
                                            "Foundation",
                                            "Simply",
                                            "Navigate",
                                            "Material",
                                            "Unit",
                                            "Back",
                                            "Click",
                                            "Ve",
                                            "Ll",
                                            "Section"
                                        ],
                                        "data":" Robert van de Geijn: So let's have a look at how we want you to navigate this course. First of all, when you first log in, you see this home page where you can find various updates. Once a week we try to get an email out to you with various announcements. And what we tend to do with those emails is also post them right here. So in particular, if you join the course late, what you may want to do is scroll down and read all of the old posts so that you can see what announcements came before you joined the course. On the right here, you see various announcements, for example, it tells you what today's date is, when this course will start, because it hasn't started yet. What the verification upgrade deadline is. Say if you want a verified certificate you got to keep an eye on that. When the course ends, obviously you want to keep an eye on that as well. Various course handouts, the syllabus, the outline, and the map. And from here you can also get to the PDS for the notes by clicking on the various weeks. Now, they may not all be available yet when you see this, because we're going to release these one week at a time. So once you have sort of figured out what the layout is when you first get in, what you will want to do is go and click on course. And obviously, you've already done this, because you've gotten to this video, which is a little bit later on in the course. What we want to point out is how the course is laid out. The course has been partitioned into two parts, foundations of the deriving correct programs, which gives you the basic foundation, and then frontiers of deriving correct matrix algorithms, which shows you how we apply these techniques to our frontier of dense linear algebra library development. Within each part we have organized the material by weeks. So we start with week zero, which simply gets you set up, and then week 1, 2, and 3 are part of part 1, and then we have three more weeks in part 2. Within each week we have sections, within each section we have units. So once you click on a section, you'll see the first unit of the section, or whichever unit you were last in, in this particular section. And then each unit has a discussion box that allows you to either go and see what discussion has happened regarding this particular unit, or it allows you to post regarding this unit. And we very much encourage you to post questions in the units in which the material exists for which you have a question. And then typically we will have a video, and then what you'll see in later weeks is that there's other material as well. And we'll get to that. Now, each week tends to start with a launch, so let's get to week one and let's have a look at that. The launch is just a way of getting you thinking about the material. And every once in a while we'll push you a little bit and actually get you to do an activity that demonstrates what is yet to come. Don't be too concerned if you see material in the launch that you don't quite get, because we'll get to that material later in the week. So here we have the launch, again we have a discussion box. We have a video. And then we have a reading assignment typically, with a link to the reading assignments if you want. So I click on this, it downloads, and if I click on what was downloaded, then I get to see the material related to this particular week. Some of you will want to make the notes the primary resource. And then you can navigate back from the notes to the EdX platform by clicking on the obvious links that are embedded in the PDF. So for example, if you want to get back to this unit on the edX platform, then we simply click on that, and we get right back into where we were. And often within a unit, even within a launch, there will be some activity to be done. Now the second unit of the opening remarks tells you the outline for the week. The third unit tells you what you will learn. So these are the topics that we hope you will master by going through this week. And what you will want to do is at the end of the week, come back to this particular unit, and double that indeed you have mastered the topics that we list there. And then once we are done with the opening remarks, the real learning starts, and you will start going through various units with videos, with discussion boxes, with reading assignments, and various homeworks. OK let's get back to the top here. We've already seen the home tab, we've seen the course tab, let's move on to the discussion tab. This is where you can see the various discussions, and you can either go to a discussion related to a specific unit, or you can look at all of the discussions in which case the most recent discussions rise to the top. Obviously the course hasn't started yet, and therefore there are no discussions going on. We may or may not use the wiki, so let's leave that alone for now. The progress tab is important because it allows you to look at what homeworks you have completed. I have not completed any yet. And if you want to know exactly which problems you have done or missed, you can go down here, and on a section by section basis see which problems you have and have not completed. There's the calendar, which tells you when the various weeks will be released, and when we suggest you complete them if you want to stay on track to complete the course by July 11th. And finally, we've compiled some of the laws of logic that you will want to use in your proofs as a reference, and you may even want to print this particular page out and keep it handy. OK so that's a brief overview. If you have any questions just post on the discussion board, and we'll try to help you as soon as we can. You will find out that we actually are on the discussion boards quite frequently, and your questions will usually be answered quite rapidly. Good luck with the course. ",
                                        "unit_id":"d2cfe9c5593d4262a81394425e3e117d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f5da9c39e9b4461c9c58dc2a1193db27",
                                "vertical_name":"0.2.3. How to Navigate LAFF-On"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Multiple choice",
                                            "Embedded",
                                            "Homework"
                                        ],
                                        "data":" When future weeks become available, you will notice that homework appears both in the notes and in the corresponding units on the edX platform. Most of the time, the questions will match exactly but sometimes they will be worded slightly differently. Realize that the edX platform is ever evolving and that at some point we had to make a decision about what features we would embrace and what features did not fit our format so well. As a result, homework problems have frequently been (re)phrased in a way that fits both the platform and our course. Some things you will notice: \"Open\" questions in the text are sometimes rephrased as multiple choice or \"drag and drop\" questions in the course on edX. Video answers appear as embedded YouTube, with then a link to the end of the week where the same video, with captioning and optional download from an alternative source, can be found. This was because edX&rsquo;s video player could not (yet) be embedded in answers. Please be patient with some of these decisions. Our course and the edX platform are both evolving, and sometimes we had to improvise. ",
                                        "unit_id":"1dfe4868c445447ab98b189e7c088309",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"717d18b2370042c7ae42ac33f456192a",
                                "vertical_name":"0.2.4. Homework and LAFF-On"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Infinite number",
                                            "Navigation bar",
                                            "Material",
                                            "Assumption",
                                            "Homework"
                                        ],
                                        "data":" How to grade the course was another decision that required compromise. Our fundamental assumption is that you are taking this course because you want to learn the material, and that the homework and other activities are mostly there to help you learn and self-assess. For this reason, for the homework, we: Give you an infinite number of chances to get an answer right; Provide you with detailed answers; Allow you to view the answer any time you believe it will help you master the material efficiently; Include some homework that is ungraded to give those who want extra practice an opportunity to do so while allowing others to move on. In other words, you get to use the homework in whatever way helps you learn best. Don't forget to click on \"Submit\" or you don't get credit for the exercise! How your progress is measured is another interesting compromise. The homework for each of Weeks 1-5 is worth 20% of the total points in the course. Week 6 has ungraded homework, meant for those who really want to master the techniques. It is that week that will bring you to our frontier. To view your progress, click on \"Progress\" in the edX navigation bar: If you find out that you missed a homework, scroll down the page, and you will be able to identify where to go to fix it. Don't be shy about correcting a missed answer. The primary goal is to learn. Some of you will be disappointed that the course is not more rigorously graded, thereby (to you) diminishing the value of a certificate. The fact is that MOOCs are still evolving. People are experimenting with how to make them serve different audiences. In our case, we decided to focus on quality material first, with the assumption that for most participants the primary goal for taking the course is to learn. Let's focus on what works, and please be patient with what doesn't! ",
                                        "unit_id":"6b1abd0ab11945929bc214baa035c364",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"62185a041b4c42849d69a2732e3febbe",
                                "vertical_name":"0.2.5. Grading and LAFF-On"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Double click",
                                            "Folder",
                                            "File",
                                            "Click",
                                            "Desktop"
                                        ],
                                        "data":" Robert van de Geijn: Some of the activities that you will be doing as part of this course, will require you to set up a folder with certain resources. Let me just quickly walk you through that. If you go down here to a little bit below on this page, you will find a reference to a file LAFFPfC-- which stands for programming for correctness--dot zip. And if you click on that, a file will be downloaded. And then if you look at where this is, in my particular case this was downloaded to the Downloads folder, and what you will want to do is place this on your desktop. So I'm going to move this to my desktop. Now my desktop is really cluttered, so I'm actually going to move it into a folder called desktop, on my desktop. And there you see it now. And in the particular case of my Mac, all I now need to do is double click on that, and then it unzips, and I end up with a folder that has some folders and various resources. And how you will be using those, you will learn later ",
                                        "unit_id":"d74c4b1bf0ad4cb0924e23ff296fa716",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"540b801534db47e8aa52fc3b5ab020a9",
                                "vertical_name":"0.2.6. Setting up to LAFF-On"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7b3c080f0f62441ba9d0e6885ec77e3d",
                        "sequential_name":"0.3. Software to LAFF-On",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion board",
                                            "License",
                                            "Matlab",
                                            "Related",
                                            "Mathworks",
                                            "Click",
                                            "Unit",
                                            "Homework"
                                        ],
                                        "data":" MathWorks is generously providing licenses for MATLAB Online for the duration of the course. Before downloading, please note that the license is provided for use of MATLAB in this course. To gain access to MATLAB Online, please follow these steps: Create a MathWorks account if you do not already have one at https://www.mathworks.com/mwaccount/register Click on the Programming for Correctness MATLAB Online license link , provide your MathWorks account credentials (if requested), click on the blue 'Access MATLAB Online' button, and log in with your MathWorks account credentials (if requested). After logging in to MATLAB Online for the first time, you will want to bookmark matlab.mathworks.com to use MATLAB Online during the course. If you have logistic questions regarding MATLAB Online, then please post to our discussion board by using the above discussion box for questions. If in future weeks you instead have a problem related to a homework that uses MATLAB, then post to the discussion box in the unit where the homework appears. It is easy to get the impression that there are problems because only those who have problems post on the discussion board. For this reason, once you have successfully activated MATLAB Online, please \"up vote\" the message in the discussion board related to this unit titled \" Upvote if you successfully activated MATLAB Online \". This allows us to determine that it is all working for some subset of participants. MATLAB Online is supported in Chrome (recommended for best experience), Firefox, and Safari. ",
                                        "unit_id":"0431346c264b4be580464bfffbb45438",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"141cb00e63c34ce7b791b015514488d5",
                                "vertical_name":"0.3.1. Activating MATLAB Online"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Youtube videos",
                                            "Programming language",
                                            "Matlab"
                                        ],
                                        "data":" Below you find a few short videos that introduce you to MATLAB. For a more comprehensive tutorial, you may want to visit MATLAB Tutorials at MathWorks and clicking \"Launch Tutorial\". HOWEVER, you need very little familiarity with MATLAB in order to learn what we want you to learn about how abstraction in mathematics is linked to abstraction in algorithms. So, you could just skip these tutorials altogether, and come back to them if you find you want to know more about MATLAB and its programming language (M-script). We do not have alternative downloadable videos for the videos in this unit. (The YouTube videos are maintained by MathWorks.) ",
                                        "unit_id":"85f2a0725f4043aab9f76836773aee0b",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Image processing",
                                            "Computer programmer",
                                            "Machine learning",
                                            "Matlab",
                                            "Computer"
                                        ],
                                        "data":" Welcome! In this course we have the opportunity to use MATLAB to find solutions to problems that are too complex, or too time consuming to solve by hand. MATLAB also helps us explore and visualize ideas which leads to a better understanding of complicated systems. So, What is MATLAB? Well, during the 60's and 70's computational packages enabled scientists and engineers to use computers for calculations that were near impossible previously. While these packages were available for general use, you had to be a computer programmer to use them. MATLAB creator Cleve Moler wanted to make these packages accessible to his non-computer programmer students so that they could focus on solving problems without spending lots of time writing Fortran code. Rather than programming and debugging code, sophisticated computations in MATLAB are done with a few simple commands. By 1981, MATLAB included 80 functions focusing on the matrix operations fundamental to many engineering applications. This idea of making computing accessible to a large audience continues today in a broad range of applications such as Image Processing, Biology, Machine Learning, and Robotics, just to name a few. Now it's your turn to use MATLAB. Don't worry, we're here to help, so check out the MATLAB tutorials to get started, and you too can speak MATLAB. ",
                                        "unit_id":"a245136447c54a30858d9841fe66253b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"58c5696aa02747dca82b9f923f2d5728",
                                "vertical_name":"0.3.2. MATLAB Basics"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Command window",
                                            "Double clicking",
                                            "Folder",
                                            "File"
                                        ],
                                        "data":" Robert van de Geijn: So in units 0.2.6, we showed you how to download some materials that you're going to use. As part of that is a file that you need to upload to MATLAB Online. So let's go over here. Let's log into MATLAB Online. So here I'm logged into MATLAB Online, and I use something called MATLAB drive to synchronize what I have on my desktop, with the files that I have on MATLAB Online. And the first thing I'm going to do is create a new folder. And I'm going to call that folder LAFFPfC for programming for correctness. And then I'm going to open up the folder by double clicking it. And now I'm going to upload this file called assignments.zip. And it's being uploaded, and that now shows up as a file within the directory called LAFFPfC. And there it is. And then I need to go into the Command window and say unzip assignments. zip. And that then extracts what's in that file. This is going to take a second. And then it's done. We have this folder called assignments, and if you open that up, you find various other things that we're going to be using later in the course. All right, you're all set ",
                                        "unit_id":"06a9bafb597a40448195b1de665965a3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a3d3674cb5d645f2b8d09466185b5470",
                                "vertical_name":"0.3.3. Setting up MATLAB Online to LAFF-On"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Live script",
                                            "Executable code",
                                            "Insert",
                                            "Matlab",
                                            "Code",
                                            "Learning"
                                        ],
                                        "data":" Live Script is a relatively new feature of MATLAB that allows one to interleave text with executable code. It is nice for LAFF-On because we can insert explanations interleaved with coding exercises, thus enhancing the learning experience. In this course, we will also use Live Script in an innovative way, by using the text boxes to insert the proof of correctness into the code itself. We will start using Live Script in Week 1 and how we insert proofs of correctness will become clearer later in the course. If you are interested in learning more about using Live Scripts in MATLAB and MATLAB Online, you can explore MathWorks documention on Live Script features and differences with ordinary MATLAB scripts and creating with Live Scripts in the Live Editor . ",
                                        "unit_id":"4173bcb7415b4492a9e02c75cf395485",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"87d3f304d94c4539bfff47e452b2508c",
                                "vertical_name":"0.3.4. MATLAB Live Script"
                            }
                        ]
                    },
                    {
                        "sequential_id":"cf2c84d016fa4b3d90d2876aee5adff3",
                        "sequential_name":"0.4. Typesetting LAFF-On",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Integrated writing environment",
                                            "Discussion board",
                                            "Environment",
                                            "Typeset"
                                        ],
                                        "data":" The tool of choice for typesetting mathematics is a document typesetting system called LaTeX. We will use it to typeset many of our exercises in a way that captures how we want you to think about discovering algorithms hand-in-hand with their proofs of correctness. We recommend that you use TeXstudio: \" TeXstudio an integrated writing environment for creating LaTeX documents .\" It is the environment we typically use in the videos for this course and that we used to create the notes and many of the activities. You are, of course, free to use whatever such environment you prefer. When asking questions or posting comments on the discussion board for this course, you can also use LaTeX syntax to typeset mathematics. You place LaTeX math source between dollar signs ($) to do so. ",
                                        "unit_id":"3b56ebf069154bb2902fe6f56f8d6523",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ae3b058d47d24348ae4ac0a5f5df3a01",
                                "vertical_name":"0.4.1. Typesetting mathematics"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Desktop",
                                            "Document",
                                            "End",
                                            "Button",
                                            "Pdf",
                                            "World"
                                        ],
                                        "data":" Robert van de Geijn: So let's start up TEX studio for the first time. And here it goes. Now, recall that I put LAFFPfC, this file we downloaded and unzipped, in a directory called desktop on my desktop. So to get to our first example, what we do is we open up LAFFPfC, then we open up assignments, we open up week zero-- that's where we are-- we open up LaTeX, we open up hello world. And what we see here is just about the simplest possible document you can create. It starts with saying that this is going to be an article. Then you have begin document, followed by end document, and in between we simply say hi world, or hello world, I guess that's the traditional greeting. And if we now click on this compile button here, this double green arrow build and view, then on the right we end up with the result of compiling this very simple document. Let's see if we can make it a little smaller, then you can see that this is just a sheet of paper with hello world on it. And if you then would want to look at this in the PDF viewer, you just click on this button right here. And now Acrobat has opened up the file hello world on PDF that was created. And there you have it. And you now have entered the wonderful world of typesetting with LaTeX. ",
                                        "unit_id":"f6b0b0a7c0e1491bbd941f70e8d5874e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"767688ba01de4abdb58d01f98b0c43c1",
                                "vertical_name":"0.4.2. Downloading and testing TeXstudio"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Spell checking",
                                            "Linear algebra",
                                            "Quick start",
                                            "Good idea",
                                            "Backslash",
                                            "Title",
                                            "Introduction",
                                            "Keyword",
                                            "Button",
                                            "Document",
                                            "Latex",
                                            "Good",
                                            "Idea",
                                            "Space",
                                            "Section",
                                            "Article",
                                            "Mistake",
                                            "Mathematics",
                                            "End",
                                            "Make",
                                            "Array",
                                            "Typeset",
                                            "Start",
                                            "Put"
                                        ],
                                        "data":" Robert van de Geijn: Let me illustrate how one can use LaTeX to quickly put a document together. So one starts by going to the Wizard here in TeXstudio, and you say, OK, let's do a quick start, and what we're going to want to do is create an article. We'll use a 10 point typeset, let's make it 12. That's normal size paper, I guess, and I'm not entirely sure what this encoding means. AMS Packages are the American Mathematical Society packages, so that's good for typesetting, and graphics, we might need that, who knows. And for the rest, we probably don't need a whole lot of this stuff, but these are other packages that one can incorporate. So then you say OK, and over here we end up with a simple article. Notice that it already filled in my name, and if you now want to typeset this, you could even add a title and say My first LaTeX Document. And then here in the document itself, between the begin document and end document, we could say backslash make title. And then, if one hits this Compile button, this green button, built-in view, what do we get on the right here? Oh, something that's way too big to view. Let's make it a little smaller, and bingo, there we have My first LaTeX Document. Now you may have noticed that LaTeX often types it in kind of a funny way. If you do a backslash, that makes it a keyword, and it'd be keyword backslash LaTeX, capital L, capital T, capital X, is a special command. But what you notice now is that there is no space between the X and the D, and the way you can put that space back in this by putting another backslash at the end of the backslash LaTeX, and bingo. There we have it. Of course, for me, this is not my first LaTeX document, but for you it might be. Let's typeset this. Let's put this all the way here, and you could have different sections. So you could say let's put in an abstract, and notice that it automatically comes in with a backslash and abstract. And then here we could say, This is where the abstract goes, period, and then, if you hit the Compile button, you get the abstract. And then we might have a first section that might be backslash section introduction, and you get a section that starts with introduction. Well, that didn't do spell checking too well. So we'll do that. And then we could have a subsection, first subsection, second subsection. And you start getting the idea that if you then hit this again, there you go. Now, when you're first starting out with LaTeX, it's a good idea to compile frequently, because if you make a small mistake, you might have a rough time finding where that mistake is. So now, let's show how we can typeset some mathematics. If you want to typeset mathematics all by itself, you can do that as such, and say, let's do the integral from x equals 0, from zero to 5 of x squared dx. And if you hit that, you notice that this gets typeset very nicely. Of course, we are going to be doing a lot of linear algebra. So you may want to say, OK, let's do a matrix. We may want to do backslash back left. You may want to end that with a right. So we can click on that. Now you have the parentheses, and then you can put in an array, begin array where we may want to center its column. And you may want to do minus 1, 3, 2, with a minus 301 and array. Right parentheses-- oops, the right parenthesis was in there already. And again, if you hit that button, then you get that. Now you can have this in a line as well. You can say, we can inline this, and that you do by putting it between dollar signs instead. Anyway, that's how it goes. You can put in bulleted lists by saying begin itemize, and then you get end itemize, and then you can put each item. First item, second item, and you get that, or we can enumerated it. You can say instead enumerate, and then we'll have to fix this, and say enumerate, and again, if we do that, we get an enumerated list. I suggest that you go ahead and do some tutorials on how to use LaTeX, and then you're all set for this course. We're actually not going to use LaTeX much until, well, if you choose to, you can start as early as week one, but most likely you're not going to really need it until week four. And if you absolutely must, you can probably get through the whole course without it all together. ",
                                        "unit_id":"5ed8739f89454525a87a170ccf88c70b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8efdffc0089b4ba2935eec29727eac3a",
                                "vertical_name":"0.4.3. LaTeX and TeXstudio Primer"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7d0a2fc8af044e8ca129145998cce405",
                        "sequential_name":"0.5. Enrichments",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Click on the below image to view a video about the origins of MATLAB hosted at MathWorks. ",
                                        "unit_id":"f314684392014bfca4b71a7216a3eca2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fce4dd9e28f34a759063c530e65e732b",
                                "vertical_name":"0.5.1. The Origins of MATLAB"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" You may enjoy this interview with Dr. Leslie Lamport, who created LaTeX. https://www.infoq.com/interviews/lamport-latex-paxos-tla ",
                                        "unit_id":"845d56f972614ca09bfef08c667b74ea",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"addd5fe0ec3249a1b9a79f4f333836ab",
                                "vertical_name":"0.5.2. The Origins of LATEX"
                            }
                        ]
                    },
                    {
                        "sequential_id":"75dc158b7f6c47c5865d4a2ea2134be3",
                        "sequential_name":"0.6. Wrap Up",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" For a typical week, additional assignments may be given in this unit. ",
                                        "unit_id":"4cfd3bd1e0a34051bad1f4205c57c9f2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e52184f98c1847f2afb9e4d799de009c",
                                "vertical_name":"0.6.1. Additional Homework"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" At the end of each week, we summarize theorems and insights for easy reference. ",
                                        "unit_id":"c0b5e5bacd104377a510cc77065647f4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3cad57bdaf84477aa741c7f0e3b1311d",
                                "vertical_name":"0.6.2. Summary"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"7773e91bd9634c8d89a8ff9f7d24b8c9",
                "chapter_name":"Week 1 A Logical Beginning",
                "sequentials":[
                    {
                        "sequential_id":"e5cec5d0a02e464098eff09be99fcbaf",
                        "sequential_name":"1.1. Opening Remarks",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Randomly generated",
                                            "Mathematical expressions",
                                            "Command window",
                                            "Live script",
                                            "Executable code",
                                            "Precise",
                                            "Script",
                                            "Code",
                                            "English",
                                            "Text",
                                            "Folder",
                                            "Reason",
                                            "Point",
                                            "Correct",
                                            "Open",
                                            "Function"
                                        ],
                                        "data":" Robert van de Geijn: Welcome to week one. We're going to motivate this week by looking at a Matlab function. And we're going to ask you to convince yourself that this function is c Let's just dive right in and have a look. I'm going to log into Matlab online. This will take a second. And what you will eventually see is your current folder on the left. And in it is the folder that you created when you uploaded LAFFPfC dot zip and then unzipped it. So let's open that. Let's open assignments. Let's open Week 1. And let's open Matlab. And I, right now, only have one file in it, and that's EvalPolynomial.mlx, that means that it's a Live Script. Let's open the Live Script. And what do we have here? Well let's move the Command window out of the way. A Live Script is a notebook that allows you to combine text, mathematical expressions, and executable code. So here we have some text that explains what this particular Live Script is all about. And what it says is, that we're going to evaluate a polynomial, where the coefficients of the polynomial are stored in array p with n plus 1 coefficients, entries, and then you're going to take a point x, a scalar x, at which to evaluate this polynomial. The formula for that polynomial is given right here, that is some mathematics that you can enter. And then down here, is a little script that allows you to test the particular function that is called EvalPolynomial, where you pass in the array p and the point x at which to evaluate, and that particular function is defined at the end of the Live Script for the moment. Functions always have to appear at the end of a Live Script. And you can go back to this particular box. You can execute the code that's in it by going up to run, and then saying run all, and that then executes all executable boxes in this Live Script. And the result is on the right. So it shows what the randomly generated coefficients are that were stored in p. Obviously, since these are randomly generated, you may not get the same ones. It then shows a randomly generated point x at which to evaluate, and it shows what the polynomial, presumably, is, evaluated at that point, if this function was actually implemented correctly. Now here's what I want you to do. I want you to look at this function and convince yourself ??? And I want you to analyze what it is that you do to convince yourself. And then I want you to find somebody else and convince that person that it's either correct or not correct. And I want you to think carefully. What kind of English sentences would you say in order to convince someone? Is the English that you use precise enough so that there is no confusion possible? Would it be better to express what you're trying to convey with mathematics, since mathematics is less ambiguous? If you express it with mathematics, how would you then prove to yourself, or prove to somebody else, that this is actually correct? Now the whole idea behind week one is that we're going to give you some tools. We're going to equip you with the ability to translate English into precise mathematical expressions. We're going to equip you with the knowledge of logic, so that you can reason correctly. And we're going to equip you with some basic proof methodologies that we're going to employ in this week, and the rest of the weeks of this course. We're actually not on our program again until the end of week three, where you will actually derive this particular function to be correct. And the reason for that is that we really want to teach you, first, how to think mathematically, and how to think about precisely proving programs correct. And only then do we want you to start implementing code. And, hopefully, what will happen is that the code that you write will be correct the first time you execute it. As a matter of fact, some would say, you don't even need to execute it, because you already know ahead of time that it is correct. So now we're ready to get started on week one. ",
                                        "unit_id":"d168135b207148a99d853caab8523eee",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"646e3c4122954560b99c6ecd8853a2c6",
                                "vertical_name":"1.1.1. Launch"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Proof techniques"
                                        ],
                                        "data":" 1.1. Opening Remarks 1.1.1. Launch 1.1.2. Outline Week 1 1.1.3. What you will learn 1.2. Review of Logic 1.2.1. Simple propositions 1.2.2. Boolean operators 1.2.3. Predicates 1.2.4. Precedence of Boolean operators 1.2.5. Proving logical equivalences using truth tables 1.3. Proof Techniques for LAFF-On 1.3.1. Basic Equivalences 1.3.2. Equivalence style proofs 1.3.3. (The Principle of Mathematical) Induction 1.4. Quantified Expressions 1.4.1. What is a quantifier 1.4.2. The &ldquo;for all&rdquo; quantifier 1.4.3. The &ldquo;there exists&rdquo; quantifier 1.4.4. The summation quantifier 1.4.5. Splitting the range 1.4.6. Quantification over the empty range 1.4.7. Practice expressing statements as predicates 1.5. Weakening/strengthening 1.5.1. Weaker and stronger predicates 1.5.2. Weakening/strengthening laws 1.6. Enrichment 1.6.1 The Humble Programmer 1.6.2 Typesetting proofs with LaTeX 1.6.3. If you want to learn more on logic 1.7. Wrapup 1.7.1. Additional exercises 1.7.2. Summary ",
                                        "unit_id":"42325d3e7ae0488e8b2ebf780e6e691c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"391e46fcf973473eb6a2f60f93a27eb1",
                                "vertical_name":"1.1.2. Outline Week 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical induction",
                                            "Truth tables",
                                            "Involve",
                                            "Splitting"
                                        ],
                                        "data":" Before we begin programming for correctness, we need to start with an overview (or review) of logic since we want to create and clearly reason about correct code. Logic is essential to reasoning. Upon completion of this week, you should be able to Translate between English statements and predicates that may involve quantifiers (in various ways). Write expressions that involve \"for all\", \"there exists\", \"summation\", and other quantifiers. Evaluate and simplify predicates that involve quantifiers such as applying empty ranges, splitting ranges, and splitting off one term. Prove using truth tables and equivalence style proofs. Prove using the Principle of Mathematical Induction. Understand, recognize, and prove when one predicate is weaker or stronger than another predicate. Manipulate two predicates to expose that one is weaker than the other. ",
                                        "unit_id":"16fa1637867748a6b6f4b975c8977cd0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1181ed9b72084b31bb1424ef00d15125",
                                "vertical_name":"1.1.3. What you will learn"
                            }
                        ]
                    },
                    {
                        "sequential_id":"4c47b80e7b3547a0a89b2cfead6e6100",
                        "sequential_name":"1.2. Review of Logic",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Logical reasoning",
                                            "Write",
                                            "Maggie",
                                            "Boolean",
                                            "Reasoning",
                                            "Meaning"
                                        ],
                                        "data":" MAGGIE MYERS: Hi. I'm Maggie. And we're going to start with a review of logic. If we're going to prove our programs correct, we're going to do this by logical reasoning. We want to be able to communicate with one another, so it's important for us to use the same language and the same symbolic representations. So that's why we're going to start with our review. We need to think about how to write English statements in symbolic form. This can be very challenging, but it is very important. Why? Well, symbolic forms are more concise. They're easier, faster to write down. They're also more precise. Sometimes English statements can have more than one meaning, and it's not clear in the situation what the actual meaning is. But symbolic forms are much more precise. So if we're using symbolic forms, they're easier to follow. And it's easier to judge the reasoning. So even though writing English statements into symbolic forms can be a challenge, it's something that we need to practice and be able to do. So let's talk about some of the vocabulary we're going to run into during the course. Now first, we're going to talk about Boolean values. So what are they? TRUE, FALSE. Sometimes we represent them as zeros, ones, or Ts and Fs. But a Boolean value is one of two; TRUE, FALSE. A proposition is a declarative sentence taking on values, TRUE or FALSE. But it can't be both. It's either TRUE or it's FALSE. So just to make sure that we understand this definition of proposition, I have some examples and you might want to stop the video at this point, look at the ungraded problems on the edX platform, and see if you can answer them. ",
                                        "unit_id":"ebed95a9029749ea90d89cd5e99523fd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f9c21c6f582b4165b2e6fe702a5ac4dc",
                                "vertical_name":"1.2.1. Simple Propositions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ice cream",
                                            "Boolean operators",
                                            "Boolean operator",
                                            "Logical expressions",
                                            "Operator",
                                            "Apply",
                                            "English",
                                            "Meaning",
                                            "Implies",
                                            "Arrow",
                                            "Predicate",
                                            "General",
                                            "Negation",
                                            "True",
                                            "Ll",
                                            "Word",
                                            "Disjunction",
                                            "Talk",
                                            "Equivalence",
                                            "Symbolically",
                                            "Greater",
                                            "Proposition",
                                            "Implication",
                                            "Write"
                                        ],
                                        "data":" Last video, we talked about Boolean values and propositions. This video, we want to extend our ideas of propositions by looking at connected simple propositions, which are also propositions. We connect them using Boolean operators. So in this video, we want to talk about our Boolean operators. So logical statements can be simple propositions-- as the ones we talked about during the last lecture-- or that can be formed from operations on simple statements or propositions. In other words, they can be functions of propositions. These operations are known as Boolean operators. And the outputs are TRUE, FALSE, so propositions. Let's just give an overview of the types of Boolean operators we're going to be looking at-- the name, sort of the meaning, and I have indicated the symbol used. So the first Boolean operator we're going to investigate is negation or NOT. Then we'll look at conjunction, which joins two propositions with the English word AND. We'll look at the operator disjunction, which connects using OR. We'll look at implications. It means implies. So if one proposition implies another proposition, it's an implication. Often in English, these are identified by if then, and an arrow is used to indicate it. It could be an arrow where it's pointing from left to right or from right to left. It means that the arrow part is the one that's implied-- the proposition with the arrow is the implied proposition. And then we have equivalence, which is going to be very important to us. It means if and only if. Sometimes we say equivalent to. And we use a double arrow in this particular case. So what I intend to do is to look at each one of these Boolean operations separately and give you some examples of their use. So to start with, though, I wanted to look at a simple proposition, like in the last video-- say \"five is positive.\" Now, one of the things we'd like to do is to be able to write this symbolically-- \"five is positive.\" So we could write that as 5 is greater than 0. That's 5 is positive. And notice that this simple proposition is TRUE. The number 5 is greater than 0. So now, let's investigate some of the Boolean operators. We first looked at negation, NOT. An example using our simple predicate of negation applied to it is \"five is not positive.\" We could write that symbolically as, it is not the case that 5 is greater than 0. Of course, we also know we could write that as 5 is less than or equal to 0. But symbolically in form of a proposition, not 5 is greater than 0 is a proposition that is always FALSE, because 5 is greater than 0. So this is FALSE, or evaluated to FALSE. For general propositions, when we apply NOT to it, if the proposition is originally TRUE, NOT that proposition is FALSE. When it's FALSE, NOT that proposition is TRUE. So this is one of our simplest Boolean operators. The input is one proposition and the output is a proposition. In next videos, we'll talk about predicates. And actually, these operators apply to predicates also, which are extensions to propositions. More details later. So the next Boolean operator I wanted to talk about is conjunction. \"Five is positive and six is positive\" is an example. Now, symbolically, I could write this as 5 is greater than 0 AND 6 is greater than 0. Or if I think of five as being the proposition p-- \"five is positive\" as proposition p and \"six is positive\" as proposition q, then I'm symbolically looking at p AND q. Now, in this particular case, 5 is positive and 6 is also positive. So this proposition is TRUE. In general, for a conjunction to be TRUE, both of its-- I'm going to call them components, these simpler propositions-- must be TRUE. So if a conjunction is TRUE, the inputs both must be TRUE. It's a little more complicated, because we're inputting two propositions and the output is a proposition. Disjunction is the next Boolean operator I want to look at. If we have \"five is positive or six is positive,\" we can connect the propositions with the operator OR, or the disjunction. So symbolically, we could write this as 5 is greater than 0 OR 6 is greater than 0. If I think of \"five is positive\" as the proposition p, \"six is positive\" as the proposition q, I could write this as p OR q. And in this case, the truth value is TRUE, because both 5 is greater than 0 and 6 is greater than 0, and this OR includes the possibility that both are TRUE. In order for a disjunction of logical expressions to be TRUE, at least one of the components must be TRUE. So either p is TRUE or q is TRUE. And in this case, it's both. So the result will be TRUE. Let's look at another Boolean operator. \"If five is non-negative then six is positive,\" that's an implication. We could write this as 5 being greater than or equal to 0-- non-negative means not negative, which means greater than or equal to 0, because it could be 0-- implies that 6 is positive-- is greater than 0. And, again, if this is p and this is q, then I could write this as p implies q. Notice, when I read this, I said non-negative means greater than or equal to 0. So I actually could have rewritten this expression, this component, as 5 is greater than 0 OR 5 is equal to 0 implies that 6 is greater than 0. Now, when I'm trying to determine whether the result of the implication operator is TRUE or FALSE, it turns out that, as long as p in general is FALSE, the expression is going to be TRUE. If p is TRUE, then q must be TRUE for the expression to be TRUE. In other words, the only time that an implication is FALSE is if p is TRUE but q is FALSE. It's like a promise. If I say, if you do well on an assignment, then you can treat yourself to an ice cream. Well, the only time we get in trouble is if you do well on the assignment and you don't get the ice cream. So as long as you don't do well on the assignment, whether or not you got the ice cream doesn't make the promise not hold. So in other words, when you have an implication, the only time an implication is FALSE is if p is TRUE and q is FALSE. So the last of the Boolean operators that I want to talk about is the equivalence. We're going to be using this a lot to prove our program is correct. But the idea here is it's an if and only if. So \"five is non-negative if and only if six is positive\" we could write symbolically as 5 is greater than or equal to 0 if and only if 6 is greater than 0. Now, again, if I think of this first component as being p and the second component as being q, we could write this as p is equivalent to q. Another way of expressing this same Boolean operator is it's actually a combination of two. That's where the if and only comes in. For p to be equivalent to q, it must be the case that p implies q AND q implies p. So it's actually a combination of two Boolean operators that we've observed before that gives us this equivalence. Notice that the only way an equivalence is TRUE is if both p and q have the same truth value. So p being TRUE and q being TRUE, TRUE implying TRUE is going to be TRUE. TRUE implying TRUE is going to be true. So the expression is going to be TRUE. If they're both FALSE, it's still OK, because this expression will be TRUE and this expression will be TRUE, if they're both FALSE. But let's say p is TRUE and q is FALSE. You'd have TRUE implying a FALSE, which is going to be FALSE. FALSE in anything is FALSE. So it has to be the case that p and q, both propositions, have the same truth value if the equivalence holds. And I say holds meaning gives the value TRUE. So these were the Boolean operators applied to propositions. We're going to extend our ideas of logical expressions to those that might involve variables in the next video. ",
                                        "unit_id":"d93ab308684f485b99d9352cc9297760",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c4b79d9bdbc749359cf028f2bac3c71f",
                                "vertical_name":"1.2.2. Boolean operators"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Boolean operators",
                                            "Finite number",
                                            "Logical expressions",
                                            "Connecting",
                                            "Input",
                                            "Expression",
                                            "Predicate"
                                        ],
                                        "data":" Here, we want to look at predicates. So we've run into propositions in the past. And we know that they're either TRUE or FALSE. But often, when we look at logical expressions, they involve variables. This brings us to predicates that are extensions of propositions. So a predicate is a logical statement that may be TRUE or FALSE, depending on the values of its variables. Predicates could contain variables. And if they do, the predicates can be thought of as Boolean-valued functions that take inputs for the variables. And then you could evaluate the logical statement as either TRUE or FALSE. Once you input the variables, it's not both. It has to be either TRUE or FALSE So if a predicate is always TRUE, no matter what values of its variables, it's known is a tautology. If it's always FALSE, it's called a contradiction. If it's sometimes FALSE and sometimes TRUE, it's known as a contingency. Most of the time, we're going to be dealing with contingencies. But often, what we'd like to do is to show that something is a tautology-- always TRUE. Now, predicates could be constants-- as in, they may not have variables involved. TRUE and FALSE are predicates. Propositions are also predicates. Algebraic expressions, though, that evaluate to TRUE or FALSE, depending on the input variables, are predicates. And actually, predicates connected with Boolean operators are also predicates. So, for example, if expression one and expression two are predicates, then if we connect them using conjunction, the result is going to be a predicate. Using disjunction, the result will be a predicate. Connecting through implication will yield an other predicate. An equivalence-- so E1 is equivalent to E2-- is also a predicate. In fact, any expression generated by a finite number of applications of connecting predicates through Boolean operators is also going to be a predicate. So, for example, if we have E1 and E2 is equivalent to E2 and E1, where E1 and E2 are predicates, the result here is also going to be a predicate. So let's look at a couple of examples of writing English in symbolic form-- English statements in symbolic form that we're looking at predicates. And then I'm going to ask you to do several exercises connecting the symbolic forms and the English statements. So if we think of x is positive, we can write that as x is greater than 0. And we can actually attach a letter to it, like p for a predicate, because it will be a predicate and will be TRUE or FALSE, depending on what x is. Same thing, y is positive we could describe as the predicate q. If we want to look at x is positive and y is positive, we could write it as x is greater than 0 AND y is greater than 0, or we could say p AND q, where p is x is positive and q is y is positive. Let's look at one more-- x is positive or y is positive. It's also going to be a predicate. We can write it as x is greater than 0 OR y is greater than 0. But if we think x is greater than 0 is predicate p and y is greater than 0-- we could call it predicate q-- we could write this as p OR q. And, again, writing predicates in symbolic form can be challenging. But we're going to ask you to get used to it by practicing some of the problems in the next piece. ",
                                        "unit_id":"f2a05d68e4944b10a81f42a0ed2fd7c8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"80047d2c9c7f493081a228c876b8e235",
                                "vertical_name":"1.2.3. Predicates"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Boolean operators",
                                            "Equivalence symbol",
                                            "True",
                                            "Perform",
                                            "False",
                                            "Evaluate",
                                            "Precedence",
                                            "Equivalence",
                                            "Expression",
                                            "Order",
                                            "Negation"
                                        ],
                                        "data":" In this video, we want to look at the precedence of Boolean operators. Often, we want to avoid unnecessary extra parentheses. And in order to do so, we agree upon a precedence order in which Boolean operators are evaluated. First, we look at negation. And then we would perform conjunction, followed by disjunction. Then we would look at implication and, finally, equivalence. Let's look at an example. Let's say we want to evaluate TRUE AND TRUE implying FALSE or NOT TRUE. Now, this predicate can be simplified by first-- well, the operation we would perform first is negation. So this would be equivalent to TRUE AND TRUE implying FALSE OR FALSE, if we evaluate the negation. To describe that these two expressions are equivalent, between the two, I'm going to use the equivalence symbol. And I'm going to use these little brackets. And in between, I'm going to tell you why-- what I did to get from one expression to the next. And in this particular case, I just evaluated negation. Now, if I want to simplify this predicate, next I would perform conjunction-- TRUE AND TRUE is TRUE. And then I would evaluate FALSE OR FALSE, which is going to be FALSE. But TRUE implying FALSE, well, the only time implications are FALSE is if TRUE implies FALSE. So this expression is equivalent to FALSE. And so I know that my original expression evaluates to FALSE. I'm going to use this style when evaluating predicates or proving properties about predicates. And we'll learn more about this in the next section. ",
                                        "unit_id":"692ec6bb21834164b97116bba83841f6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f2ac6f0455494ae590f0b3bcb03f0ca2",
                                "vertical_name":"1.2.4. Precedence of Boolean operators"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Truth values",
                                            "Truth table",
                                            "Truth tables",
                                            "Table",
                                            "Implies",
                                            "Truth",
                                            "Basic",
                                            "Half",
                                            "False",
                                            "Component",
                                            "True",
                                            "Equivalent",
                                            "Ll",
                                            "Create",
                                            "Expression",
                                            "Compare",
                                            "Column"
                                        ],
                                        "data":" MAGGIE MYERS: A truth table summarizes truth values for all combinations of truth values of components. In this video, we want to use truth tables to prove to tautologies. Recall, tautologies are predicates that no matter the input variable, the value of the predicate will always be TRUE. So let's look at some examples. Let's say we want to use a truth table to prove that p implies q is equivalent to not q implies not p. OK, so the first thing we want to do is create a table that looks at all possible combinations of the truth values of the components, the basic components. There are two basic components here; p, q. p could be TRUE, FALSE. q could be TRUE, FALSE. So there are four possible combinations of TRUEs and FALSEs for p, q. I'm going to create a truth table, a table with four rows. And these rows are going to indicate all of the different combinations for the truth values of p, q. To be organized, I'm going to let the first row have p TRUE, second row p TRUE, then FALSE, and then FALSE for the truth values of the basic component p. For the second basic component, q, I'm going to let it be TRUE, FALSE, TRUE, FALSE. In general, there are going to be 2 to the n, where n is the number of basic components, different rows in my truth table. In this case, 2 squared is 4. And if I want to be very organized about the way I write my or create my truth table, the first column, I'm going to actually create half of the rows, the first half, indicate them as TRUE for the first component and the last half FALSE. And then it's going to be a quarter TRUE, a quarter FALSE, quarter TRUE, quarter FALSE, and so on. The next would have been an 1/8 TRUE, 1/8 FALSE if there would have been eight or more different rows, and so on. You'll see another example in the next example. So the first column indicates the basic component p, next basic component q. And now I'm way to create columns that are going to help me describe the truth value of the expression just by looking at piece at a time, subcomponents at a time. So I'm going to need to look eventually at the subcomponent p impllies q. I'm also going to need to look at not q implies not p. But before I can evaluate this, I'm going to need to know what not q is and what not p is. And then I will need to know not p implies- excuse me, not q implies not p, that truth value. I'll compare p implies q and not q implies not p. And hopefully, if it's a tautology, the truth value for each one of these combinations is going to be TRUE Well, let's check. p implies q, TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. But FALSE implies TRUE is TRUE. FALSE implies FALSE is TRUE. The only time an implication is FALSE is if p is TRUE and q is FALSE. So now not q, well, if q is TRUE, not q is FALSE If it's FALSE, not q is TRUE. If it's TRUE, not q is FALSE. And if it's FALSE, not q is TRUE. Now not p, the first row would be FALSE because not TRUE is FALSE. Not TRUE is FALSE. Not FALSE is TRUE. And not FALSE is TRUE. So I end up with the column FALSE, FALSE, TRUE, true. Now looking at not q implies not p, I have FALSE implies FALSE, which is TRUE. TRUE implies FALSE, well, that's not TRUE. That's FALSE FALSE implies TRUE is TRUE. TRUE implies TRUE is also TRUE. So I'm now going to compare the two columns, p implies q and not q implies not p. And I end up with TRUE being equivalent to TRUE. That's TRUE. FALSE being equivalent to FALSE, that's TRUE. TRUE being equivalent to TRUE, that's TRUE. TRUE being equivalent to TRUE, that's TRUE. And so I have proven that in all cases, p implies q is equivalent to not q implies not p. Let's look at another example. Let's say we want to show that p or q implies r is equivalent to p implies r and q implies r. Well, let's check. That seems weird. Now we have three basic components; p, q, and r. So I'll label three column for the basic components. And now I'm going to end up needing 2 times 2 times 2, or 8 rows. The first four I'll give the truth value TRUE to p and then FALSE for the last four. And then I'll have TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE for the values for q. And then r is going to be TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE. And that gives all the different unique combinations of the truth combinations for p, q, and r now I need to look at the less basic, but still subcomponents for the entire expression I'll call E. I need to know what p or q is going to be. Then I would need to know the truth value of p or q implies r. Then I'll need to know p implies r. I'll need to know q implies r. I'll need to know p implies r and q implies r. And then last, I'll need to know the truth value of our expression. Are these two equivalent? So let's look at p or q. I have TRUE or TRUE is TRUE. TRUE or TRUE is TRUE. TRUE or FALSE is TRUE. TRUE or FALSE is TRUE. FALSE or TRUE is TRUE. FALSE or TRUE is TRUE. FALSE or FALSE is FALSE. FALSE or FALSE is FALSE. So the only time we have p or q being FALSE is if they're both FALSE. Now let's look at p or q implies r. TRUE implies TRUE is TRUE. But TRUE implies FALSE, that's FALSE. TRUE implies TRUE is TRUE-- I'm sorry. It should be this way. TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. And then FALSE implies anything is always TRUE. So I end up with a column that looks like TRUE, FALSE, TRUE, FALSE, TRUE, FALSE TRUE, true. Let's now look at p implies r. Let's see. TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. FALSE implies anything is always TRUE. And so I end up with TRUE, FALSE, TRUE, FALSE, and then the rest TRUEs. Now we need to figure out q implies r. TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. FALSE implies TRUE is TRUE. FALSE implies FALSE is TRUE. TRUE implies TRUE is TRUE. TRUE implies FALSE is FALSE. FALSE implies TRUE is TRUE. And FALSE implies FALSE is TRUE. Now I need to look at the and. Well, in order for this two subcomponents joined by an and to be TRUE, they both have to be TRUE. So I have TRUE and TRUE is TRUE. FALSE and FALSE is FALSE. TRUE and TRUE is TRUE. FALSE and TRUE is FALSE. TRUE and TRUE is TRUE. TRUE and FALSE is FALSE. TRUE and TRUE is TRUE. And TRUE and TRUE is TRUE. OK, now I'm at the last step. Are these two equivalent? So I look at the column p or q implies r and compare it to p implies r and q implies r. TRUE and TRUE, same truth value. So that's TRUE. FALSE, FALSE, FALSE and FALSE is TRUE-- excuse me. FALSE equivalent to FALSE is TRUE. TRUE equivalent to TRUE is TRUE. FALSE equivalent to FALSE is TRUE. TRUE equivalent to TRUE is TRUE. FALSE equivalent to FALSE is TRUE. TRUE equivalent to TRUE is TRUE. TRUE equivalent to TRUE is TRUE. Yes. It is a tautology. So one of the ways of proving tautologies is through truth tables. But you notice they're a little cumbersome. So we're going to learn other ways of proving equivalences next unit ",
                                        "unit_id":"2f9c04da374643c89e813cd8b0b64101",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7c4a8822fd004cf8bfe81e39cf5bceb1",
                                "vertical_name":"1.2.5. Proving using truth tables"
                            }
                        ]
                    },
                    {
                        "sequential_id":"582cbe11b81a4827bba29190f75e9bba",
                        "sequential_name":"1.3. Proof Techniques for LAFF-On",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Truth tables",
                                            "Excluded middle",
                                            "Truth table",
                                            "Predicate calculus",
                                            "Equivalence",
                                            "Expression",
                                            "Simplification",
                                            "Grouping",
                                            "Manipulating",
                                            "Implication",
                                            "True",
                                            "Predicate",
                                            "Law",
                                            "False",
                                            "Equivalent",
                                            "Conjunction",
                                            "Disjunction",
                                            "Negation"
                                        ],
                                        "data":" MAGGIE MYERS: There are a variety of proving strategies or techniques one could use for predicate calculus. We're going to be using equivalent style proofs. They start with basic equivalences. The basic equivalences are the laws that are our principal tools for manipulating predicates. So in this video, I want to go through some of the ones that we'll be using. We should know them and their names well. But to help us out, in the Navigating bar on the edX platform, under Laws of Logic, we will have the basic equivalences given, so that you can look at them if you need to. So let's let E1, E2, and E3 be any predicates. As far as the basic equivalence goes, one of the first ones I want to look at is commutativity. We say E1 and E2 is equivalent to E2 and E1. We say conjunction is commutative. What in my mind that means is that the place for the expression isn't important. So E1 and E2 is the same as E2 and E1. Conjunction, disjunction, and equivalence are all commutative. To prove these, we could actually use truth tables. In fact, all of our basic equivalences could be proven with truth tables. Once we have the basic equivalences, we can prove other predicates by manipulating using these basic equivalences. But to start we could prove these if we wanted to using our truth tables. So let's look at another of the basic equivalences. That's associativity. Conjunction and disjunction are associative. That means that the grouping isn't important. If we have a string of conjunctions or a string of disjunction, in fact, we don't really need parentheses, because E1 and the quantity E2 and E3 is equivalent to the quantity E1 and E2-- get that answer-- and E3. And so it doesn't matter the grouping or the operation we perform first. So we don't really need the parentheses to tell us which one of these operators we need to perform first and second or, in fact, anywhere in the string. Same thing with disjunction. Disjunction is associative. So E1 or the quantity E2 or E3 is equivalent to the quantity E1 or E2, or E3. Conjunction distributes over disjunction and disjunction distributes over conjunction. What does that mean? Well, if we have E1 and the quantity E2 or E3, that's equivalent to E1 and E2, or E1 and E3. E1 or the quantity E2 and E3 is equivalent to the quantity E1 or E2 and the quantity E1 or E3. So remember, though, that equivalence is commutative. So it goes both ways. The quantity E1 or E2 and the quantity E1 or E3 could be written as E1 or the quantity E2 and E3. This seems a little bit harder for us to notice. I always think of it as equivalent to factoring in algebra. You could pull out the E1 from the expressions. Other basic equivalences that we're going to be running into our De Morgan's law. If we have the negation of the quantity E1 and E2, that's the negation of E1 or the negation of E2. Same thing if we have the negation of the quantity E1 or E2, that's the negation of E1 and the negation of E2. So if we're taking the negation, what we need to do is negate both components. And ands turn to ors, ors become ands. That's De Morgan's laws. The negation law is that if we take the negation of the negation of an expression, we get the original expression back. Excluded middle is if we have E1 or not E1, that's equivalent to TRUE. Contradiction is E1 and not E1 is equivalent to FALSE. So these are a few of the others. Implication is one of the basic equivalences that I use often when I want to prove something about a predicate that involves implication. Usually this is where I start, because E1 implying E2 is equivalent to not E1 or E2. We could prove this, again, using a truth table. Equivalence means-- if you want to show that E1 is equivalent to E2, one strategy is to show that E1 implies E2 and E2 implies E1. Often this is the strategy that we use in mathematics to prove that two predicates are equivalent, not so much in this course because we're going to be using equivalent style proofs. Other basic equivalences that we're going to be running into often are or- simplification and and- simplification. E1 or E1 is equivalent to E1. E1 or TRUE is equivalent to TRUE. E1 or FALSE is equivalent to E1. And E1 or E1 and E2 is equivalent to E1. This helps us simplify. And simplification tells us that E1 and E1 is equivalent to E1. E1 and TRUE is equivalent to E1. E1 and FALSE, of course, is equivalent to FALSE. E1 and E1 or E2 is also equivalent to E1. Simplifies a lot. Identity tells us that every expression is equivalent to itself. So often, of course, we invoke identity. Now these first 12 are used by many people as the basic equivalences. We've added two more, because especially number 13 we run into often in our work. It corresponds very much to and simplification and or simplification. We run into implications often. And you could prove these either with truth tables or even actually with the other basic equivalences. But it's good for us to notice that any time you have an expression implying itself, that's always TRUE. FALSE implying an expression is always TRUE. And any expression implying TRUE is always TRUE. These will be very convenient for us to use in the future. Contrapositive, the statement that tells us that E1 implying E2 is equivalent to not E2 implying not E1, is the example that I used in a previous video to show that we could use truth tables to prove to tautologies. I want to revisit this particular basic equivalence and actually prove it by invoking the other basic equivalences and use this as an example of how to create an equivalence style proof. So I look forward to doing this in the next video. ",
                                        "unit_id":"e880c0ca415746579c2cb141716bc20a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"792a89738091401bab41c668b593912c",
                                "vertical_name":"1.3.1. Basic Equivalences"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Style",
                                            "Find",
                                            "Equivalence",
                                            "Side",
                                            "Original",
                                            "Proof",
                                            "Write",
                                            "Implies",
                                            "Implication",
                                            "Expression",
                                            "Transitivity",
                                            "Equivalent",
                                            "Prove",
                                            "Predicate"
                                        ],
                                        "data":" In this video, we're going to demonstrate equivalence style proofs. So again, we're going to start with basic equivalences. And then we're going to employ transitivity of equivalence to justify our reasoning. Well, what's transitivity? If you have an expression one is equivalent to expression two, and expression two is equivalent to expression three, then by transitivity, expression one is equivalent to expression three. So if we can start with a predicate and find equivalent predicates by using our basic equivalences, then the first original predicate is going to be equivalent to the last manipulation by this transitivity. So in order to convey this style of proofs, what I'd like to do is just go through an example. And as promised, I'm going to look at contrapositive one more time. If I want to prove that p implying q is equivalent to not q implying p, then with equivalent style proofs, what I am going to want to do is start with one of the sides. I can think of trying to prove that this left hand side is equivalent to this right hand side of my equivalence. So this predicate is equivalent to this predicate. Now, where should I start? One strategy that I like to use is to start with the side that seems to be most complicated. So in this particular case, I'm going to look at not q implying not p, because it seems to me the right hand side is a bit more complicated. So now, what I'm going to do is find my list of basic equivalences to try to see if I can show that this is equivalent to p implying q. Where should I start? Well, if I were going to evaluate this predicate, I would use negation before implication. And when I'm working with proofs, I do exactly the opposite-- work backwards. So I'm going to try to take care of this implication first. And I notice that one of the laws of basic equivalences was about implication. It said, if you had an expression implies another expression, it's equivalent to the negation of the first or the second. Well, let's see what that would mean in our case. That would mean that this would be equivalent to not not q or not p. Now, to describe my reasoning, I know that these two predicates are equivalent to one another. I'm going to use the simple equivalence just to remind myself of that. And then I'm going to describe the basic equivalence I used inside little brackets. And in this particular case, I used implication. Often, I just use the symbol imply to represent implication, because I'm too lazy to write out the word. So now, where am I? Well, notice I have a negation of a negation. It seems to me that maybe I should take care of that. And I recall one of the basic laws was that, if you have the negation of negation of an expression, it is equivalent to the original expression. So not not q is q, or not p, and that's by negation. Where to go next? Well, one thing that I sometimes do if I'm not sure where to go next is I go back to my original and think about what I want to prove. I want to prove that this is equivalent to this. And I know that implication means that the left hand side is equivalent to not p or q. I don't have not p or q. I have q or not p. But I can rearrange these, because I know that disjunction is commutative. So by commutativity-- I'm just going to write c-o-m-m-- this is equivalent to not p or q. But I recognize that not p or q by implication is p implies q. And so I'm done, because this is the left hand side. Hence, p implying q is equivalent to not q implies not p. Notice, again, where did the transitivity come into play? This is equivalent to this, which is equivalent to this, which is equivalent to this, which is equivalent to this. So the first predicate is equivalent to the last. But also, the last predicate is equivalent to the one before, which is equivalent to the one before, which is equivalent to the one before, which is equivalent to the first. So the last predicate is equivalent to the first. Again, equivalency is communicative also. I didn't have to prove equivalence used implication both ways, because this equivalence style took care of that. So this is what we would call an equivalence style proof. What are the ingredients? To prove something correct, and if it involves an equivalence, what I need to do is start with one side. And by applying the basic equivalences one by one, what I do is I transform it or manipulate it to look like the other side. In between each of my equivalent predicates, I actually use the symbol equivalence and justify my reasoning, because it's easier for us to follow one another's thinking if I use this strategy. So this is what I call the equivalence of proof. And this is the strategy we're going to be using a lot throughout the course. Next video, I'll do another example. ",
                                        "unit_id":"daae6543efeb4d4081af9e7634520315",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b68c8277f909419fa0e4bd3f57929b6c",
                                "vertical_name":"1.3.2. Equivalence style proofs"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical induction",
                                            "Base case",
                                            "Case"
                                        ],
                                        "data":" Dr. Robert van de Geijn: OK. So now, we're going to take a little side tour. We're going to talk a little bit more about the principle of mathematical induction. We're going to give you some practice proving various things via mathematical induction. What's the principle of mathematical induction? Well, there are actually several different ways of doing mathematical induction. And what we're going to do is sometimes called weak induction. So what do we have? If one can show that some property holds for k equal to some base case. In a previous example, this base case was equal to 1. And we can show that if it holds for k equals K, where k is greater than or equal to that base case, then it also holds for the next little k. Then by the principal of mathematical induction, we can conclude that it holds for all k greater than or equal to that base case. And often it's the case that the base case is 0 or the base case is 1. All right, to really understand this, you're going to just have to do some exercise. So let's get you ready for that. ",
                                        "unit_id":"d1820dcb789b48719ac2c736a4e7aa52",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3831fc88c619495494c9e9270904045b",
                                "vertical_name":"1.3.3. (The Principle of Mathematical) Induction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dot dot dot",
                                            "Left hand side",
                                            "Inductive hypothesis",
                                            "Base case",
                                            "Basic arithmetic",
                                            "Mathematical induction",
                                            "Basic algebra",
                                            "Homework",
                                            "Start",
                                            "Write",
                                            "Arithmetic",
                                            "Left",
                                            "Induction",
                                            "Ve",
                                            "Organized",
                                            "Proof",
                                            "Piece",
                                            "Algebra",
                                            "Simply",
                                            "Step",
                                            "Show",
                                            "Result"
                                        ],
                                        "data":" Dr. Robert van de Geijn: OK, I'm going to walk you through a detailed example first, and then we have several homework assignments for you to do. For each of the homework assignments, if you push Show Answer, you will be given access to a video that Maggie has made that actually walks you through how she would do the proof by induction. One thing that's really important when you do a proof by induction is that you write things down very clearly, and that you actually justify your steps. Let's have a look at a very simple example. What I'm going to do is I'm going to use mathematical induction to prove this fact right here. If n is greater than or equal to 1, then the sum from i equals 0 to n minus 1 of i is equal to n times n minus 1 over 2. Now, remember, the sum i equals 0 to n minus 1 of i is just 0 plus 1 plus dot dot dot plus n minus 1. So we're just summing the first n non-negative integers. I'm picking this particular example, not only because it's relatively simple, but also because we're going to see this particular summation when we analyze the cost of various operations next week. How do you prove this? Well, you start with the base case. You set n equals 1, and you state what is it that I need to show. And what it is that you need to show, you get from simply taking this expression and plugging in n equals 1. This is what you get. Write it down. The way I like to do this, I'd like to say what it is that I have on the left of this equality and where it is that I would like to get, so that I can keep my eye on where we need to go. And the first step here is to simply say, well, the definition of the sum from i equals 0 to 1 minus 1 of i is just the sum from i equals 0 to 0. And that just means that I'm adding 0 to absolutely nothing else, so we get 0. I give a justification for that. That simply comes from the definition of summation. Now, this is where we want to be. From basic arithmetic, you recognize that if multiplication has 0 in it somehow, it evaluates to 0. And therefore, we know that, by basic arithmetic, the result is true. So now, we know that the base case is true. The next thing you do is you clearly state what it is that the inductive hypothesis is. You assume that the result is true for sum n equal k, and then you want to show it's true for n equals k plus 1. OK, what I like to do is I like to clearly then state what that means. The result being true for n equals k means that this here is true. All that I've done is I've replaced n by k in the expression, and what it means for n equals k plus 1 for the property to be true, I state right here. And again, all I've done is I've replaced every occurrence of n with k plus 1. What I want to show is that this is true if I assume that that is true. How do we do that? We start by stating the left hand side of what it is that we're trying to prove, and we state what the right hand side is because that's where we want to get. Then we start chipping away at the proof. The first thing I do is some arithmetic, where I recognize that k plus 1 minus 1 is just k. The next step is to say, well, my inductive hypothesis tells me something about if I only sum k terms. So what I want to do is I want to take this summation, and I want to separate out the last term, and I get this. We call that splitting off the last term. Now, I can invoke my inductive hypothesis because I know that this is equal to that. So now, I'm left with having to prove that this is equal to that. That should be just basic algebra. Now, I start working backwards. I can take this expression and simplify it to that expression. And that's just-- well, it's really algebra. Right? And then I can take this expression and show that it's equal to that expression. That's, again, algebra. And finally, I can recognize that this is equal to that, and now, I have shown that this is equal to that is equal to that is equal to that is equal to that is equal to that is equal to that. And therefore, by transitivity of equality, this result is equal to that result. So that proves the inductive step, and then all I need to do is say, by the principle of mathematical induction, the result holds for all n. And I'm done. Mathematical induction is a very powerful proof technique. You should take this opportunity to really master it. In order to master it, what you need to do is first to practice, practice, practice, and this is why we give you homework exercises. The other thing you want to do is you want to be very organized in your proofs. Nobody is going to believe your proof if you have things written all over a piece of paper, so what you want to do is take out a piece of paper, sketch out what the proof by induction should be like, then what you want to do is take out a clean piece of paper and rewrite the entire proof all over again so that everything is nicely organized. In particular, you need to pay close attention to the fact that Maggie is very organized in her answers in the homeworks. Now, notice that Maggie has had a lot of practice, and therefore, she can write things down from top to bottom as one nice proof, nicely organized, et cetera, et cetera. Eventually, you'll get enough experience that you, too, can do that. ",
                                        "unit_id":"889bf5ea5d014fcf96a236afae87e450",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6a7ed0a3be034de4ac770ef5b1ffb1f1",
                                "vertical_name":"1.3.4 The Principle of Mathematical Induction: Examples"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9e7da8fccd4b4cedb4458a9602b2fe88",
                        "sequential_name":"1.4. Quantified Expressions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Positive integers",
                                            "Positive integer",
                                            "High school",
                                            "Infinite number",
                                            "Microsoft word",
                                            "Integer",
                                            "Represent",
                                            "Word",
                                            "General",
                                            "Talk",
                                            "Notation",
                                            "Sum",
                                            "Expression",
                                            "Range",
                                            "Variable",
                                            "Dot"
                                        ],
                                        "data":" Maggie Myers: In this section, we want to talk about quantification. What is a quantifier? Often we will want to write an expression that involves one or more variables, where the variables can only take on values from some set. And we can use quantification to help us there. For example, let's say we want to look at the sum of k square where k takes on values from 0 to 3. In other words, we want to add 0 squared plus 1 square plus 2 square plus 3 square. Or we're talking about all predicates of the form n equal n square where n is 0 and 1. And we want to know whether or not they're true. Well, that means that for n equal 0, 0 would be equal to 0 square and 1 would be equal to 1 square. If we wanted to come up with a predicate that described there is a positive integer n such that n is equal to n square, we could write out 1 is equal to 1 square, or 2 is equal to 2 square, or 3 is equal to 3 square, or and so on. Because there is one means that there is at least one positive integer value-- an integer from 1 to infinity-- for which this expression is true. Now notice I try to do this by giving you a couple of the sub components and then writing dot, dot, dot because there are an infinite number of positive integers. Hopefully, you will be able to notice what the pattern is and fill in this dot, dot, dot. Well, this is a little bit lacking because if we try to write out the expression, especially in these kind of situations, we have to rely on our reader noticing the right pattern and being able to fill in these dot, dot, dots. Plus, it gets a little cumbersome in many kinds of situations. So that's where quantification comes in. Notation wise, a quantifier has the form of some quantification-- and usually I have a variable or more attached to it-- a range of the variables and an expression formula. The notation that we're going to be using to represent quantifiers always is going to begin and end with these parentheses. Not everybody uses this same notation. I like this because it tells me the range of the variables that I'm going to be describing in this quantifier-- actually the scope of the variables when I use my parentheses. I'll talk more about that later. So for example, we have the sum of k square where k is from 0 to 3. We could write as the symbol sigma-- Greek symbol sigma for sum-- of k where k ranges from 0 to 4, not including 4, of k square. In high school I think you might have used the notation sum from 0 to 3 of k square to represent these sums. It's just an example of a quantifier. I'm just using a different notation. This notation does have its advantages, but this is something that I'm quite used to. So often, whenever I'm just writing things out by hand, I rely on this. If I'm using Microsoft Word, I rely on this. If I want to describe all predicates of the form n equal n square where n takes on value 0 and 1, I can use the predicate for all. And then the variable involved is n. I could say it ranges from 0 to 2 but not including 2. And the expression is n is equal to n square. Notice that in each of these I have a standard for my range. Implicit is that the variables that I'm using take on integer values, and I typically include the bottom range of my range and not the top value. But it's not necessarily written in stone. It's just a notation I often use. Let's says we want to describe there is a positive integer n such that n is equal to n square. That means at least one positive integer has to satisfy n is equal to n square. The notation I use is the quantifier there exist an n where n is greater than 0. And the expression I want is n is equal to n square. In general, we're going to be talking about some again general quantifiers. And over this course the ones we're going to be running into often are sum, for all, and there exist. So in the next few videos, what I want to do is concentrate on some of these often run into quantifiers, look at how to evaluate them, what they actually mean, and some properties of these quantifications. So see you in the next videos. ",
                                        "unit_id":"aada6cb797b04155b11897d603c18980",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"134c0d3e5d344bdc9ee2a4680e9ec002",
                                "vertical_name":"1.4.1. What is a quantifier"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Program specification",
                                            "Universal quantifiers",
                                            "Universal quantifier",
                                            "Universal quantification",
                                            "Dummy variable",
                                            "Bound variable",
                                            "Quantifier",
                                            "Notation",
                                            "Bound",
                                            "Array",
                                            "True",
                                            "Quantification",
                                            "Matlab",
                                            "Variable",
                                            "Predicate",
                                            "Write"
                                        ],
                                        "data":" MAGGIE MYERS: In this video, I want to look a little bit more at the \"for all\" quantifier. Sometimes that's called the universal quantifier. So if we're really having to explicitly write out every component in a conjunction, we might use the universal quantifier, or for all. For example, if we wanted to write out the predicate that is described by p of 1 and p of 2, and so on, p of n minus 1, to write it in quantification form, we might say for all k where k ranges from 1 to n, not including n, of Pk. In general, we could express the predicate as for all k in the range of Rk, P of k holds, or is true. So this is the universal quantifier. Some things to note about it. We read it as for all. And k, in this case, is my variable. It's bound. It's a bound variable, which means it only exists-- its scope is between the parentheses of my expression. And it's read as for all. Notice I could easily change, instead of using the variable k, I could have used the variable i, j, whatever we wanted in here. So sometimes I think of it as a dummy variable. And again, its scope is only within the parentheses that describe the quantification. R of k is also a predicate that specifies the range of the quantifier. That is the values for k that make this predicate true are the range. And P of k is a predicate itself. It's a function of k. Let's look at an example of when we might use this universal quantification. So sometimes what I like to do is to translate English specifications into symbolic forms. Now, in this particular example, what I want to do is translate predicates with universal quantifiers. And you'll also get an idea of the notation we're going to be using in this course for arrays. I think the notation from MATLAB. So let's say that our instructions are to write the following in predicate form, which actually means to write it in symbolic form. I've seen examples of exercises like this where the instructions are formalize the program specification, which again means to write it in symbolic form. Say what we want to write in symbolic form is that all elements in a subarray-- where the subarray notation is j through k-- are zero. So this is the notation MATLAB uses for subarrays, which means that it is the part of the original array where the indexing ranges from j to k. So elements in this subarray are zero, which means for all. Now I need a variable to use here. I don't want to use j or k, because they've already been used in my description of the subarray. So I need to pick another one. Now I could pick m, n, p, whatever. I'm going to use i though. For all i-- well, what's the range of i? i is between j and k, including k. Or I could say less than k plus 1, because, again, remember this range is describing all integer values that are between and including j and k. And what is the expression I want to hold-- the predicate that must hold? Well, the entries in MATLAB, the entries described is by b and in parentheses i is equal to 0. And that's it. So any time we have an expression where we want to describe all elements satisfying certain conditions, we're going to use the quantifier for all, or universal quantifier. Next videos we'll look at the \"there exist\" quantification. ",
                                        "unit_id":"db1936e080d74957af2fdf86c888c74d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"24467c8e670e4abfa7e10f00fc5967d1",
                                "vertical_name":"1.4.2. The \u201cfor all\u201d quantifier"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Universal quantifiers",
                                            "Existential quantifier",
                                            "Bound variable",
                                            "Writing",
                                            "Represent",
                                            "Bound",
                                            "Quantifier",
                                            "Variable"
                                        ],
                                        "data":" Maggie Myers: In this video, we'll look at the \"there exists\" quantifier, sometimes known as the existential quantifier. If we want to avoid explicitly writing out disjunctions, we're going to be using the existential quantifier. So we could read this as there exists a k in the range R of k such that P of k holds or is true. Just like with universal quantifiers, the variable k is bound within the quantification and R of k is a predicate that describes the range. And P of k is a predicate that's a function of the bound variable k. Let's look at an example. Say this time we want to write out at least one value in the subarray b j to k is zero in symbolic form. At least one means, hmm, there is one or more, which means either b j is 0, or the next one is zero, or the next one is zero. Or one of them for some value in this subarray must be 0. So it is a \"there exist\" expression. I'm going to use i as my variable. So there exists an i where i ranges between j and k-- could be either of these endpoints-- such that b i is equal to 0. It's the same as b j is zero, or the next one is zero, or the next one is zero, or and so forth, b k is zero. It's a much cleaner way of writing it. Let's try looking at another one. Let's translate \"not every integer is even.\" No notation for arrays. Not every integer is even. Isn't that not all integers are even? So shouldn't I write this as not for all i, i an integer. I could write that as i is an element of Z because Z is usually used to represent integers. Not all integers are even. Let's let e of i represent the predicate that i is even. So we could write this as not for all i, i an integer e of i. But that has nothing to do with existential quantifiers. Wait a minute. Let me think about this again. Not every integer is even. Isn't that the same as there exists an integer that's not even? So shouldn't I write this as there exists an i, i an integer where it's not the case that it's even. Well, which one of these is correct? Hmm. Let me think a little bit more. Remember De Morgan's law? It suggested that if we had not expression one and expression two, that it was equivalent to not expression one or not expression two. So if you think about it, not for all integers being even is the same as there exists at least one of them that's not even. And that would mean, by extension of De Morgan's law, these two quantifications are exactly the same. So if you have not for all even, is the same as there exist one, at least one, that's not even. I'm going to ask you to look at several different expressions and write them as quantifiers in some of the homework. ",
                                        "unit_id":"931887a275ea4ba09c9074e7efdb5a4d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"283709fd055747a5b012ea7bf671f6f9",
                                "vertical_name":"1.4.3. The \u201cthere exists\u201d quantifier"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "High school algebra",
                                            "Boolean operator",
                                            "Algebraic expression",
                                            "Associative property",
                                            "Entry",
                                            "Operator",
                                            "Integer",
                                            "Prove",
                                            "Quantification",
                                            "Quantifier",
                                            "Correct",
                                            "Operation",
                                            "Number",
                                            "Associative",
                                            "Sum",
                                            "Simplification",
                                            "Split",
                                            "Expression",
                                            "Product",
                                            "Simplify",
                                            "Bi",
                                            "Equal",
                                            "Evaluate",
                                            "Notice",
                                            "Piece",
                                            "Range",
                                            "True"
                                        ],
                                        "data":" Maggie Myers: In this video, we want to talk about splitting the range of quantifications. So in order to do this, I want to look at an example first. Let's say we wanted to evaluate there exist an n, n in the range of 0 to 5, including 0 and 5, odd n. So this is actually saying that there is a number between-- an integer between 0 and 5, including the endpoints that's odd. Well, if I wanted to evaluate this, one way I could do it is to list out all of the sub predicates it involves. So this actually means either 0 is odd, or 1 is odd, or 2 is odd, or 3 is odd, or 4 is odd, or 5 is odd. So we know that the Boolean operator corresponding there exist is or. We also know that this operator is associative. So grouping is allowed anywhere whenever you want to decide the precedence in order to perform all these operations. So it makes sense if I actually go through and evaluate each one of the predicates as being false or TRUE. I end up with this expression and it makes sense that I can group the first four operations, get an answer, and then take that predicate, and take the disjunction of it with TRUE. But I know by or simplification that this actually has to be TRUE because any expression or TRUE is TRUE. That gives me an idea. I notice that disjunction is associative. So when I have a string of or operations, I can group them any way and I'll still get the same result. Which means that if I wanted to evaluate an expression like this, I could take this range and split it into pieces and evaluate the range over one piece the range over another piece and take the disjunction of the pieces. That's the idea. Now why is this true? Because associative property. And notice that these first four operations I could have written as there exist an n, n between 0 and 4, such that n is odd. So again, that gives me an idea of how I might extend this method for trying to evaluate. And I refer to it as splitting the range. Notice I could rewrite there exist an n between 0 and 5 odd n as there exist an n between 0 and 4 odd n or odd 5. But notice I wrote 0 less than or equal to n less than equal to 4 as 0 less than or equal n less than 5 because these ranges are actually describing-- these predicates are actually describing the same range. I'm assuming I'm only talking about variables that take integer values in these regions. And they describe the same range. But any expression or odd 5 is TRUE and any expression or TRUE is by or simplification TRUE. So this again, gives me a way that's much cleaner for evaluating this quantification. In general, we can split ranges. If we have a range described by a set S where S can be decomposed into S is equal to S1 or S2. And the interception of S1 and S2 is empty. In other words, S1 and S2 to make up the whole range and there is no overlap between S1 and S2. Then if I want to look at there exist an n in the range of S, such that P of n holds, then I could break it down into there exist an n where n is an element of S1 and P of n holds. Or there exist and n, such that n is an element of S2 and P of n holds. This just extends what I was just describing. Notice that the Boolean operator corresponding to there exist is or-- or disjunction. Why does this work? Well, it's actually because disjunction is associative. So you can group. Now if I have for all n, n an element of s, such that P of n holds they all hold. We could break that into for all n in S1 P of n holds and for all n in S2 P of n holds. The Boolean operator corresponding to for all is \"and\"-- conjunction. This actually extends to quantifiers beyond those where we are working with predicates. We could also work with algebraic expressions. The sum quantifier is the one that you saw in high school algebra. If we looked at the sum of n where n is in S of some algebraic expression, we could break it into pieces and write it as the sum over all n in S1 of that expression plus the sum over all n in S2 of that same expression. And these are-- well, if you evaluate this, you're just going to get a number. And these two numbers will be equal to one another. There is also another quantifier that we haven't talked about yet but I wanted to bring up. And that is one that you might have seen in high school algebra. It's the product. Pi for product. So the product corresponds to the algebraic operation times. And the product of n where n is in S of some expression is the product of the ns that are in S1 of the expression times the product of the ns in S2 of this expression-- or for this expression. So in the future, we're going to be actually using split range a lot to prove things about our programs and actually to develop programs that are correct. Right now I just want to look at using them to evaluate quantifications. So let's look at some examples. Let's start with the example simplify there exist a j, j between 0 and i, such that bj is equal to bi. Well, what does this mean? It means in some array-- or subarray if we look at the entries from b0 out to bi, there is at least one of them where it's equal to bi. Try to simplify this. We have there exist a j. Well, notice that the-- I wanted to look at when bi is equal to-- or bj is equal to bi and j ranges from 0 to i. I wanted to split the range and actually split off the last term, which is something we often do. The last term is where j is equal to i. So splitting the range in this particular case, I'm just going to split off that last piece. Notice that's what I did in my first evaluation, also. In this case, splitting the range will yield there exist a j, j between 0 and now i minus 1, including i minus 1. Or I could just say less than i, which means we stop at i minus 1, such that bj is equal to bi or bi is equal to bi. Where did I get this? Well, the term that I split off was where j is equal to i. And so substituting an i for j, I get bi is equal to bi. That's where that came from. And I'm left with the previous values in the array in this sub expression. But notice bi is equal to bi so this is TRUE. And any expression or TRUE is always TRUE by or simplification. So this was easy to simplify. It is TRUE because at least one of the values in this array is equal to bi because bi is equal to itself. What if instead of there exist, I looked at a similar quantification with a for all. For all j between 0 and i the jth entry matches bi-- the value in the ith entry. Well, let's think about that. Again, let's split off the last term when we split our range. So we would have for all j between 0 and i, this not including i, bj is equal to bi. And then the operation corresponding to for all is \"and\" and then when j is equal to i, the piece we split off was bi equal to bi. Now again, bi equal to bi is TRUE by identity. And any expression and TRUE by and simplification is our original expression. So this quantification simplifies-- well, you might say, that doesn't look much simpler-- but the range has changed slightly to the expression for all j between 0 and i not including i, bj is equal to bi. And you could continue, if you wanted, splitting off the range piece by piece and try to simplify this further. But right now, this is the furthest I can simplify it. So again, this type of splitting the range will help us simplify expressions that involve quantifiers. But it also is going to be very useful when we try to prove our programs correct and actually when we're trying to develop programs that are correct. ",
                                        "unit_id":"5985ad16bf794d6e8cd4f04171f9d5e0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c90b22d203554cc9b7e9eca675a86e51",
                                "vertical_name":"1.4.4. Splitting the range"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Boolean operator",
                                            "Number",
                                            "Range",
                                            "Simplification",
                                            "Expression",
                                            "Quantification",
                                            "Split",
                                            "Evaluate",
                                            "Equivalent",
                                            "Equal",
                                            "Sum"
                                        ],
                                        "data":" Maggie Myers: In this video, I want to evaluate quantifiers over special ranges, one point and the empty range. If I want to evaluate the quantifier over one point, all we need to do is look at the expression evaluated at that point. So there exist an n equal 5 odd n is equivalent to odd 5, which is TRUE. For all n equal 5 odd n it's also equivalent odd 5. Sum n equal 5 of n squared is 5 squared, which is equal to 25. Product n equal 5 of n squared is also equal to 5 squared, which is 25. Now let's look at finding the quantifications over an empty range. We define them as there exist over an empty range is defined to be FALSE. For all over an empty range is defined to be TRUE. Sum over an empty range is defined to be zero. And product over an empty range is defined to be 1. Why? Things should make sense. Well, notice if we were trying to split a range, any range is equal to itself or the empty range. So these definitions should makes sense as far as split range is concerned. So let's look at it. If I want to split. There exist an n, n in some range for some predicate. I could write that as there exists an n in that range for the predicate. Or there exists over an empty range because the Boolean operator for there exist is disjunction-- or. Notice though, from or simplification that any expression or FALSE is equivalent to the original expression, which means that it makes sense to define there exist over an empty range to be FALSE. For all corresponds to the Boolean operator and. And, and simplification tells us that any expression and TRUE is equivalent to the expression, which means that it makes sense to define for all over an empty range to be TRUE. Sum over an empty range-- Well, sum corresponds to the operation plus. And any number plus 0 gives us the original number back. So it makes sense to define the sum over an empty range to be zero. And product over an empty range makes sense to be defined to be equal to 1 for the same reasoning. Now one last thing I wanted to make comment about is that sometimes we'll see a quantification where the range is not given. That does not mean that we're dealing with an empty range. Often in the literature, if the range is not given, it's assumed to be the largest range for this problem that makes sense. And in our case is often any integer. But I just wanted to bring to your attention a missing range does not mean an empty range. Now this concludes the section on quantifiers. You're going to be wanting to be able to simplify them, evaluate them. And also, you're going to need to change English specifications into quantifiers or quantification forms in our future work. ",
                                        "unit_id":"f479718fbcb9436bbf4bdb776880f448",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8cf0930df03d42c0be988e4559175be7",
                                "vertical_name":"1.4.5. Quantifiers over special ranges"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Read",
                                            "Unit"
                                        ],
                                        "data":" Read Unit 1.4.6 of the notes. [LINK] Actually, in the notes you will simply find the problems that are given below, so there is no need to read them for this unit. ",
                                        "unit_id":"f79e6f1418b842e8bf740caf06bab44e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"523b3d42449a41a6985f823f39b862ab",
                                "vertical_name":"1.4.6. Practice expressing statements as predicates"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f1e6dc9f9df34190a37f1c70cb1a342e",
                        "sequential_name":"1.5. Weakening/strengthening",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Truth tables",
                                            "Navigation bar",
                                            "Called",
                                            "Predicate",
                                            "Hold",
                                            "Strengthening",
                                            "Weakening",
                                            "Prove",
                                            "True",
                                            "Make",
                                            "Implication",
                                            "Expression"
                                        ],
                                        "data":" Maggie Myers: In this video, we want to look at weakening and strengthening. What is it? In many situations, we have predicates involving implications. And if the implication is TRUE, that means every situation that makes E1 TRUE has to also make E2 TRUE. So if E1 is a predicate involving variables, any value that variable takes on that makes E1 TRUE also must make E2 TRUE in order for this implication to be TRUE. So we would say that E1 is stronger than E2, if the implication holds. Or we say E2 is weaker than E1. So the question becomes weakening/strengthening, when is it the case that E1 implies E2? When is it the case that we have one expression that is stronger or weaker than another? So for example, if we're comparing the two predicates x greater than 0 and x greater than or equal to 0, is one of these stronger or weaker than the other? Well, any time we know that a variable takes on values that are greater than 0, those values are going to be greater than or equal to 0. And so x being greater than 0 implies x is greater than or equal to 0. So x greater than 0 is stronger than x greater than or equal to 0. Or we could say x greater than or equal to 0 is weaker than x greater than 0. Hmm. In this particular case, if we wanted to compare x being between 0 and 5, not including 0 but including 5, versus x being greater than 0, well, 6 doesn't make this TRUE, but it does this. Any time we pick a number between 0 and 5, if it makes this expression TRUE, it's going to be the case that the value is greater than 0. So again, 0 less than x less than or equal to 5 implies that x is greater than 0, which means that 0 being less than x being less than or equal to 5 is stronger than x being greater than 0. Let's see. What if I want to compare x between 0 and 5, not including 0, versus x is greater than or equal to 0? Well, any time I pick a number between 0 and 5, not including 0, I will get a number that is greater than or equal to 0. And so, again, this expression is stronger than the expression x being greater than or equal to 0. But now let's look at this one, x between 0 and 5, including 0 and 5 versus x being greater than 0. Well, if I pick 0, it makes this TRUE but not this. So this is not stronger than x being greater than 0. On the other hand, if I pick 7, it makes this TRUE but not this. So these two expressions, neither one of them is stronger or weaker than the other. Often what we're going to want to do is just by looking at some expressions be able to tell which one is stronger, which one is weaker. That's why we call it weakening slash strengthening. Now, there are some laws that will help us with this. Notice that I have an expression, and then I have the same expression. I could write this as x is greater than 0 or x is equal to 0. That's how I would read this. x is greater than or equal to 0. I could rewrite this as 0 is less than x and x is less than or equal to 5 implies x is greater than 0. And 0 being less than x is the same as x being greater than 0. Hmm. Are there some rules, laws, that will be able to help me decide whether or not one expression is weaker or stronger than another? And the answer is yes. These are called the weakening/strengthening laws or weakening/strengthening theorems. It turns out anytime we have p and q implying p, it's equivalent to TRUE. Instead of using expression one and expression two, I use p's and q's and r's. But if you have p implying p or r, it's always TRUE. p and q implying p or r is always TRUE. So if you have these special structures, it turns out the implications always hold or are always TRUE. So how do I know that these theorems are valid? Well, we could use truth tables if you wanted to prove them. Or you could use the equivalence-style proofs. And for homework, I'm going to ask you to perform equivalence-style proofs for each of these. I also want to make a comment that the first two, a and b here, are traditionally in textbooks called weakening/strengthening theorems. c is our concoction because it works well in our applications. It's, in a way, an extension or combination of a and b. And we want you to think about that and see if you can come up with a and b from c as part of a homework. So weakening and strengthening theorems are going to be very valuable to us. They are on the Navigation bar on the edX platform. And we will be using them in the future to prove our program's correct because we're going to need to prove implications hold. ",
                                        "unit_id":"377f8d021210496cb7d0827866a986d3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"695dbd6961904e1da111b6415c712be3",
                                "vertical_name":"1.5.1. Weakening/strengthening"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Reading Assignment Read Unit 1.5.2 of the notes. [LINK] ",
                                        "unit_id":"b253c94ca87d46eaa9d3d6eb887d0eef",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"59d33a391fac435eb575197a629fad9b",
                                "vertical_name":"1.5.2. Weakening/strengthening examples"
                            }
                        ]
                    },
                    {
                        "sequential_id":"711a35a64fe840c09409bb494d9d2f06",
                        "sequential_name":"1.6. Enrichment",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Computer science",
                                            "Alan kay",
                                            "Tape",
                                            "Dijkstra"
                                        ],
                                        "data":" Edsger W. Dijkstra was one of the most influential computer scientists. His pioneering and visionary work greatly influenced the material that underlies this course. You should start your journey by reading his ACM Turing Award acceptance speech. ACM Turing Lecture 1972: \"The Humble Programmer\" by Edsger W. Dijkstra A partial tape recording of the lecture can be found on YouTube Unfortunately, it seems like some tapes were overwritten with music... Notice that some find the title of Dijkstra's Turing Award acceptance speech amusing. Here is an interesting quote from Alan Kay: \"I don't know how many of you have ever met Dijkstra, but you probably know that arrogance in computer science is measured in nano-Dijkstras.\" ",
                                        "unit_id":"cfc369f25044499b9b32fd3e8681691d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"359ea9d78d50432d98d4e9bdfac72232",
                                "vertical_name":"1.6.1 The Humble Programmer"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Excluded middle",
                                            "Law",
                                            "Proof",
                                            "Apply",
                                            "Implication",
                                            "Step",
                                            "True",
                                            "Original",
                                            "Template",
                                            "Ve",
                                            "Typeset"
                                        ],
                                        "data":" Robert van de Geijn: Some of you may want to use LaTeX to typeset your proofs. Let me show you how you can do that. I set up a simple little template. So if you start up TeXstudio studio, and you open from your desktop in LAFFPFC, Assignments, Week One, LaTeX, equivalence template.tex, then you get this simple little example. And what I've done here is I have defined a new environment that I call equivalence proof, EqivProof, and some commands that help you typeset the proofs then. OK to illustrate this, let me start by taking the template and making a copy of it. Because, after all, you may want to leave the original one intact. So we'll make this copy. And that's the one we're now going to change. And then if I go and build and view this, on the right I get a start of a proof. So I'm trying to prove p implies the quantity q implies p. And I've actually already given a hint as to what the first step should be. We should apply implication. So on the left here, I have an environment that is-- that I call equivalence proof. And to now add a new proof line, I simply cut and paste what's already there. And if I now build this, I get a copy of that original line. But what I may want to do is transform this by using the basic equivalence law that we call implication. And what does that mean? That means that I should replace this with not p or the thing on the right. And if I typeset that, then I get exactly that. And then, I may want to apply implication again. So now I'm going to copy and paste both the justification and the proof line because I know that it's going to be an implication. And then if I typeset this, I just get a copy of what I had already. And then I go ahead and I apply implication to this right here. And I notice that you have not-p or not q or p if I just drop the parentheses, which I can. And then if I rearrange this, I can bring the p and the not-p together. And then I can use the law of excluded middle to finish this proof off. So what I'm going to do is copy this. I'm going to say-- well there's a bunch of things I'm going to do here. I think that what I'm going to do is I'm going to commute a bunch of times. Commutativity. And I'm doing this two times, at least. And when I'm done with that I get p and not p-- sorry, p or not p or not q. Like that. And then I can apply the law-- I can apply excluded middle and replace this with TRUE. And then notice that if I-- let's see, I now had-- went ahead and made a copy of that already as well. And then notice, if I say here-- strictly speaking, I have to commute this. And then I can apply exclude-- let's see, I can apply or simplification. And I end up with the desired TRUE. And what I've just done is I've typeset the entire proof nicely. And the benefit is that you can copy and paste the current step of where you are and then make minor changes to it. All right. So you may want to use this in the future. ",
                                        "unit_id":"7de699cc4ea74fad9c3939b6d784770c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"08b0ab5c027f4ee2a76e57123946b629",
                                "vertical_name":"1.6.2 Typesetting proofs with LaTeX"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discrete mathematics",
                                            "Discrete math",
                                            "Computer science",
                                            "Science",
                                            "Text",
                                            "Logic"
                                        ],
                                        "data":" We have tried to give just enough logic background for the course to be self-contained. Here we list some resources if you want to go beyond. Some places where you can learn more about logic: FREE! Dr. Elaine Rich and Prof. Alan Cline created an online introductory course on logic for use at The University of Texas at Austin titled \"Fundamentals of Reasoning\". They are in the process of porting this course to edge.edx.org, which is a platform where unofficial courses are offered. They have graciously made it possible for you to try the first few chapters of this course, which should give you a solid background in logic. You can try this course by going to https://edge.edx.org/courses/course-v1:UT+101+2017/about (You will have to register for edge.edx.org and sign in.) Some books to try! (Not free) David Gries, The Science of Programming (Monographs in Computer Science), Springer, 1987. The book that inspired us, way back. Get a used copy! David Gries and Fred B. Schneider, A Logical Approach to Discrete Math (Texts and Monographs in Computer Science), Springer, 1994. Kenneth Rosen, Discrete Mathematics and Its Applications. (A widely used college text. Get an old edition, cheap.) ",
                                        "unit_id":"1451aa71ce24480bb4bcf0d8b0c7c923",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f8cabf624b6d40eab59951d6217d3509",
                                "vertical_name":"1.6.3. If you want more on logic"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3ca383b1f7744174b24dd8a9ebecb35d",
                        "sequential_name":"1.7. Wrapup",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" There are no additional exercises this week. Skip and go on! ",
                                        "unit_id":"47eba0271b9f454b899531b601ea6cc4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d51204478e744517baabf02bb1f6d787",
                                "vertical_name":"1.7.1. Additional exercises"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Read Unit 1.7.2 of the notes. [LINK] ",
                                        "unit_id":"2df8a2a8c6ba457684a6e5ae8b8f3b2e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"73cb60655972452b81b600f7441b3dbd",
                                "vertical_name":"1.7.2. Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"70178e1820f24603b50926d2d63bf732",
                        "sequential_name":"Week 1 Videos with Transcripts of Selected Homeworks",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dot dot dot",
                                            "Inductive hypothesis",
                                            "Natural numbers",
                                            "Natural number",
                                            "Common denominator",
                                            "Base case",
                                            "Mathematical induction",
                                            "Step",
                                            "Induction",
                                            "Ll",
                                            "Case",
                                            "Expression",
                                            "Start"
                                        ],
                                        "data":" Dr. Maggie Myers: Always, sometimes, never. If n is greater than or equal to 1, then the sum from 1 to n of i is n times n plus 1 divided by 2. It is always true, and we could actually prove it by looking at one of the other sums that you have done in the past in manipulating. But the purpose of this question is actually just to give us a little bit more experience working with mathematical induction. So, let's do that. Our proof by induction will be the first thing I write. I always like to tell my readers my style of proof just so they get in the right mind frame. Now, if this is a proof by induction, I know there are certain steps that need to be done. The first thing I need to do is show that this expression holds for the base case. In our case, it's the beginning or where n is equal to 1. Then we would do our inductive step, which is to first write out the inductive hypothesis and then use it to show that, if this expression is true for some natural number, it's going to be true for the next one. And then if I can show that the base case holds and the inductive step holds, by the Principle of Mathematical Induction, which I use PMI for shortcut notation, Principle of Mathematical Induction, it would be the case that the sum I equal 1 to n of i is n times n plus 1 divided by 2. Now, here what I did was, I outlined my proof. And usually if I'm teaching a class and I want my students to prove something using mathematical induction, I will actually give them points for each one of these stages in each one of these steps. Let's go back now and fill things in. The base case, or when n is equal to 1. What do we want to show? We want to show that the sum I from 1 to 1 of i is 1 times 1 plus 1 divided by 2. So our proof is going to be to start with the sum I from 1 to 1 of i. Now, why is that? Well, it's really only one point, because we're starting at 1 and we're ending at 1. So since it's just one point, this sum is just this one term, and it's going to be 1, because we're summing I when I is equal to 1. Well, let's go back and see what we were trying to show. We were trying to show that the sum is 1 times, 1 plus 1 is 2, divided by 2, which is 1. And so 1 is 1 times 1 plus 1 divided by 2 by arithmetic. And so we're done. The base case is obviously true. Now let's look at the inductive step. For our inductive step, the first thing I want to do is write down the inductive hypothesis. And that is that this expression holds for some natural number. I'll call it k. So I'm just going to write it as the sum from I equal 1 to k of I is, and again, I'll just go up here and, when n is equal to k, that the sum is going to be k times k plus 1 divided by 2 by substitution. I'm going to assume that this inductive hypothesis is true, and I want to show that the sum I from 1 to k plus 1 of I also satisfies this expression, which means it would be equal to k plus 1 times k plus 1 plus 1, which is k plus 2 divided by 2. So this is what I want to show. And I always write down my inductive hypothesis, and I tell myself what I want to show, so I can do it. As usual, I'll start with my proof by starting with one side of what I want to show. And so in this case I'm going to start with I from 1 to k plus 1 of i. Now, what do I know about that? Well, I know that it is 1 plus 2 plus dot dot dot plus k plus k plus 1. I can break it down into two pieces, the sum into two parts. And I can write it as the sum from I equal 1 to k of i plus the last term, which was when i was k plus 1, which is just k plus 1. And I can do this because all I'm doing is splitting off the last term. This is a strategy I often use. Now, why? Because I know something about this sum. I know that this sum by the inductive hypothesis is k times k plus 1 divided by 2. And I always want to split my original expression into two parts, where I can apply the inductive hypothesis. So now, I know by the inductive hypothesis that what we have here is k times k plus 1 divided by 2 plus a k plus 1. Now, I remember if I wanted to add two expressions, I need a common denominator, which would be 2. And if I perform some arithmetic here, once I have this common denominator, I can add the numerators. But now both terms in the numerator have a factor of k plus 1. When I factor it from the first term, I'm left with a k, and from this term I'm left with a plus 2. And so the sum from 1 to k plus 1 of I is k plus 1 times k plus 2 divided by 2, which is exactly what I wanted to show. And so I'm done, hence by the principal of mathematical induction, it is always true that the sum I equal 1 to n of I is n times n plus 1 divided by 2. The strategy is to show that it's true for 1 in the beginning, the first one, and then to assume that if it's true anywhere along the way, it's going to be true for the next value in the set. And so therefore it's true for every value in the set. With natural numbers, in our case, 1 was the first value. And if it's true for 1, then it's going to be true for the next one, so it's going to be true for 2. It's going to be true for the next one, so it will be true for 3. And the next one, 4. Next, next, next. If it's true for 99, it's gonna be true for 100, then it will be true for 101. Then it will be true and so forth out to a million. Then it will be true for a million and one, and you get the idea. It's going to be true for all natural numbers. ",
                                        "unit_id":"97d5035ccf3a49b9a1c6737ade0f53f1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Inductive arguments",
                                            "Inductive hypothesis",
                                            "Inductive argument",
                                            "Cost analysis",
                                            "Natural numbers",
                                            "Natural number",
                                            "Scratch paper",
                                            "Mathematical induction",
                                            "Base case",
                                            "Minus",
                                            "Ll",
                                            "Step",
                                            "Induction",
                                            "Expression",
                                            "Call",
                                            "Empty",
                                            "Case",
                                            "Start",
                                            "Squared",
                                            "Part",
                                            "Proof",
                                            "Prove"
                                        ],
                                        "data":" Dr. Maggie Myers: Always. Sometimes. Never. Here we want to show if the sum from 0 to n minus 1 of i squared is equal to n times n minus 1 times 2n minus 1 divided by 6. If this is always, sometimes, or never true for natural numbers n. Now, the reason we're proving this is because this sum might come up whenever we're trying to do a cost analysis for some of our algorithms. And so, it's nice to know, and nice to know how to simplify this a bit. Also, it's a nice example of an inductive argument. Why? Because we're trying to prove things for all natural numbers n. And so, any time we're trying to prove something for natural numbers, inductive arguments make sense. So, first my proof is by induction. Again, I want to set the stage. So that means that I need to take care of the base case. I'm going to have an inductive step. And if I can prove these steps, then I know by the principal of mathematical induction, my proof works. So, in this case it would be the sum from 0 to n minus 1 of i squared is n times n minus 1 times 2n minus 1 divided by 6. Notice, I think that the numerator here might be-- the factors might be in a different order than they were on your homework. But multiplication is commutative, so it doesn't matter the order. Let's see if we can do this. For the base case, we need to show it's true for the first natural number we want to deal with. Now, if we started at 0, we would start at 0 and end at negative 1, which would be empty. And in that particular case, any sum that is over an empty range we defined to be 0. So, in this particular case it would be 0 times some other stuff. It would be 0, so it would make sense. However, I want to show that this is true for n greater than or equal to 1. So I'm not going to start at 0, I'll start at 1. So my base case is that n is equal to 1. Which means I want to show that if I take the sum i from 0 to 1 minus 1 of i squared, that I get 1 times 0 times 2 times 1 minus 1 divided by 6. Well, anything times 0 is 0. So, I'm going to start. We'll have the sum i from 0 to 0-- because 1 minus 1 is 0-- of i squared as this part of my equation. And that's where I'll start. Now, if I'm trying to sum this, I'm summing when i starts at 0 and ends at 0. That's just one point. And that's the point when i is 0. And when i is 0, i squared is just 0. But notice, by arithmetic, this was also just 0. So 0 is equal to 1 times 0 times 2 times 1 minus 1 divided by 6. The only reason that is important to us is it shows that this particular expression does hold when n is equal to 1. So, the base case is proven. We're done. Now the inductive step. We start with writing out the inductive hypothesis. And I'm going to say for my inductive hypothesis that I'm going to assume that this expression holds for some natural number k. And then I'm going to show that this holds for the next. The reason that is important is because no matter what k is, it's supposed to hold for the next 1. So we know it holds for 1, then that would mean it would have to hold for 2. But then that when we would have to hold for 3. And then that would mean it would have to hold for 4. And in fact, so on and so forth. It would have to hold for every natural number. So that's the strategy of these inductive arguments. And our inductive hypothesis in this case is going to be, if we look at the sum from 0 to k minus 1 of i squared, we should get k times k minus 1 times 2k minus 1 divided by 6. If we look now, at the next one, we want to show that the expression is true here too. If we look at i from zero to k plus 1 minus 1, which would be for i from 0 to k of i squared, that should give us k plus 1 times k plus 1 minus 1, would be k, times 2 times k plus 1 minus 1 over 6. Of course, this last factor would be 2k plus 2 minus 1 is 2k plus 1. So this last factor is just going to be 2k plus 1. Again, for my proof, what I'll do is I'll start with the sum i from 0 to k of i squared. And as usual, I'm going to break it into pieces. I'm going to split off the last term. That means I need to add i from 0 to k minus 1 of i squared and then add the last term. Well, the last term is when i is equal to k, so that last term is going to be a plus k squared. Now, the reason I do this is because once I split this off, I notice that, that is part of the inductive hypothesis statement. And I know that it's equal to this fraction. So, by the inductive hypothesis, I know this sum is actually k times k minus 1 times 2k minus 1 divided by 6 plus that last term, which was k squared. Now, I recall if I'm going to add two quantities, they need to have a like denominator, which will be 6. And so, by arithmetic, this is just the sum of the two numerators. But notice, both of these numerators have a factor of k. For the first term, I'm left with k minus 1 times 2k minus 1. And for the last term, if I factor out a k, I'm left with plus 6k. OK. Now, it still seems like I'm going to have to do a little bit of algebra here. So I'm going to take a little piece of scratch paper to do my arithmetic on. And I'm going to say, you know, what I want to do is somehow simplify this k minus 1 times 2k minus 1 plus 6k. This part inside the parentheses here. How am I going to simplify that? Well, I recall from algebra, if I have two binomial expressions that I want to expand-- we used to call it the FOIL method-- First, Outer, Inner, Last. This is equal to 2k squared plus 1. I guess it's-- first, is 2k squared. Outer, I guess is k times negative 1, which is going to be minus k. Inner is going to be minus 2k. And then last is going to be plus 1, plus 6k. Obviously, I usually don't use the FOIL method. But this is, when we simplify, it is 2k squared minus k minus 2k plus 6k is actually plus 3k. And then I have a plus 1. So, this expression simplifies to 2k squared plus 3k plus 1. But you know, I could factor this. It factors to k plus 1 times 2k plus 1. And so, what I'm left with here, is k times the quantity k plus 1 times 2k plus 1 over 6, by some algebra. I'll call it the arithmetic. Wait a second. That is exactly what I wanted to prove. So, we're done. ",
                                        "unit_id":"4ba2df6111b34c5886510ef41d449b1c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"662f568f4a8d4710a4f20f5e2d22783a",
                                "vertical_name":"1.3.4 The Principle of Mathematical Induction: Examples"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"fc73b7b917f847ed9d472828f2dbee74",
                "chapter_name":"Week 2 Proving Programs Correct",
                "sequentials":[
                    {
                        "sequential_id":"e2e1991b9bf049fd83a9aecac658b301",
                        "sequential_name":"2.1 Opening Remarks",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Code",
                                            "English",
                                            "Translate",
                                            "Correct",
                                            "Compute",
                                            "Ve",
                                            "Nonnegative",
                                            "Algorithm",
                                            "Loop",
                                            "Program"
                                        ],
                                        "data":" Robert van de Geijn: Welcome to week 2 in which you're going to learn how to proof programs correct. So to get things started, consider the following pseudocode. It's a very simple code, and a question you may want to ask yourself is, does this code correctly compute the sum of the elements of array b with size n? Week 1 equipped you with a number of useful tools. It taught you how to translate English sentences into predicates, and it also taught you how to prove. In this first exercise, you're going to use predicates to annotate this code so that you can convince yourself or someone else that it is actually correct. So what is an annotation? It's a comment about what's happening to the variables. It's a comment about the contents-- or the state, as we will say it-- of the variables in the program, and it describes what is expected to be true about the state of the variables at the point where you insert the annotation. An assertion about the state of the variables is another more precise way of saying it, and it's best stated as a predicate so that there's no ambiguity and so that you can rigorously reason about the program. So let us illustrate that. Here is the same code segment, but now we've created some space where we can put some annotations. What kind of annotations might we want to add? Well, it's always good to start by saying, what is in the variables when you get started? So here, we say that n is the size of array b, and it's nonnegative. Upon completion at the bottom here, s should equal the sum of the n elements of array b. Only when starting with an array of numbers of nonnegative length can you hope for this program to compute the correct answer, which is that s equals the sum of the n elements of array b. About halfway into the program just before the while loop, I inserted one more annotation. And there, I say that s equals the sum of the first k elements of b. Obviously, as we are reasoning about a loop in which you compute that sum, that particular assertion is going to come up quite often. These are English sentences. What we want to do is translate those into predicates. So we say that zero must be less than or equal to n before the program starts. Upon completion, s should be equal to the sum of the n elements of b. And before the while loop starts, we're saying here that s is equal to the sum of the first k elements of array b, and obviously, k should be between 0 and n . Here, we have the same annotated algorithm where we've taken the English away all together. I want you to now do the homework in which you will drag and drop assertions into this algorithm, and then when you're done with that, I want you to think about what those assertions should say about the program. And then, I'll see you in the next video where we will discuss the result. ",
                                        "unit_id":"a097f5d0eecc497e9d979baa641a186f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Yellow box",
                                            "Mathematical induction",
                                            "Program",
                                            "Correct",
                                            "Element"
                                        ],
                                        "data":" Robert van de Geijn: OK. So let's see how I would annotate this particular algorithm. All right. Well, you start in a state where 0 is less than or equal to n. You set variable s equal to 0. So obviously after that, s is equal to 0 and 0 is still less than equal to n. Then you set k equal to 0. So after that, s is equal to 0. And 0 is equal to k, which are both less than or equal to n. Now, notice that s is equal to 0. And right below it, we have the assertion that s is equal to the sum of the first k elements in b of i. But if k is equal to 0, then that sum is equal to 0. So obviously, the first yellow box implies the second yellow box if you think about it. So now we're in a state where s equals the sum of the first k elements of bi. We entered the loop. And we asked the question, is k less than n? If not, then we enter the loop. Now, what would we want to be true at the top of the loop? We want s to equal the sum of the first k elements of bi. And we notice that k is now between 0 and n, not including n. After all, we passed a condition that keeps us in the loop k less than n. Now, at that point, we then add the kth element to s. What does that mean? Well, then s equals the sum of the first k plus 1 element of bi. Then we increment k. And what that means is that now because k is incremented, s is again in a state where it is the sum of the first k elements of b, k has been incremented. So at that point, you might go back to the top of the loop. And if k is still less than n, you again end up in a state where s is equal to the sum of the first k elements of b. You again add another element of b to s. You again increment k, which puts you again in a state where s is equal to the sum of the first k elements of b. And you might keep doing that. At some point, it's no longer the case that k is less than n. So at that point, it's still the case that s is equal to the sum of the first k elements of b. But it's now also the case that k is equal to n. And because k is equal to n, the sum of the first k elements of b is equal to the sum of the first n elements of b, which is the result that you were trying to compute. So by having these very precise annotations, we can now systematically reason through the program and convince ourselves a little bit better that this program is actually correct. If you think about it, what we have here is the principle of mathematical induction at work. What we notice is that we are getting closer to rigorously proving the program segment correct. Can we truly prove it correct? Well, we're still kind of reasoning here. So it's still not completely rigorous. What you're going to learn in this week is how to make the proof airtight. Enjoy this week. ",
                                        "unit_id":"34bbe19816b5407b9ea40b3629b71fe8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9b5147d3b87048aa9e399d121b816a5b",
                                "vertical_name":"2.1.1 Launch"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Correctness"
                                        ],
                                        "data":" 2.1. Opening Remarks 2.1.1. Launch 2.1.2. Outline Week 2 2.1.3. What you will learn 2.2. Tools for Reasoning About Correctness 2.2.1. The Hoare triple 2.2.2. The weakest precondition 2.2.3. Proving the correctness of a Hoare triple 2.3. Basic Commands 2.3.1. The skip command 2.3.2. The abort command 2.3.3. Assignment to a simple variable 2.3.4. Composition 2.3.5. Simultaneous assignment 2.3.6. Assignment to an array element 2.4. The If Command 2.4.1. Specification 2.4.2. wp(if;R) 2.4.3. The If Theorem 2.4.4. A worksheet for proving an if command correct 2.4.5. The if-then-else command 2.5. The While Command 2.5.1. Specification 2.5.2. Correctness 2.5.3. The While Theorem 2.5.4. Total correctness 2.5.5. Don&rsquo;t Panic 2.6. Enrichment 2.6.1. The do command 2.6.2. Desirable properties of a language 2.7. Wrap Up 2.7.1. Additional exercises 2.7.2. Summary ",
                                        "unit_id":"0277e967b23b4a168e557caa4277cadb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6399fa36834a4bc2b18b7bbcd1535721",
                                "vertical_name":"2.1.2. Outline Week 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Hoare triple",
                                            "Weakest precondition",
                                            "Common practice",
                                            "Program",
                                            "Prove",
                                            "Correctness",
                                            "Command"
                                        ],
                                        "data":" Today, common practice is to show a program correct through testing. The issue with this is that while testing can uncover errors, it cannot prove a program correct. After all, you may not have tested the cases for which the program fails. This week equips you with the tools to provide definitive proofs of correctness. This is a first step towards systematic derivation of correct programs. Proving programs correct is foundational. It was studied by many, including several Turing Award winners. In this week, we share our understanding of their work. Upon completion of this week, you should be able to Annotate a program with assertions. Create and apply Hoare triples to reason about correctness of short program segments involving skip, abort, and assignments. Evaluate the weakest precondition. Prove correctness of a Hoare triple using the weakest precondition. Prove correctness of an if command via the If Theorem. Prove correctness of an iterative command via the While Theorem. ",
                                        "unit_id":"1015445af71f41f7aac7deea531a3f0b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"53b4c688feb64cc0930702dc2b611f20",
                                "vertical_name":"2.1.3. What you will learn"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f2114487d83e4a57af363dc16e71652a",
                        "sequential_name":"2.2. Tools for Reasoning About Correctness",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Hoare triple",
                                            "Predicate",
                                            "Program",
                                            "Segment",
                                            "Element",
                                            "Executed",
                                            "Equal",
                                            "Command"
                                        ],
                                        "data":" Robert van de Geijn: In this section, we're going to talk about tools for reasoning about the correctness of programs. Let's look at the program about which we reasoned in the launch. What do we have here? Well, in the yellow boxes we have that we start in a state where zero is less than or equal to n. And if we then set as equal to zero, we end up in a state where s is equal zero, and zero is less than or equal to n. If we look at that in isolation, this is what it looks like. Now notice that it is the assertions, together with the actual commands, that either is correct or not correct. The command by itself is just a command. It's only in the context of what the input is, zero less than or equal to n, and what you want the output to be, s is equal to zero and zero is less than or equal to n, that we can reason about whether this particular segment of the code is correct. Now another way of presenting this is that we have a precondition, zero is less than or equal to n. A command, s is set to zero. s becomes zero. That's what the colon equal stands for. And then a post-condition. s is equal to zero, and zero is less than or equal to n. And more abstractly we can write this as the predicate Q, the command S, and R. The precondition, the command, and the post-condition. Let's look at another example. If we now want to reason about the correctness of the assignment of zero to k, we might pull out the assertion that initially s is equal to zero and zero is less than or equal to n, the command, which sets k equal to zero, and then the post-condition of what we want to hold afterwards, which is that s is equal to zero, and zero is equal to k is less than or equal to n. And again we can write this more succinctly as follows, and more abstractly, as a precondition Q, a command S, and a post-condition R. We see this all over the place. Here we have a precondition that says that at the top of the loop s contains the sum of the first k elements of b. A command that actually consists of two simpler commands, the one that sets s equal to s plus the contents of the kth element of b, and then the increment of k to k plus one. And then the post-condition is that we want to again be in a state where s is equal to the sum of the first k elements of b. Isolated, we look at it like that, and now we notice that the command has become a little bit more complex. It's a composition of the two statements. When we write it more succinctly, we put a semi-colon between the statements, so that they are more easily identified. But abstractly, we're still looking at a predicate Q, a statement S, and a post-condition R. We could look at the entire program. We have a precondition that zero is less than or equal to n. We have a post-condition that says that we want s to contain the sum of the elements of b. And everything in between is now our command capital S. So this is known as a Hoare triple, named after Sir Anthony Hoare, who introduced this first. The Hoare triple QSR holds if and only if S, when executed starting in the state that satisfies predicate Q, completes in a finite amount of time in a state that satisfies predicate R. Here's another way of thinking about this. The precondition Q describes the state of the variables before S is executed. In other words, it describes what must hold about the input if S is to be executed. The post-condition R describes the state of the variables after S is executed. In other words, it says something about the output of statement S. And then QSR, the Hoare triple, holds only if execution of S correctly changes the state of the variables as described by Q to a state as described by R in a finite amount of time. What the concept of the Hoare triple gives us is a formal way of asserting the correctness of a program segment that has been annotated with a precondition and a post-condition. Notice that the Hoare triple shows up in the logo for our course, so obviously we believe it to be extremely important. ",
                                        "unit_id":"fc76ec3e7f6a46148b00280664ef438e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"331f1f6c3d714de985431a4aa76a221e",
                                "vertical_name":"2.2.1 The Hoare triple"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Command"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: So next, we're going to talk about the very important concept of the weakest precondition. So let's consider a command program S and a postcondition R. A question we may want to ask is what are all states for which command S will complete, in a finite amount of time, in a state for which R is TRUE. In other words, what predicate describes all valid inputs for which command S will complete, in a finite amount of time, with an output that satisfies R. Why don't you take a moment to explore this in the next two homeworks, and I will see you in the next video. ",
                                        "unit_id":"9b982d76fe494aa5bb5cf73b9d9dbda5",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Hoare triple",
                                            "Weakest precondition",
                                            "Precondition"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: So what did you notice from the last homeworks about the Hoare triple precondition Q? Command y becomes x plus 1, leaving you in the state described by the postcondition y is greater than 5. Hopefully, you noticed that, only if x is greater than 4 is it the case that y is greater than 5, after you do the assignment. For the Hoare triple to hold, Q must imply that x is greater than 4. Otherwise, it's not the case that x is greater than 4, and therefore, the assignment will not complete in a state where y is greater than 5. So Q must imply x is greater that 4. But what do we know about the relationship between Q and the predicate x greater than 4, then? Well, we know that x is greater than 4 is weaker, or at least as weak as, the predicate Q. That's what it means for q to imply x is greater than 4. So because every precondition Q must imply x is greater than 4 in order for the Hoare triple to be true, we say that x greater than 4 is the weakest precondition for executing y becomes x plus 1. If we want to complete that command in a state where y is greater that 5. In other words, the input to the Command y becomes x plus 1, must satisfy that x is greater than 4, if that command is to yield an output that satisfies that y is greater than 5. OK, let's consider this. We have Q as the precondition, S is this command, and R is the postcondition. Let's give a definition. Given command S and postcondition R, we're going to find the weakest precondition Q, that satisfies Q S R, to be the weakest precondition of S and R, and we're going to denote that by the function, wp of S and R. ",
                                        "unit_id":"17ddc3b119c448708a1f9f593e50b1b3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"02a1017838934b20829aac7b616380fc",
                                "vertical_name":"2.2.2 The weakest precondition"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Hoare triple",
                                            "Weakest precondition",
                                            "Tool",
                                            "Proving",
                                            "Precondition",
                                            "Program",
                                            "Correct",
                                            "Asked",
                                            "Define",
                                            "Prove",
                                            "Implies",
                                            "Ve",
                                            "State"
                                        ],
                                        "data":" Robert van de Geijn: Ok, so this section is about tools for reasoning about correctness. And what we've seen so far is the notion of a Hoare triple. Which is true even annotated code segment is correct. And the notion of a weakest precondition. Which tells you for what inputs described by predicate Q the command will leave you in a state described by the post-condition R. In this unit we're going to put all of that together and show you how the weakest precondition together with the Hoare triple allow you to prove that an annotated code segment is in fact correct. Let's have a look. So let's consider a program or command that will denote by S and a post-condition R. Given a precondition Q, how can we then prove that starting with an input that is described by a predicate Q, S will complete in a finite amount of time in a state described by R? In other words, with output that satisfies the predicates R. Given conditions on the input to command S, how can we prove that it's execution leaves us in a desirable state? Let's revisit homework 2.2.1.1 and let's have a look. So there, the first question was whether assigning x plus 1 to y, when started in a state where x was equal to 10 leaves you in a state where y is greater than 5. And there you were asked to do so by examination. So, the question is does this Hoare triple hold? Now what we have learned is that there is a notion of a weakest precondition. Since x equals 10 is a precondition, if something else is the weakest precondition then x equals 10 better imply that, or else you won't be able to execute y equal to x plus 1, leaving you in a state where y is greater than 5. That's the whole idea behind the weakest precondition. So the question you then have to ask, \"is it the case that x equals 10 implies the weakest precondition, y becomes x plus 1, leaving you in a state or y is greater than 5?\" Well, we've asked you to intuitively define the weakest precondition of various things. So with that we then concluded that the weakest precondition in this case was x is greater than four. Only if x is greater than four will computing y becomes x plus 1 leave you in a state where y is greater than five. So all we have to do now is verify that implication. Now here you could of course look at that and say well dah and just move on. Or you can formally prove it through some algebra. You can take x greater than 4 and separate it into three different regions. Case where x is between 4 and 10, not including 4 in 10. The case where x is equal to 10. And the case where x is greater than 10. And when you do that, you can then shuffle things around a little bit using commutativity and associativity, and you get this expression right here, where now we have isolated x equals 10 on the right hand side, all the way on the left. And then comes in this very powerful tool called weakening strengthening laws, through which you know that this is actually TRUE. So we have now proven that this Hoare triple is correct. Well almost. We're still counting on an intuitive feel for the weakest precondition for this particular command, and therefore we're really not quite there yet, but we're getting awfully close. So let's look at this as an alternative view. Here we have the annotated program, what we know is that the weakest precondition must be true before we execute y becomes x plus 1, if we are to leave ourselves in a state where y is greater than 5. So, we can insert that just before the command, because we know at that point in the program that must be true. What we then notice is that x is equal to 10 must also mean that the weakest precondition is true, because there are no further commands between that assertion and the assertion about the weakest precondition. We know were the weakest precondition is, well we intuitively stated that it was x is created than 4. And then we're back to checking whether x is equal to 10 implies x greater than 4. And again, you can either say, well dah, or you can actually go and formally prove this much like we did before. So in general here is a code segment, you know that you are in a state where Q is true. You know that you want to execute S. You want to be in a state where R is true. You wonder whether this particular annotated program segment is actually correct. You don't say, oh, but I know that the weakest precondition S,R must be true just before S is executed. If we are to end up in a state where R is true, we then conclude that Q must imply the weakest precondition. And then it's a matter of verifying that to prove this code segment correct. If the answer is yes, then the code segment is correct. If the answer is no, then the code segment is not correct. So in summary, an annotated program will typically consist of a precondition Q, a command S, and a post-condition R. If we have a way of actually systematically coming up with the weakest precondition for executing S to leave as in a state where R is true, then we now have the means for proving that a Hoare triple holds, that this code segment is correct. All you do is check whether the precondition Q implies the weakest precondition of S, leaving you in a state where R is true. And you're done. And then we can conclude that the annotated code segment is actually correct. So far you've only informally determined the weakest precondition. So all we need to do is define the weakest precondition function for various commands in our pseudo-code, and then we actually have the means for formally proving code segments correct. And that's what we're going to spend the remainder of this particular week on. ",
                                        "unit_id":"5f6e483628854fef9c01b6a15c982a99",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "State",
                                            "Predicate"
                                        ],
                                        "data":" Maggie Myers: In this video, we want to look at some homework on weakest precondition where we try to figure out what weakest preconditions are by examination. To start off, I want to look at notation. Weakest precondition is a function that inputs a command and a predicate that's the postcondition. To identify the command, we put quotes around it. So in problem number one, we wanted to find the weakest precondition of x becomes y, where the postcondition is x is equal to 5. Well, this weakest precondition is a predicate that describes all states that, when we start in a state satisfying that predicate, when this command is executed, we end up in a state where x is equal to 5. Well, if x is y, y had to be 5 for x to be 5. And so the predicate describing this is that y is 5. That's the only way we end up in a state where x is 5. Notice I use equivalence here, because weakest precondition does give us a predicate, and predicates are equivalent to one another. So weakest precondition of x becomes x plus 1 where we end up in a state where x is between 0 and 1, is-- well, let's think about it. If I add 1, and I end up with a value between 0 and 1, I had to start in a state where x was one less than it. So x would have had to be between negative 1 and 0 so that when I add 1 to it, I get a value between 0 and 1. Make sense? Now, the weakest precondition of x becomes y where x is equal to y-- well, any time x becomes y, it's going to be equal to y. The predicate that describes all is TRUE. Weakest precondition of x becomes 4 when x is equal to 5 after-- well, 4 is never 5. So no inputs will satisfy this. The predicate corresponding to \"none,\" or the empty set, is FALSE. So in this homework, we just found weakest precondition by examination. In the future, what we're going to do is try to determine ways of finding preconditions for various commands. ",
                                        "unit_id":"6f7e28d259bd43f9a9d37719ae8241eb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"35b3e64a950b46f3996b266dc51abe75",
                                "vertical_name":"2.2.3 Proving the correctness of a Hoare triple"
                            }
                        ]
                    },
                    {
                        "sequential_id":"018d3aa1143e4434bd4272a0923805fa",
                        "sequential_name":"2.3 Basic Commands",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Computer science",
                                            "Code segment",
                                            "Command"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: What we saw in the last video was that, if we have a way of computing the weakest precondition of a command, then we have the means for proving, rigorously, a code segment that has been annotated correct. So what we now need to do is specify the weakest precondition for various commands that we encounter in our pseudocode. Let's have a look at how that works. We're going to start with some very simple commands, and then progressively the complexity of those commands will increase. The most basic of all commands is the command skip. How does it work? The skip command does not change the state of any variable. It does nothing, but it does finish. It is a no-op is another way that, sometimes, we say this in computer science. Let's have a look at the weakest precondition for the skip command, if we wish to complete in a state where x is greater than 4. Why don't you think about this for a second and complete the first homework. ",
                                        "unit_id":"ac96b02a2dab4118808297c0aec27c10",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "General case",
                                            "Skip"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: Hopefully, you came to the conclusion that, if the skip command does nothing, and you want to finish in a state where x is greater than 4, then you better start in a state where x is greater than 4. So the weakest precondition of skip, leaving you in a state where x is greater than 4, is that x must be greater than 4. Let's move on and look at the general case. Complete the next homework assignment, and then I'll see you in the next video. ",
                                        "unit_id":"8307a32c3b8b451d87de2671666884bf",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Hoare triple",
                                            "Skip",
                                            "Command",
                                            "Simply"
                                        ],
                                        "data":" Robert van de Geijn: Now obviously, if the skip command does nothing but finish, then the weakest precondition of the skip command-- leaving you in a state where R is TRUE-- is that you have to already be in a state where R is TRUE. In summary, the weakest precondition for the skip command leaving you in a state where R is TRUE is simply, R. Therefore, the Hoare triple (Q) skip (R) simply means that Q must imply R. OK, so that's obviously the simplest of all commands, and now we're going to move on to progressively more difficult ones. ",
                                        "unit_id":"814128eae21e430b96b0737ea14073bf",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"84429cd5569442e2919d2e46bc3bec03",
                                "vertical_name":"2.3.1 The skip command"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Weakest precondition"
                                        ],
                                        "data":" Robert van de Geijn: So let's move on and look at a slightly more complex command-- the abort command. So how does it work? The abort command stops the execution of the program. What that means, importantly, is that it does not finish. So take a second and do the first homework, and determine what the weakest precondition of the abort command should be if you are to finish in a state where X is greater than 4. And I'll see you in the next video. ",
                                        "unit_id":"2ad83c26d2bc4a85800c3ffc3e59964e",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Command",
                                            "False",
                                            "State"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: Well, notice that the abort command does not finish. So there is no state prior to the abort command, such that it will finish in a state where x is greater than 4. OK, so that leaves us to decide how to describe the set of all states that is empty. Well, the set of all states that is empty is described by the predicate FALSE. Because after all, the set of all states that satisfy that FALSE is TRUE is empty. So we conclude that the weakest precondition for abort leaving you in a state where x is greater than 4 is FALSE, and we fill that in right there and there. And here is the argument. OK, so let's generalize this. Let's look at the weakest precondition for the abort command. If we want to complete that command in a state where R is TRUE. Please go ahead and do the next homework and I'll see you in the next video. ",
                                        "unit_id":"2c07f824d67e4f2790968a3b9764dec1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Hoare triple",
                                            "Weakest precondition",
                                            "Precondition",
                                            "False"
                                        ],
                                        "data":" Dr. Robert van de Geijn: So hopefully you concluded that that is again FALSE because there is no state for which the abort command finishes. And therefore, it can certainly not finish in a state where R is TRUE. And the predicate that describes the empty set is FALSE. And we elaborate on that argument right here. So in summary, the weakest precondition for the abort command is always FALSE. What that means is that this Hoare triple is only TRUE if the precondition Q implies FALSE. But we know that the only predicate that implies FALSE is FALSE and therefore, only if we are in a state where FALSE is TRUE. In other words, there is no states for which this can happen. Is it the case that the abort command completes in a state where R is TRUE. ",
                                        "unit_id":"a5dda0e59d9342109df91b070c066021",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"01c22ffd6cae4af9a1e6f42e03d9148a",
                                "vertical_name":"2.3.2 The abort command"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Free occurrence",
                                            "Weakest precondition",
                                            "Simple variable",
                                            "Implication",
                                            "Correct",
                                            "Precondition",
                                            "Occurrence",
                                            "Apply",
                                            "Ve",
                                            "Valid",
                                            "Slide",
                                            "Imply",
                                            "Simplification",
                                            "Program",
                                            "Commutativity",
                                            "Identity",
                                            "Variable",
                                            "Replaced",
                                            "Expression",
                                            "State"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: So now, let's move on to something a little bit more useful than Skip and Abort. Let's look at assignment to a variable, and we're going to say, Assignment to a simple variable, and what that means will become clear later on. So let's start with an example. Here is a code segment. The precondition is that x is equal to 5. y is computed as x plus 1, and then we want to be in a state where y is greater than 3. Is this a correct code segment? There is a couple of ways of answering that question. You would informally say, well, by just looking at it, it's obviously TRUE. If x is equal to 5, then y will become 6, and 6 is obviously greater than 3. You could also informally compute the weakest precondition, which informally we know is x greater than 2. Why? Because x has to be greater than 2 if you want y, which is one greater, to be greater than 3. And notice that then you can informally determine that x is equal to 5 implies that x is greater than 2. That's one of those duh things. Or you can formally prove this through, for example, an equivalence proof. But how do we formally define the weakest precondition of some expression being assigned to y? The expression here is denoted by the funny looking E. If we want to end up in a state where R is TRUE for any expression E and any predicate R. So let's look at this again. Now, here I've replaced y by x and x just represents an arbitrary variable. So what are our key tools to be able to do this? Well, first of all, if the expression E is an invalid expression, then your program will abort. And if the program aborts, then it will not complete in a finite amount of time, and therefore, it will never reach the point where you want R to be TRUE. We need a way of saying the expression must be TRUE, and for this we introduce the function valid of E. Also, we introduce a predicate R super x sub E with parentheses around it. What does that denote? Well, it's the predicates R, the post-condition, but every free occurrence of x is replaced by the expression. What free occurrence means we will illustrate a little bit later on. The definition, then, of the weakest precondition of the expression E being assigned to x, leaving you in a state where R is TRUE is defined as the expression must be valid, valid of E, and the predicate R, with every free occurrence of x, replaced by the expression E. So here, we've repeated that, and let's not use that with the code segment that we discussed earlier. Let's look at the weakest precondition of y being replaced by the expression x plus 1, leaving you in a state where y is greater than 3. And instead of doing this informally, we're now going to do this formally. So here, let's first identify what the expression E is. It is the expression x plus 1, and let's clearly identify what the post-condition R is. And then, if we simply apply the definition, you ask yourself the question, is x plus 1 a valid expression. Obviously, it is. So that will evaluate to TRUE, and then you have R. Now, the variable to which we assign is y. So instead of x, we have a y, a super y. And then, we need to replace that by the expression E, and notice that the expression E is x plus 1. If you then go and you simplify this, you notice that x plus 1 is a valid expression, so that becomes TRUE. And x plus 1 greater than 3 is the same as x is greater than 2. Then, you can do AND simplification, and you find out that the weakest precondition is x is greater than 2. Let's look at another example. This is actually an example that showed up in the launch. We call that we started with 0 less than or equal to n there, as a precondition for the whole program. The first statement was that 0 was assigned to s, and then we claimed that we ended up in a state where s is equal to 0 and 0 was less than or equal to n. Now, we can now formally prove this correct. How do we do it? Well, we know that x has to imply the weakest precondition, S comma R. We can instantiate with S and R are, S is the assignment of 0 to variable s, and yes, of course, it's a little unfortunate that we are using s in two different ways. We want to end up in a state where s is equal to 0, and 0 is less than or equal to n. We now know how to evaluate that. We know that we need to take the post-condition, s equals 0, and 0 less than or equal to n, and replace every occurrence of variable s with the expression 0. When we do that, we get what's on the right here, of the implication, s has been replaced by 0. And at this point, we also go and instantiate Q, and then we notice that through identity, commutativity, and simplification, and implication simplification this is true. Hm, where does that come from? Well, we go into the details in the next slide, but let's start here. 0 equals 0 is an identity. So that's TRUE. You can then apply AND simplification, but for AND simplification we really want TRUE to be on the right of the AND operator. So for that we apply commutativity. Once we do that, we can apply AND simplification. At that point, we end up with 0 is less than or equal to n, implies 0 is less than or equal to n. And that, of course, is TRUE. Notice, that we've now systematically proven that code segment correct. So there is no more doubt about whether this code segment actually is correct. Alternatively, we can look at it this way. We know that before the assignment of 0 to s, the weakest precondition of the statement, leaving you in a state where R is TRUE, has to be TRUE. Otherwise, executing s equals 0 won't put you in the desired state. We can then evaluate the weakest precondition, which we just now saw was 0 equals 0, and 0 less than or equal to n. That's through instantiation. And then you replace every occurrence of variable s with 0, and then you notice that Q is TRUE, just before the weakest precondition has to be TRUE. So you know that 0 less than or equal to n has to imply 0 equals 0 and 0 is less than or equal to n. And let's, actually now, put all of the steps in that we glossed over in the previous slide. You first apply identity. That gives you a TRUE. Then, you switch that to the other side, through commutativity. Then, you apply AND simplification, and finally, you apply implication simplification. So again, we know that this annotated code segment is True. What I want you to do it now is do a couple of exercises, and then I'll see you in the next video. ",
                                        "unit_id":"731d43ffbada4e6e9519a48fe1bb5a35",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Associative property",
                                            "Code segment",
                                            "Commutative property",
                                            "Range"
                                        ],
                                        "data":" Maggie Myers: Let's prove the code segment in homework 2.3.3.1 correct. So what do we need to do? We need to show the Q implies the weakest precondition of the command, R. So by instantiation, this means that we need to show that Q implies the weakest precondition -- The command is k becomes 0, and the post condition is s is equal to the sum over all i's, 0 less than or equal to i less than k, of b(i); and 0 less than or equal to k less than or equal to n. Now, how do we find this weakest precondition? I'm going to do several steps at once. What I'm going to do is-- I notice that this is an assignment, so I'm going to use the fact that when you find the weakest precondition of an assignment, you do a textual substitution for k of 0. But I'm going to actually do that textual substitution instead of writing out the formula. So what does this mean? It means that Q implies s is equal to the sum over i, 0 less than or equal to i less than zero, since we need to substitute 0 for k of b(i). And 0 is less than or equal to 0, is less than or equal to n. Now what? Well, if I look at this sum, and I look at the range, 0 less than or equal to i less than zero, there is no number in that region. So what I'm needing to do is to simplify the sum over an empty range. And I know that simplifies to zero. So I have Q implies s is equal to zero, and-- well, let's see. Let's do some arithmetic too. Notice at this interval I could write a 0 is less than or equal to zero, and 0 is less than or equal to n. So now what do I have? Well, one of my sub-components is 0 is less than or equal to 0. I know that's always true. So I can actually simplify further. First of all, I'm going to now instantiate Q. And I'm going to use the commutative property, as well as the associative property, as well as AND- simplification. And I will notice that Q, which is s is equal to 0, and 0 is less than or equal n, implies-- well, by regrouping, I can have s is equal to zero, and 0 is less than or equal to n, and TRUE. And by AND- simplification that is just s is equal to 0, and 0 is less than or equal to n. But this is identical. So by implication simplification-- which is really just the identity-- this is equivalent to true. So this program segment does hold. ",
                                        "unit_id":"467ae1d220544f20b01062316a7bca2d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Dummy variable",
                                            "Free occurrence",
                                            "Simple variable",
                                            "Occurrence",
                                            "Variable",
                                            "Expression"
                                        ],
                                        "data":" Dr. Robert van de Geijn: Let's return for a second about this issue of free occurrence of x replaced by the expression E. This, by the way, is called textual substitution. What's going on here? Well, consider the following. We have the assignment of 0 to i. That's our command. And the post-condition is that for all i between 0 and 5, we want to b of i to be 0. Now if we did this naively, you would replace every occurrence of i with a 0. And you would end up with this nonsensical expression on the right. For all 0, 0 less than or equal to 0, less than 5 b of 0 is equal to 0. And that's nonsense. So what's going on here? Well, the i in the quantifier is really just a dummy variable. It can be replaced by any variable you want. So if instead we replace it by the variable j, then we get this. And then notice that if 0 is assigned to i, we can do the textual substitution. Any occurrence of i that was bound previously to quantifier has now been replaced. And then we can replace every free occurrence of i with the expression 0. Now it happens to be that there is no free occurs of i in this expression. And therefore, we simply get the expression itself back again. Which, of course is correct. So hopefully you're now getting a feel for what it means to do an assignment to a simple variable. And how to compute its weakest precondition. ",
                                        "unit_id":"78ddac9fcef045d98ccec94f1d17a1a7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bc3bd005119044d29eedd43e9edae03b",
                                "vertical_name":"2.3.3 Assignment to a simple variable"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Simple variable",
                                            "Hoare triple",
                                            "Semi colon",
                                            "Start",
                                            "Composed",
                                            "Command",
                                            "Ve",
                                            "Complex",
                                            "Program",
                                            "Leaving"
                                        ],
                                        "data":" Robert van de Geijn So far we've looked at very simple commands, a skip, an abort, an assignment to a simple variable. Obviously, that's not a very interesting program. So let's see what happens if we start putting multiple commands together. In other words, what if we start composing commands to create more complex programs? So here we have a program that consists of two commands, S0 and S1. And S0 and S1 eventually can be as complex as you want them to be. How does it work? Well, you execute command 0 and then you execute command 1. Now sometimes we may not want to write these on separate lines, so a more concise way of writing this S0, S1. And then to know where one command stops and the next one starts, we put a semi colon in the middle of it. So the question we ask ourselves is when is the Hoare triple Q command S0 followed by S1 R correct? Well, it's when Q implies the weakest precondition of the composed command S0, S1, leaving you in a state where R is true. And that means we have to define the weakest precondition of S0 composed with S1. Well, let's think about this for a second. Let's consider a program where we have them written above each other. What do we know? Well, we know that if we want to end up in a state where R is true, then just before S1 is executed, the weakest precondition of S1 leaving you in a state where R is true must be true. S0 has to leave you in a state where that weakest precondition is true. So what does that mean? Well, that means that before S0 is executed, the weakest precondition of S0, leaving you in a state where the weakest precondition of S1 is leaving you in a state where R must be true. So whenever you say must be true, that means that that is the weakest predicate that describes the state that you must be in. And what that means is that we can take that to be the weakest precondition of the composed command S0, S1 if you want to finish in a finite amount of time in a state where R is true. So that's the definition. Now we can obviously generalize this. We can composed three commands. And what that means is that the first two commands must leave you in a state where the weakest precondition for the third command holds. And then you can peel it off, and you find that it's the weakest precondition of S0, leaving you in a state where the weakest precondition of S1, leaving you in a state where the weakest precondition of S2 leaves you in a state where R is true. Or you can peel it in the opposite direction. And obviously you can generalize this to the composition of n commands. So we've just figured out how to define the weakest precondition of a composed command. And what you're going to do for the rest of this unit is get some practice with this. ",
                                        "unit_id":"9e63cefcad1f42bd9fbb93fb51395883",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"89c15a01832945cc9b634330df3f9cdc",
                                "vertical_name":"2.3.4 Composition"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Weakest precondition",
                                            "Programming languages",
                                            "Simultaneously"
                                        ],
                                        "data":" Robert van de Geijn: So next, we move on to the concept of simultaneous assignment. Now, in most programming languages, you don't have a simultaneous assignment command. But we're going to see later on that this is going to become very handy in weeks four through six. Consider the a command x, y, z simultaneously become expression 0, expression 1, and expression 2, where x, y, and z have to be distinct variables because, otherwise, you don't know which expression actually gets assigned to the variable that's repeated. So, what does this do? It simultaneously updates all of these variables with the corresponding expressions, and, if any of the variables on the left appear in any of the expressions on the right, then you use the original contents of those variables rather than the updated ones. And obviously, if there are only two variables there, then you only have two expressions on the right. And you can have more than three variables there as well. So how do we define the weakest precondition for this command? Well, the expressions, obviously, have to be valid. And then you simultaneously substitute expressions E0, E1, and E2 for the corresponding free occurrences of variables x, y, and z. Then, again, this obviously extends to the case where you only have two variables and two expressions, or where you have more than three variables and expressions. In general, this is not the same as assigning E0 to x and then assigning E1 y, and then assigning E2 to z. Now why is that? Well, look at the weakest precondition of that. You take your post-condition R. You replace every occurrence of z with E2, and then, you take every occurrence y and replace it with E1. Notice that if y occurs in E2, then this may not give the same result. And then, finally, you replace every occurrence of x with E0 and, again, if x occurred in E1 or in E2, then you get something different than when you replace, simultaneously, every occurrence of x, y, and z with the expressions E0, E1, and E2, respectively. Here is a code segment that presumably exchanges the values of variables x and y. Is this a correct code segment? Go and do the homework, and I'll see you in the next video. ",
                                        "unit_id":"151ad02678bf4d4986b137211f4e3f82",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Free occurrence",
                                            "Simultaneous substitution",
                                            "Substitution",
                                            "Apply"
                                        ],
                                        "data":" Robert van de Geijn: So let's look at the answer to this homework. We want to compute the weakest precondition. We can instantiate S and R. We know that that means a simultaneous substitution of y, x into x, y. So y has to be substituted in for every free occurrence of x. x has to be substituted in for every free occurrence of y. And obviously, the expressions y and x are valid expressions here. By the definition of substitution, you then get y is equal to y hat, and x is equal to x hat. If you then place that where it must be true, just before a command S is executed, you see this. And then you can just look at that and see that the precondition implies the weakest precondition. Because after all, they are one and the same thing, except that you have to apply commutativity. Alternatively, we can ask the question does q imply the weakest precondition? You can then instantiate. You can apply the definition of assignments. You can apply the definition of substitution, or textual substitution, as I like to call it. You can then invoke commutativity and implication simplification to come up with true. And therefore this is a correct code segment. So go and do some more homeworks, and hopefully this will become very clear to you. ",
                                        "unit_id":"a9185f5d589943e8a1f91bed961706f7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f9eb183a43ef415687e2641b4050f7a2",
                                "vertical_name":"2.3.5 Simultaneous assignment"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Weakest precondition",
                                            "Free occurrence",
                                            "Good idea",
                                            "Separate",
                                            "Indexed",
                                            "Substitution",
                                            "Precondition",
                                            "Substitute",
                                            "Colon",
                                            "Occurrence",
                                            "Evaluate",
                                            "Idea",
                                            "Simultaneous",
                                            "Semi colon",
                                            "Valid",
                                            "Element",
                                            "Expression",
                                            "Array",
                                            "Range"
                                        ],
                                        "data":" Robert van de Geijn: So now we get to a very important topic. Most of this course focuses on manipulation of arrays. After all, in part 2 we're going to look at vector and matrix operations. And those invariably involve one-dimensional and two-dimensional arrays. So assignment to array elements is a very important topic for us. So here's the specification. We have an expression E. We want to assign it to the element of b indexed by k. What do we need to do? We need to check if E is a valid expression. If not, then we abort. We need check if k is in the range of indices of array b. If not, we abort. If we get past that, then we evaluate expression E and assign the result to the element of b indexed by k. In order to do this cleanly, we're going to define something that initially will seem a little cumbersome. So the expression b with the element indexed by k replaced by result of evaluating expression E, b semi-colon k colon E, is a copy of array b but with the result of evaluating expression E assigned to the element indexed by k. So here's an example. We have array b, which we will assume is indexed starting with 0, with contents minus 2, 1, and 3. b Semi-colon 1 colon 100, b;1:100, is then a copy of b but with the element indexed by 1 replaced by the value 100. So that's this. If we then take that new array and we ask what is in the element indexed by 1, we get back 100. If we ask what is in the element indexed by 2, we get the value 3. Hopefully, this makes sense to you. So now we can go ahead and define the weakest precondition. The weakest precondition of assigning the result of expression E to the element of b indexed by k leaving you in a state where R is true is given by, well, first of all, we need to check whether the expression is a valid expression. We need to check whether k is in the range of b. And then finally, we look at R, and we do a textual substitution of the array b but with the element indexed by k replaced by the result of expression E substituted in for every free occurrence of array b. So what we're really doing here is we're looking at the entire array b as one variable. And we are doing an entire substitution of new array into that. It just happens to be that most of the elements in that new array are just copies of what was already in b. OK. Let's do an example here. What is this example? Well, this is an example that might come from a program that copies the contents of array y into array x. And we will assume that the first k elements have already been copied, and now we're looking at the entry indexed by k in array y being copied into the corresponding element of array x. So the precondition says we've already copied the first k elements. And the postcondition says we have copied the first k plus 1 elements. So how do we prove this correct? Well, we can evaluate the weakest precondition. We can instantiate that. We can then do the definition of assignment. So now notice that array x must be replaced by the array x but with the element indexed by k replaced by y(k). We can place that into the occurrence of x. But this is kind of cumbersome because we know that elements 0 through k minus 1 haven't changed. So what we're going to do is we're going to split the range into the part where it has not changed-- that's the first part all the way through element k minus 1-- and then the separate element indexed by k. If we do that, then in the quantification we can just substitute back in x because those were all of the elements that were unaffected by the assignment. And then we can substitute in y of k because that is the value in x when the element indexed by k is replaced by y(k). Then we see that y(k) equals y(k) is just true. We can do and- simplification, and we get that. And notice that this is exactly the precondition. And since it's exactly the precondition, we know that this code segment is correct because Q implies this. As you know, I like to look at things a little bit differently often. So alternatively, we can ask ourselves, what is the weakest precondition, and place that where it must be true in our code segment. And notice that we just computed what the weakest precondition was. And then we can ask ourselves the question, does Q imply that weakest precondition? And just by eyeballing this, we see that they are the same, and, therefore, obviously Q implies the weakest precondition. So this code segment is correct. And let's go one step further. Let's actually reason about what's going on as part of the code segment itself. So here we have our precondition, our postcondition. We've given ourselves some space to doodle and write some intermediate results. And let's see what happens. Well, first of all, we notice that something special happens with the element of x indexed by k. So let's take the postcondition right here, and let's actually separate out the element indexed by k. So we're doing a splitting of the range of the quantifier. What we now notice is that the element indexed by k does not occur in the quantifier. And therefore, we can just do a textual substitution of y of k into x of k to come up with the weakest precondition. So then looking at that, we noticed that y(k) equals y(k) is true. We can do and- simplification. And then finally, we can compare what comes out of that with the precondition. And we notice that they are one and the same, and therefore this code segment is correct. So what did we learn from this? We learned from this that actually it's a really good idea to split the range early because if we can isolate x of k, then the substitution is much simpler. So even when we were just trying to compute what the weakest precondition was, what we could have done is started with this, done the instantiation, then immediately done the splitting of the range to isolate the element of x indexed by k. We could then have done the textual substitution, replacing x of k with y of k, noticing that the quantifier is unaffected. And then we can do algebra-- we know that what's in yellow here is true-- and and- simplification. And then we could have inserted that into our code segment at the place where it must be true. And then by comparing the precondition with the weakest condition, we'd notice that they are one and the same, and therefore this code segment is correct. The idea of simultaneous assignment extends to assignment to arrays. Here the expressions E0 and E1 should be valid. j and k should be in the range of b. And j should not equal k because if the two expressions are not one and the same, then there would be some confusion. What is the definition of the weakest precondition for simultaneous assignments to array elements? Well, E0 and E1 must be valid. j should be in the range of b. k should be in the range of b. j should not be equal to k. And then you can do a substitution of a copy of b but with the elements indexed by j and k replaced by the respective expressions into every free occurrence of b. And there you have the weakest precondition. In summary, this is the weakest precondition when you assign to an element of b. If b is not in the range of any quantifier that involves array b, you can instead simply substitute the expression E for every free occurrence of b of k that occurs in the predicate R. Otherwise, you may want to split the range so that you are in that position. And an example of what I mean by that is here we have a postcondition where we have isolated the element of x indexed by k. It is that element to which we're going to assign an expression. And that should have been a colon equals because it's becomes. And notice that here we just did a textual substitution of that expression into the occurrence of x of k to come up with the weakest precondition. ",
                                        "unit_id":"fbd8f36d9f5f4b31816c902062815337",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"eb0690d6023c4fe78c81cfce8bf6a69b",
                                "vertical_name":"2.3.6 Assignment to an array element"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8e94beeb53084878b3f000d043787253",
                        "sequential_name":"2.4 The If Command",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Final result",
                                            "Guarded commands",
                                            "Guarded command",
                                            "Evaluate",
                                            "Command"
                                        ],
                                        "data":" Robert van de Geijn: So we're looking at progressively more complex commands and that now leads us to the If command or the iterative command. Now, the iterative command in our pseudocode is a little bit different than you might be used to. It starts with if, it ends with fi so that's like end in most languages. And then each of those particular lines we call a guarded statement or a guarded command. So what do we have? Well, if Gi holds, then you may execute Si. It has to be the case that at least one of the guards must evaluate to true. It may be the case that more than one guard is true and what does that mean? Well, that then means that you don't know which of the guarded commands is actually executed. It may be that randomly one of them is picked, but only one of them, actually, will be executed. What this means is that if command is nondeterministic. It may be that multiple guards evaluate to true, that the commands associated with those guards put the variables in different states, and therefore, you don't quite know what the final result is. However, that doesn't really matter because the post-condition tells you what must be true about those states, and as long as you end up in a state where the post-condition is true, you don't care exactly what that state is. ",
                                        "unit_id":"73d30943c7ea4d498192042d93d2dafd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"56c422ddf7c24a5da18a2ad75a3995bf",
                                "vertical_name":"2.4.1 Specification"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Guarded commands",
                                            "Weakest precondition",
                                            "Precondition",
                                            "Correct",
                                            "Statement",
                                            "Fill",
                                            "Minus"
                                        ],
                                        "data":" Robert van de Geijn:So let's move right on and talk about how the weakest precondition for the If commands is defined. Here we have the If commands, but now we have annotated it with a post-condition R and with the weakest precondition for which we would like to determine a definition. Now what do we know? If an arbitrary statement here is chosen to be executed, then it must put us in a state where R is true. Either a statement is not chosen and it doesn't matter what state you end up in then. But if a guard is true, then the statement associated with it must complete in a state where R is true. Now what else do we know? Well, we know that if a command or statement is executed and is to leave us in a state where R is true, then we must be in a state where the weakest precondition is true. So we know that just before a typical statement, the weakest precondition of that statement leaving us in a state where R is true, must be true. And this now sets us up to define what the weakest condition of the If command is. First of all, one of the guards must be true. That's the G0 or G1 or and so forth, all the way up to GK minus 1. And then if we look at an arbitrary guarded statement, G1 in this particular case, guarding S1, then noticed that if G1 is true, then we'd better be in a situation where the weakest precondition of S1 R is true, because otherwise executing S1 will not leave us in a state where R is true. And what we have just done is justify how the weakest precondition for an If command is defined. So let's look at an example in how we may prove a code segment correct using this definition. So here we have a code segment that assigns to variable z, the absolute value of x. What does that mean? Well, if x is greater than or equal to 0, then z is equal to x. If x is less than or equal to 0, then z is equal to minus x. And one thing that we notice is that both guards might be true at the same time, because if x is equal to 0, then both are true. And therefore, we don't know which two guarded commands actually is executed. But what we do know is that we still end up with z being the absolute value of x, because if x is 0, then whether you set z equal to x or minus x, it doesn't matter. Either way, it ends up being equal to 0. So, the question now is, this a correct code segment? Well, what do we do? Well, we know that the precondition Q must imply the weakest precondition. We notice that the precondition is just true. And therefore, we know that the weakest precondition actually has to be true if this code segment is to be correct. So here is the code segment again. We now look at the weakest precondition. We outlined what it equals. We only have two guards, so we only have G0 or G1. And then if G0 holds, then it has to imply the weakest precondition of S0 R. And if G1 holds, then it has to imply the weakest precondition of S1 R. Then we could simply fill in what the guards are. And we can fill in that to the first guard must apply the weakest condition of the first statement. And the second guard must imply the weakest precondition of the second statement. It's a matter of just filling it in. So that puts us in this situation. And now we notice that we have learned how to compute the weakest precondition of an assignment. So that allows us to get to this point right here. What else do we know? Well, we know that x greater than or equal to 0 or x less than or equal to 0 evaluates to true. We're going to be a little bit sloppy. And we're just going to talk through the fact that if x is greater than or equal to 0, then that implies that x is equal to the absolute value of x. So that gives us a second true. And finally, if x is less than or equal to 0, then that implies that minus x is equal to the absolute value of x. And that gives us our third true. And if we then apply [? an ?] simplification, we just end up with true. So what do we know? We know that this code segment is correct because we proved that it is correct. ",
                                        "unit_id":"b8ea603be20446518b1717e3ba379db9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5435a1ae5e614cff83f7c0c94c04b5bd",
                                "vertical_name":"2.4.2 wp( if, R )"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Weakest precondition",
                                            "Guarded commands",
                                            "Hoare triple",
                                            "Weakest",
                                            "Implication",
                                            "Simplification",
                                            "Correct",
                                            "Implies",
                                            "Minus",
                                            "Algebra",
                                            "Command"
                                        ],
                                        "data":" Robert van de Geijn: What we've learned from discussions about simpler commands is that it's not the weakest precondition that's interesting, it's how we can use the weakest precondition to prove a command correct. So what we're going to do now is we're going to, again, discuss the if command, but now, we're going to discuss how to determine if a code segment that includes an if command is correct. Let's have a look. What did we do previously? Well, we had a prototypical if command and what we said was if we know that R has to be true after the command is finished, then if any of the guarded commands is executed, R must be true after that command. And then we said but that means that the weakest precondition has to be true before the command is executed and that then allowed us to discuss what the weakest precondition of the if command was. What we're going to do is we're going to annotate our if command differently. It's still the case that after any guarded statement or command is executed, R must be true, but now, we're going to say, look if Q is true before the if command and if we know that G0 is true, then immediately after that and before statement S0 is executed, Q and G0 must be true, and therefore, the Hoare triple Q and G0, S0, R must hold if this is to be a correct code segment within the if command. And the same thing, of course, is true for the guarded statement with G1 through Gk minus 1. And what does that mean? Well, we can go down a checklist instead. It has to be the case that Q implies that one of the guards is true. But then, each of these Hoare triples must be true. The Hoae triple itself holds if and only if Q and G0 implies the weakest condition of S0 leaving you in a state where R is true. So each of the individual Hoae triples we can check by checking whether this implication holds. What does that mean? Well, it justifies what we call the if theorem. Consider here, again, our prototypical if command. This command is correct if and only if Q implies that one of the guards is true and for each of the guarded commands, Q and the guard for that command implies the weakest precondition of that command leaving you in a state where R holds. And that's known as the if theorem and you can simply think of this as a checklist that you have to go through in order to check that a code segment that includes an if command holds. So here's our example again where we set z equal to the absolute value of x except that I stated the post-conditions slightly differently, I stated it as x is greater than 0 and z is equal to x when we're done or x less than or equal to 0 and z is equal to minus x. This is actually the way Maggie prefers stating the post-condition for computing the absolute value. So let's have a look. What do we need to check? We need to check that Q implies G0 or G1. We need to check that Q and G0 implies that the weakest precondition S0 R, and we need to check that Q and G1 implies the weakest be conditioned S1 R. Check the first one-- that's a matter of instantiating. We can apply implication simplification to get rid of the true on the left of the implication, and then we can apply algebra to conclude that this is true. Now we look at Q and G0 having to imply the weakest precondition S0 R so we instantiate. Then we know how to compute the weakest precondition of simple assignment-- that's a matter of inserting x for every occurrence of z-- and you get this. And then it's a matter of working through this. What do we know? x equals x is true. We also know that x equals minus x means that x has to be equal to 0. And then we could do and simplification to get rid of the answer true and we can do some algebra to conclude that, in the second disjunction, x must be equal to 0. And then we can apply weakening strengthening to conclude that the result is true. So obviously, proving that Q and G1 implies the weakest precondition S1 R follows very similarly. So what I'm going to do is I'm going to leave this as a homework and I will see you in the next video. ",
                                        "unit_id":"153d11055d5d4ac7bd7f01e12e54e722",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Final result",
                                            "True"
                                        ],
                                        "data":" Robert van de Geijn: OK. So hopefully, you figured it out. And what did you do? Well, you followed the steps that we just went through for the other part of the If command. You instantiate, then you do and simplification to get rid of true on the left, and you apply what you know about the definition of simple assignment on the right. Then, you do some algebra to find out that minus x equals x means that x is equal to 0, and x equals x means that true holds. And then you do some simplification and some algebra. And finally, by weakening, strengthening you get the final result. ",
                                        "unit_id":"2a5d0f87cadd46209e8ee5cc43669bc4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1529a095ed334bbab30ca2ef4e49389b",
                                "vertical_name":"2.4.3 The If Theorem"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segments",
                                            "Code segment",
                                            "Guarded commands",
                                            "Weakest precondition",
                                            "Scrap paper",
                                            "Guarded command",
                                            "Precondition",
                                            "Implies",
                                            "Paper",
                                            "Work",
                                            "Command",
                                            "True"
                                        ],
                                        "data":" Robert van de Geijn: Now, what you've noticed by now is that I really like to annotate the code segments and capture how we should reason about those code segments by inserting the proof into the code segment itself. So let's have a look at how we can do this for the if command. Back to our example and I guess I went back to just saying that the post-condition is that z is equal to the absolute value of x. Let's give ourself some space. Here we have that same command, but with that precondition and post-condition filled in. And then the guards nicely spread out from where the commands are, the guarded commands are, so that we can annotate this code segment with various insights in the form of predicates. And what do we get? Well, first of all, we know where R must be true. After each of the guarded statements, R must be true so we can fill that in. Similarly, we know immediately after you check each of the guards, Q and that guard must be true and you can fill that in. That's just a matter of filling in what you know. So next, we focus on the guarded statements. What do we know? Well, let's just look at the first one. We know that after it is executed, if it's executed, R must hold. We therefore, know that the weakest precondition, S0, R must hold right before it. And we know how to compute that because we know how to compute the weakest precondition of simple assignment. It's a matter of replacing every occurrence of z with x so we can fill that in. And we can do the same thing for the second guarded command. OK? So what do we know next? Well, now we can ask the question, is it the case that Q and G0 implies the weakest precondition of S0 R. Well, you can kind of reason through that or you can take out a piece of scrap paper and actually work through it, but the answer is yes. Similarly, you can look at Q and G1. You can ask the question, does that imply the weakest precondition of S1 leaving you in the state where R is true? And again, you can either whip out a piece of paper and work through that or you can just eyeball it and indicates that the answer is yes. The one thing we forgot to check was whether Q implies that one of the guards is true and the fact is we probably should have done that first, so we ask that question here at the top and that's a matter of asking whether true implies that x is greater than or equal to 0 or x is less than or equal to 0, and from algebra, you know that that's true, as well. So here we've presented checking whether an if command is correct as a matter of filling out a worksheet. And this is going to become a recurring theme throughout the course. We like to organize our thoughts in terms of worksheets where we systematically work through the various steps. So if you then take away this specific example, what you're left with is a worksheet that you can fill out every time you run into an if command that involves two guards. ",
                                        "unit_id":"82e89355624e4d9dbb9d50f6f69e0fda",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"be3761da644e4b5da23bbdd3b18bee14",
                                "vertical_name":"2.4.4 A worksheet for proving an if command correct"
                            },
                            {
                                "units":[],
                                "vertical_id":"6b5d761a11a64749a3aa6f6a2db82ba5",
                                "vertical_name":"2.4.5 The if-then-else command"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0dbac50a5b924d64a3a50f80e1d9da6d",
                        "sequential_name":"2.5 The While Command",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Correct"
                                        ],
                                        "data":" Robert van de Geijn: The While command you've already encountered, first in week one, in the launch, when you were asked to look at a code segment and determine if it was correct, and then in week two, in the launch, where you were asked to annotate the code segment to convince yourself whether or not it was correct. The remainder of this week is going to focus, once again, on the While command. And this time, you're going to learn how to rigorously prove code segments that include a While loop correct. Let's start by looking at specification. Well, the specification is very simple. While G, the loop guard, is true, you execute the command to S. Now, I suggest you go back and you revisit both videos in the launch of this week, and then, I will meet you in the first video of the next unit. ",
                                        "unit_id":"1fcda96d85c645a8a62b383759938505",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e4aea95e50474ccba9315924d0052db4",
                                "vertical_name":"2.5.1 Specification"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Mathematical induction",
                                            "Inductive hypothesis",
                                            "Infinite loop",
                                            "Loop index",
                                            "Code segment",
                                            "Base case",
                                            "Loop variable",
                                            "Loop",
                                            "Code",
                                            "Variable",
                                            "Implies",
                                            "Case",
                                            "Correct",
                                            "False"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: OK. So this is the moment you've been waiting for ever since week one-- how to actually prove a program is correct. So let's go back to that example with which we launched week two. Here's the code. What is it supposed to do? It's supposed to sum the elements in array b, where the size of array b is n. And what does it do? It initializes a variable s in which you're going to accumulate the sum to 0. And then you initialize the loop variable k equal to 0. And then you kinda a loop. You add the elements of b to s, and you increment the loop index. So in week one, you were introduced to the principle of mathematical induction. And you may have noticed in the launch for week two that the explanation that motivated that the code may be correct really looked an awful lot like mathematical induction. And indeed we claimed that it was mathematical induction at work. Now, how can we convince you of that? Well, here, we have annotated once again that same code segment. And notice that we have used English sentences to make things a little clearer. And what we reason here is that before the while loop starts, s contains the sum of the first k elements of b. Now, why is that true? That's true because S is set to 0. The k is equal to 0. And if you sum over the empty range, then indeed you get 0. So that's like the base case for mathematical induction for the case where k is equal to 0. And then what we reasoned was that, if at the top of the loop, s contained the sum of the first k elements of b, then the update in the loop put us back into a situation where s equal to sum of the first k elements of b. And notice that along the way, k was incremented by 1. Now, that's very much like an inductive hypothesis. s equals the sum of the first k elements of b, and then the inductive step, where you show that if it's true for k, then it's also true for k plus 1. So what can we conclude from that? We can conclude from that that, every time through the loop, s equals the sum of the first k elements of b at the top and at the bottom of this loop. Now, notice that if we ever get into the situation where the loop guard becomes false, then we come out of the loop. But no computation happened between the assertion at the bottom of the loop, s equals the sum of the first k elements of b, and the check that we did to see whether we should stay in the loop, k less than n. So that means that, when we come out of the loop, it's again the case that s equals the sum of the first k elements of b. But now it's no longer the case that k is less than n. And since k is no longer less than n, we conclude that k is equal to n. And therefore, we have computed the sum of the first n elements of b. In other words, we have computed the sum of all elements of b. So that's mathematical induction. Here, we say exactly the same thing, except that we use mathematics to say it. Now, this condition that holds before and after each iteration of the loop and therefore, holds before the loop starts and when we come out of the loop, is called the loop invariant. And it is key to proving that a loop executes correctly. Here, we've taken away the specifics of this example. So what do we have here? We have the precondition Q and the post-condition R. We would like to show that this loop takes us from a state in which Q holds to a state where R holds. We have this predicate, called the loop invariant, which we would like to be true at various points in this while loop. If we can show that Q implies the loop invariant, then we know that the loop invariant is true before the loop commences. That is like the base case in mathematical induction. If we can show that if the loop invariant holds as well as the loop guard before s, then we will again end up in a state where the loop invariant holds. Then we can conclude that the loop invariant holds before and after the statement s every time through the loop. That's the inductive step in mathematical induction. Eventually, hopefully, the loop guard becomes false, at which point we come out of the loop. But notice that we knew that at the bottom of the loop, after statement s, the loop invariant was true, and therefore, we can conclude that the loop invariant is true after the loop. But now also the loop guard is false. If we can then show that the fact that the loop invariant holds and the loop guard is false implies R, then we know that this code segment is correct. What we haven't discussed is how to prove that eventually, the loop guard becomes false. That's important, because otherwise, you may end up in an infinite loop. And notice that we want commands to finish. Otherwise, you can't say that they finish in a state where the post-condition holds. What we're going to do for the remainder of this section is work out the details, so that you learn how to prove a loop correct. ",
                                        "unit_id":"02369c99f57e4696bbde531c81008994",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8d2974e119a7403d89f6bd54e2f7d568",
                                "vertical_name":"2.5.2 Correctness"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Hoare triple",
                                            "Loop invariant",
                                            "Mathematical induction",
                                            "Partial correctness",
                                            "Weakest precondition",
                                            "Base case",
                                            "Left side",
                                            "Invariant",
                                            "Apply",
                                            "Guard",
                                            "Loop",
                                            "Step",
                                            "Ll",
                                            "Side",
                                            "Result",
                                            "Thing",
                                            "Simplification",
                                            "Split",
                                            "False",
                                            "Implies",
                                            "Correct",
                                            "Precondition",
                                            "Range",
                                            "Unit",
                                            "Case",
                                            "Ve",
                                            "Hold",
                                            "Command",
                                            "Left"
                                        ],
                                        "data":" Robert van de Geijn: So hopefully you're starting to notice that we're getting a little bit more excited here. Why are we so excited about the while command? Well, in our field it's all about getting high performance. In order to get high performance you want to use loop based algorithms. In other words, while loops or for loops, because that inherently allows you to control how you march through matrices. And how you march through matrices allows you to control how you use the caches. And how you use the caches allows you to control how much memory movement there is. And how much memory movement there is all has to do with whether or not you can get high performance, because memory movement represents overhead that gets in the way of high performance. And you'll see a lot of that in week six. So while loops is what it's all about for us. And we're finally getting to the point where we know how to prove while loops correct. And our tool here is going to be the while theorem. Now, what's the while theorem? The while theorem, much like the if theorem is a checklist that you can use to check whether a loop is correct. And we've been building up to this by talking about the loop invariant, where the loop invariant must be true, and how the loop invariant really allows you to use the principle of mathematical induction to reason about that loop. So what's the while theorem? Well, on the left you have a prototypical while loop that we have now annotated with a precondition, Q. The post-condition R, and the loop invariant, P sub inv. Hopefully you'll realize that the inv stands for invariant. And then we have a loop guard, G. And in the previous unit we've already reasoned through how Q must be apply the loop invariant, because you want the loop invariant to be true before the loop starts. That's the base case for our mathematical induction. And then we've talked about how you should be able to reason that the fact that the loop invariant holds, and G holds, before statement S, will, again, put you in a state where the loop invariant is true. That's the inductive step. You can then deduce, through mathematical induction, that the loop invariant holds before and after the execution of S every time through the loop. And then, finally, if you come out of the loop then you know that the loop guard is false. And if the loop invariant, together with the loop guard being false implies R, then you know that the Hoare triple Q while loop R is actually correct. Holds, in other words. And that is what is summarized on the right here. The checklist is, check that Q implies the loop invariant. Check that the Hoare triple loop invariant and G, S leaving you in a state where the loop invariant is true, holds. And check that the loop invariant, together with the loop guard being false implies R. Now, once you have proven that all you really have is partial correctness, because it's only if you come out of the loop that you will have computed the correct result. And what you then still need to prove is that the loop actually, at some point, will terminate. And that's the topic of the next unit. In a lot of our algorithms we're going to have an initialization step, a step I. And then the theorem changes slightly. Then you want to prove that Q implies the weakest precondition of the initialization commands, leaving you in a state where the loop invariant holds. So back to our example. What did you prove in some homework exercise? Well, you proved that zero less than or equal to n, together with the assignments 0 to s and 0 to k, leaves you in a state where the loop invariant is true. And how did we prove that? Well, this is what you need to prove. You instantiate the initialization command and the loop invariants. You then do textual substitution, according to the definition of assignments twice. And that leaves you in this state. Then you want to sum over the empty range, which tells you that 0 is equal to 0, which, of course, just is true. So you can do and simplification. And then you end up with the precondition 0 less than or equal to n having to imply 0 less than or equal to n. And that's, obviously, true through the simplification step. So that's the first thing you need to compute. So then you have to prove that if the loop invariant and the guard hold before the command S is executed then the loop invariant holds again after the command S is executed. And how do you do that? Well, you just kind of plod through it. This is what you need to prove. You instantiate. Notice that we don't instantiate to the left of the assignment because we're going to do a lot of manipulation on the right first. We then do the textual substitution of k plus 1, n for k everywhere it occurs. We then do a textual substitution of S, replacing it with S plus b of k. We then recognize that we probably should split off the last term of the quantifier on the right. So you get that. Then you can cancel b of k on both sides. And you get this. Then you notice that S equals the same quantifier on the left as on the right. And all you're left with is to wonder whether 0 less than or equal to k less than n implies minus 1 less than or equal to k less than n. And if you want to do that formally then you split minus 1 less than or equal to k less than n into minus 1 equals k, or 0 less than or equal to k less than n, because that then gives you exactly what's on the left side of the assignment. And then you can do and distributivity, and weakening strengthening. And actually, after this video, we're going to have this small exercise that helps you reason through the fact that this then results in true. So then you're left with, is it the case that if you come out of the loop, where the loop invariant now is true, and the guard is false, is it the case that that implies that you have computed the correct thing? So this is what we want to prove. We can instantiate that. Just now we wait with instantiating R. We do some algebra, where we notice that not k less than n means k is greater than or equal to. And now we have that k is less than or equal to n, and k's greater than or equal to n. So we conclude that then k is equal to n. We now instantiate R. And notice that what's on the left is almost what's on the right, except the left the range goes up to k. On the right the range goes up to n. But we know that k is equal to n. So we can substitute that in on the left. And then we notice that we have something that we can apply weakening strengthening to to conclude that this is true. Just like we had a worksheet for checking whether the if command is correct, we can now create a worksheet for checking whether a while loop is correct, at least whether it's correct, if we know that the loop actually terminates. And in the next unit we're going to talk about how we determine that the loop actually does terminate. ",
                                        "unit_id":"278ac4d844394c7d9fec524ec2972497",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Guard",
                                            "Show",
                                            "Command",
                                            "Hold"
                                        ],
                                        "data":" Maggie Myers: In this video what I'd like to do is to summarize all of the steps we would need to show in order to show partial correctness of this while loop that adds the contents of vectors A and B and stores that result in C. So notice that we're given a invariant. And we know the invariant has to hold before we start iterating. If the invariant and the guard hold at the top of the loop, and we perform an iteration, the invariant has to be true after we perform the command inside of the iteration. And when we exit the loop, the invariant still holds, but now the guard does not. That needs to lead us into a state satisfying the post-condition. So we need to prove three predicates in order to show partial correctness. We need to show that the precondition implies the weakest precondition of the command that is our initialization, invariant. And then we need to show that the invariant and the guard imply the weakest precondition of the client in the loop, invariant. And we need to show that the invariant and not the guard implies the post-condition for the program segment. So in the next videos what I'm going to do is to create one video each, showing that these predicates actually are TRUE. ",
                                        "unit_id":"4247da739f244abf99c76e6fefbd6e76",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Start",
                                            "Empty",
                                            "Substitution",
                                            "Range",
                                            "Implication",
                                            "Invariant"
                                        ],
                                        "data":" Maggie Myers: In this video I want to show that the invariant holds before we start the while, and so I need to show that Q implies the weakest precondition of the initialization, invariant. In order to do this, I need to first instantiate for the initialization and the invariant. I notice that I'm trying to find the weakest precondition of an assignment, so I know I need to perform a textual substitution. In the quantifier and, in fact, in the invariant, I'm going to do a substitution of 0 for k. So that leads me to needing to evaluate for all over the range where i is from 0 to 0 including 0, but not including 0, which is empty. And a for all over an empty range I know is TRUE. Then the interval that I find that I have is the 0 is less than or equal to 0, and 0 is less than equal n, and I could split it into those two pieces. 0 lesser than or equal to 0 is TRUE. So it simplifies to 0 is less than or equal to n. In fact, by AND- simplification, the right hand side of the implication is going to simplify to 0 is less than n. It's not exactly in the form of AND- simplification, but I know I can reshuffle using commutativity and associativity. So I find I have Q implies 0 is less than or equal to n. But instantiating for Q, I find I have 0 is less than or equal to n implies 0 is less than or equal to n, which by identity or implication simplification, or you could say weakening, strengthening, whatever you call it, it's TRUE. Which means I know that the invariant poles before I start iterating. ",
                                        "unit_id":"44dfff6e7c5c4aa384913a6fd6539b36",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Inductive proof",
                                            "Right hand side",
                                            "Inductive hypothesis",
                                            "Left hand side",
                                            "Sequential composition",
                                            "Command",
                                            "Guard",
                                            "Perform",
                                            "Ll",
                                            "Write",
                                            "Invariant"
                                        ],
                                        "data":" Maggie Myers: In this video we want to show if the invariant holds and the guard holds, that once we perform the command inside of the while loop, we end up in a state satisfying the invariant, which means we need to show that the invariant and the guard implied the weakest precondition of command inside of the while loop, invariant. How do we do this? Well, first let's instantiate the command inside of the loop, invariant, and notice that the command inside of the loop is actually the sequential composition of two commands. And so if we want to find the weakest precondition of that sequential composition, we know the post condition for the first command is the weakest precondition of the second command invariant, but that second command is an assignment where k becomes k plus 1. So everywhere in the invariant, we find a k we do a textual substitution of k plus 1, and that leads us to a quantification where i ranges from 0 to k plus 1, and an interval where 0 is less than or equal to k plus 1 is less than or equal to n If we look at this quantification a little more, we will notice that the range is that 0 is less than or equal to i is less than k plus 1, which we could write a 0 is less than or equal to i is less than or equal to k. And since I want to do an update on c k, what I think I'd like to do is to use splitting the range of the quantifier here before I look at the weakest precondition. And so what I'll do is I'll write this quantification as for all i between 0 and less than k, c i is equal to a i plus b i, and when i is equal to k, c k is equal to a k plus b k. So now when I do the textual substitution, c k becomes a k plus b k what I'm going to do is do a textual substitution for c k a k plus b k, because I'm trying to find the wea kest precondition of an assignment. I find that I have the quantifier and a k plus b k is equal to a k plus b k, and an interval. Now let's look at this. a k plus b k equal to a k plus b k is TRUE. Any expression, and TRUE, is the expression. In addition, what I can do is rewrite this interval, if 0 is less than or equal to k plus 1 is less than equal to n, I can change the interval to describe the range of k. That would mean that k would have to be greater than or equal to negative 1, and less than or equal to n minus 1. But being less than or equal to n minus 1 is equivalent to being less than n. So, my predicate actually simplifies to the invariant and the guard imply this quantification and negative 1 is less than or equal to k is less than n. Let's instantiate now for the invariant and the guard. Now notice that both the invariant and the guard have intervals that tell us the range of k. Well, according to the invariant, k is between 0 and including n, and the guard says it's strictly less than n, if I use , associativity and then perform arithmetic, I can rewrite that as k is between 0 and not including n. I also can look at the interval, negative 1 is less than or equal to k less than n, and rewrite that as either k is equal to negative 1, or it's between 0, and not including n. Then what I can do is I can distribute the quantifier through this or statement that I just created. Now why did I do all this? Because if I stare at what I have on the left-hand side, and what I have on the right-hand side of this implication, there is a lot they have in common. And the stuff that's left over on the right-hand side is or stuff. Which means that by weakening and strengthening, I know that my predicate is TRUE. And so I have just shown that, after an iteration, we are in a state satisfying the invariant again. Of course, that means by inductive hypothesis and an inductive proof, if we started in a state satisfying the invariant, and when we iterate, we end up in a state satisfying the invariant, every time we iterate, we end up in a state satisfy the invariant. So this will help prove partial correctness of loop. ",
                                        "unit_id":"b674251dfb4345b88b5d1e0f3042e95d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Guard",
                                            "Implies",
                                            "Notice"
                                        ],
                                        "data":" Maggie Myers: The last thing I want to show is that the invariant and not the guard implies the post-condition. So if we exit the while loop, we do end up in a state satisfying the post-condition. For this, I need to instantiate. This time I'm going to instantiate everything. So I have the invariant and not the guard imply the post-condition. If I notice not the guard, if k is not less than n, it's greater than or equal to n, then I also notice that if k is between 0 and n and greater than or equal to n by arithmetic, it must be equal to n. But if k is equal to n, I can substitute into the expression a k for n and n for k. And as long as I keep that predicate as a subpredicate, I can go back and forth as many times as I want. So I have equivalents. And so substituting for k n, I get this quantification and n is between 0 and n and k equal n implies the post-condition. But looking carefully at this, you'll notice that this quantification and the post-condition match exactly. And the stuff that's left over is AND this piece AND this piece. So by weakening and strengthening, this implication actually is true, which means that when the guard is not true, we do end up in a state satisfying the post-condition. ",
                                        "unit_id":"70f945b086d24a05a1648d0b1c1f0e7b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a65e8de228a64e729d9255bfe781a1b0",
                                "vertical_name":"2.5.3 The While Theorem"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Total correctness",
                                            "Weakest precondition",
                                            "Finite number",
                                            "Dummy variable",
                                            "Temporary variable",
                                            "Bound function",
                                            "Loop invariant",
                                            "Loop index",
                                            "Classic case",
                                            "Idea",
                                            "Bound",
                                            "Variable",
                                            "Implies",
                                            "Function",
                                            "Loop",
                                            "Algebra",
                                            "Present",
                                            "Command",
                                            "Prove",
                                            "True",
                                            "Case"
                                        ],
                                        "data":" Robert van de Geijn: So now we are going to tidy up the last little bit. We're going to prove that the loop actually finishes. OK. So this is the while theorem. And we already discussed partial correctness, how to prove that the loop is correct if we assume that it actually finishes, that eventually the loop guard becomes false. For total correctness we need to prove a little bit more. And here is the idea. How do you reason through that a loop completes? Well, usually you have some quantity, often the loop index, that is incremented or decremented every time through the loop. If it's incremented every time through the loop, usually, there is a bound on how big it can get. Usually you have a for loop where you say for i equals 1 to n. That means i is incremented every time through the loop. It eventually is equal to n. And therefore, you know that the loop is going to be executed a finite number of times. In other cases it might be that a loop index is decremented. In, yet, other cases there is some other means by which to reason that the loop is going to be executed a finite number of times. By convention, we're going to assume that whatever quantity is going to tell us that eventually we will finish, that quantity, or bound function as we will call it, will decrease every time through the loop. Now, this is a convention. And we're going to make the convention that whatever the function is, that decrements every time through the loop, it is actually bounded below by 0. And that's where this t greater than or equal to 0 comes from. The second part there says that if we are in the loop, if the loop invariant and the loop guard are true, then we're going to think about what this bound function is at the top the loop. We're going to assign it to a dummy variable, a temporary variable, in which we're going to hold the value as it was. Then we're going to execute the body of the loop. That's the command S. And then we're going to require for the bound function to have decreased in value, which means that it now needs to be less than this t prime that was the temporary variable that held the original value at the top of the loop. So that's the approach. Now, our loop usually looks a little bit more complex in that we have an initialization command indicated by S of i. OK. So here's our prototypical example that we've talked about so much. And what this example does is that it sums the entries in the array b. We've created some space in which to doodle so that we can explain what this whole bound function idea is all about. Now, let's think about it. We know that when we're in the loop the loop invariant and the loop guard are true. So we know that k is less than n. So now we know two variables that appear in the loop, k and n. And what we want to do is think about a function of k and n such that that function is bounded below by 0, and such that the function decreases in value every time we execute the loop. So let's think about it. K less than n means that 0 is less than n minus k. And that obviously means that 0 is less than or equal to n minus k. So that is what we mean by the bound function, this n minus k, it is bounded below by 0. And we can, kind of, look at this and say, it's going to decrease every time we go through the loop because k's going to increase every time we go through the loop. So this is a very good candidate. So what do we know? We know that zero must be less than or equal to n minus k at the top of the loop. What else do we know? This gets a little bit more complicated. Well, we have n minus k. We want to show that it decreases when we execute the statement S. And how would we reason through this? Well, we would say, well, before we execute s n minus k as some value, and then after we execute S that value has decreased by 1. So here what we're saying is, let's use a dummy variable, a temporary variable, a t prime. And let's store in it what n minus k was before the execution of command S. And then let's check, after the execution of command S, where the n minus k is now less than this stored value. That's the basic idea. So all we, now, have to do is check two things. We need to check whether the loop invariant and the loop guard implies that this function that we chose is greater than or equal to 0. And we can instantiate what we chose to be that function, n minus k. And we can instantiate G. Usually the loop invariant isn't all that important in this discussion, although sometimes it is. And we ask, now, the question, is it the case that k less than n implies that n minus k is greater than or equal to 0? And we can then formally prove this. On the right we can apply algebra to come up with k is less than or equal to n on the right of the implication. We can then separate out k equals n. And then we end up with a classic case where a weakening strengthening law applies and leaves us with true. Then we move on, and we ask, is it the case that this Hoare triple holds? How do we prove that that Hoare trple holds? Well, we need to prove that the loop invariant AND G implies that the weakest precondition of t being assigned to t prime, followed by the execution of S, puts us in a state where t is less than t prime. We can instantiate what we chose for t and what the command S is. That gives us a composition of three assignments, for which we, now, need to compute the weakest precondition. We do a textual substitution of k plus 1 for every occurrence of k in the post-condition. We do a textual substitution of s plus b of k for every occurrence of s. And notice that there is no occurrence of S. So that's easy. And then we do with textual substitution of n minus k for every occurrence of t prime in the predicate. Now, notice that all along we did not instantiate the loop invariant, or the loop guard. And again, that's often the case. And that can save you a lot of writing. So now we do a little bit of algebra. And we find that we need to check whether minus 1 is less than zero. And that's obviously true. And anything implies true. And therefore we know that the assertion holds. Now, notice that not only should we indicate the loop invariant now. But we should also indicate what the bound function is when we present an algorithm. So here's sort of the worksheet that we have been using all along. We have the loop invariant in a lot of different places. We have the loop guard in a lot of different places. And now we have this bound function to deal with. Now, notice that we only really need to indicate what the loop invariant is once, because we know where it then needs to be true. And we only need to indicate the bound function somewhere, because we know what to do with it. And that means that often when people present an algorithm they present it in the shortened version where the loop invariant is given just before the loop, as is the bound function. ",
                                        "unit_id":"acec54bc430644118707c3ecd8777075",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Bound function"
                                        ],
                                        "data":" Maggie Myers: Now, in this video, I want to show that the bound function that we created in the last actually is going to be greater than or equal to 0 while we're iterating. And so I instantiate. The bound function was n minus k, and the guard is k is less than n. But that means that by arithmetic, k being less than n is the same as 0 is less than n minus k. This is equivalent to n minus k is greater than 0 or it's equal to 0. But what I'll have is something that they have in common, and the invariant stuff implies the part that they have in common or n minus k is equal to 0. So by weakening and strengthening, it clearly is true. So that was easy to prove. ",
                                        "unit_id":"8cec80fc324349189f9ebf401dfecc1d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Bound function",
                                            "Weakest precondition",
                                            "Code segment",
                                            "Sequential composition",
                                            "Function",
                                            "Original",
                                            "Guard",
                                            "True",
                                            "Terminate",
                                            "State",
                                            "Loop"
                                        ],
                                        "data":" Maggie Myers: In this video what I'd like to do is to show you that this bound function decreases every iteration. So I need to show that if the invariant and guard hold, then the weakest precondition of a copy of the bound function followed by the assignment in the loop leaves us in a state where the copy is larger than the original bound function. So by instantiating for the command in the loop and for the bound function, we find that the invariant in the guard implies the weakest precondition of a sequential composition of several different commands post condition, which is t prime is greater than n minus k. So by sequential composition, we know that the weakest precondition of a sequential composition is found by letting the post condition of the first few commands be the weakest precondition of the last command, t prime being greater than n minus k, but that last command is k becomes k plus 1. So the weakest precondition this is found by doing a textual substitution for k of k plus 1. Now again, we have a sequential composition so to find the weakest precondition, the post condition is going to be the weakest precondition of ck becoming ak plus bk where it's post condition is the copy is greater than n minus the quantity, k plus 1. Well if we look at this, our post condition is not a function of ck at all. So this update of ck is a do nothing. It's almost like a skip, and the weakest precondition of a do nothing or skip is the original post condition. So the weakest precondition of this will be t prime is greater than n minus the quantity, k plus 1. Now we need to find the weakest precondition of the copy where the post condition is t prime is greater than n minus the quantity, k plus 1. So again, it's an assignment so we do a textual substitution. For t prime and we substitute n minus k. So we have an invariant and a guard implies n minus k is greater than n minus k minus 1. Well, if we think about it on the right hand side n minus k being greater than n minus k minus 1 has to always be true, and any expression implying true by implication simplification is true, and so regardless of what the invariant and the guard are, our situation by defining our bound function to be n minus k, it's always decreasing while we're integrating. And so we have shown that the loop does terminate and along with showing partial correctness that showed us if it terminated it ended up in a state satisfying the post condition, knowing now that it does terminate means that our code segment is correct. ",
                                        "unit_id":"bf7aa15bd91141a994b2e11cc015f227",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e561aab4d98c4490b61ea3873cd3de13",
                                "vertical_name":"2.5.4 Total correctness"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Turing award",
                                            "Douglas adams",
                                            "Title page",
                                            "Thought process",
                                            "Hand",
                                            "Programmer",
                                            "Prove",
                                            "Code",
                                            "Dijkstra",
                                            "Correct",
                                            "Ve",
                                            "Program"
                                        ],
                                        "data":" Robert van de Geijn:This week has introduced you to the various techniques we use to prove programs correct, and hopefully you found this enlightening. Hopefully, you recognize that coming up with the proofs are a bit of a puzzle. Parts of it are very systematic. Parts of it, like the proofs themselves, require you to have a certain amount of experience as you put the pieces together. The question, of course, is-- Is this worthwhile? Isn't this a lot of work? Wouldn't it be better to just kind of test things? Isn't it the case that we're only doing this for very simple programs? What if we have double nested loops? What if we have triple nested loops? Well, that's where we get to the title page of this particular unit, Don't Panic. Where does that come from? Well, one of my favorite books is Douglas Adams's Hitchhiker's Guide to the Galaxy. And the Hitchhiker's Guide has \"don't panic\" in large, friendly letters on the cover. And, similarly, I'd like for you to not panic. Don't let what you may perceive as complexity when it comes to the actual proofs get in the way of understanding and finding out how useful this actually all is. And you're going to find out it's extremely useful. At the very least, the way we kind of structured the proofs around what turned out to be these various worksheets that allow you to check whether different parts are correct, relates to how you should be thinking as you program, even if you don't take the very formal approach that we are now trying to teach you. Let's move on to some more words of wisdom. In Dijkstra's The Humble Programmer, the acceptance speech for his Turing Award, he points out, \"But one should not first make the program and then prove its correctness, because then the requirement of providing the proof would only increase the poor programmer's burden.\" So what this really means is-- Look, don't hack together a piece of code, whether it's pseudocode or real code, and then try to prove it correct. Because then you have to go through all of the steps that you just learned, and you may find this overwhelming, and the temptation would be there to just skip it. Instead, as you are designing the program, as you are developing the program, you should build the proof of correctness into your thought process and, importantly, into the derivation of the program itself. OK. So that's the second part of this quote-- \"On the contrary-- the programmer should let correctness, proof, and program grow hand in hand.\" And what we've really discovered over the years is the wisdom of exactly that. And what you're going to discover in week 3 is how to do this for simple programs, and then in weeks 4 through 6, for much more complicated operations that we've encountered in the field of dense linear algebra. So, week 3 will all be about the goal-oriented programming that Dijkstra advocated all along. And you're going to learn how to derive programs hand in hand with proofs of correctness. And you're going to actually find out that doing that is easier than a posteriori proving that your program is correct. So, don't panic. Hang in there. It'll all be OK. ",
                                        "unit_id":"352cc12b27a94c339418886e735cc260",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2d7677098d0643cf8fcb3070004d3396",
                                "vertical_name":"2.5.5 Don't Panic"
                            }
                        ]
                    },
                    {
                        "sequential_id":"23d150222b244edf8563af1962c0e03c",
                        "sequential_name":"2.6 Enrichment",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Read"
                                        ],
                                        "data":" Read Unit 2.6.1 of the notes. [LINK to Week2.pdf] It is important that you actually read this in the notes. ",
                                        "unit_id":"235cfd2729aa473b8a61d1812456a762",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a1883dcad69e43148250f0d67d919f8c",
                                "vertical_name":"2.6.1 The do command"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"21216c97ab1741d99b5a743143d46163",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0f23e9e3100e49d6aa4de81a0000e1ec",
                                "vertical_name":"2.6.2 Desirable properties of a language"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Hoare logic",
                                            "Microsoft software",
                                            "Axiomatic definition",
                                            "Formal derivation",
                                            "Great inventions",
                                            "Royal society",
                                            "Pure science",
                                            "Compiler writer",
                                            "Edsger dijkstra",
                                            "Called",
                                            "Research subject",
                                            "Program",
                                            "Tool",
                                            "Short",
                                            "Science",
                                            "Time",
                                            "Correct",
                                            "Dijkstra",
                                            "Compiler",
                                            "Benefit",
                                            "Chose",
                                            "Deliver",
                                            "Understanding",
                                            "Correctness",
                                            "Company",
                                            "Life",
                                            "Floyd",
                                            "People",
                                            "Research",
                                            "Put",
                                            "Wanted",
                                            "Made",
                                            "Thought",
                                            "Absolutely",
                                            "Ve",
                                            "Subject",
                                            "Assertion"
                                        ],
                                        "data":" So today it's our great pleasure to host Sir Antony Hoare, who is very well known in computer science circles. Obviously, one of the great inventions, the Quicksort, which Dijkstra actually said was one of his top 10 inventions, in a talk he gave here once. But for our course, more importantly, for having invented Hoare logic, which much of what we do in our course, actually, much of what we do in our course is based. So, welcome, it's a great pleasure. Thank you very much. Maybe you can take us back to the early 1970s, late 1960s, and tell us a little bit about how you stumbled upon all these very important insights of yours. Well, at least I can reconstruct how to do this. My first job was with a computer manufacturer, a small computer manufacturer, writing a compiler. The language that I chose, or the company chose, to implement was Algol 60, which was the first language to have a well-developed syntactic method for describing the grammar of a language. Everybody recognized that was a very great achievement and very useful in conveying understanding of what-- what was allowed to be written in the language and what wasn't. But could they do it for the meaning of the language, the implementation, the semantics of the language, not just the syntax. So there were conferences in Europe, perhaps primarily on the subject of how to extend this formalism for descriptions, semantics. And I, as a compiler writer, didn't want the language to be too closely defined because, otherwise, it would become machine-dependent and manufacturer-dependent. The way to do it is axiomatically, by stating what properties you think your implementations should preserve in the programs concerned. I was a disciple of Edsger Dijkstra, like you, and so I had an ideal that an axiomatic definition, which could be used for reasoning, as well as, for understanding the execution of programs, would be the most useful one because it would enable the programmer to write programs which does what the user wanted and, at the same time, the freedom to the implementer to implement it as efficiently as possible, on the machine that was available. That was my argument, anyway. Did people buy into this from the beginning? They-- it was quite popular to begin with, and then it, sort of, fell out of fashion. But I kept onto it. I wanted to continue in research in this area, axiomatic definitions, but I realized that the application of the results of the research was unlikely to be of use in industry for many years to come. But, nonetheless, the right place to do the research would be at a university, where you were not required to deliver products, useful knowledge or products-- At least not a short one. A short time schedule. I was quite young, 35, appointed as a professor. And so, I wanted to choose something that would not be of use, would last me, as a research subject, for all my life, 32 years at the academy. And I reckoned that proving correctness of programs would be just such a subject because it, obviously, is a very academically correct thing to do, an academic challenge, but wouldn't be industrially useful for 32 years. But it's-- Well, the professorial appointment that I applied for, entirely experimental, you're not expecting to get it, just getting experience, it was offered to me and I accepted it and went to Belfast, in 1968. They're still very proud of the fact you were there. I was there a couple years ago. The first thing-- as a matter of fact, they made me give a talk on formal derivation, in addition to my other talks, specifically, because they were very interested because of your herit-- legacy there, I should say. Yes. Anyway, continue. As I was unpacking my papers from moving into a new house, I discovered a previously neglected manuscript that Bob Floyd had sent me, which was a roneographed copy of his article on \"Assigning Meanings to Programs.\" And I immediately thought, my previous attempts at axiomatization has nothing compared with the insight that Floyd had, as to how to assign meanings to programs. And so, I made that the subject of my first article as a professor in Belfast. It was called the Axiomatic Basis of Computer Programming-- An Axiomatic Basis, and it's been referenced quite a number of times. And they lead-- that was the subject of my lifetime's research. And when I actually reached retirement age, I got an offer of a job, again, from industry. Microsoft research was opening up in Cambridge and offered me a job. I thought this would be a wonderful opportunity to see whether my prediction was correct or not, whether people were using the techniques. When was this? This was in 1999. So I went up there, I visited the development division and, indeed, I found my prediction was correct. They're There was nobody using Hoare logic to verify the correctness of programming. But they were using assertions. Yes, of course. So I thought, oh, that may be-- First step. Well, that's the first step, absolutely, the specifications, and so on. They weren't using assertions for specifications, they weren't using assertions to talk about developmentive algorithms, like you do. However, many sensible people do. They were using it to help in program testing. Now program testing is something I've been preaching all my academic life against. I don't think anybody really likes program testing very much. But the advantage of assertions is, of course, put an assertion in and then you can get the program tested overnight, and you only get an error report if the assertion fails. And then, if you're trying to chase a bug, you can put more assertions in around the place and find out exactly where-- if not more closely to the actual occurrence of the bug, it will be detected. Let's say you can hone in on the actual-- Well, a lot of people use looping variants, they just don't use looping variants to derive the loop. They use it as assertions again to-- I think that's-- that's right, yes. So, and then, what happened was the virus was discovered. And the virus has a property, firstly, that it can cause billions of dollars of damage to the international economic equilibrium. And secondly, that it can reach places in your program that you never even believed were there. So they set up-- they bought a company which provided a program analysis tool called PREfix and took over the people. They adapted it, scaled it up to the enormous sizes of Microsoft software, which is only having 20 million lines of code, you know. But anyway, they got this through, and it became, more or less, mandatory that everybody had to use this tool. And the tool is-- I made friends with the person who designed it, John Lucas, and we had created grand plans that we would put assertions into this tool and integrate the assertions into the program testing process so that people would be encouraged to use it. And so they did that. But this still sounds like it is an a posteriori process, where you insert this after you've already written the code, as opposed to using it to help develop the code. Oh, absolutely, yes, yes. That's a very long way away, but I think you've selected an area of application in which the solution is just meet the bill but your algorithms are reasonably regular. Yes, it takes a family of problems for which this lends itself very well. What's exciting is for each operation, you get lots of different implementations which, of course, is much more fun than having one pop out in the end. I think so. I think it's absolutely the standard way in which science, even a pure science, can, kind of, really deliver its benefits to engineering. Engineering can find one solution to a problem that suits a particular client in a particular take-- time, within a particular budget. Science, hopefully, we give them all the solutions. You give them all the solutions. And that means, you have-- you've become a much better, more flexible engineer. Well, what we're hoping, of course, to do with this course is to teach the masses how to think this way and then they can take it way beyond just learning algebra. It's either that, or I have to take it way beyond learning algebra, and I'd much rather have somebody else take that on. It's a scary world out there. Indeed. When-- when I visit-- go university and other universities, and a number of industrial establishments, or attend a conference, or go to discussion meetings-- discussion meeting of the Royal Society a few weeks ago, there are-- there's a massive, incredible talent and interest and enthusiasm and idealism, which is not being directed on the kind of problems we're just leaving behind. Well, we hope to equip people with, at least, some tools and some skill. I'd like to thank you. This has been absolutely delightful. You have a very busy schedule, so we'll let you get on and let other people benefit of your wisdom, but thank you so much. Thank you. This has been very, very nice. ",
                                        "unit_id":"72225c00d64e43009c14519ef93aafe7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0a50b5fba552429b87731062f12f1a0f",
                                "vertical_name":"2.6.3 A conversation with Sir Tony Hoare"
                            },
                            {
                                "units":[],
                                "vertical_id":"3dbc373b25c34796a73fe39c9a0c2145",
                                "vertical_name":"Unit"
                            }
                        ]
                    },
                    {
                        "sequential_id":"b6258752fa3e4b49abdb6d3321280100",
                        "sequential_name":"2.7 Wrap Up",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Greatest common divisor",
                                            "Code segment",
                                            "Original content",
                                            "Euclidean algorithm",
                                            "Positive integers",
                                            "Positive numbers",
                                            "Original",
                                            "Greater",
                                            "Algorithm",
                                            "Positive",
                                            "Correct"
                                        ],
                                        "data":" MAGGIE MYERS: In the next few videos, what I'd like to do is to show that the Euclidean algorithm for finding the greatest common divisor of two positive numbers to positive integers, represented by this algorithm, is correct. So first of all, in order to show it's correct, I'm going to need to use some laws of greatest common divisors, and I'm not proving these. You would learn to prove these in an algebra course. But if x is less than y, the greatest common divisor of x and y is the same as the greatest common divisor of x, y minus x. If x is greater than y, the greatest common divisor of x, y is the greatest common divisor of x minus y, y. And if x and y are equal, their greatest common divisor is themselves. So we'll use these laws in order to prove our algorithm correct. Let's take a glance at this algorithm. So we start off in a state where x hat, the input in x, and the input in y are both positive. And then the invariant is that the GCD of x, y is the same as the GCD of the original x, the original content in y. And x is still positive but less than or equal to the original content, and y is positive but less than or equal to its original content. As long as x is not equal to y, what we're going to do is-- well, it's going to depend. If x is less than y, y becomes y minus x. If y is less than x, x becomes x minus y. And we continue this until they are equal. We leave the loop and end up in a state where the greatest common divisor of our original content is the x and y that are equal to one another. So just to make sure we have an understanding of this algorithm, I thought we could go through and look at the algorithm applied to a couple numbers. So I picked the numbers 45 and 150. So originally, y is larger than x-- greater than x. And so x stays 45, but y becomes 150 minus 45, or if I did my arithmetic correct, 105. 105 is larger than 45, so x stays 45. And now y is updated to now being 105 minus 45, which is 60. They're not equal. y is still larger. x stays the same, and now y is 60 minus 45, which is 15. They're still not equal, but now x is larger. So y stays 15, and x becomes 30. They're still not equal. One more time, y stays the same. It's 15. And x is 30 minus 15, which is also 15. So now that they're equal, that tells me that the GCD of 45, 150 is 15, and I think it worked. So in the next video, what I want to do is map out the different predicates we will need to show to prove that this code segment is correct. ",
                                        "unit_id":"bd50ec1e8ff94c749fc89a471feea0c3",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Greatest common divisor",
                                            "Code segment",
                                            "Euclidean algorithm",
                                            "Bound function",
                                            "Weakest precondition",
                                            "State",
                                            "Correct",
                                            "Function",
                                            "Implies",
                                            "Precondition",
                                            "Invariant",
                                            "Show",
                                            "Hold",
                                            "Ll",
                                            "Updated",
                                            "Loop",
                                            "Guard",
                                            "Prove",
                                            "Command"
                                        ],
                                        "data":" Maggie Myers:In this video, I want to outline the predicates that we would need to prove correct in order to show this code segment correct. This is the code segment that uses the Euclidean algorithm to find the greatest common divisor of two non-negative integer inputs. So notice that the code segment involves a loop. So we know there is an invariant. The precondition is that we input two integer values that are both positive, and the invariant is that the GCD of these inputted values is the GCD of some updated values found in the variables x and y. But both x and y are positive and are both less than or equal to the inputted variables. So we know that because, if this is TRUE, this invariant holds before we start the loop. If it's TRUE and we do an iteration, which means at the top the invariant holds and the guard holds, that after we perform the command we will end up in a state satisfying the invariant again. And when we exit the loop, which means that the guard does not hold, but still the invariant holds, that that's supposed to imply the postcondition of the entire program segment. So let's list out the predicates that means we need to prove. Well since there is no command before we enter the loop, that means that the precondition must imply that the invariant holds. So that's the first thing we would need to prove. Then we would need to prove that if the invariant holds, and the guard holds, so we do perform an iteration, then we perform the command and end up in a state satisfying the invariant again. Then we need to show that if the invariant holds, but the guard does not, we exit the loop and that should leave us in a state satisfying the post-condition R. Now these show partial correctness. If I want to show total correctness. I need to show that the loop terminates. So in order to do that, I need to find a bound function t, which satisfies that while we are iterating, which means the invariant holds and the guard for the loop holds, that this bound function always takes on values that are bounded below by 0. And when we iterate, which means the invariant holds and the guard holds, if we made a copy of the bound function value and then we performed the command in the loop, we should end up in a state where the copy is greater than the updated. So this bound function decreases every iteration, which means it must have terminated. So we would need to figure out t, what is t, this bound function. Notice for these conditions to hold, it has to be a function of the variables that are being updated in the loop. x and y could be updated. Well, if this guard holds, x less than y, then y is updated but x stays the same. Otherwise x is updated and y stays the same. So this function, bound function t, can't just be a function of x or y alone, it has to be a function of both of them to ensure that every iteration it decreases. So I'm going to set t to be equal to x plus y. Notice x plus y are both supposed to be positive, or x and y are both positive so x plus y has to be greater than or equal to 0. And while one of the variables stays the same, the other decreases every iteration. So this function will be decreasing every iteration. So I think that this is the bound function that will work, we'll have to prove it but I'll save that for a later video. Notice I left some space here. The reason I left some space here is because the command inside of our loop is an IF command. And typically what we would do in order to prove a triple correct is we would show that the precondition implies the weakest precondition of the command, post-condition. In this particular case, though, for an IF, that weakest precondition is long and could be cumbersome. So we decided to use IF theorem. Recall the IF theorem would tell us if we had a IF command with two guards in order to prove it correct, we would need to show that the precondition for the IF implies at least one of the guards holds. And then for each one of the guards, we would need to show that the precondition and the guard implies the weakest precondition of the command corresponding to the guard, the post-condition. Well, let's see what that looks like for this particular case. Notice the command is an IF, but the precondition for that IF is that the invariant and the guard of the loop hold. So we would need to show that the invariant and the guard of the loop implies at least one guard for the IF must hold. Then we would need to show for each one of the guards that the invariant and the guard, since that's the precondition for the IF, and let's say the first guard implies the weakest precondition of the command corresponding to the first guard, y becoming y minus x, leading us into a state satisfying the post-condition for the IF. But notice the post-condition for the IF was the invariant. We would also need to show that the invariant and the guard for the loop and the second guard for the IF implies the weakest precondition of the command corresponding to the second guard, where the post-condition is the invariant again. So there are five, six, or seven different predicates that we would need to show hold in order to prove that this program segment is correct. And we'll do that in future videos. ",
                                        "unit_id":"66c9bdc0408c43b382b785b0b1fd84e3",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Commutative property",
                                            "Associative property",
                                            "Proving",
                                            "Implies",
                                            "Invariant",
                                            "Greater",
                                            "True",
                                            "Precondition",
                                            "Substitution",
                                            "Hat"
                                        ],
                                        "data":" Maggie Myers: In this video, I want to show that the precondition implies the invariant holds so that we can start proving this program segment correct. So the first thing I need to do is instantiate. And the precondition was that x is equal to x hat and y is equal to y hat, and both of the inputs are positive. The invariant is that the gcd of x y is the gcd of x hat y hat. And x is between 0 and x hat, including possibly x hat, and y between 0 and y hat, possibly including y hat. So we need to show that this predicate is TRUE, equivalent to TRUE. How do we do this? Well, here is a strategy we often use. Notice that we know that x is equal to x hat and y is equal to y hat on the stronger side for our precondition. What I'm going to do is use something called substitution, which allows me throughout the predicate to substitute where I see x an x hat or where I see the x hat an x. It doesn't matter which. I'm going to keep it here, but I can then substitute elsewhere so I can get back and forth. So by substitution I'm going to leave the stronger side as is. So I'm going to go back and write it as Q. Notice usually when I'm proving things, I don't instantiate Q until later, but this time I did right away because I noticed I could then use substitution. But now I'm just going to, again, write it as Q for a while. Q implies-- now if I substitute for x and x hat that gives us the gcd of x hat y hat, by substitution again, is this gcd of x hat y hat. And what I'm going to do is substitute here, x hat for x and y hat for y also, but I'm also going to split this interval because I can read this as 0 is less than x and x is less than or equal to x hat. With substitution I could write this as 0 is less than x hat and x hat is less than or equal to x hat. And then we would have 0 is less than y hat and y hat is less than or equal to y hat. Now I can do some simplification because I know by identity this is TRUE, that the gcd of x hat y hat is the same as the gcd of x hat y hat. I also know that x hat is less than or equal to x hat by identity, or you might think of it as algebra or arithmetic. It doesn't matter what you call it. The idea is x hat is equal to x hat, so it's less than or equal to x hat. So I'm going to say by identity this expression is equivalent to Q implies TRUE, and 0 is less than x hat and TRUE, and 0 is less than y hat and TRUE. OK. If I now want to simplify further by AND simplification, any expression and TRUE is the expression. So this is just Q implies TRUE and the expression that 0 is less than x hat and 0 is less than y hat. But I can rearrange. And so by the commutative property, by associative property, and by many AND simplifications, actually three AND simplifications, this is equivalent to Q implies that 0 is less than x hat and 0 is less than y hat. Well, let's look at Q. What is it? Again by instantiating, just to make sure that I have things in an order where I can see what's going on, this is equivalent to x is equal to x hat and y is equal to y hat, and x hat is greater than 0 and y hat is greater than 0 implies that 0 is less than x hat and 0 is less than y hat. OK. 0 less than x hat is the same as x hat is greater than 0 by algebra or arithmetic or whatever you want to call it. So this is equivalent to this. This sub-expression is equivalent to this sub-expression because y hat is greater than 0 is equivalent to 0 being less than y hat. And so our two sub-expressions have some commonality, commonality being they both have x hat greater than 0 and y hat greater than 0 involved. But the precondition has an extra. But notice I can use weakening and strengthening, because if I think of this part that they have in common as being the predicate p and the part that the precondition has that the invariant didn't through simplification have, it turns out that we have things in the form of p and q implies p. So by the commutative property, if I want to reorder, and by weakening and strengthening, I'm done. This is equivalent to TRUE. So s for success, I guess. We're finished with the first step in proving that program segment correct. ",
                                        "unit_id":"78ff2b3e34754eeb9572cb72ca7c97c7",
                                        "unit_type":"html"
                                    },
                                    {
                                        "data":"",
                                        "unit_id":"1cbdc88d39694f208290c47f68b7b223",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8abec068cb2f411ba623908fb3c17264",
                                "vertical_name":"2.7.1 Additional exercises"
                            },
                            {
                                "units":[],
                                "vertical_id":"f4ca9634f90a4b70a7678931ba9adcac",
                                "vertical_name":"2.7.2 Summary"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"70c03450466b45d6a0608c5fb6d02eca",
                "chapter_name":"Week 3 Deriving Programs to be Correct",
                "sequentials":[
                    {
                        "sequential_id":"4539ca52b88d4cdcac5ea694f2990e90",
                        "sequential_name":"3.1 Opening",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Robert",
                                            "Ll"
                                        ],
                                        "data":" The game of Nim. And there are a lot of different versions of it. We'll explain some other versions after we play this game. We're going to start off with 21 pencils. And Robert and I are going to take turns, where we're going to pick up either one, two, or three pencils, and the last person to pick up the pencils is the winner of the game. So to start off with, I'll let Robert begin. You pick one, two, or three pencils. OK. I'll take two. I think I'll take one. Hm. I'll take three. Then, I'll take three. Hm. I'll take two. Then, I'll take two. Hm. I think I'll take two again. Then, I'll take three. Ah. She's letting me win, because I get to take the last three, and whoever takes the last ones wins. Yes. Let's try again. So she let me win here. Maggie. doesn't like to lose, so she wouldn't be nice to me. All right. Let's do this again. But since you actually took the first pencil the first time, this time, I'm going to take the first pencil. Wait, I thought that the winner gets to go first again. No. Not in-- Not in your book. My world, it's the loser. And this time, you won't win. I'll take one. I'll take two. Then, I'll take two. And I'll take three. Then, I'll take four. And I'll take one. Then, I'll take three. And I'll take three. And I'll take one, and you lose. Ah. I get the last two. So-- Let's do it again. I knew I was going to win if I go first. And I know you can win if you go first. But you get to go first. No, ladies first. No. No, I'll go. I don't want to beat you again. Go ahead. You go first. The loser goes. I'll take one. I'll take two. Then, I'll take two. I'll take one. Then, I'll take three. I'll take two. And I'll take two. And I'll take two. And I'll take two, and I win. I'll take four. [LAUGHS] [YELL] So once you figure out the strategy for this game, because you can actually find a strategy so that if you are the first player to take a turn, you will win, you can change the rules. You can change the rules so that the person who picks up the last one is the loser, or perhaps you could change the rules so that instead of picking up one, two, or three, you can only pick up one or two. The idea is you can always build a strategy that will help you figure out how to win the game. So I want you to watch us and decide when you realize Robert lost. So go play against the computer. And then if you need a hint, come and watch the next video. ",
                                        "unit_id":"f039b60d59824b639ce0d214ce40176b",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" So here, we have made things a little bit more obvious. We're going to play again. And then, we're going to do something with the video that hopefully will give you a hint. Go ahead, Maggie, you take first. I'll take one. I'll take two. I'll take two. I'll take one. I'll take three. I'll take three. I'll take one. I'll take two. I'll take two. And I lose. OK. Now watch this. ",
                                        "unit_id":"f9303aee2bea4b77b3f2e87b2eb282de",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Inductive hypothesis",
                                            "Base case",
                                            "Mathematical induction",
                                            "Loop invariant",
                                            "Loop",
                                            "Guard",
                                            "Reasoned",
                                            "Thing"
                                        ],
                                        "data":" Robert van de Geijn: So what's the idea here? Well, we asked you to drag the boxes in the order in which they appear here. And the whole idea is that later in the week, you're going to learn that from the post-condition and the pre-condition, which are already here for this drag and drop, you're going to systematically come up with the loop invariants. And then in week two, you learned where the loop invariant needs to be true. So this is going to be the loop invariant. And that loop invariant is going to be true before the loop starts. That's your base case in your mathematical induction. At the top of the loop body, that is your inductive hypothesis. You will then develop the loop so that it's, again, true at the bottom of the loop. That is your inductive step. And then, if you ever come out of the loop, it's going to be true after the loop finishes. Now, the next thing you learned in week two is that the loop invariant, together with the loop guard being false, should imply that you have computed the correct thing. Now, how should you pick your k in order for the loop invariance to imply the post-condition? Well, your k should be equal to zero. And notice that if you pick your loop guards to be 0 is less than k, then not less than 0 or less than k then k is less than or equal 0. And if k is less than or equal to 0, and 0 is less than or equal to k, you know that k's equal to zero, so that becomes your loop guards. So notice that we have systematically reasoned through what the loop guard must be. You might have been tempted to pick up k less than n, because you would have assumed that you're marching through the loop from 0 to n. But you should have noticed that, actually, we're decrementing k every time through the loop. So you place that everywhere where the loop guards should be true. Let's see, the loop guard right there. OK. So then you notice that all of these have to do with guards. And we're going to skip them, because they would have been incorrect. So the next question you ask is well, how should you initialize k? Well, notice that initially you would like s to be the summation over no elements in b at all. And what does that mean? That means that k should be equal to n, because then you do the sum over the empty range. And that means that you're not summing anything. So the correct initialization here is k is equal to n. And then finally, you notice that if you take your k equal to n, then you're doing the sum of the empty range. So then s must be equal to 0. So if we pick our s equal to zero, then we end up in the state where the loop invariant is true, so we drag that in. And then you're done. But the important thing is that this is goal oriented reasoning. We started with the pre-condition and the post-condition, and we reasoned through what the states of the variables should be at various points. And that allowed us to then figure out what's going on. Oops, we've forgotten one thing, and that is the update step. And here, you actually have to think through kind of carefully. And if you think through carefully, and we're going to teach you how to think through very carefully later in the course, you're going to conclude that s should be s plus b of k. And there you have it. This is a preview of what you will see in section 3.5 this week. ",
                                        "unit_id":"7a68675fb8f840c7b2c1795058fc6cd1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f4246ac455384e428013d417e0cf36e3",
                                "vertical_name":"3.1.1 Launch"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Developing"
                                        ],
                                        "data":" 3.1. Opening Remarks 3.1.1. Launch 3.1.2. Outline Week 3 3.1.3. What you will 3.2. Developing Simple Commands 3.2.1. The skip command 3.2.2. Assignment to simple variables 3.2.3. Careful! 3.2.4. Assignment to array elements 3.3. Developing the if Command 3.3.1. A general strategy 3.3.2. A commonly encountered case 3.4. Developing a While Command 3.4.1. A worksheet for the while command 3.4.2. Progress towards completion 3.4.3. A priori determination of loop invariants 3.4.4. Deriving the loop guard and initialization command 3.4.5. Deriving the loop body 3.5. Examples 3.5.1. Evaluating a polynomial 3.5.2. At last, you write your first code! 3.5.3. The dot product 3.6. Enrichment 3.6.1. A conversation with Prof. David Gries 3.7. Wrap Up 3.7.1. Additional exercises 3.7.2. Summary 3.7.3. Why Dijkstra received the ACM Turing Award ",
                                        "unit_id":"3a20352f91954dbb8df1478caf02c9ae",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2d53f82f2dd3429399bebcc63a78dc1f",
                                "vertical_name":"3.1.2 Outline Week 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Conditional branching",
                                            "Weakest precondition",
                                            "Program",
                                            "Loop",
                                            "Precondition"
                                        ],
                                        "data":" This week begins our journey to develop programs that are correct. Starting with the goal and annotating the precondition and postcondition, we uncover strategies to find loop-based algorithms by first systematically deriving loop invariants which then guide the development of the rest of commands in the loop. Upon completion of this week, you should be able to Use Hoare triples and weakest precondition to determine appropriate assignment commands. Reason and apply goal-oriented programming to develop short program segments involving skip, assignments, and conditional branching. Develop loop-based algorithms using goal-oriented programming techniques given invariants. Determine various invariants for loops traversing one-dimensional arrays. Implement your first program. ",
                                        "unit_id":"7096eb41f20f49c593790c20803f439c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"27cb2f23185e4b1e937cc6a85805751c",
                                "vertical_name":"3.1.3 What you will learn"
                            }
                        ]
                    },
                    {
                        "sequential_id":"40c5a90470d54aef8b014ec74283daf4",
                        "sequential_name":"3.2 Developing Simple Commands",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Hoare triple",
                                            "Thought process",
                                            "Code segment",
                                            "Weakest precondition",
                                            "Skip",
                                            "Precondition",
                                            "Start",
                                            "Program",
                                            "Command",
                                            "True",
                                            "Execute",
                                            "Implies"
                                        ],
                                        "data":" Robert van de Geijn: OK. So now we are going to see how we can push what we learned in Week Two a little bit further. And the purpose now is going to be to true goal-oriented programming where we develop the program hand-in-hand with its proof of correctness. And just like in Week two we started simple we are going to start simple this time as well. And we're going to look at the skip command. So the purpose of the game, you're given a Hoare triple. You know what you want to be true before a command. You know what you want to be true after a command. And what you now want to do is figure out what that command should be. That's goal-oriented programming. So in our program, this would appear as such. And then the idea would be that you want to somehow figure out a statement S, for which you wouldn't know what the weakest precondition is, so that we can answer the question whether when you start in a state that satisfies the Q, you are left in a state where R is true after you execute command S. Now let's look at the skip command. And the important thing to remember about the skip command is that the weakest precondition for skip, leaving you in a state where R is true, is that you have to already be in a state where R is true. Now what do we have here? Well, we have a code segment that might come from an if command where you are trying to increment variable c by 1 only if x is equal to 0. And this is the particular case in that if command where x is not equal to 0, which means that before you get started, x is not equal to 0 and the count is at some count. So the c hat here is the original contents of the count before we execute this code segment. And then upon completion, it has to be the case that if x is equal to 0, the count has to be increased by 1. And if x is not equal to 0 then the count is just left alone. That's what the post-condition says. Now, we could of course go and guess that nothing needs to happen and that therefore, the skip command is the appropriate choice. And actually, that's perfectly OK, because you're using the Hoare triple here to determine what the command should be. But let's do it a little bit more methodically. What is the thought process that really should be going on in your head and/or on paper? So what do we notice? Well, we notice that we have a precondition. And we notice that we have a post-condition. And by now, you are very familiar with weakening strengthening. And hopefully you immediately recognize that the precondition Q implies that post-condition R by one of the weakening strengthening laws. And since that's the case, it sure would be nice if the weakest precondition for whatever command we execute is the post-condition, because then we can assert that the precondition implies that weakest precondition. So all we need to do is come up with a command such that the weakest precondition of executing that command, leaving you in the state R, is R itself. And we know exactly what that command is. It is the skip command. So what happened here? We had a Hoare triple that defined what we wanted the code segment to do. We examined the pre-condition and post-condition, and notice that the pre-condition already implies the post-condition. And therefore we recognized that an appropriate command to pick is the skip command. Ta-da, you have derived your first code segment. ",
                                        "unit_id":"0170552a02334137ad08f10b15619cbc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"23cd1988b8fa4d75ad5bd16bebf0afe8",
                                "vertical_name":"3.2.1 The skip command"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Code segment",
                                            "Weakest precondition",
                                            "Original content",
                                            "Dummy variable",
                                            "Simple variable",
                                            "Command",
                                            "Original",
                                            "Precondition",
                                            "Correct",
                                            "Content",
                                            "Determine",
                                            "Back",
                                            "Part",
                                            "Derive",
                                            "Implies",
                                            "Variable",
                                            "Hat",
                                            "Equal"
                                        ],
                                        "data":" Robert van de Geijn: So while it must have been very exciting to systematically derive the Skip command, obviously, if that's all we can do, that's not going to be very exciting for very long. So let's look, instead, at how to derive a simple-- another simple command, assignment to a simple variable. And all along, keep in mind that the purpose of the game is to determine Command-S, where the precondition Q and the post-condition R are already given. And let's return to a very similar example as we used in the Skip command video. And here, what we have is that x is equal to 0 and some count c is equal to its original content c hat, and what we want to do is end up in a state where x is still equal to 0 and the count is incremented by 1, or if x is not equal to 0, then the count should remain the same. So this might be the second half of an if statement. Again, you could just guess at what this ought to be. And then you could come back and prove it to be correct. And if then it is correct, then everything is OK. You have used the precondition and the post-condition to guide you towards a correct command, and that's just fine. Or again, we can do it a little bit more systematically, and let's learn how to do that. Part of the problem statement is that the counter c is the only variable that's allowed to change value. So you may know this from context in the program that you're trying to derive. And that then leads us to say, well, that variable should be assigned some value of the expression e where we use this funny looking e for the expression. And then what? Well, we don't know what the expression is, but we do know how to compute the weakest precondition. That's a matter of substituting the expression e in for every occurrence of c. Strictly speaking, we probably should have had some parentheses here, but it's all going to be OK. And now what? Well, now, you just stare at the first three lines of this code segment. You want to use what you know about Q and the effect that Q has to imply the weakest precondition to now determine what that expression must be. Well, if you look at the second part of this disjunction, you kind of know that that's just not going to work, because x is originally equal to 0, x is not allowed to change its value, and x can therefore not become non-zero. So that part of we are going to ignore, and, instead, we're going to look at this part of the disjunction. If we can now choose our expression e such that what we have highlighted here in yellow is exactly the same as Q, then, by weakening strengthening, we know that Q implies the weakest precondition. And how can we choose our expression e? We're going to show you two different ways. One way is to say, well, if we choose c to be c plus 1, then the plus one on both sides of the equality will cancel, and then you just get c equals c hat back, which then means that that part of the disjunction is exactly q, and then we are exactly where we want to be. So, guided by that, we choose our expression to be c plus 1, and then we know that we can subtract c plus 1 on both sides, and then we know that Q implies the weakest precondition, and, therefore, we have a correct code segment. So we now have determined that that expression should be c plus 1. The way Maggie prefers to do it is as follows. We know that it's that left part of the weakest precondition that is going to guide us. In that left part, the expression must be c hat plus 1. So why not just pick the expression to be c hat plus 1? Well, the problem with that is that c hat is really a variable that was introduced to capture the original value of so that we can also use that original value in the post condition. And therefore, we can't compute with it. But we know this from the precondition Q that c hat is actually the content of variable c. Ah. What that means is that we can just compute with c instead, and we notice that our expression becomes c plus 1. And then we can go ahead and plug that into the weakest precondition. And we notice that Q implies the weakest precondition, and everything is great. So, in summary, when trying to derive a code segment to be correct, where the precondition Q and the postcondition R are given, and only one variable, let's say, x, can change value, what you do is you pick your command to be x becomes some expression. You then propagate that expression into the weakest precondition, and then you pick that expression such that the precondition implies the weakest precondition. And along the way, if you end up computing with what I call a dummy variable, something that denotes original contents, then you need to somehow find a way to use a value that actually is stored, as opposed to this value that's only introduced for the sake of reasoning about the program. Now, what if we go back to the example from the previous unit? What if we didn't recognize that we could just use the skip command? Well, we could simply say, hmm, we still know that c is the only variable that can now change value. We can therefore set it equal to some expression. We can propagate it along into the weakest precondition. Then we can recognize, here, that precondition is more likely to imply the right part of the weakest precondition rather than the left part. Why? Because here we said x is not equal to 0, and we're not going to change the value of x. And then, through the same kind of reasoning we just did, we can conclude that the expression should be just c. And then we recognize that, if you assign c to c, you might as well execute the skip command. So it is an alternative way of deriving a command that turns out to be skip commands. What I want you to do next is to do this homework, where you're simultaneously assigning two variables s and t, and if you look at the precondition and the postcondition, what they tell you is that the values of s and t should be swapped. I'll see you in the next video. ",
                                        "unit_id":"9b4e436017724ed3b0a249aa5b38b221",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Precondition"
                                        ],
                                        "data":" Robert van de Geijn: So let's do this systematically. We know that s and t should become some expressions. Let's call them E0 and E1. Let's propagate those through into the weakest precondition. Then let's compare and contrast that precondition to what this weakest precondition is. Let's scratch our head and think hard about how we should pick our E0 and E1. What this guides us to is that E0 should be t and E1 should be S. So the simultaneous assignment indeed does the swapping of the contents of variables s and t. And if you then go back and you check whether this is a correct code segment, you notice that it is TRUE because the precondition implies to weakest precondition after you commute the two terms of the conjunction. ",
                                        "unit_id":"30b05f476b1843b4a37f579b4407315c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2b06de6b1ee04847b93926744f2bdf74",
                                "vertical_name":"3.2.2 Assignment to simple variables"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Weakest precondition",
                                            "Array element",
                                            "True",
                                            "Notice",
                                            "Composing"
                                        ],
                                        "data":" nRobert van de Giejn: So you do have to be a little careful, especially when you start composing a number of commands. Let's have a look at where this might happen. Here, we are composing two assignments. k first gets updated with k plus 1. And then it has to be determined what should be a assigned to y. Now if we apply the techniques from the last unit, well, we could expose the weakest precondition going backwards. And then we would say, oh, but that means that the expression e should be x plus k. And that actually could be the end of it. But what if we just push it back a little bit further and say, and then we update k with k plus 1. And if we then blindly just push this through, we end up that E should be equal to x of k plus 1. Which obviously contradicts the fact that E should be x of k. So what's going on here? Well, if we look at just that, we would conclude that y should be updated to become x of k plus 1. But if we then go and propagate that back and compute its weakest precondition, we find that x of k plus 1 should be equal to x of k. And then if we propagate it some more we get that x of k plus 2 should be equal to x of k plus 1. And notice that TRUE does not imply that automatically unless we have some knowledge about x k plus 2 being equal to x k plus 1. We cannot conclude that this is a correct code segment. So what's going on here? Well, yikes. The issue here is that we noticed that k gets updated before y. And therefore, if k appears in the expression that's assigned to y, the value that appears there in k might actually have been changed along the way. So what you really want to do is say that y becomes some expression that potentially depends on k. So we then look and see what the weakest precondition is. We get that the expression, which is a function of k, is equal to x of k, the array element x of k. And then if you substitute in k plus 1. You'll notice that E of k plus 1 is equal to x of k. And from that then, you conclude that E of k is actually equal to x of k. And now you have a correct code segment because if you propagate this back you get that x of k is equal to x of k. And if you then put in the k plus 1, you've got that x of k plus 1 is equal to x of k plus 1. And that evaluates to TRUE. And TRUE implies TRUE. So in summary, if you have a sequence of assignments, what you want to do is create a sequence of expressions. Where for later variables, the expression is taken to be a function of the variables to which assignments are made prior to it. And obviously, this generalizes when you have more variables involved. ",
                                        "unit_id":"6117fd2eeabd49d091b09d6b32ebdc28",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a31328bf09054f9ca1ceab2068cb477b",
                                "vertical_name":"3.2.3 Careful!"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Orange box",
                                            "Original content",
                                            "Yellow box",
                                            "Weakest precondition",
                                            "Yellow",
                                            "Element",
                                            "Highlighted",
                                            "Entry",
                                            "Precondition"
                                        ],
                                        "data":" Robert van de Geijn: Most of the examples you will find in the remainder of the course will involve computations with arrays. So a very important topic is how to systematically derive the update to an array. Well, let's have a look at that now. So as usual, we use a motivating example. And the example that we're going to use adds the entries of array x to the entries of array y. And we'll assume that both of these arrays have size n. And this will lead to a while loop. And how to systematically derive this while loop will be the topic of a later unit. And what we're now going to do is we're going to focus on the highlighted section here. And if we look at that in isolation, we end up with a precondition that we're going to call Q sub S, because it's the precondition for command S and the post-condition R sub S, which is the post-condition for command S. And what do we have here? Well if you look at it carefully, the yellow box in the first predicate in the precondition says that the first k elements have been updated, and that the remainder of the elements have not yet been updated. And the post-condition says that the first k plus 1 elements of the array have been updated. And the remainder has not been updated. And the purpose of the game now is to figure out what command S should be. And how do we do that systematically? Well, let's have a look. As usual, we give ourselves some space. So one thing that we notice about the precondition and the post-condition is that it is the element indexed by k that is somehow special. And let's isolate those by splitting the ranges. So in the post-condition, that means that we have to split the range for the first quantifier, the one highlighted in yellow. And what we're doing here is we're splitting off the element indexed by k in y and in x. And similarly, we can do the same thing for the precondition. And there we notice that the element indexed by k is actually part of the second quantifier, the one that says that y is still equal to its original contents. So we isolate it. And if you now compare and contrast that precondition with the post-condition, you find that the quantified expressions are identical. The yellow box is the same as the yellow box, the orange box is the same as the orange box. It is only the term that we have isolated that updates k that's different. And then the range of k is slightly different. We have 0 less than or equal to k, less than n in the precondition. And 0 less than or equal to k plus 1 less than or equal to n in the post-condition. But we've seen that before, and we've seen before that 0 or less than or equal to k less than n implies 0 less than or equal to k plus 1 less than or equal to n. And therefore that's not going to be an issue. So what do we do? Well, we have noticed that it's the element indexed by k that changes. And it's only array y that can change in value. So we conclude from this that we're going to have to assign some expression to y of k. OK, we do what we do. We compute the weakest precondition, assigning the expression e to y of k. And notice that because we have already isolated it, that is a matter of replacing y of k by the expression, e. And we get this. And now we can take the approach that Maggie prefers, which is to say oh, here in the weakest precondition, we noticed that E is equal to y hat of k plus x of k So we can fill that in for how y of k must be updated. But then we notice that y hat of k refers to the original content, and we always have to be cautious with that. So we go searching through to precondition to find out that y of k is equal to y hat of k. So instead of computing with y hat of k, we should compute with y of k. And we get that. And if we then go and take that to be our command S, then we can fill that in. And then the proof of correctness is right here as part of the derivation for the command. So in summary, when deriving an update to an array, isolate what's different between the precondition and the post-condition. And often from the larger context, it may be obvious how to isolate that and which element this might be. In this particular example, we knew that we were sweeping through the arrays x and y from beginning to end, and therefore it was probably the entry index by k that would have to be updated. ",
                                        "unit_id":"e4224ba407484b548aa4f77a5b937d10",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1dccc858f7f34dd9b111ca12072ed950",
                                "vertical_name":"3.2.4 Assignment to array elements"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a8ef5a26d152413f9be38094b5e065e1",
                        "sequential_name":"3.3 Developing the if Command",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Guarded commands",
                                            "Infinitely large",
                                            "Finite number",
                                            "Guarded command",
                                            "Command",
                                            "True",
                                            "Guide",
                                            "Derive",
                                            "Worksheet",
                                            "Guard"
                                        ],
                                        "data":" Robert van de Geijn: In Week Two, we discussed how to prove an if command correct. And that eventually led to a worksheet that guided you through that proof of correctness. What we are going to do now is we're going to take that worksheet and we're going to turn it around. We're going to have the worksheet guide us through how to derive the if command correct, hand in hand with its proof of correctness. So here we have a prototypical if command. We have the precondition Q, the post-condition R, and we have left ourselves some room to fill in guards and guarded commands. So what is the strategy? Well, the strategy is to come up with some guard G0. Once you know what that guard G0 is, then you're left with the simplest subproblem of determining what the command S0, the guarded commands, should be. And notice that you know the precondition for that guarded command, G0 and Q, and the post-condition for the command R. That's what the worksheet for proving an if command correct told you. At that point, you can then ask the question, does Q imply G0? And if the answer is yes, then you're done. And if the answer is no, then you have to come up with another guard. You go through the same process to come up with another guarded command. And then you ask yourself again the question, does Q imply G0 or G1? And if the answer is yes, you're done. And if not, you continue. So what's the insight? Well, you need to find the guards. And what do we know? We know that Q must imply G0 or G1 et cetera, so you need to keep finding guards until that becomes TRUE. So let's look at an example. The example is to compute z equal to the absolute value of x And we may go about this really naively. The precondition is TRUE, the post-condition is that z is equal to the absolute value of x. And let's guess a guard. Well, we might guess that x is equal to minus 1. What do we do if x is equal to minus 1? Well, we derive the guarded command. And if you go through the motions of what you learned earlier in this week, you find out that z is equal to 1. Then you ask the question, does TRUE imply that x is equal to minus 1? And the answer to that is no. So then you have to find another guard, so you might guess that x is equal to 1. And you pick that as your guard. And then you go through your motions again. You find a guarded command z is equal to 1. You ask the question, does TRUE imply x is equal to minus 1, or x is equal to 1? And the answer is no. And obviously you're going to be busy for a while if you go and look at integers just one at a time. And as a matter of fact, you would get an infinitely large if command, and that is highly undesirable. As a matter of fact, it just doesn't work. So obviously, we need to be a little bit smarter. And how could we be smarter? Well, what do we know about the absolute value? We know that there is the case where x is greater than or equal to 0, and there's the case where x is less than or equal to 0. So the space of all integers very naturally can be broken up using two different predicates. And we look at the first one, x is greater than or equal to 0. That then gives us a precondition and post-condition for the command S0. Then we can apply the techniques we learned earlier to find that z should be equal to x, and notice that we filled in the proof of correctness along the way. And then we say well, what about if x is less than or equal to 0? We similarly derive the guarded command for it as well as is proof of correctness. And then we ask the question, does TRUE imply x greater than or equal to 0 or x less than or equal to 0? And the answer is yes, and therefore we're done. So what's the summary? Simply keep adding guards until Q implies the disjunction of the guards that you have found. For every guard, what you do is you solve a simpler subproblem, namely the problem of finding command Si. Now, you can obviously only have a finite number of guards. And as a matter of fact, you shouldn't have too many or your code would become unreadable. Therefore you should use what you know about the post-condition R to guide you. ",
                                        "unit_id":"7c358c52092f45639a92ec494a6177e9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5059fda4a4294205a73152a6d35d9e3e",
                                "vertical_name":"3.3.1 A general strategy"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" ROBERT VAN DE GEIJN: So hopefully what you're starting to realize is that actually deriving programs to be correct is no more difficult than a posteriori proving them correct. A posteriori means you already have the program and now you're trying to prove it correct. And as a matter of fact, it might even be easier. So perhaps Dijkstra was onto something. What we're going to do next is we're going to look at some operations that naturally lead to the need for an if command. And we're going to see that when you specify those operations carefully, the guards fall in your lap. And actually, the derivation of the sub-problems is somewhat simplified. Let's have a look. So in preparation for this, I want you to go and do this homework. And what I want you to do is look at the operations on the left, and match them up with the specifications on the right that describe them. And then I'll see you in the next video. ",
                                        "unit_id":"097a81c6ccb7487091a627836521a993",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Guarded command",
                                            "Canonical form",
                                            "Special case",
                                            "Weakest precondition",
                                            "Command",
                                            "Case",
                                            "Statement",
                                            "Precondition",
                                            "Logic",
                                            "Stronger",
                                            "Simpler",
                                            "Fill",
                                            "Expression",
                                            "Part"
                                        ],
                                        "data":" Robert van de Geijn: OK, so hopefully you figured it out. Hopefully you figured out that z equal to the absolute value of x can be specified as x is greater than 0 and z is equal to x, or x is less than or equal to 0 and z is equal to minus x. Now what's important here is that you recognize the pattern. And the pattern is that the post-condition that describes such an operation, if this post-condition is used for an if statement, that it has a very special form. It's a disjunction of conjunctions. And those of you who have taken a course in logic may remember that you learned that any logic expression can be written in canonical form that is a disjunction of conjunctions. So what does that mean? That means that anytime you come up with some kind of expression of what you want to compute, you will be able to massage that into a disjunction of conjunctions, and that made them guide you towards what the if statement should look like. Now we can do slightly better yet. Here is actually a worksheet for this very special case. Let's look at the post-condition. The post-condition in this case is a disjunction of conjunctions. It happens to have only two terms. But hopefully you will recognize how to generalize this. And what do we notice? Well, if we look at this, we have learned something about weaker and stronger predicates. We notice that G0 and R0 is stronger than G0 and R0 or G1 and R1. So what does that mean? If we pick G0 as our guard, and we can derive a command S0 that puts us in a state where G0 and R0 is TRUE, then we know that after the if statement, the desired post-condition, will be TRUE. And similarly, if we pick G1 as a guard, then all we need to do is come up with a guarded statement, S1, that leaves us in a state where G1 and R1 is TRUE. And then we know that we are in a state where the post-condition is TRUE as well. And the benefit of this is that each part is now simpler. It is simpler to deal with G0 and Q, leading you to a guarded statement S0 that leaves you in a state where G0 and R0 is TRUE, than it is if you have the entire post-condition sitting there. So this simplifies matters. Here's an example that where if x is less than or equal to 0, then you add 1 to a counter. Otherwise you'd leave it alone. And this might, for example, be part of a loop to determine the number of non-positive entries in an array or something like that. And notice that it has this special form that we were looking for. Of course, the question is what part of the term in the disjunction should be the guard? And hopefully by looking at some examples, you gain some intuition for that. There's probably a pattern, but let's not dwell on that. OK, so here we have our worksheet. We know that there are going to be two guards, G0 and G1. We can easily identify those as x less than or equal to 0 and x is greater than 0. So we can fill all of that out, and then we can fill out everything else. We know what Q is, we know what G0 is, we know what G1 is, we know what R is, we know what R0 and R1 are. And we then simply fill out a big part of our worksheet up front. And then we're left with these simpler subproblems. How do we come up with a guarded command S0. Well, c is the only variable that's allowed to change. We know that some expression should be assigned to c. And then we can just go through the motions. We can take the weakest precondition of S0, leaving you in a state where G0 and R0 are TRUE. And then from that, we can conclude that the expression E0 should be c hat plus 1. And then we can look at the precondition for that section and find out that c is equal to c hat, and so therefore we really want to compute with c. And then we're left with the desired guarded command. And then we can do exactly the same thing for the second part. So there we can either recognize that the precondition already implies the post-condition and therefore we can just use skip, or we can say that c is going to become some expression, you can push that into the weakest precondition, you can then say that the expression is equal to c hat. You can then recognize that c hat is stored in c, and then you're done. And then you can take away all of the annotations that had to do with the proof of correctness. And then you're left with the correct if command. So for the special case where the post-condition is a disjunction of conjunctions, finding the guard and deriving the guarded command is greatly simplified thanks to these insights. ",
                                        "unit_id":"2c0c75993bb04860b393fa177fcff454",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"52a8fe85de0044af9477b4d35960420f",
                                "vertical_name":"3.3.2 A commonly encountered case"
                            }
                        ]
                    },
                    {
                        "sequential_id":"10b1b378af3249c4b24726d88daca40b",
                        "sequential_name":"3.4 Developing a While Command",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Loop",
                                            "Guard",
                                            "False",
                                            "Condition",
                                            "Correct",
                                            "Implies",
                                            "Derive",
                                            "Command"
                                        ],
                                        "data":" Robert van de Geijn: So now we have arrived at my favorite topic, how to develop loops. And the remainder of the course is all going to be about developing loops for various operations, which will progressively get more difficult. So how does this work? Well, we're given a precondition Q and a postcondition R. We know how to prove a loop correct. It's a matter of finding a loop invariant such that that condition is TRUE before the loop starts and then proving that if that condition holds at the top of the loop body together with the guard being TRUE, if that then implies that the loop invariant is TRUE again at the bottom of the loop, then we know it's is TRUE before and after the execution of command S every time through the loop. That was a matter of applying mathematical induction. And if we can then show that the loop actually completes, then we know that the loop invariant is again TRUE after the loop is done. But we also know that the loop guard is FALSE. And then if we can show that that implies that postcondition, then we knew that the loop was actually correct. Now, how can we turn that around? Well, if, given the precondition Q and the postcondition R, we can systematically derive a loop invariant, then actually, everything else is prescribed. What we're looking for then, is a loop guard G such that the loop invariant together with the loop guard being FALSE implies R. So you look at the loop invariant, you look at the postcondition, you determine what the guard should be. Then you go to the top. And you say, well, I need to get into a situation where the loop invariant is TRUE. So then you would derive an initialization command S I. So that's a matter of driving a simpler program segment, OK? And then you can turn your attention to the loop body itself. And you know what the loop invariant is. You now know what the loop guard is. Therefore, you know what the precondition and postcondition for command S are. And then you can apply the techniques that you have learned so far to actually derive the command S itself. And then you're done. You have systematically derived the loop to be correct. Now, notice that there is a command that will always work in the loop body, skip. After all, if the loop invariant is TRUE before you skip, it is TRUE after you skip. And that's obviously not a very satisfying loop, because the loop does absolutely nothing. Most importantly, it never finishes. So that's not an acceptable solution. So in summary, given Q and R, the name of the game is to derive the loop invariant and to force progress towards completion. ",
                                        "unit_id":"2d7e323f22f5474a942cf0435af68e80",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7a9caee4fb7343738d4c3bdc7694df10",
                                "vertical_name":"3.4.1 A worksheet for the while command"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Bound function",
                                            "Loop counter",
                                            "Loop index",
                                            "Array",
                                            "Bound",
                                            "Body",
                                            "Loop",
                                            "Index"
                                        ],
                                        "data":" Robert van de Geijn: So as we observed in the last video, somehow we need to force progress to its completion, or else the skip command becomes the body of the loop, and that's just not going to get us anywhere. So how do we force progress to its completion? Well, in a lot of our algorithms, we're going to be marching through a one-dimensional array for the moment. Later on we will see what happens with multiple dimensional arrays. And often, we will have what we would call a loop counter, a loop index, k in this case, that is either incremented or decremented every time you go through the loop. And if G then puts a bound on how large or how small that index k can get, then we have ourselves a bound function, and therefore we know that the loop will eventually complete. So there are four general cases that you will run into. One would be where the loop counter gets updated at the bottom of the loop, at the top of the loop, or decremented at the bottom of the loop, or at the top of the loop. And depending on which one of these you pick, you will potentially get a slightly different update in the loop body itself. Often that update is merely off by some adjustment to the index into the array that you are updating. So in summary, given Q and R, you derive the loop invariant. You force progress to its completion, which can then be guided by the choice of the loop invariant because the loop invariant will often tell you whether you are going through an array forward, say from 0 to n minus 1, or backwards from n minus 1 to 0. ",
                                        "unit_id":"f9dd46a9a3ee400bb4a65972a0016fa7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"383e16226bd54638901098489bf552b5",
                                "vertical_name":"3.4.2 Progress towards completion"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Final result",
                                            "Research group",
                                            "Dummy variable",
                                            "Green box",
                                            "Progress",
                                            "Partial",
                                            "Loop",
                                            "Valid",
                                            "Trivial",
                                            "Computation",
                                            "Candidate",
                                            "Green",
                                            "Left",
                                            "Derive",
                                            "Entire",
                                            "Unit",
                                            "Systematic",
                                            "Inclusive",
                                            "Difficult",
                                            "Range",
                                            "Initialization",
                                            "Implies",
                                            "Partition",
                                            "Quantifier",
                                            "Split",
                                            "Updated",
                                            "Array",
                                            "Postcondition"
                                        ],
                                        "data":" Robet van de Geijn: OK, so I consider this unit to be the most important unit in the entire course. What we saw earlier in this section is that if you know the loop invariant, then the entire loop is prescribed. The loop guard, the initialization, and the loop body can all be derived from knowing the preconditions, the postcondition, and the loop invariant. So, how do we come up with loop invariants? How do we systematically derive them? If we can crack that, then we're done as far as loop-based algorithms are concerned. The fact is, that when people pushed for a goal-oriented programming for loop-based algorithms, they got stuck in a hurry, because how to drive loop invariants systematically for anything but trivial examples turned out to be difficult. Now, in this particular week, we only see very simple examples. And, therefore, you may walk away with thinking that this is all rather trivial. Not so. If you stick around for the rest of the class, you will find that we can apply the same techniques to rather complex dense linear algebra operations, and that's one of the contributions that our research group has made over the last 15 or 20 years. We figured out how to systematically come up with loop invariants for progressively more difficult operations in our domain. So, let's have a look and see how we do this for problems that involve linear arrays, one-dimensional arrays. OK, so we go back to our workhorse example of adding the elements of array x to the corresponding elements of array y, and both arrays are of size n. And, what do we do? Well, we specify the operation with the precondition and the postcondition. The precondition says that array y contains its original values, where y hat is this dummy variable, or array in this case, that we introduced to be able to reason about the original contents. And then the postcondition says that the array y has been overwritten with the original contents plus the corresponding entries in array x. Now, when we write the loop over a one-dimensional array, we tend to systematically go through that array either from the first element to the last element, or the last element to the first element. And, therefore, there is an index, let's call it k, that somehow tells us where in the arrays we are. So, let's use that index k to split the range. Here, we have taken the precondition, and we've split it into two quantifiers, one that says the first k entries in the array equal the original contents. And the second one says, and the remainder of the array also contains its original contents. In the box highlighted here in green, it is necessary to make sure that in the quantifications you only access entries that are actually part of the array. OK, remember? These are arrays that are indexed from 0 to n minus 1, because there are entries in the arrays. And that then tells us that k should be between 0 and n inclusive, because if you take 0 and plug it into the first quantifier, then you get the empty range. That's OK. And if you plug it into the right quantifier, then you only index i from 0 to n minus 1. And, therefore, evaluating the arrays for those i is valid. And that's how you reason through that. Similarly, we can partition the postcondition. There, the left quantifier now says that the first k entries contain the updated values, and the right quantifier says-- and the rest of the entries also contain the updated values. And, again, what's in the green box just limits k so that you only address entries in the arrays that are valid entries. Index from 0 to n minus 1. So, a loop invariant captures partial progress towards the final result. Where does that come from? Well, notice that if the loop is still executing, then, inherently, you aren't done yet. But, hopefully, you have done useful computation so far, so what you've computed so far is a partial computation towards the final result. And partial we take kind of loosely here. If you haven't done anything yet, to we will call that partial progress. And if you have completely finished, that actually is partial progress too, there just happens to be no computation left to be done. So, what that tells us is that we should look for taking pieces from the partition's precondition and the partition postcondition, and see if we can't kludge those together into something that can become a loop invariant. And what have we done here? Well, candidate A-- so these are candidates looping invariants that we're going to discuss-- candidate A says that the first k entries are the original contents, and the last k entries are the original contents. Probably not a very interesting loop invariant. Candidate B says that the first k entries have been updated with the final result. That sounds like progress. And the rest of the entries have not yet been updated. That seems like a reasonable loop invariant. Candidate C says that the first k entries have not yet been updated, but the rest of the entries have been updated. Again, that seems like the kind of thing that represents partial progress. And then the final candidate, D, says that all entries have already been updated. The first k entries have been updated, and the remainder of the entries have been updated. That's probably not a particularly interesting loop variant either, because as you execute the loop, everything is already done. So, what is going on here? Well, let's for the fun of it go and look at candidate A. And, let's go ahead and plug that to our worksheet, and look at everywhere where this loop invariant must be TRUE. Now, importantly, the loop invariant must be TRUE after the loop is done, and notice that we have to come up with some loop guard G, such that G not being TRUE, implies that it be computed to the final result. But, notice that there is no way of picking a loop guard G in such a way that the loop invariant, which says that nothing has been computed yet, implies that we're done. So, the fundamental problem with candidate loop invariant A is that you can't find a loop guard such that completion of the loop implies that you have computed the correct result. Therefore, this is not a valid loop invariant. You can also go to the top and say, well, what if we pick candidate D? Candidate D was that the first k entries have already been updated, and the remainder of the entries have been updated as well. Well, notice that there is no initialization, short of actually going and computing everything, that will put you in a state where the loop invariant is TRUE. So, here, we can't find a simple initialization that actually puts us in a state where the loop invariant is TRUE. And, therefore, that is not a valid loop invariant either. And that then leaves us with two loop invariants from which we can actually derive a proper loop. There is another way of looking at this. Look at the postcondition r. This is what you want to compute. Split the postcondition into a part that says something about the first k elements of array y, in this case, and then the remainder. And, again, the green box there has to be introduced to make sure that in the quantifiers, you don't address entries in arrays x and y that don't exist, that are not between 0 and n minus 1 inclusive. Now, what constitutes a partial result? A partial result can be created by saying that the first k entries have been updated, but not the rest of the entries. Notice that what's in orange here now constitutes the original values in y, and, therefore, is part of the precondition. Or, you can say that the first k entries have been left alone, and the rest of the entries have been updated. And both of these constitute a partial result towards the final result. So, what do we see here? You look at the postcondition, which tells you everything that needs to be computed. You split its range, because from experience we know that we tend to march through one-dimensional arrays in a systematic manner. And you then look at those two quantifiers that pop out, and then you say, modify them so that they represent a partial result towards the final result. And, bingo, what you have is a loop invariant. So, in summary, again, the loop invariant represents a partial result towards the final result, which is given by the postcondition, and, therefore, there should be a systematic way of deriving loop invariants from the postcondition, keeping in mind what the precondition is. ",
                                        "unit_id":"f90712525b124165be328e319eca2e6c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d84f33067c28491da98fcb22acc78d71",
                                "vertical_name":"3.4.3 A priori determination of loop invariants"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Algorithm",
                                            "Loop"
                                        ],
                                        "data":" IMPORTANT. In the videos of Units 3.4.4 and 3.4.5, we discuss how to derive the loop for the case where the algorithm marches through the vectors from the last element to the first element. We consider this to be the case corresponding to (Loop) Invariant 2. At the end, in Homework 3.4.5.1, we have an exercise that asks you to derive the algorithm that marches through the vectors from first to last (Invariant 1). In the book in the same units, we discuss how to derive the loop for the case where the algorithm marches through the vectors from the first element to the last element. In other words, Units 3.4.4 and 3.4.5 of the book are a very thorough answer to Homework 3.4.5.1. We suggest that you watch the videos for Units 3.4.4 and 3.4.5, do Homework 3.4.5.1 in the online version of Unit 3.4.5, and then go through the materials in the book. Alternatively, go through Units 3.4.4 and 3.4.5 in the book, do Homework 3.4.5.1 in the book, and then go back and watch the videos. In the video soundtrack for Unit 3.4.4 at 1:55, \"if we pick the loop guard to be zero less than n\" should instead say \"if we pick the loop guard to be zero less than k\"? It corrrectly appears that way in the slide shown at that time. ",
                                        "unit_id":"3a8a590f8a1f45c7af073c988393aa1f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Yellow box",
                                            "Orange box",
                                            "Weakest precondition",
                                            "Loop",
                                            "Derive",
                                            "Command",
                                            "Imply",
                                            "Precondition",
                                            "True"
                                        ],
                                        "data":" Robert van de Geijn: In the last unit, we observed that once you come up with the loop invariant, you're home free. And we also showed you some tricks on how to come up with loop invariants. So in this unit, let's go through the motions of deriving some of the other parts of the loop. We will derive the loop guard, and we will derive the initialization step. In order to figure out what the loop guard should be, you need the loop invariant and you need the postcondition, and you focus on that. So let's look at a concrete example. Here's the concrete example that we've used before, where y gets updated by adding the entries of x to it. And in this particular case, we picked a loop invariant such that the first part of the array has been left alone, and the second part has already been updated, which means that we are inherently marching through the vectors from last element to first element. So let's focus on how to come up with the loop guard. And the necessary information is highlighted here in the blue boxes. Here we just focus on that. And notice that the purpose of the game is to come up with this loop guard G. Now we know that the loop invariant, together with the fact that the loop guard is false, must imply the postcondition. Now if you look at this, if k were forced to be equal to 0, then the orange box would be a quantification over the empty range. So that would evaluate to TRUE. And then the rest of it would just be the quantification over the entire range with 0 less than or equal to i, less than n. So that's exactly the postcondition that we're after. So we want to pick our loop guard in such a way that 0 less than or equal to k, less than or equal to n, together with the fact that the loop guard is no longer TRUE, implies that k is equal to n. And the choice is obvious. If we pick the loop guard to be 0 less than n, then not 0 or less than n together with 0 less than or equal to k less than or equal to n, forces k to be 0 and we're home free. And then once we know what the loop guard is, we can fill it in the various places where it needs to be in the worksheet. Next we turn our attention to how to derive or develop the initialization command S sub i. For that we look at the precondition and the loop invariant. Let's focus on that and let's annotate it a little bit. If we look at this, if we pick k cleverly, then the precondition and the loop invariant are one and the same thing. Namely, if we pick k to be n, then what's in the orange box in the loop invariant is exactly what's in the precondition. And what's in the yellow box is a quantification over the empty range, which then becomes TRUE and disappears. So the obvious solution is k is equal to n. But we actually can also do so formally. We say, what should k be? Let's assign it some expression, E. Let's plug that in, and then let's ask the question, does the precondition imply this weakest precondition of Si leaving you in a state where the loop invariant is TRUE? And if you look at that, you come to the conclusion that the expression should be chosen to be n. And then we know that n should be assigned to our variable k. And then we can plug that into our worksheet. And now all we need to do is to develop the loop body itself, the command S that is in the loop body. And that we will look at in the next unit. So in summary, given a precondition and postcondition, we can systematically derive loop invariants. Given the loop invariant and the postcondition, we can systematically derive the loop guard. Given the precondition and the loop invariant, we can systematically derive the initialization command. ",
                                        "unit_id":"2d636730aabe43d688fa35e5a66392c3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7042e8869fa647509906f10ed57476fd",
                                "vertical_name":"3.4.4 Deriving the loop guard and initialization command"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Algorithm"
                                        ],
                                        "data":" IMPORTANT. In the videos of Units 3.4.4 and 3.4.5, we discuss how to derive the loop for the case where the algorithm marches through the vectors from the last element to the first element. We consider this to be the case corresponding to (Loop) Invariant 2. At the end, in Homework 3.4.5.1, we have an exercise that asks you to derive the algorithm that marches through the vectors from first to last (Invariant 1). In the book in the same units, we discuss how to derive the loop for the case where the algorithm marches through the vectors from the first element to the last element. In other words, Units 3.4.4 and 3.4.5 of the book are a very thorough answer to Homework 3.4.5.1. We suggest that you watch the videos for Units 3.4.4 and 3.4.5, do Homework 3.4.5.1 in the online version of Unit 3.4.5, and then go through the materials in the book. Alternatively, go through Units 3.4.4 and 3.4.5 in the book, do Homework 3.4.5.1 in the book, and then go back and watch the videos. ",
                                        "unit_id":"ec1ff510c02447d784cadcc3c2523d0f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Bound function",
                                            "Loop index",
                                            "Weakest precondition",
                                            "Loop",
                                            "Bit",
                                            "Chosen",
                                            "Force",
                                            "Assign",
                                            "Ve",
                                            "Indexed",
                                            "Hand",
                                            "Derive",
                                            "Command",
                                            "Precondition",
                                            "Yk"
                                        ],
                                        "data":" Robert van de Geijn: So now all we're left with is developing the loop body itself, the command S in the loop body. Let's have a look at that. So the part that we're now going to look at is highlighted in yellow. Once again, we turn to our example where we add the contents of vector x to those of vector y. And this is, again, the loop invariant that says that the first k elements have been left alone so far, and the rest of the vector has already been updated. And in blue, we highlight what we are going to look next. And remember that we have to somehow force progress. And notice that this particular loop invariant inherently has the property that we are going to go from the last element in the arrays to the first element in the arrays. So therefore, we want to pick an update to the loop index where k is being decremented every time through the loop. And that obviously forces us to finish, because we saw that the loop guard in this particular case is that 0 is less than k, and it's easy to see that then the bound function is just k itself. So here we're focusing on just what is in the loop body itself. And we've given ourselves some room to maneuver. Now, notice that we know that we have to end up in a state where the loop invariant is true at the bottom. And we've chosen to update our loop index k by decrementing it. So from that, we can compute what the weakest precondition is. That's a matter of substituting in k minus 1 for every occurrence of k in the loop invariant. And then we notice that we are marching through the matrix backwards. And therefore, it is the first element in the range of the second quantifier that was last added. So what that guides us towards is peeling that one off, splitting the range to explicitly expose the elements of y and x indexed by k minus 1. Then we can do the same thing for the precondition for the loop body. And there we peel off the last element of the first quantifier because that's the element that actually is going to be updated this time through the loop. So if we then get rid of some of the clutter, we can compare and contrast. And we can notice that indeed it is the elements indexed with k minus 1 that changes from before the command S sub U to after, and that lets us realize that it's y k minus 1 that is going to have to be updated. So we assign some expression to that. Then we compute the weakest precondition of that. And we get this right here. Every occurrence of y k minus 1 is now replaced by that expression. And then we can read off that the expression should just equal y hat of k minus 1 plus x of k minus 1. And then we go to what was exposed in the precondition for the loop body and recognize that y hat k minus 1 is actually equal to what is stored in y k minus 1. And therefore, that is what we actually plug in. And that leaves us then with the update. y k minus 1 is updated with y k minus 1 plus x k minus 1, which is obviously a little bit ugly. Wouldn't that have been nicer if this was yk becomes yk plus xk. But it also demonstrates that it would be easy to make an indexing error here and indeed assign yk plus xk to yk, and then you would have gotten the wrong answer. So then you plug that all into the worksheet for deriving the loop. And now we have completed our derivation of this loop. Now, alternatively, we could have chosen to decrement k before the update S sub U. And then actually, if you work through it, the update to y would have been yk becomes yk plus xk, which is a little bit more pleasing to the eye. But either way, we end up with a correct loop. So in summary, given a precondition and a postcondition, we can derive loop invariants. If we then pick a loop invariant, then that loop invariant together with the postcondition allows us to derive the loop guard. Given the precondition and the loop invariant, we can derive the initialization command. Given the loop invariant and an update to the loop index, we can derive the loop body. So we have to have some means of forcing progress towards completion. All of these steps are prescribed by the precondition and the postcondition. Read through it again. Given a precondition and a postcondition, we can derive the loop invariants. And then once we pick a loop invariant, all other parts of the loop are actually prescribed. The program and its proof of correctness are developed hand in hand. In the end, we not only have a correct loop, but we also have its proof of correctness. And we would think that perhaps this would have made Dijkstra happy. ",
                                        "unit_id":"c9ebca2bfd7a4cf4aa31f6a8466ad4a6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4ef6cb2f31b847c9b645e5d2f8906ff3",
                                "vertical_name":"3.4.5 Deriving the loop body"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c8a0e435cf264791abb53d61f4ca939b",
                        "sequential_name":"3.5 Examples",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Programming language",
                                            "Common factor",
                                            "Temporary variable",
                                            "Matlab",
                                            "Pk",
                                            "Final",
                                            "Loop",
                                            "Result",
                                            "Range",
                                            "Ve",
                                            "Backwards",
                                            "Computing",
                                            "Array",
                                            "Start",
                                            "Thing",
                                            "Factor",
                                            "Learned",
                                            "Correct",
                                            "Power",
                                            "Specification",
                                            "Variable",
                                            "Summation",
                                            "Entry",
                                            "Minus",
                                            "Algorithm",
                                            "Time"
                                        ],
                                        "data":" Robert van de Geijn: So we're going to revisit the problem with which you started week 1. And there, you were asked to look at a piece of code that computed the polynomial given the coefficients. Those coefficients were stored in a one-dimensional array as p0, p1, p2, et cetera, up to n minus 1. And here we limit our polynomial to n minus 1 because that gives us n entries in our array. Now, in this particular section, you actually get to program. And the programming language that you are going to use is MATLAB. And MATLAB starts indexing at 1. What does it mean? There is no p0. There is an entry p1, and then p2, p3, et cetera, through pn. So let's start with that. Now, what we want to start with is the specification of the problem. And this is kind of a hand-wavy specification, so let's sharpen it a little bit and let's get the postcondition. And the postcondition R is that given in our notation as y is equal to the sum over the entries i, such that 1 is less than or equal to i is less than or equal to n of p of i times x raised to the i minus first power. And that's our postcondition. OK, what have we learned? We have learned that we can come up with loop invariants by partitioning the quantifier in the postcondition. Let's have a look at that. So to come up with possible loop invariants, what we are going to do is we're going to take y and write it as this quantifier plus the rest of it. And then we have to indicate what range k can have, so let's guess at that. We'll start by guessing that 1 is less than or equal to k is less than or equal to n. Let's think about that. If we take k to be 1 and plug that in here, then this first quantifier is over the empty range, so that becomes 0. And the second one is from 1 to n inclusive, and that's exactly our postcondition so that's looking good. If we then take k to be n and we plug it in here, then this first quantifier is not quite what we want because it is short the last term and the second one actually still has one term in it. So we need to fix that. And the way you fix that is by saying that k can actually go up to n plus 1, because then the first part is exactly the postcondition and the second part is summation over the empty range, which is 0, and everything is good. So now what we have is an expression from which we can try to derive some loop invariants. And how might we go about this? Well, one possible loop invariant is to say we're done with the first quantifier and we haven't done anything for the second quantifier yet. And if you think about it, what algorithm do you get? You get an algorithm that computes the result one term at a time, and that's a matter of going through the motions. What about another one? Well, you've seen before that often we could say, take away the second quantifier or take away the first quantifier. So we could take the loop invariants where only this has been computed and this has not been computed. I call it striking it out. I'd like to just put a big scratch through it or erase it altogether, but we'll leave it there and let's picture what would happen if we take that away. And if you think about it, what that particular loop invariant would do is it would give you an algorithm that would start computing the results one term at a time backwards. Now, the annoying thing here is that every time you compute a term then, you would have to take x, raise it to some power, and multiply it by the coefficient, and add it to a partial result that you've computed so far. And raising x to a power is expensive. We'd like to not do that. Wouldn't it be nice if, very systematically, we could up with algorithms that avoid that? And it turns out the answer is yes. And how do we do that? Well, if we look at this right here, this really captures pk times x to the k minus first power plus pk plus 1 times x to the kth power, et cetera. And one thing that you notice is that there's a common factor, x to the k minus 1, in all of these. So we can take this away and this away, et cetera, and write this as times x to the k minus first power. And what does that mean? That's the same as saying, factor out x to the k minus 1. But we can't just factor out like that. In order to do that, we have to subtract off the k minus first power, and that's a matter of adjusting the exponent here. And then if your algebra is somewhat decent, you recognize that this is just x to the i minus kth power. And this now gives us all kinds of options. We can have a loop invariant where we still strike all of this out, we saw that one before. We can take a loop invariant where we strike all of this out and that actually gives us the one that goes backwards through the summation. But we can now also say, gee, if we don't want to recompute x to the k every time, we can take this and we can store it in a variable, let's call it z. And if we then specify that as part of our loop invariant, then every time through the loop, z will be updated by multiplying it times x, thereby computing the powers x to the k as we need them, which you can then use to update the variable in which you're accumulating y. But there's one more there. And the final one is don't do this, do this and take that away. So what is that loop invariant? That loop invariant takes away this part right here and it takes away this part right here, which means we don't need a temporary variable z. Now, that's a really odd one, because what you notice is that at no point in the algorithm is the final result computed. Every time you compute here or every time you go through the loop, what this here says is that there is a partial computation that has been done, but it's not that some part of the total summation is finished where you're finished with all of the terms. And that may seem really odd at first. But what I want you to do is I want you to trust the force. Trust what you've learned. You come up with a specification for the postcondition, you come up with candidate loop invariants, if you can derive an algorithm from the loop invariant, then you have proven that algorithm correct and therefore you know it will give the correct answer. Just do it and see what comes out. And then once you're done actually implementing it, and hopefully you will derive it to be correct so the first time you ever run it it will give the right answer, when you're then done, we will discuss what this actually means. So go do it. ",
                                        "unit_id":"00c8dfe6cba5442981f8d3dec21ec2f2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7c5a1def153e41d5bdb04336f34b7fe0",
                                "vertical_name":"3.5.1 Evaluating a polynomial"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" For the materials in this unit, you will want to follow along by downloading the Live Script EvaluatePolynomialVariant5.mlx and then uploading it to MATLAB Online into directory LAFFPfC/Assignments/Week3/matlab/. The final version discussed in the videos can be found at EvaluatePolynomialVariant5Answer.mlx . ",
                                        "unit_id":"1437b99bcb5c40aa8db42b0169581c3d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Column vector",
                                            "Live script",
                                            "Code segment",
                                            "Call",
                                            "Loop",
                                            "Routine",
                                            "Code",
                                            "Interleaved",
                                            "Indent",
                                            "Part",
                                            "Ve",
                                            "Derive",
                                            "Polynomial",
                                            "Program"
                                        ],
                                        "data":" Robert van de Geijn: You're going to program up your first program, and to do so you are going to derive a program for evaluating a polynomial. You're going to derive its proof of correctness hand-in-hand with the code itself. Now what do we have here? Well, you've opened up the file that we pointed you to. The first thing I want you to do is to save a copy of this so that you can always go back to the original if something goes wrong. What do we have here? We have a description of what it is that we want you to do. We want you to compute a function that evaluates a polynomial. The coefficients are stored in array p. The point where you want to evaluate is stored in x. The exercise itself is described in a Live script, and that's nice because it allows the description to be interleaved with executable boxes that have the actual code in it. What we've done here is we've introduced some executable boxes that actually test the program that you are going to create. Here we set n to be 4, so we'll have 4 coefficients. Those are randomly generated integers between minus 1 and 2. We are going to set that up as an n by 1 array, and then x is the point where you evaluate it. We take everything to be an integer so that when we compare against the native routine that's part of MATLAB we don't have to worry about round-off error making the result not exactly the same. Then, here we just call the routine that you're going to implement. You're going to take the loop invariant that we came up with in the video, which I'm going to call loop invariant 5, and from that you are going to derive algorithmic variant 5 for this operation. The native routine that evaluates a polynomial orders the coefficient in the opposite direction. Whoops, here I need to fix this. That's actually what the native routine does, and therefore we need to reorder the coefficients in order to be able to compare. That comparison is done right here, but notice you are going to derive the program to be correct so it should never tell you that something is wrong. The only thing that you should expect to come out is that the answer is consistent with what the native routine from MATLAB itself computes. Down here I've already created part of the function for you. This is the function. I check whether this indeed is a column vector that's being passed in for p, and then I check that the x is actually a scalar. Here I've already gone ahead and extracted n, which is the size of the array, so that you're ready to derive the algorithm. Here there are some executable boxes that you're going to have to modify interleaved with some text boxes in which I've created the specification for the program segments with a precondition up here and a post condition down here. I'm going to go ahead and annotate this code segment with the loop invariant. You don't need to do this, but if you want, you can. What you are going to do is to then actually derive the different pieces of the program to be correct. How do we annotate this with the loop invariant? Well, we take this and we copy it over, and we put it up here. We do P_inv to fill that in. Then the loop invariant was chosen to look like this, where the 1 is replaced by k here, and by a k here. We have this, and then what we also need to do is say, and 1 is less than or equal to k, is less than or equal to n plus 1. Then everything works out. We want to go and indicate everywhere where this loop invariant must be true. It has to be true there and there. And I like to indent things, so I'm going to put-- the only I know how to indent is to put some dots there. Then I want to copy this over down here so that the indentation is the same, and then up here it has to be the case that G is also true. And down here it has to be the case that G is not true. What I want you to do is I want you to go and look at what's here after the loop and systematically derive the loop called G. I'll see you in the next video. ",
                                        "unit_id":"4ee150ef45ae430184ef5337f8427862",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant"
                                        ],
                                        "data":" Robert van de Geijn: Notice that this part of the exercise we pointed out that's the initialization is not unique, and the one that we're going to pick here is that k is equal to n, which means that y is equal to p of n as our initialization. And if you take that y and plug it in here for the loop invariant, then you get that that's equal to the sum from n to n of p of n x to the-- let's see, i is then n, and k is n. So that becomes to the 0th power, but that's 1 and that's exactly what you want. So now you've derived the initialization to be correct. And finally, I want you to focus on deriving the loop body to be correct, and then again, I'll see you in the next video. ",
                                        "unit_id":"6b401ceadb2b4924b4e6c608c99614da",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Code",
                                            "Save",
                                            "Correct"
                                        ],
                                        "data":" Robert van de Geijn: OK so what the derivation told you was that y should be updated with p of k plus y times x. And now you have what is presumably a correct code. Should we execute it? We need a little drumroll. Let's go back to the top. And I'd like to have the results show up on the right. So we are going to execute this code. And we might as we'll save it first, just in case something goes wrong. So let's save it. And let's say, Run All and hold our breath. And lo and behold, we got the right answer the first time. So welcome to the wonderful world of having your program give the correct answer the first time you execute it. ",
                                        "unit_id":"2cbfdf9eba044f4e8480d1891297221c",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Algorithm"
                                        ],
                                        "data":" Robert van de Geijn: So hopefully you experience the excitement of getting the right answer the first time when you execute the algorithm. And how does this particular algorithm work? Well, notice that at some point you have computed this so far, and then what you do is you multiply by x and you add the previous coefficient to it. And if you think about it, that's just a matter of what they call telescoping the expression. This right here-- let me erase this to give myself room. This right here can be written as p n times x plus p n minus 1 times x plus p minus 2 etc. And if you multiply all of that out, you get your original polynomial back. Unfortunately, getting the indexing just right the first time when you program this up is remarkably tricky. But you got the right answer the first time because you derived it to be correct. ",
                                        "unit_id":"bdb649052e384a22994e59f93a48850e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"afaa6c665d844d44be7473740679d74d",
                                "vertical_name":"3.5.2 At last, you write your first code!"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f75caabe93754c079d02b02844f132bf",
                        "sequential_name":"3.6 Enrichment",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Shortest path algorithm",
                                            "English dictionary",
                                            "Shortest paths",
                                            "Computer scientists",
                                            "Computer science",
                                            "Hoare logic",
                                            "Research monograph",
                                            "Operating systems",
                                            "Thesis advisor",
                                            "Compiler writing",
                                            "Programming methodology",
                                            "Cornell university",
                                            "Structured programming",
                                            "Edsger dijkstra",
                                            "Loop invariant",
                                            "Good",
                                            "Wrote",
                                            "Conference",
                                            "Word",
                                            "Make",
                                            "Remember",
                                            "Reading",
                                            "Science",
                                            "Dijkstra",
                                            "Term",
                                            "Writing",
                                            "Loop",
                                            "Teaching",
                                            "Knowledge",
                                            "University",
                                            "Great",
                                            "Change",
                                            "Implement",
                                            "Back",
                                            "True",
                                            "Ve",
                                            "Programming",
                                            "Algorithm",
                                            "Program",
                                            "Write",
                                            "Met",
                                            "Start",
                                            "Proof",
                                            "Hand",
                                            "Time",
                                            "Invariant",
                                            "Teach",
                                            "Thing",
                                            "Lot",
                                            "Book"
                                        ],
                                        "data":" So today, it's my great delight to have a visitor and that visitor is Professor David Gries, who has recently retired from Cornell University. Now, why is it such a pleasure? Well, David Gries wrote this book, The Science of Programming, back in-- 1981. --1981. Well, I wrote it before that. Well, that's when it came out. So anyway, welcome. Thank you. Nice to be here with you. So I believe this is the first time we've met in person. We've had several email conversations over the years. Yeah. Nice to meet you. It's very nice to meet you. So how did you stumble upon this field? I stumbled upon it through your book. I used to be- my first field was compiler writing. And I was at a conference in 1968, a very famous NATO conference where the word software engineering was coined by Doug Mcllroy I think it was. And that was in Garmisch, Germany. And industry and academia were there and they said they didn't know what-- neither side knew what they were doing. Do you know that this NATO conference? Wonderful thing-- you can actually go back and read the report on it-- very good. Lots of people were there. Edsger was there, Edsger Dijkstra. I met him. Didn't talk to him. I was there only because my thesis advisor was Fritz Bauer in Munich. And so I was his student. He invited me to come there. And I helped set things up, run it but I learned a lot from all of these people and I began reading all this work on structured programming and so on. And I was teaching at that time, but I really didn't know what I was teaching and how when I tried to teach programming. I remember at Stanford, my first time teaching a loop, I said, I don't know how to teach this. And I didn't. And I gradually got-- not so gradually-- quite quickly got enthused in this whole field of programming methodology. I remember reading Dijkstra's works and not being able to understand them. I couldn't understand his reading. But I think it was in '71 I got to teach a course on compiler writing at the University of Maryland over the summer, a week course. And Edsger was there teaching a course on operating systems. And after that, I had no problem reading him. He sat in on my lectures, I sat in on his lectures. And I was just grabbed by this whole field of programming methodology and that's sort of what I did ever since. In the beginning, it was difficult. We really had to use loop invariants, structured programming, and so on. But we really didn't know what we were doing. It took a time. Edsger, Tony's Hoare logic, the way you usually looked at it was we have a program. Now we have to prove it correct. And that's a very terrible thing to do. You can't-- you have to develop the program and proof hand in hand. And Edsger showed us how to do this with his paper on weakest preconditions and then his book. And this book, I read it. I liked it. It was very difficult to read because it's a research monograph. It's not meant for the masses, for the undergraduates, no exercise, no this and that. And he had things in what I believed was the wrong order in a sense if you're trying to teach. And that is, he would give you an algorithm and then he would show the steps in how he would develop it from the specifications. And that's very difficult. And all I did was take his idea and switch it around. Here's a principal for a technique for development. Now we're going to apply this algorithm and this algorithm. And you go now apply to these other two. And I like to call this book Dijkstra for the masses. Well, there you have it-- Dijkstra for the masses. Yes. So the irony is I learned about Dijkstra's techniques from your book while my office was next to Dijkstra's Ah yes, yes. He was it. So over the years, you must have been approached by other people like me who were influenced by your work. Do you have any other wisdom of why this is so important, why the current generation should pay just as much attention to it as the previous ones? There are several reasons. It makes teaching algorithms and programming so much more effective and efficient. And if you're a programmer, you will make fewer mistakes. It's not that you will do things formally. Very few of us ever do things-- almost nobody-- formally all of the time. But just having that mindset, that notion of you start from the specification and you develop a proof or an outline of a proof and the program hand in hand, that changes how you think about programming. You become more effective. It makes it easier for you to talk to other people about programs. It is just the way of looking at a program. Too many people look at them as executing a sequence of code. It's not. It's how you understand that a piece of program works based on its preconditioning and its post-conditioning. And the use of invariants. So it just makes everything more efficient and easy. So in some ways, it really makes it data-centric because you're thinking about what should be in the variables as opposed to thinking about do you structure the computation. We were host-- Or hand in hand. We were host in the early '70s, late '70s, to a family of man and he met and he married his wife from India. And he ended up taking my course on The Science of Programming and I ended-- at the end of the course, I said, what you think of it? He said, it's very dull in this sense. All you have to do is write good definitions of your program and then write your program to make progress thought terminations but keep these definitions true. And that's it, right? We have to focus on the definitions. The loop invariant is nothing more than a definition of the variable that holds before and after each iteration. You write up-- you write a class. You write your class invariant, which is the definition of the fields of that class. Each method knows that those definitions are true initially. It must end with them true. That's all there is to programming. It's a nice, simple view of it. And if we could get more people to think that way, they would be better off. Part of the problems students have is they do not know how to write these definitions. So here's an example. We show them an abstract version of Dijkstra's shortest path algorithm. We develop it. We say, here's the invariant. It's only three little pieces. You know that thing that you got a settled set and a frontier set and a far-out set? And the invariant is simple. You know the shortest path length for everything in the second set. You know something about those shortest path lengths with those in the frontier set. And you know there are no edges from the red set to the other set. All edges leading to the red set go to the frontier set. That's the whole invariant. And then you can develop it. Now we tell them to implement that, you need a-- implement the frontier set as a heap. And then you need another set to help you keep track of all of the shortest paths. We ask-- and we tell them what type it has, in Java it's a hash nap. Write down the definition. They're not able to do that, even to saying it contains an entry for every node in the frontier and settled set. They just have difficulty in putting down their ideas. That is one of the-- I think all these programmers you were talking about at one point, they don't know about loop invariants, but they always have them in their mind even though they don't know the term. Why would they write the body of a loop to do something if they didn't know somehow what it was supposed to keep true all the time? But they're not used to writing it down. This now sort of invariant is all over the place. It's just not loop invariant. There's the class invariant. There are lots of games that we play where if you try to find a solution to the game that's an invariant. Physicists use the term invariant all over the place, they tell me. It's just the idea that there's something that's not changing. Rather than something that tells how to change things, you say, what should not change? That is so important not in just computer science, but other fields as well. You know, that word science, I always start my classes by asking students, so what makes computer science a science? How few people can answer that question? How few computer scientists can answer question. Yes. And I have the answer in my introduction. Ah, what do you say? I haven't read that introduction for a long time. Read it to me. So I was looking for a title. And I said, the reason I chose science was because discipline was thinking. There are three or four others that were taken. John Reynolds has a book and so on. The terms science-- and this I got out of the English dictionary, Oxford English Dictionary. Sometimes, however, the term science is extended to denote a department of practical work-- that's what we -- that depends on the knowledge and conscious application of principles, an art on the other hand being understood to require knowledge of traditional rules and skill acquired by habit So it's the conscious application of the principles. And that's what we're about. OK, with those words of wisdom, thank you so much for joining us. It's my pleasure being here, yes. And I wish you a lot of-- I wish you well in continuing this work. It's very important. I believe so. If we all work together, maybe we will get the world to recognize that this notion of process is more important. Well, we'll start a new revolution. Yes. Thank you very much! This is great. Yes. ",
                                        "unit_id":"4cbdbb5875674a139dd38d3ad605d7a2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"75133fe73ef2482b95b6497b27160e44",
                                "vertical_name":"3.6.1 A conversation with Prof. David Gries"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Programming language",
                                            "Program"
                                        ],
                                        "data":" \"Dafny is a programming language with built-in specification constructs. The Dafny static program verifier can be used to verify the functional correctness of programs.\" We believe you will enjoy and appreciate learning about Microsoft's Dafny language and program verifier. The following more advanced example for that project is closely related to what you learned this Week: The Verification Corner: Loop Invariants . This may lead you to investigate this project more [LINK] . Share what you find on this unit's discussion forum! (Maggie and Robert have been too busy to look too closely, but it seems really cool. Could this kind of program verifier be added to MATLAB?) ",
                                        "unit_id":"a760c5279f0f4f99bba9ece4eecd1f3f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bff16b2ad2044df8a4d36a925ae5949f",
                                "vertical_name":"3.6.2 Dafny: A Language and Program Verifier for Functional Correctness"
                            }
                        ]
                    },
                    {
                        "sequential_id":"39bba3a4aa3f442985bfe572cd255c7a",
                        "sequential_name":"3.7 Wrap Up",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Weakest precondition",
                                            "Ve",
                                            "Nicely",
                                            "Substitution",
                                            "Created",
                                            "Range",
                                            "Prove",
                                            "Imply",
                                            "Challenge",
                                            "Predicate",
                                            "Guard",
                                            "Interval",
                                            "Write",
                                            "Work",
                                            "Initialization",
                                            "Invariant"
                                        ],
                                        "data":" Maggie Myers: In this video, I want to show you my derivation of the dot product. And I'm going to actually use Robert's worksheet, but I'm not going to write out all the details. It just took me way too long to fill in all the pieces, so a lot of that I just do in my head, mentally, and I don't write things out. First thing I wanted to do was remind you of what the dot product actually was. If we want to take the dot product of two vectors, they have to be of the same size. In my example that I've created here, I created two vectors that were of size 4, and the dot product is defined to be the sum of the component-wise product of the components of the two vectors. So in this particular case, the dot product would have been 3 times 1, plus 5 times 0, plus 0 times negative 1, plus 1 times 2, and this is the notation we often use for dot product. In this case, it was 5. So, let's go through now and actually create a program segment that finds this dot product using the invariant from your assignment. Notice that there were many invariants that we could be using and there are actually many different program segments that we could develop. I think there will be a total of 8, but I'm going to use the one that was from the assignment, which means that the invariant is the dot product is the sum of i from 1 to k, not including k, of x i times y i. And k is between 1 and n plus 1, including the endpoints. So the first thing I do, as recommended by Robert, is to figure out what the guard will be for this loop. And so I know the post-condition. Really to start off any problem, I would have figured out-- first formulated the pre-condition and the post-condition, and then the invariant, and then I would try to determine the guard. Notice that when we exit the loop, the invariant and not the guard must hold. If I compare the invariant and the post-condition, this will help me find the guard. Notice they're not exactly in the same form in that the range for the invariant was that i was between 1 but less than k. And for the post-condition, it was I was greater than or equal to 1, and less than or equal to n. I want to be a little bit more aligned. So I'd going to write the post-condition as 1 is less than or equal to i, is strictly less than n plus 1. Because being less than n plus 1 is the same as being less than or equal to n if we're dealing with integers. And so now I notice that the invariant and the guard match if k is equal to n plus 1. So not the guard should be that k is greater than or equal to n plus 1. Which means the guard is the negation of k being greater than or equal to n plus 1. So the guard is going to be that k is less than n plus 1. Well, I'm going to write it instead as k is less than or equal to n, which again, is equivalent to k being less than n plus 1. OK, so that is my guard and my first step. The next step I like to perform is the initializations. But the first thing I need to ask is what kind of commands do I have here? What kind of updates am I going to be doing? Or what are the variables involved? Well, one of them is k and the other is the dot product. So both in the initialization and in the loop, I'm going to be assigning values to those two variables. So, in the initialization I'm going to say d becomes and k becomes. In the loop itself, I'm going to have a command, d becomes, and another command, k becomes. OK, now again, let's focus on the initializations. That is supposed to be before we've done any work, we can initialize. And so if I look at the invariant, it's supposed to hold before I start the while loop. So it must take into account the initializations. No work done means that i is going to be an empty range. So I'm going to set k to be equal to 1 because if k is greater than or equal to 1, but less than 1, that's the empty range. OK, now if I'm trying to evaluate a sum over an empty range, I know it evaluates to 0. So I'm going to assign d the value 0. OK. Now, those are my initialization commands. To be sure that I picked the right ones, I really should prove that the precondition implies, the weakest precondition of d becomes 0 and k becomes 1, the invariant. And I challenge you to do that, but I know that it works. I've hand-waved that it works. Let's now go through and try to figure out the assignments for the loop. Well, what do I need to know? I know that first of all, I'm updating k in the loop, and the way that this is working is k is incrementing. So eventually the entire range will be from 1 to n, including n. And so I know that inside of the loop I'm going to assign k the value k plus 1. Now I need to figure out how to update d, my dot product. So what I'm going to do is think about what needs to be done. I know that when the invariant holds and the guard holds, that should imply the weakest precondition of whatever update I'm doing to d, and that is going to be some expression, followed by the update that I do to k, should leave me in a state satisfying the invariant again. And this update to d could be a function of k. And so what I need to do is determine how to pick the expression for d to make this predicate TRUE. I know that if I have the weakest precondition of a command followed by another. It's the weakest precondition of d becomes this expression, where it's post condition is the weakest precondition of k, is updated to k plus 1 invariant. So, I'm going to do a little side and say hey, if I want to figure out what the weakest precondition of k becomes k plus 1 invariant, I know it's just a text of substitution. So in the invariant, when I see k, it is replaced with a k plus 1, and that leads me to the predicate that d is the sum of i, i ranging from 1 to less than k plus 1 of x i times y i. And k plus 1 is between 1 and n plus 1, including the endpoints. If I look a little bit more carefully at the sum, I can actually break the range, split it into two pieces, and I if you look at it, i is greater than or equal to 1, and less than k plus 1. Is equivalent to i is greater than or equal to 1, and less than or equal to k. So I'm going to split this range into the ranges where i is greater than or equal to 1 and less than k, or i is equal to k. So splitting the sum, I end up with the sum of i from 1 strictly less than k of x i times y i plus when i is equal to k, it gives me x k times y k. And then if I look at the interval for-- k plus 1 was between 1 and n plus 1. If I rewrite that and describe the interval around k, it must be between 0 and n. Or I could write it as k is either 0 or 1 is less than or equal to k is less than or equal to n. How does that help me? Well, if I go back and try to figure out the weakest precondition of the assignment, where it's post-condition is the weakest precondition that I just simplified. In the predicate, since the command is an assignment, I do a textual substitution for the dot product and expression, which is a function of k, E of k. So this weakest precondition becomes E of k is equal to the sum over i, i from 1 to k, including 1, but not k, of x i times y i plus x k times y k AND 0 is less than or equal to k, is less than or equal to n. Now, the invariant and the guard is supposed to imply this predicate. And so if I write it out and I compare the invariant, which had a subcomponent, the d is the sum i from 1 to k of x i times y i, and an interval, and the guard. I notice the intervals will work out nicely in that you're going to have k equals 0. Or the same interval that you end up with whenever you have-- when you simplify, you get 1 is less than or equal to k, is less than or equal to n. So that part of the weakening and strengthening is going to work nicely. In order to figure out what E of k is, when I compare I notice that the assignment of d and the invariant matches the sum i from 1 strictly less than k of x i times y i. So it seems to me what I want to do is pick the expression to be the d in the invariant plus the extra term, x sub k times y sub k. That's my update, and so I end up with d becoming d plus x sub k times y sub k. Now, this is my program segment. To show that it actually holds, what I would need to do is to prove that-- sorry, the invariant and the guard imply the weakest precondition of d becomes d plus x k times y sub k, followed by k becomes k plus 1, invariant. And I'm sure that it does, but again, I'll challenge you to make that more formal. So, this was the building of the program segment that found the dot product using the invariant here. There are many other invariants that you can use, so you might want to try and challenge yourself to see what happens to the updates or see what happens to the program segment if you choose other invariants. ",
                                        "unit_id":"affd3481d820425b88409ce80a019151",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9185f77d34e2454ba96eead1b194cef2",
                                "vertical_name":"3.7.1 Additional exercises"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"ddf7a1bb89b44f3b97a354096788aeb7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2b7f52ad911f4fccae72746d0a6b2a26",
                                "vertical_name":"3.7.2 Summary"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Thought process",
                                            "Structured programming",
                                            "Programming",
                                            "Structured",
                                            "Program"
                                        ],
                                        "data":" Dijkstra received the ACM Turing Award in 1972 \"For fundamental contributions to programming as a high, intellectual challenge; for eloquent insistence and practical demonstration that programs should be composed correctly, not just debugged into correctness; for illuminating perception of problems at the foundations of program design.\" What you hopefully have noticed in this week is that the thought process behind developing different parts of a program can be made remarkably systematic. Key is thinking about programs themselves in a structured way (which is why the advent of structured programming'' in the late 1950s was so important). In this course, we then structure goal-oriented programming with worksheets'' for different occasions. ",
                                        "unit_id":"bfce79c066b546f99599969aea9cdef6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ee7f2f02385c4b6bbcfbeb954eb0d3a3",
                                "vertical_name":"3.7.3 Why Dijkstra received the ACM Turing Award"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"6bac95f62c4b4c499bc653eb9a260fc3",
                "chapter_name":"Week 4 Matrix-Vector Operations",
                "sequentials":[
                    {
                        "sequential_id":"d8002ec9e65b456ea666b098ddeb31fd",
                        "sequential_name":"4.1 Opening",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Secret ingredient",
                                            "Loop invariant",
                                            "Linear algebra",
                                            "Dot product",
                                            "Column vector",
                                            "Partial summation",
                                            "Row vector",
                                            "Column",
                                            "Product",
                                            "Top",
                                            "Row",
                                            "Lot",
                                            "Dot",
                                            "People",
                                            "Bottom",
                                            "Correct",
                                            "Understand",
                                            "Partition",
                                            "Part",
                                            "Derive",
                                            "Vector",
                                            "Summation",
                                            "Element",
                                            "Transpose",
                                            "Don",
                                            "Split",
                                            "Program",
                                            "Write"
                                        ],
                                        "data":" Robert van de Geijn: So are you ready for a week four? So, week one you learn some logic. In week two, you learned how to prove programs correct. And week three, you learned how to derive programs, in particular, loop based programs over one dimensional arrays, correct. And now what? Surely, You're done. Well, part of the problem is that you may have noticed during week three, if you're a somewhat experienced programmer, that the kind of manipulation you have to do with indices, when you derive your program to be correct, is not that different from the kind of manipulation you have to do when you write the program in the first place without first deriving to be correct. And there are indices in the program, which is where you tend to make most of your mistakes in these kinds of programs, and there, indices in the qualifiers, where you probably made some mistakes along the way as well. And you might even have discovered some mistakes that I made in the materials. So that's a problem. And this may very well be one of the reasons why this has been all very nice. And why a lot of people think that this kind of material is very interesting, when it comes to teaching people how to think about programs. But why it never really quite caught on the way we think it should have caught on. And what are we going to do about that? Well, in the launch you're going to get a glimpse at what we're going to do about that. And then, in the rest of this week, you're going to learn a little bit more. And we believe that by the end of the week, you will see that there's actually something to it. But there's still a secret ingredient missing, and that secret ingredient is abstraction. This is what Dijkstra might call elegance. So how do we do this? But how do we do it elegantly? How do we do it in a way so that all of these indices don't clutter our thinking? Let's have a look. All right. So, let's go back to the dot product. So we might want to do the dot product of two factors. And we tended to denote that this T here, stands for transpose. Now, why is that? Well, that's because the T transposes this, which then becomes a a 1 minus 1, 2, 2, 1 minus 1. And we've commented on the fact that in Matlab everything is an array. And you can think of a vector as a column vector, or you can think of it as a matrix that has three rows and one column in this particular case. And then the T means transpose that, which means becomes a row vector, or a 1 by 3 matrix. And then, if you remember how to do a matrix-matrix multiply, you'd remember that it's this times that, plus this times that, plus this times that, which is exactly how the dot product is also defined. It's the sum of the products of the corresponding elements. So the answer, in this case, is then 1 times 2 minus 1 minus 2 is minus 1. So normally, when you first program something like this up, you might want to write down a few examples like this. Get a feel what the problem is, and then kind of guess at what the program should be. And at some point you might say, well instead of having actual numbers there, we might want to store these numbers in an array x. And in an array y. And that then leads you to, in general, what is this for vectors of size 3. Well, you would write that as the sum over i, of 1 less than or equal to i, less than or equal to 3 of xi times yi. OK. And then you say, yeah, but we don't want to write programs just to take the top product of 2 vectors of size 3. So how do we generalize that? Well, we can say dot, dot, dot and make this an n instead of a 3. And make this a dot, dot, dot, and make this an n instead of a 3, and then we get the specification of the dot product using a quantifier. And then, if we have to come up with a post-condition, let's say that we leave the result in a variable d, then this would become your post-condition. And it might be a process that you would go through. And now instead of doodling with a bunch of examples trying to get a feel for what this operation is and then trying to write a program for it, we start with the specification. And from that, we derive the program. And what is the key to deriving a loop-based program for doing this? The key was to come up with a loop invariant? And how do we do that? Well, we take this, split the range. Now we have split the range into the summation over the first k minus 1 terms here and then the rest of the terms. And then we almost had to sort of scratch our head and say, well, what about k? Is k between 0 and n? Is k between 1 and n plus 1? What does that need to be? Well, you know what, that's exactly the same kind of thinking that you were used to doing when you were writing just a quick loop and you had to think about, what is the loop guard? But hopefully, you will get it right. And hopefully, we taught you something makes-- to very systematically think this through so that if you take the time to think it through you actually get it right. But there's opportunity for error. We do not like opportunity for error. So how do we avoid this? Well, there's this secret ingredient. And the secret ingredient is abstraction. When we communicate with each other about needing the product computed, we don't tend to write this down. We tend to write down that we would like to compute d equals x transpose y, were we understand what that the operation is. It something you learned in linear algebra. So wouldn't it be much better to have that be what you need to compute? And then this here, well, you can look at that and say, well, that looks an awful lot like an dot product of the two vectors, except only the first k minus 1 elements in each of these vectors. And then we do a dot product with the rest of it. How can we get there? Well, we can take our vector x and say, let's think of it as a top part and a bottom part, the first k minus 1 element, the rest of the elements. Let's think of our vector y as a top part and a bottom part. First k minus 1 entries, the rest of the entries. Could be that this has 0 entries, and this has all the entries? What is important is that the number of entries here is the same as the number of entries here. Because when you do this summation, this partial summation, this first part of the range, the number of elements in x must be the same as the number of elements in y. So how do we split the range on an expression like this? Well, there's two ways to look at it. One way to look at it is to go back and say, well, this is really this. This I know how to split the range of. This I know is just the dot product of the top part of the two vectors. This is just the dot product of the bottom two parts of the vectors. And there you have it. This is the splitting of the range. And we don't think about the details of this, because somehow the splitting is implicit in the fact that you partition two vectors. And therefore, you don't have to worry about that so much. There's a second way of thinking about it. And that is to say, look, how is-- well, let's think about it this way. x really is just the vector, but split into two parts. And similarly, y is just the vector split into two parts. So this dot product is really the same as this dot product. And how all you need to know is how do I take the dot product of partition vectors. Well, if you took our first massive open online course, you would have learned how to do that. I believe it was in section 1.6. And there what we teach people to say, look, when you want to do this, let's take this and do what you would if these were numbers. If these were numbers, what would you do? You would write them as side-by-side, because it is the row vector that you get. But x top here represents a column vector. So what you have now done is created something else to column vectors possibly of different sizes next to each other. We need to also transpose them to make each of them into a row vector. That's the equivalent of what we did here if say we partition the vectors like that. And then what do you notice? It's this times that plus this times that. That's the dot product of the first part plus this is that, which is the dot product of the second part. So if you now take the dot product of that with the partition vector y, what you get is exactly this. So if you had a decent background in linear algebra, you would be able to go from this, to the partitioning of the vectors, to this to that to this expression right here, which really just represents the splitting of the range that you saw in weeks two and three. A lot easier to write down, a lot easier to do if you only remember a few simple facts from linear algebra. If you don't remember those facts from linear algebra, you're still going to be OK. Because what I always tell my students, when they run into something like this, is go back to how you would do it if these were just numbers. If this was just two numbers, what would you do? You would write it as this. And you would do this times that plus this times that. The equivalent here is take this, take the symbols, put it next to each other. You do have to remember that these are vectors and that therefore, you need to also transpose the vectors. And then you symbolically do this times that plus this times that, which is what you do here, this times that plus this times that. So what do we have now? We have a clearer way of writing down what we want to compute. We have a cleaner way of writing down what you get when you split the range. Could that perhaps translate into a cleaner way annotating algorithms and/or deriving algorithms? What I want you to do is go and do exercise 4.1.1.1. And then we'll discuss this a little bit more in the next video. And then by the time you get through with week four, you'll understand all about it. ",
                                        "unit_id":"0c9f334170c14873866482037902c1a1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4f883cff99804c31a1fc77def1af5869",
                                "vertical_name":"4.1.1 Launch"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Flame"
                                        ],
                                        "data":" 4.1. Opening Remarks 4.1.1. Launch 4.1.2. Outline Week 4 4.1.3. What you will learn 4.2. A Farewell to Indices 4.2.1. More notation 4.2.2. Deriving algorithms with the FLAME notation 4.2.3. Typesetting algorithms with FLAME notation and LATEX 4.2.4. Representing (FLAME) algorithms in code 4.2.5. The AXPYoperation 4.3. Algorithms over two-dimensional arrays (matrices) 4.3.1. Some algorithms for matrix-vector multiplication 4.3.2. But you get so much more... 4.3.3. The rank-1 update 4.3.4. Why do we want multiple algorithms? 4.4. Enrichment 4.4.1. Related reading 4.5. Wrap Up 4.5.1. Additional exercises 4.5.2. Summary 4.5.3. Preparation ",
                                        "unit_id":"4d92ff271ec54dd7be2ac94991bf6b4e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"478508d1e42c4a2f8f443114ab8c6c8e",
                                "vertical_name":"4.1.2 Outline Week 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Make"
                                        ],
                                        "data":" This is it! We enter the frontier. Reasoning starting with the goal is definitely the way to go. The problem you may have noticed in Week 3 is that indices get in the way. Before, that is where you would make many of your programming errors. Now, you find that it is easy to make similar mistakes in the quantifiers. So, how do we get rid of those pesky indices? The answer is to think in terms of parts and whole,'' representing progress through arrays and loops utilizing regions instead of quantifiers. Through abstraction and special notation, we hide indices and expose strategies for finding invariants. As before, the invariants then guide the development of loop-based algorithms. We call this the FLAME approach. Upon completion of this week, you should be able to Abstract away from indices. Use FLAME notation to express the goal (postcondition), determine invariants corresponding to the Partitioned Matrix Expression (PME) and, through a worksheet, derive loop-based algorithms involving traversing in one dimension. Use the Spark webpage to translate from algorithms to MATLAB code. Utilize Live Script to embed proofs of correctness in the MATLAB code. Recognize the value of having a family of algorithms that compute the same operation. ",
                                        "unit_id":"e0a554fbff294f7aae71b59fd186914b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0f734f9491304f289c8e30b1f7ff694a",
                                "vertical_name":"4.1.3 What you will learn"
                            }
                        ]
                    },
                    {
                        "sequential_id":"dbfd597d46274b729e8dfb768529d3de",
                        "sequential_name":"4.2 A Farewell to indices",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Special case",
                                            "Loop invariant",
                                            "Case",
                                            "Part",
                                            "Loop",
                                            "Row",
                                            "Hat",
                                            "Express",
                                            "Annotated",
                                            "Column",
                                            "Top",
                                            "Bottom",
                                            "Element",
                                            "Notation",
                                            "Vector"
                                        ],
                                        "data":" Robert van de Geijn: In the launch, you were introduced to some new notation that allowed one to more concisely express the precondition, the post-condition, and the loop invariants. But there were still other parts that were not captured by that notation. So now, we are going to introduce some more. So here's an annotated algorithm for copying vector x into vector y, annotated with a precondition, a post-condition, and a looping invariant. We can use the notation hinted at in the launch to annotate this particular program. y equals y hat indicates that, when we start, y has its original contents in it. The k becomes 0, now is changed to x, is partitioned into top part and the bottom part, and the same for y. And then we can express our loop invariant by saying that y top y bottom is equal to x top y bottom hat. And that just means that the top part has been replaced by x top, but the bottom part has not yet been changed at all. So now let's focus on the loop itself. There are all kinds of parts here that we now need to still create some notation for. We highlight them here. The loop guard still needs to be somehow related to our new notation, as do the expressions just before and after command S. And notice that there, it's important to be able to isolate the element indexed by k, because that's what we used to determine what the update to y actually had to be. So how do we do this? Well, first of all, we need to have some way of saying what the size of a vector is. And we use vectors as a special case of a matrix. A matrix has a row dimension and a column dimension. The number of rows, we will indicate by m, the number of columns by n. So m of x, when x is a vector, is just the size of that vector. We also want to be able to expose the term in a quantifier that we carefully isolated. And we do that by saying that x top x bottom is partitioned into x0 and then chi 1, x2. What does that mean? That means that we relabel x top x0. And x bottom has now been split into its first element, chi 1, and the rest of the elements, x2. Or it might be that we want to split that element from the top part of x, in which case, x top becomes x0 chi 1, and x bottom becomes x2. So that's the repartitioning that happens at the top of the loop to be able to expose the term that was split off from the quantifier. Now, at the bottom, we want to then be able to take that element and add it to the other part of the vector, so that we can capture movement through the vectors. So on the left here, x top becomes x0, chi 1. The element chi 1 has been moved from the bottom part to the top part. And on the right, you see that x top x bottom becomes x0. And then x bottom becomes chi 1, x2. And that means that the element now has been moved from the top part of x to the bottom part of x. And finally, we need to be able to assign to the element indexed by k. But notice that now, we have created labels for those elements. And therefore, we can say psi 1 becomes, where psi 1 is the lower case Greek letter that we associate with vector y. So what I want you to do now is to go and play around with this in the homework, where hopefully, the notation is intuitive enough that you can figure it out. ",
                                        "unit_id":"18e4da4bd900417ba40b30a8ec92af95",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Loop index",
                                            "Top element",
                                            "Loop",
                                            "Exposed",
                                            "Element",
                                            "Bottom",
                                            "Split",
                                            "Term",
                                            "Top"
                                        ],
                                        "data":" Robert van de Geijn: OK. So let's play around a little bit with this new notation. And to do so, you're going to play with this drag and drop problem. Now, by the time you see it, we may have fine-tuned this problem slightly. But hopefully, you'll get the idea of what's going on. So first of all, we introduced this notation for indicating the size of a vector. And notice that, over here with the while, we said while k is less than n. Well, that translates really into while the top part of y is less than all of y. So that is m of y top is less than m of y, OK? Now, the loop guard needs to be put in various different places. So let's also put it right there. And let's also put it right there. OK? So now, we have a way, in our new notation, of saying that the size of vector y, that the loop index k is less than n. So the next thing we want to be able to do is, in the loop body, indicate that we split off this element of x and the element, the corresponding element, of y, with which we're going to do something special. So that is the x top x bottom becomes x0. And then x bottom becomes chi 1 x2. And that splits off the top element of the bottom part of x, and then the same thing for y, where it's psi 1. That's P-S-I subscript 1. That is that element of y that is going to be identified. Now, at the bottom of the loop, we want to then move forward. So we take the notation for moving forward. And that's really just the notation we now use for saying the loop index is incremented by 1. So now, we need to figure out how to indicate the loop invariant, but with that k term split off. The loop invariant says that y top y bottom is equal to x top y bottom hat, x top has been relabeled x0. x bottom has been relabeled chi 1 chi 2. And let's see. If you puzzle it all out, you find out that your loop invariant now really is expressed in terms of these different pieces that have been exposed as saying y 0 psi 1 y2 is equal to x0 psi 1 hat y2 hat. Why? Because y0 is what previously was y top. x0 is what previously was x top, so that just gets filled in the loop invariant. And then y bottom has become psi 1 psi 2. y bottom hat has become y1 hat-- sorry, psi 1 hat y2 hat. And that then now expresses the contents of vector y in terms of these exposed pieces. And then you want to say, well, what do I want to be in my vector y? Well, I want to y top to have x top in it. But y top is now y0 psi 1. x top is x0 chi 1. So that has to be equal. And then finally, y2 has to have its original contents in it, and that gives us that right there. And then finally, we go and we say, what kind of update do we need to do? Well, the exposed element of y needs to be updated with the exposed element of x. So that means that psi 1 has to become chi 1. OK. So hopefully, this helps you understand a little bit what this new notation is that we have introduced. ",
                                        "unit_id":"fb34093c9ab24d5cac0f2e6d8c5f9793",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"17cb6a93ca0f47ea83cfad9465202c0a",
                                "vertical_name":"4.2.1 More notation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Piece",
                                            "Worksheet"
                                        ],
                                        "data":" Robert van de Geijn: What we're going to see next is how to use what we've learned to once again derive the dot product, but this time with our new notation. What is it that you're going to need? You're going to need a blank worksheet, which you print off from the internet. And obviously if you don't have access to a printer you can just take a piece of paper and work with that, and just make sure that you make it look like the worksheet. And the other thing you may want to have handy is just a blank piece of paper. So that you can do some of the derivations that I do on the backboards. In addition to what you do on the worksheet. ",
                                        "unit_id":"3f6b481615ac445381cb0df1160e57f4",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Original",
                                            "Hat",
                                            "Slight",
                                            "Alpha"
                                        ],
                                        "data":" Robert van de Geijn: So let's see how this works. The operation you are going to compute is the dot product. Alpha becomes x dot product with y. That's what we did before. In our derivations, we tend to like to add to what's already there. So we actually are going to do a slight different operation, which we're going to call a sapdot. Scalar alpha plus dot product. All right? Now, this is the operation we would like to compute. The post-condition, therefore, is that we would like for alpha to contain the dot product of y added to alpha. But the problem that we run into is that this alpha here refers to the original contents in alpha, while this alpha here refers to the final contents of alpha. So what we need to do is put one of those hats on alpha. Now, this alpha refers to the original contents of alpha, and then we need to have a precondition that says that alpha originally contains alpha hat. And strictly speaking, we should probably say that the size of x is the same as the size of y. We're going to assume that that's implicit in the problem. Now, what we have over here is our worksheet. And as we go through it, we're going to see that there's a slight subtlety in which way it's different from the worksheet that you printed out, but let's get to that later. And what's the purpose of the game, now? we're going to fill out this worksheet, and we're going to do so in the order specified in the column here. It's says Step. So follow right along. I'm going to start by saying, alpha eventually should contain the dot product of x and y added to the original contents, alpha. That's the post-condition. Up on top here, I'm going to say, originally alpha contains its original value, alpha hat. ",
                                        "unit_id":"88c269cc1f4b41448697dc24ece102df",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Matrix computations",
                                            "Computer science",
                                            "Final result",
                                            "Recursive definition",
                                            "Special case",
                                            "Loop invariant",
                                            "Expression",
                                            "Matrix",
                                            "Part",
                                            "Loop",
                                            "Bottom",
                                            "Alpha",
                                            "Call",
                                            "Top",
                                            "Derive",
                                            "Ve",
                                            "Sense"
                                        ],
                                        "data":" Robert van de Geijn: Now, it will be very tempting to just kind of start filling this worksheet from top to bottom. But what did we learn? We really need to systematically come up with loop invariants, and then we should pick a loop invariant and then we should use it to help us derive the program to be correct. So how do we come up with looping invariants? Well, it's going to be all about the post-condition So let's erase this. Let's put the post-condition front and center. And let's remember that we march through these vectors in a very consistent way. At some point, x can be thought of as a top part and a bottom part, and y can be thought of as a top part and bottom part. And the loop invariant really tells us what has been computed so far with these parts. So what do we have there? Well, what we're going to do is we're going to take this into the post-condition, and that's going to be just like splitting the range, when we use the other notation. So we get alpha is equal to x top, x bottom, dot product with y top, y bottom, added to alpha hat. And what we saw before was that this partitioned dot product equals dot product of the top parts plus the dot product of the bottom parts plus the original contents in alpha hat. That is now what our alpha equals. So what is this? This is really the equivalent statement that you would get if you expressed this operation with a quantifier and then split the range. Implicit in this, of course, is that x top must be of the same size as y top, because otherwise, this dot product doesn't make any sense, and that dot product doesn't make any sense. This, we call the partitioned matrix expression. or PME. And it's from the PME that we are now going to systematically derive the loop invariant. So one quick comment about partitioned matrix expression. Notice that we say matrix expression, and that's because this came out of our research on matrix computations. And notice that often, we will just view a vector as a special case of a matrix. So here, we take \"matrix\" in a very broad sense. For those of you have a little bit more experience with computer science, the partitioned matrix expression is actually a recursive definition of the operation. What we're going to see as the course goes on is that if you have the recursive definition for the operation, then we know how to turn it into a loop-based algorithm. Let's move on. This, in terms of the partitioned vectors, is everything that needs to be computed. All we're saying is partition to range. What we need is a loop invariant. And what is a loop invariant? The loop invariant is a partial result towards the final result. So what did we do before? We looked at the expression of what needed to be computed, we split the range, and then we said, well, what part of this has not yet been done? And we can do exactly the same thing here, because look, as we're computing, we've only computed with the top part of the vectors, and we have not yet done any computation with the bottom parts of the vectors. That's a loop invariant. Or we can say, we've computed with the bottom parts of the vectors, but not yet with the top part of these vectors. And that's a loop invariant. That just means that we go through the vectors backwards. So the idea is the partitioned matrix expression, in terms of the piece of the vectors that we naturally deal with, expresses everything that needs to be done. Coming up with loop invariants is then saying, oh, but we've only done partial results towards that final result. So what does that mean? That means that we now have two loop invariants. We'll call them Invariant 1, and that would be alpha is equal to the dot product of the top parts plus the original contents, and Invariant 2. And that's just the dot product of the bottom parts plus the original contents. Ta-da! We have systematically derived two loop invariants. So now, what do we need to do? Well, we need to pick one of these loop invariants and fill it in our worksheet everywhere where it needs to be true, and then we're ready to derive everything else, which we saw previously is then completely determined by the loop invariant. OK, so what do we do now? We take the loop invariant and we fill it out. We know that it has to be true in four different places, before the loop, after the loop completes, before loop body, otherwise one should enter the loop, and every time at the top of the loop, and the bottom of the loop. But what else do we know? We know that there's a loop guard, g, that keeps us in the loop. That still has to be true every time we are at the top of the loop, and that becomes false when we are done. ",
                                        "unit_id":"34d724740ddd40f7a419c2266ecc93bc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Column vector",
                                            "Ve",
                                            "Loop",
                                            "Vector",
                                            "Top"
                                        ],
                                        "data":" Robert van de Geijn: OK, so let's move on and now trying to determine the loop guard. Well, what do we know? We know that after the loop is done, the loop invariant is true and it's not the case that the loop guard is true. And we know that we want to end up in a state where the post-condition is true. And we want to pick our loop guard in such a way that that condition implies the post-condition. And obviously, inherently what comes into play is something about the relative sizes of the top parts of x and y, and x and y. Now the size of x top and y top is always going to be the same, the way we develop our loop. So if we can just reason about the size of x top, then we're OK. So let's have a look. Something has to be true about the size of x top. And remember we're thinking of x as a column vector or as a matrix. And therefore it's the road dimension of that that we're going to extract relative to the size of x. Now what do we know? If the size of x top is equal to the size of x, since x top is a sub-vector of x, that means that this is just the vector x. Ah, so what does that means? That means that this expression is exactly that expression if the size of x top is the size of x. Hm, so we want to keep iterating as long as it's not yet the size of x. And therefore, it seems like the loop guard should be this, right here. Let's think about this. When the size of x top is no longer less than the size of x, it's greater than or equal to that. Implicit in everything that we do is that x top is a sub-vector of x, so certainly it's size cannot be greater than the size of x. And therefore, we conclude that when this becomes false, the size of x top is the size of x. And then the size of y top is the same as the size of x top. And then this expression becomes exactly that expression. So what we've done is we've systematically derived what the loop guard is. The loop invariant and the post-condition now tell us exactly what that loop guard is, they prescribe what the loop guard should be. So then what we do is we say, oh, now we know what the loop guard is. We can fill that in here, here, and here. We want to stay in our loop while the top part of x is less than the size of x in size. That means that here at the top of the list, we know that that's true. And we know that after we come out of the loop is no longer the case that the top part of x is less than in size than the vector x itself. ",
                                        "unit_id":"0d0aea9c75e04ed7bbc1fbe9380f4af8",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Dot product",
                                            "Initialization",
                                            "Step",
                                            "Range",
                                            "End",
                                            "Empty",
                                            "Top",
                                            "Alpha"
                                        ],
                                        "data":" Robert van de Geijn: The next step is to figure out what the initialization commands should be. And what do we know? We know that precondition. Alpha is equal to alpha hat. And we know that we want to get into a state where the loop invariant is true. Where does this x top and y top come from anyway? Well inherently, we are taking x and we are partitioning it into a top part and a bottom part. And we're taking y and we're partitioning it into a top part and a bottom part. And remember, that is like partitioning the range of the quantifier that expresses the dot product. Well, isn't it the case that if we were in a state where alpha is equal to its original contents, we just automatically end up in this state that represents the loop invariant? No, not really. But what we do know is that this right here represents a summation. And what do we know about a summation? We know that a summation over the empty range is 0. So if we can make this 0, then we are in that state. This is just an indexing step. There's no update being done to alpha. Ah, so it sounds like what we want to do is take x top and y top in such a way that the summation is over the empty range. But that happens when you take them to have no elements at all, which means that xb and yb are all of x and all of y, respectively. So here, we want to say where x top and y top are empty. Or we can say where they have 0 rows, if we think of them as matrices. Or you can think of it as they have 0 elements, however you want to express that. And that's our initialization step. And then we go ahead and we fill that in in the worksheet. And just follow along on your worksheet. Here what we're going to do is say x is partitioned into a top part and a bottom part. y is partitioned into a top part and a bottom part. And we need to say where x top and y top are empty. The precondition together with the loop invariant have now prescribed what the initialization should be. What's another way of expressing that? Well, we could say where m of x top is 0. And m of y top is 0. Oops, it's a little bit wet still. And that's yet another way of saying that. End ",
                                        "unit_id":"a7c3fd668cdc41a699b0be1864a3c82f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Top element",
                                            "Case",
                                            "Top",
                                            "Bottom",
                                            "Loop",
                                            "Initialization",
                                            "Postcondition",
                                            "Element"
                                        ],
                                        "data":" Robert van de Geijn: OK, so what we have now is, we have the loop invariant. We have the precondition and the postcondition. The loop invariant together with postcondition dictated what the loop guard should be. And then the precondition together with the loop invariant has told us what the initialization step should be. But remember that we have to make progress through the vectors, or else the loop may not terminate. And what's going on inherently? Well, notice that here in the initialization we said the top part of x and y must be of size 0. And notice that the loop guard tells us that when we're done, the size of the top part of x, and therefore the top part of y, must be equal to x. Ah, that tells us that we are going to move through these vectors from first element to the last element. And how do we express that? Well, the way we express that is by saying, look, the top part of x and the bottom part of x, we are going to repartition. And what we're going to do is we're going to expose the top element of the bottom part so that we can take it from the bottom part to the top part at the bottom of the loop here. So the way we choose to do that in our notation is to say, let's relabel the top part of x as x0. Let's give a label for the first element of the bottom part. Let's call it chi 1. And here we're using a lower case Greek letter because inherently that tells us that that's a scalar. And then there is the rest of vector x. And then similarly, we take the top part of y and the bottom part of y and we partition it into the top part. We're going to use the Greek letter psi for the top element of the bottom part, psi 1. And then the rest of that. So what this says is relabel x top x0, take the bottom part, split off the first element, call it the chi 1. And call the rest of the sub-vector x2. And then something similar for y. We could then say where chi 1 and psi 1 are scalars. But that's kind of implicit in our notation because we chose to use lowercase Greek letters there. Then at the bottom of the loop, in step 5B, you say, OK, now the top part and bottom part of x are going to be redefined. The top part of x is going to become x0 chi 1, because that element is now moved across from the bottom part to the top part. And therefore, the bottom part is now what we relabelled to x2. And then the same thing for y. And what do we have now? We have a way of expressing that we are moving through the vectors from the first element to the last element. And we have a way of identifying that element that is being moved from the bottom to the top. And notice that that's very much like the splitting off, in this case, of the first element of the quantifier when we express the quote unquote \"bottom part\" with a quantifier. ",
                                        "unit_id":"12f1cf704d944f5f902d96e87f2f2372",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1a823416cd6b4b19934cc79be5f8e941",
                                "vertical_name":"4.2.2 Deriving algorithms with the FLAME notation Part 1"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"dec2cb7d8b0f48ee8934fe27d859397b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4e93ce632b234b7eb015cca2cae77721",
                                "vertical_name":"4.2.2 Deriving algorithms with the FLAME notation Part 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Loop invariant",
                                            "Math mode",
                                            "Small change",
                                            "Good shape",
                                            "Double check",
                                            "Page",
                                            "Top element",
                                            "Latex",
                                            "Typeset",
                                            "Part",
                                            "Invariant",
                                            "Algorithm",
                                            "Ll",
                                            "Insert",
                                            "Output",
                                            "Correct",
                                            "Put",
                                            "Guess",
                                            "Initialization",
                                            "Bottom",
                                            "Error",
                                            "Change",
                                            "Hat",
                                            "Partition",
                                            "Good",
                                            "Ve",
                                            "Button",
                                            "Run",
                                            "Learn",
                                            "Check",
                                            "Worksheet",
                                            "Top",
                                            "Step",
                                            "Scalar",
                                            "Alpha",
                                            "Notice",
                                            "Defined",
                                            "Recognize",
                                            "Element",
                                            "Update",
                                            "Command"
                                        ],
                                        "data":" Robert van de Geijn: OK. So now, you're going to learn how to typeset worksheets. And for that, we are going to revisit computing the dot product of x and y. And you've opened up this template in your favorite LaTeX tool. And let's see here. What do we have? Well, there's a couple of things to pay attention to. I like to define commands that help me typeset things. And therefore, there's a file here called color_flatex, in which I've defined a whole bunch of commands that help me conveniently typeset things. One of the commands that is defined there is resetsteps. What that does is, it creates a blank worksheet so that when you execute the command FlaWorksheet, it conveniently typesets a worksheet with whatever entries have been defined. And how to do that, we will learn in just a second. Now, there's a bunch more below here that you will get to enjoy later in this video. So what do we do? Well, we go to the Spark web page, to which you have been given the link. And on the left is a menu you are going to fill out, and on the right we will generate a whole bunch of commands that will then help us fill out the worksheet. And how do we do this? Well, we go ahead and we say, let's call the function sapdot, scalar alpha plus dot product. What a block algorithm is, you'll learn in week five, so let's ignore that. This is variant number one, that came from loop invariant number one. And notice that there are three operands. And notice that on the right, a bunch of stuff starts appearing. And what you actually see there is a skeleton for a MATLAB implementation of the algorithm. So what we want to do here is pick as output language, FLaTeX-Worksheet. And then on the right, you see a whole bunch of LaTeX commands being defined. And you will recognize things like step 1a, precondition, step 1b, post-condition, et cetera, and that's all being filled in automatically. Now, there are three operands when you do a dot product. It's vector x. So you have to indicate that x is a vector through which we are going to march from top to bottom, that's the t arrow b. And x is only an input. We're not going to change its values. Similarly, we have a vector y. That is also a vector that we are going to march through from top to bottom, and it similarly is just an input. And then finally, we have a scalar, A. So we'll take A for alpha. It's a scalar. We don't march through scalars. And it's both input and output, because we are going to update it. And what you see now on the right are all of these commands that are being defined. So you go there, you highlight it, you copy it, and you take that to your favorite LaTeX environment. Now before we do anything, let's actually save this in a new file. So I'll say Save As, and I'll rename this my_sapdot_unb_var1, _ws, for worksheet. And I happen to have one there already, so I'll replace it. And what you notice now is that partially into this document, it says, \"Insert output from Spark web page below.\" So that's where you go and click, and then you paste. Now, it's always good to then go and see what this looks like. Up here is the built-in view button that I'm going to push, that executes a process that now typesets things on the right. And notice that on the right, now, we have a outline for our derivation. What do we recognize we can recognize the precondition, the post-condition, The Spark web page took a guess at how we are going to march through x and y. We said from top to bottom, so it actually inserted an initialization step, la oop guard, and what we call the partition repartition and move on steps, 5a and 5b. And from the worksheet that you filled out by hand you find out that this was a pretty good guess, but obviously, you would want to go and double check this. And now what we do is we start changing things. So if you look at what was just put into this file, you'll notice that it inserted the precondition, it inserted the post-condition. And notice that the steps here are in order in which you should be filling out your worksheet. So what we're going to do is we're going to change the post-condition, because obviously the Spark web page can't read your mind. So it takes a stab at what you might want to have there, and then you go and you fix it, and you say alpha is equal to x transpose y. That's the dot product of x and y plus alpha hat. That's the hat that we want to put on top of alpha. And every time you make a small change like that, you really should run this through LaTeX again, and you should build it again, because it's very easy to introduce a small error, and it's very hard to track that down, especially when you use commands as extensively as I do. So you press the button, it now re-typesets, and if you now focus on the post-condition, it looks a whole lot better. Let's actually make this just a little bit bigger so we can see it better. All right. So you've done your first change to this worksheet. Then what do we do? Well, we say, step 1, step 2, is to insert an invariant. How did we come up with an invariant? Well, we actually got it from the post-condition. So we can even go and cut and paste this into the spot right here, and then recognize that's all we need to do is x bottom dot product with y bottom. And now we've run this through, and what you find is that the loop invariant has been inserted into various places. Oh, wait a minute, this was for invariant number one, so I really should make this x top, y top. And there we have it. What's next? Well, we move down and we say, we need to come up with the loop guard. And how do we come up with the loop guard? We look at the bottom here, and we figure out what the loop guard should be. But in this case, we only need to check whether it's the correct loop guard, because after all, the Spark web page went ahead and did a guess at this. And all we need to do is check whether it's correct, and it happens to be correct. So we move onto the initialization step. And we go back to the top, and we notice that indeed, x is being partitioned into a top part and a bottom part, and y is being partitioned in a top part and bottom part. And we want to go from the first element to the last element, and therefore this is being partitioned in exactly the way we want it. Good. So the initialization was done correctly by the Spark web page. We move on. What's step 5? Step 5 is to say, we need to re-partition x and y to expose that element. If you look on the right here, you'll notice that it does exactly what we hoped to do, namely, it partitions off the top element of the bottom part, both for x and y. That's exactly what we want. So we're in good shape. We move on. The corresponding part at the bottom shows that the element that was exposed was now added to the top part, which indeed is what we want. So we're good there, too. Move on. Look at step 6. What is step 6? There, we need to insert what the state is before the update. In other words, what the state is in terms of these different pieces that have been exposed. That was very much like the splitting of the range in the quantifier. So what we can do is we can go back to the loop invariant, we can take it, we can copy it, and we can take it down to the step 6. We can insert it, and then all we need to do is say, oh, but x top and y top have been relabeled x0, y0, and we're good. We built, and now we've got a problem. All kinds of errors appear here. This is why I want you to keep rebuilding every time you make a small change. And the problem here is that I wasn't very consistent in defining my commands. Sometimes it's assumed that you're already in math mode, and sometimes you are not. And therefore I have to put dollar signs around this expression right here. And now I run it through again, and everything is good. So then I take that and say, oh! Next I need to determine step 7, which is the state after the update. And often that's just a small change from the state before. So you might want to go and cut and paste that, move it in here, and then say, if I look at the worksheet that I worked out by hand all I need to do is insert chi 1 times psi 1, and now I've done step 7. And then finally we compare step 6 to step 7. We notice that all we need to do is add chi 1 times psi 1 to alpha. So in our update right here, we delete what it says you should delete, and you insert, instead, that alpha becomes chi 1 times psi 1 plus alpha. And now you have typeset the entire worksheet. Now, what's kind of cool about what we've done is that below this, we have a whole bunch more worksheets, which you can recognize as step 0, step 1 step 2, et cetera. And what does that do? Well, if you click on this green button up here, you step from one page to the next. And what you notice here is that step 0 is the empty worksheet, and then it fills in step 1. After all, we want to emphasize the order in which we fill out the worksheet. And then step 2, step 3, step 4, step 5, step 6, step 7, finally, the update step. Then we can take away all of the assertions and then we're left with the algorithm. And finally we can take away the entire worksheet, and we end up with the algorithm nicely typeset What I want you to do next is to do exactly the same thing for variant number two. ",
                                        "unit_id":"2b305ba70f854f11988c030008a56bd8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5e75f3ddf35c4a72ba63aadd1482189e",
                                "vertical_name":"4.2.3 Typesetting algorithms with FLAME notation and LaTeX"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Application programming interface",
                                            "Dot product",
                                            "Drum roll",
                                            "Live script",
                                            "Random vector",
                                            "Direct translation",
                                            "Top element",
                                            "Chi",
                                            "Call",
                                            "Flame",
                                            "Bottom",
                                            "Box",
                                            "Vector",
                                            "Row",
                                            "Top",
                                            "Size",
                                            "Show",
                                            "Output",
                                            "Path",
                                            "Reset",
                                            "Element",
                                            "Translation",
                                            "Partitioning",
                                            "Code",
                                            "Alpha"
                                        ],
                                        "data":" Robert van de Geijn: In the last unit, we systematically derived algorithms for computing the dot product and on the left is the result of that namely the algorithm that corresponds to loop invariant number one, which we then call variant number one. The big question now becomes, how do we take this algorithm and how do we translate it into code? Obviously, if we translate this into code using loop indices, et cetera, then we haven't really gotten any further because there are still a lot of opportunity for introducing errors in that translation. What we need to do is we need to program in a way such that the code is a direct translation of the algorithm as we presented it here. And for that, what we do did is we created what is called an application programming interface that allows the code to reflect the algorithm. What do we have on the right here? We have a Live Script in which we describe that we want to implement the dot product. And here, in the first code box, we set the path, just in case the path wasn't set correctly. Then in the next code box we set the vector to be of length 4. We create two random vectors that are integer valued of length m, 4 in this case, and then we create an alpha that we set to 3. And then here we call a routine that we're about to implement and then down here we check whether it actually gave the correct answer. And the function that we're going to implement, we're going to have to place in this final box right here because, at the moment in Live Script, the functions always need to come in at the end. So how do we go about that? Well, over here is a link to the Spark web page. And when we click on that, we get this right here. And notice that conveniently, it has remembered from the last time that we implemented the dot product. And it may be that this for you actually is variant number two. One thing that we're going to want to do is put a capital S here because we named our function with a capital S. And then in theory, we should be able to just change to wanting the flame at lab-- that's the flame API-based implementation of the algorithm, and everything should show up on the right. Unfortunately, there seems to be a bug in the code that runs the Spark web page. And therefore, we're going to have to reset it if it doesn't automatically show. And that you do by saying, Reset Form, and then you go up here and you say, Reload Web Page. And for me, that tends to fix things, in that order by the way. So then you have to start over, put in sapdot, unblocked variant number 1, three operands, x vector top to bottom input, y vector top to bottom input, A for alpha scalar, no partitioning input and output, and the output language should be flame at lab, which as I said, is the API for Mathlab for implementing flame algorithms. OK? And if we now put this right next to the algorithm, hopefully things are very obvious. Hopefully, they are direct translations. What do we have? We have a partitioning of x and y. We have a partitioning of x and y where in goes to vector x, out comes a top and a bottom part to x. Same thing for y. We have a m the size of x T is less than the size of x. Notice that it's the row size, so in Mathlab, size extracts the row and column size of a matrix. We want the row size so we indicate that it's size of x T comma 1 et cetera. OK? And hopefully just by looking on the left and looking on the right, you get it, you understand. OK? The FLA bottom here says that one element is to be partitioned from the bottom part, so that would be the top element of the bottom part. And that then is called-- the result of that is then stored in Chi one with the rest of the bottom being returned as vector x2, et cetera. Hopefully this is straightforward. Then you go and you copy and paste all of this into this box down here. So What&rsquo;s left to do? So notice that we need to go here and we need to say alpha is equal to chi 1 times psi 1. plus alpha. the semicolon there. Otherwise, it gets printed out every time. That&rsquo;s just a translation of what we have over here. and now let's save this. Okay. So, here at the top, we print out what the result is of calling the function. It might be good to also print out what MATLAB would compute. So let's say-- OK, let's also print out x transpose times y plus alpha. And now let's execute and see if we get the right answer the first time. Drum roll. On the right here, the answers will appear. We execute it. Notice that what this here says is x is some random vector, y is some random vector, alpha was taken to be 3, it is 5 that is computed by our function, and then it's 5 that actually is the answer, computed by MATLAB, and indeed, the same answer is returned. So, all is well, and we got the right answer the first time. So now what I want you to do is do exactly the same thing, but for loop invariant 2, which I gave you algorithmic variant 2. ",
                                        "unit_id":"0c60c277985c4baf8ba4d17317dc085f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Live script",
                                            "Text box",
                                            "Loop invariant",
                                            "Left align",
                                            "Robert",
                                            "Text",
                                            "Loop",
                                            "Ll",
                                            "Equation",
                                            "Left",
                                            "Align",
                                            "Put",
                                            "Code"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: OK. So here is one more cute thing you can do with Live Script, and this is probably just Robert's unorthodox use of Live Script. But notice that here we have our Function. Now, we can interleave code with text boxes, and in those text boxes we can put mathematical expressions. So maybe we can actually place our assertions in the code itself. So if we go over here to the precondition-- it's right here-- we can copy that over and say, hmm, where would we want that to be true here? We can put in a Text box. And then we can say Equation, LaTeX Equation. And then we can just paste this in, and say OK. And notice that it centers it. But if you go and you put in a dot here, then for some reason it tries to inline it, and everything is OK. So now I can place that right there, and that's our precondition. Kind of cool. We can similarly put in the postcondition. Take this, put it down here at the bottom, and say when we are done, let's put in a Text box. Let's put in the postcondition. Let's go up here. Put in the LaTeX Equation. In we go. OK. Again, we want to left align this, so we'll just put it right there. And then what do we have? Then we have the loop invariant. So let's go down to the loop invariant, and let's copy it into our code. Here we have the loop invariant. We know this has to be true at various points, so let's make it true before the loop starts. We'll put in a Text box. We'll put in an Equation. Put it in. OK. Again, I like to have it on the left here. And there we have the loop invariant. And now you can even go and copy and paste all of this in. We know that it's true at the top of the loop-- whoops. The equation didn't copy so well. OK. So we're going to have to do this the hard way. We go here. We say Text-- oh, we can only paste it into Text. But we may want to align it a little bit. And then we know it has to be true at the end of the loop, so we go here. We put in a Text box. We put it in, and we align it a little bit. And then let's see, what else. It has to be true after the loop is done, so let's put in a Text box, and let's put it there, as well. And let's align it a little bit better. Get the idea? So then we can go and say, OK, before we move-- let's see. The state before our update statement is this right here. So we can put that. That's right after we do our repartitioning, but notice that the repartitioning is actually part of the code. So we can go here. We can put in a Text box. We can put in a LaTeX Equation. Paste it in. In it goes. And again, I like having it kind of aligned nicely. So that's the state before the update step. And then we can say, what is the state after the update step before we move? And we copy that. We put that here. We put in a Text box. We put in the LaTeX Equation. Paste it in. There we go. And now we move it around, and bingo. What we now have is the annotated algorithm with the assertions of what must be true at the various points. So now we've embedded the worksheet in the code itself. And I think that's kind of cool. So it's an unusual use of Live Editor. And you may want to do that for your own codes from here on. We can still execute it. Run All. And if we go up here, we find that it still gives the right answer. ",
                                        "unit_id":"d332ff5291134e038038145aa2b7ccc3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0f30df64af894c2dbc72c52d3672c52a",
                                "vertical_name":"4.2.4 Representing (FLAME) algorithms in code"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Partition",
                                            "Scalar",
                                            "Operation",
                                            "Equal",
                                            "Vector"
                                        ],
                                        "data":" Robert van de Geijn: So we've been working all along with the dot product and there's another very important vector operation that involves two vectors and a scalar. And that operation takes a multiple of a vector and adds it to another vector. What happens when you take a multiple of a vector? That just multiplies each of the entries. What happens when you add it to a vector? You add the corresponding entries. So this here summarizes everything that needs to be computed. Now, in general, this can be written as the vector y is overwritten by the scalar alpha times x plus y. Scalar alpha, x, plus y. If that's the operation to be computed, then the postcondition is this right here. Except not colon equal, just equal. That's what we want y to contain when we're all done. So what did we do before with vectors? We partitioned them. Think about what happens if you partition like that. Can you somehow figure out what the, quote unquote, \"partition matrix expression\" is for this operation? Can you then figure out what loop invariants you can get from the partition matrix expression? I'm going to let you try it yourself first. ",
                                        "unit_id":"305d37e6c1604bddaeec42d5e5204daa",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Top hat",
                                            "Bottom",
                                            "Part",
                                            "Top",
                                            "Scalar",
                                            "Hat",
                                            "Partition",
                                            "Vector",
                                            "Alpha"
                                        ],
                                        "data":" Robert van de Geijn: Did you figure it out? What do we have here? Notice that we can partition the result like that. And I should've had parentheses around this. Top part of x, bottom part of x, top part of y, bottom part of y. OK, so what do we have here? We have the postcondition y is equal to alpha x plus y. We take our x, we partition it into a top part and a bottom part. We take our y, we partition it into a top part and a bottom part. What did we do with the dot product? With the dot product, we then took that and plugged into the postcondition. So now what we get is that y top, y bottom is equal to alpha times x top, x bottom plus-- oops, I should have had a hat on there-- y top hat, y bottom hat. Now, doing a scalar times a partition vector, a scalar times a partition vector, is the same as just multiplying each of the parts by that scalar. So what do we get? Adding two vectors that have been partitioned together is a matter of adding the corresponding parts. So this is your, quote unquote, \"Partition Matrix Expression.\" What kind of loop invariants do you suppose you can get from that? Why don't you go puzzle that one out? ",
                                        "unit_id":"59c9436910024810ba8eecd87df2c46e",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Left"
                                        ],
                                        "data":" Robert van Geijn: So hopefully it was pretty obvious to you what the loop invariants were. One loop invariant is to say we're done with the top part but we have left the bottom part alone. The other loop invariant is we're done with the bottom part but we've left the top part alone. And from that, then the algorithms naturally follow. ",
                                        "unit_id":"e4ca9d8fe66f4353869d43cc1b275ecb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"782d6022ea4a43aabce2954dbe8672f7",
                                "vertical_name":"4.2.5 The axpy operation Part 1"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"641d5e62d16b462c9a3ec4e7613a1402",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"877b2c43e6804986a90e62a0e5b5b521",
                                "vertical_name":"4.2.5 The axpy operation Part 2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"62fb466593fe415986494317ab1a2d1f",
                        "sequential_name":"4.3 Algorithms over two-dimensional arrays (matrices)",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Matrix vector multiplication",
                                            "Dot product",
                                            "Matrix",
                                            "Partition",
                                            "Bottom",
                                            "Part",
                                            "Vector",
                                            "Ve"
                                        ],
                                        "data":" Robert van de Geijn: So let's see if we can generalize these techniques to operations that involve two dimensional arrays and we're going to start by looking at matrix vector multiplication. So here what I've written out is a typical matrix vector multiplication with actual numbers. How does this work? Well, you may remember that you do this times that plus this times that plus this times that to compute the first element. And then this times that plus this times that plus this times that for the second element. And obviously a better way of thinking about it is to say the first element is just the dot product of the first row with the vector, the second element is the dot product of the second row with the vector, et cetera. Interesting. So the dot product that we talked about earlier this week and in previous weeks now comes in as an operation that we encounter when we do matrix vector multiplication. How else can we think about this? Well, if we take this matrix and arbitrarily partition it like that, then we notice that the result here we can think of as this top matrix times the vector, and this part here is the bottom of the matrix times the vector. Interesting. So when we look at A times x-- and we like to think in terms of adding the result of that to y-- one thing we can do is say, take your matrix and partition it into a top part and a bottom part and multiply that times vector x, and then add the result of that to vector y. And what this here suggests and what the theory of linear algebra confirms is that that's just the same as the top part of A times x, the bottom part of A times x. But if you then want to add that to vector y, you need to also identify a top part of y and a bottom part of y, because otherwise you can't add these pieces together. So really what we should've done here is said y is partitioned into a top part and a bottom part. And then the result of this operation is this plus the top part of y and the bottom part adds to the bottom part of y. Interesting. Now, obviously the number of rows that you split off for matrix A must be the same as the number of elements that you split off from y. Otherwise, these things can't be added together. But what do we have here? What we have here is a partition matrix expression if you say this is the original values that were in vector y. So, tah-dah! We have a partition matrix expression for matrix vector multiplication. And now all you need to do is take this and use it to derive algorithms, which is what you're supposed to do in this particular unit. ",
                                        "unit_id":"a3983940fa9141d8b661e7d76ca70140",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2391611100064e8582283cdcd85496e2",
                                "vertical_name":"4.3.1 Algorithms for matrix-vector multiplication"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"3cef128c34fd4207a0a51e0861d3ba81",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a740a8274ed048ab89c2115c21adbeeb",
                                "vertical_name":"4.3.1 Algorithms for matrix-vector multiplication Part 2"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"405819c899ef4a86aca7065d8571fe9e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a78baaabd4db4a009d1301d93ef86a18",
                                "vertical_name":"4.3.2 More algorithms for matrix-vector multiplication Part 1"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"23d3b0942cda4f319641564b4019b887",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"82ece280b18040418043f85bd503c133",
                                "vertical_name":"4.3.2 More algorithms for matrix-vector multiplication Part 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Matrix vector multiplication",
                                            "Linear algebra",
                                            "Outer product",
                                            "Row vector",
                                            "Column vector",
                                            "Partitioned",
                                            "Row",
                                            "Vector",
                                            "Product",
                                            "Partition",
                                            "Part",
                                            "Term",
                                            "Transpose",
                                            "Matrix",
                                            "Column",
                                            "Rank"
                                        ],
                                        "data":" Robert van de Geijn: OK. So the other really important operation that involves matrices and vectors is known as the rank one update. Now what is that? Well, here is a concrete example. It's a vector times a row vector that you add to a matrix. Now for the moment, let's just concentrate on this right here. What is this? This is also known as an outer product. It's also a 3 by 1 matrix times 1 by 3 matrix. So the result should be a 3 by 3 matrix. And how you computed it? Well, if you think of this as a matrix and this as a matrix, then the first element would be this times that. The second element in the matrix would be this times that. The third element would be this times that, and so forth. So notice that this represents a three by three matrix corresponding to the outer product. There's a difference between an inner product and a outer product. People get confused by that all the time. All Right? Be careful. Inner product would be a row vector times a column vector. Outer product is a column vector times a row vector. OK? Now, if you work this out, what do you notice? Hmm. You also notice that the first column of the result really is just this vector here times that element right there. Second column is this times that. This times that. Now we understand where the term rank one comes from. This is a rank one matrix. Why? Because each column is just a multiple of each other column, so there is only one linearly independent column if you remember the terminology from linear algebra. If you don't, don't panic, you'll be OK. OK, so notice that what you just said can be summarized as the first column is just this vector times 3. The second column is just this effect at times negative 2. And the last column is just this times minus 3. Now notice that we want to add this to a matrix. So notice that then corresponding elements must be added together. So if we add A to this, what would we get? We would get plus negative 1, plus 0, plus 2, plus 1, plus negative 2, plus 3, and plus negative 3, negative 1, negative 1. And the same thing down here. Hmm, what do we notice? Let's focus on the typical entry and the result. What do we recognize there? It's a scalar times a vector, plus a vector. But if we overwrite this matrix with the result, it even overrwrites the original vector there, this same vector. What it that? That's our good friend the AXPY operation. OK, so how do we now come up with a partitioned matrix expression for this? OK. What do we have? We want to do A becomes x y transpose plus A. A post condition we write that as A is equal to x-- sorry-- x times y transpose plus A hat. So that's the post-condition. Seems to me here that we were thinking in terms of partitioning by columns. So, certainly when we look at it that way. So let's see what happens if we partition A into a left part and a right part. OK. Well that means that A hat is also partitioned into a left part and a right part because really that refers to the same matrixes as that because it's being overwritten. And what do we now need to do with x? Well, If we do x y transpose, we can't add them to pieces here. We want to somehow take this and partition it by columns as well. And the way you achieve that is to say, hmm, let's do x times the vector y split up into a top part and a bottom part. Why? Because then when you transpose that, it ends up being split into a left part in a right part. And if you now multiply that out, you get-- there needs to be a plus there-- you get x times y top transpose for the left part, y bottom transpose for the right part, plus this right here. And if you multiply that out, then you get x times y top transpose for the left part, and x times y transpose bottom right there for the right part, which you have to add to that. And if you then add it to that, then you get this right here. With a hat on here and a hat on there. And what is that? That is our partition matrix expression. And you can take that and you can come up with an algorithm. But what did we learn from matrix vector multiplication? There we could partition the matrix by columns, or we could partition the matrix by rows. Here we've partitioned the matrix by columns. I wonder if there is a second partition matrix expression that comes from partitioning by rows. Why don't you work it out? See what you come up with. All right, go to it. ",
                                        "unit_id":"8abf4755e18342ad865b8998e3a957d1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d1f227fdf7924beaa36e1803331aed57",
                                "vertical_name":"4.3.3 The rank-1 update Part 1"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"ecfea5ee114f4e43b0714b982dec3813",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fa63a5be9c3941e9beb13edf4d82e730",
                                "vertical_name":"4.3.3 The rank-1 update Part 2"
                            },
                            {
                                "units":[],
                                "vertical_id":"c4657ec28bec4203902cdf6205c4c7ad",
                                "vertical_name":"4.3.3 The rank-1 update Part 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Matrix vector multiplication",
                                            "Cache line",
                                            "Outer product",
                                            "Dot products",
                                            "Good idea",
                                            "Row vector",
                                            "Main memory",
                                            "Vector",
                                            "Tend",
                                            "Linear",
                                            "Column",
                                            "Operation",
                                            "Access",
                                            "Cast",
                                            "Matrix",
                                            "Computation",
                                            "Updated",
                                            "Good",
                                            "Learned",
                                            "Back",
                                            "Parallelism",
                                            "Memory",
                                            "Row",
                                            "Time",
                                            "Algorithm"
                                        ],
                                        "data":" Robert van de Geijn: So what you're starting to discover is that when presented with an operation, there are often a number of different algorithms for computing it. And the question is, well, why don't we just derive one algorithm and have it over with? Let's discuss that a little bit now that you have derived a couple of algorithms for matrix vector operations. So let's think about matrix vector multiplication. So you have a vector that you're going to update by doing a matrix times a vector plus the original vector. What's important to keep in mind is how memory is accessed when you access this matrix. How is the matrix mapped to memory? Memory is linear. A matrix is two-dimensional. So how does it work? Well, often in scientific applications the matrices are stored in what's called column major order. What's column major order? Think of the matrix as consisting of a bunch of columns. And then let's say over here is the memory and what you do in linear memory is you stack these columns on top of each other. Obviously, it could alternatively store by rows. That's known as row major order. So now let's think about our algorithms. The first algorithm that we discussed, did the dot products of rows with the vector. That's actually typically what you're taught first when you're taught about matrix vector multiplication. So as you access entries in that row, what happens? Well, you're hopping all over the place in memory. This entry here would be mapped right there, this entry here would be mapped right there. Now, first of all, hopping all over memory is not a good idea. Computer architectures tend to access memory more efficiently if you go contiguously through memory. Worse, typically when you bring in one entry of matrix, you actually pull in a couple of other entries as well. Why? Because when you read from memory, you tend to read an entire cache line at a time and a cache line is typically four double precision numbers. So typically, if you bring in this entry right here, you also bring in the next three entries, or three entries around there. And that's actually in anticipation of then also using those entries. But if your matrix is huge, then you go through this row, these entries are being brought in from main memory into cache memory-- which is fast memory but there's only a little bit of it-- and therefore by the time you get around to the next row, those entries that you have brought in may already have been evicted. They may not be there anymore and they need to be brought in from memory again. So not only is it inefficient to hop all over the place in memory, but you end up potentially spending four times as much time moving data around because you're bringing in a cache line at a time. By contrast, think of the algorithm that we develop that marched through the matrix by columns. There, everything is nice because you inherently are using the matrix a column at a time and therefore inherently you can arrange your computation to go down the column. Now, if you knew that you had to go across the row, then you might be able to say, let's do a slightly different algorithm. Let's do an algorithm that computes with four rows at a time so that we can take advantage of the fact that we bring those other entries in. That's known as a blocked algorithm. When you went to the Spark web page, it asked you whether you want an unlocked or a blocked algorithm. That's a blocked algorithm. That's something we'll talk about next week. In the meantime, what have you've learned so far? It's good to have algorithms that go through the matrix by rows and by columns, because depending on how the matrix is stored, one or the other may be more efficient. What else? Well, you also learned about another matrix vector operation which was the rank-one update, which looked something like this. You had a matrix to which you added the outer product a rank-one matrix, column vector times a row vector. Now, the other thing you're going to find out in week 5 is that many more complicated operations in linear algebra leads to algorithms that cast in terms of a matrix vector multiply, but also leads to our algorithms that cast computation in terms of a rank-one update. Sometimes it's better to have an algorithm that casts computation in terms of matrix vector multiply. Why might that be? Well, if you think about it, when you do a matrix vector multiply, each element in the matrix is used and can then be thrown away because it's only the vector that is being updated. As a matter of fact, this vector right here. What does that mean? Every entry in the matrix has to be read but it doesn't need to be written back to memory. In contrast, the rank-one update, it's the matrix that's being updated. So you have to read the matrix, update it, write it back out again. That's reading and writing for every entry in the matrix, twice as much memory movement. However, typically a rank-one update gives more convenient parallelism. If you take this matrix and you partitioned it into quadrants, then all you have to do is partition the corresponding vectors and it turns out that this quadrant is updated by this times that, this one by this times that, et cetera. Each of these quadrants of the matrix can be updated completely independently and therefore it is a lot of opportunity for parallelism. The point is different algorithms cast a computation in terms of different operations, and importantly, may have different characteristics when it comes to accessing memory. And therefore, it's great to have a mechanism by which you can derive many different algorithms because then you can pick the algorithm that is best for the occasion. And that's what we're trying to teach you in this week, but also in week 5 and 6. ",
                                        "unit_id":"ad74e42759904f578696ae95b19cac5a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"95ec149575054381840f58af4880b7ba",
                                "vertical_name":"4.3.4 Why do we want multiple algorithms?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"81a14c66be0a4ac9bdbad57ce6d75394",
                        "sequential_name":"4.4 Enrichments",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Basic linear algebra subprograms",
                                            "Parallel computing",
                                            "Mathematical software",
                                            "Matrix vector multiplication",
                                            "Dot product",
                                            "Flame",
                                            "Robert",
                                            "Interface"
                                        ],
                                        "data":" The Basic Linear Algebra Subprograms (BLAS) are an interface to linear algebra operations that are commonly used in scientific computing libraries. The operations identified for this interface include some we have already discussed: the dot product, the \"axpy\" operation, matrix-vector multiplication and rank-1 update. Others you will learn about in future weeks. An overview of the BLAS can be found in Robert van de Geijn and Kazushige Goto, \"BLAS (Basic Linear Algebra Subprograms),\" Encyclopedia of Parallel Computing , Part 2, Pages 157-164. 2011. If you don't have access to this through your university's library, read a draft of this article. The original papers, cited in that article, are C. Lawson, R. Hanson, D. Kincaid, and F. Krogh, \"Basic Linear Algebra Subprograms for Fortran Usage,\" ACM Transactions on Mathematical Software , 5 (1979) 305-325. J. J. Dongarra, J. Du Croz, S. Hammarling, and R. J. Hanson, \"An Extended Set of {FORTRAN} Basic Linear Algebra Subprograms,\" ACM Transactions on Mathematical Software , 14 (1988) 1-17. J. J. Dongarra, J. Du Croz, S. Hammarling, and I Duff, \"A Set of Level 3 Basic Linear Algebra Subprograms,\" ACM Transactions on Mathematical Software , 16 (1990) 1-17. The style of coding that we use is at the core of our FLAME project and was first published in John A. Gunnels, Fred G. Gustavson, Greg M. Henry, and Robert A. van de Geijn, \"FLAME: Formal Linear Algebra Methods Environment,\" ACM Transactions on Mathematical Software , 27 (2001) 422-455. Paolo Bientinesi, Enrique S. Quintana-Orti, and Robert A. van de Geijn, \"Representing linear algebra algorithms in code: the FLAME application program interfaces,\" ACM Transactions on Mathematical Software , 31 (2005) 27-59. These last two papers can be accessed for free by visiting http://www.cs.utexas.edu/~flame/web/publications.html . ",
                                        "unit_id":"5f03929ed60e484da2d452fee967ca10",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"195bfe64da4f43d4b50e69623c02f383",
                                "vertical_name":"4.4.1 Related reading"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e953230ccc3542a299402660973a2ee5",
                        "sequential_name":"4.5 Wrap Up",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" If you went through the enrichment on the BLAS, you may have realized that there are many operations that are matrix-vector operations, any and all of which can become an exercise for this week. However, to do so, one really should go through Section 5.2 on symmetric matrix-vector multiplication first. I'll add some exercises, later... They will be 0 point exercises, so these will be for your deriving enjoyment! ",
                                        "unit_id":"bfdc991237a5404982ba7eb09bf144de",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"20a0c5e037394a12bb41bae23f2507ac",
                                "vertical_name":"4.5.1 Additional exercises"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"ee3d9ff92dda48f5a0be9cf8e7d81787",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"70b8fcf45f6743d48a304d63a6e94106",
                                "vertical_name":"4.5.2 Summary"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"2d672c00418b40138a1cdc1dd482599d",
                "chapter_name":"Week 5 Matrix Matrix Operations",
                "sequentials":[
                    {
                        "sequential_id":"4d2f458a27a643f1a0b576164be45b0f",
                        "sequential_name":"5.1 Opening",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Versus",
                                            "Vector",
                                            "Column",
                                            "Matlab",
                                            "Row",
                                            "Store",
                                            "Ve",
                                            "Operate",
                                            "Matrix",
                                            "Symmetric",
                                            "Diagonal",
                                            "Equal",
                                            "Element",
                                            "Algorithm",
                                            "Index"
                                        ],
                                        "data":" Robert van de Geijn: OK, so welcome to week five. We're going to take what we learned in week four. We're going to take that notation and we're going to do new things with it this week. We're going to move on to more complicated operations. But for this launch, let's go back and revisit matrix vector multiplication. And what do we have here? We want to compute y becomes a times x plus y. And what I've done is I've put a concrete example up here. Right there. And we had two algorithms for computing this. And the first algorithm would do so by rows. And how would that algorithm operate? Well, it would go-- let's say there's a top part and a bottom part here-- let's identify the top row. But to do an inner product adding to the current element of the vector, which then would change this element right here to something else. And then it would move on. Et cetera. OK. Now one question is how easy is it to take the algorithm as we expressed it using slicing and dicing and translate this into, say, MATLAB code that just uses indices. Well, let's think about that a little bit, OK? Typically, we use the index i to indicate in which row we currently are. And typically we use the index j to indicate in which column of the matrix that is involved we currently are. So we have index i and index j. And notice if we pick our index i to operate with the current row of the matrix, then that means that it also is operating with the current index of y. And remember, this is y as it's being overwritten. And here we have the original y. How would we then translate this into MATLAB code? Well, in MATLAB, you probably wouldn't use a while loop. You probably would use a for loop. So you would say for every element in y, what we need to do is take a dot part of the corresponding row with the vector x and then add to that the entry in y. OK. So the way you would translate this is to say, OK, for i is equal to 1 through n. And notice that we're going to be dealing with symmetric matrices shortly, and therefore, the number of columns is the same as the number of rows. And therefore, I don't have to think about m versus n in terms of the row versus column size. OK, so we say for i equals 1 to n. And then you would need to do the dot product. So that would give us a loop for j is equal to 1 to n. And then you would have an end and you would have an end. And what would be the update to y that would come in the middle? Well, you're just updating y of i with A of i, comma, j, times x j added to y of i. OK? Now, let's move on. What if we know that this matrix is symmetric? If you need to, go and review what it means for a matrix to be symmetric. This matrix is symmetric. Why, because entries reflected across this diagonal equal each other. If the matrix is symmetric, then we should only have to store half of the matrix. So what if we chose to only store the lower triangular part of the matrix? Something else may be above the diagonal. It may not be stored. It may be that we don't want to access it. Whatever. So we'll put stars there. Now notice that the entries above the diagonal are stored, they're just not stored in the natural place. What I want you to do is do the exercise of changing this MATLAB code-- this MATLAB program-- from one that just deals with it as if it's a general matrix to one that deals with it taking advantage of the fact that the matrix is symmetric and only the lower triangular part of stored. ",
                                        "unit_id":"585e142b180649328109b4df1b54c0c2",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Dot product",
                                            "Element",
                                            "Entry",
                                            "Diagonal"
                                        ],
                                        "data":" Robert van de Geijn: So hopefully you figured it out. And how do I think about this? Well, what you really want to do is say, when you've gotten to this point and you have identified this row, you really want to think of it as something that looks like this. Why? Because you can merrily walk down the row all the way up to the diagonal, but then you can't keep going in that direction. But you do know that those entries are actually stored below the diagonal in order, instead. And what you're going to want to do is make that modification over here. And what you're going to see is that this is remarkably similar to splitting the range of a quantifier. What do we do? We say, well, let's take this quantifier, this summation here, that expresses the dot product and let's split it up into two parts. The first part and the second part. Now, if we do it this way, we simply compute the dot product twice. So that's no good. And we still access the entries above the diagonal. That's also not good. So what do we want to do? Well, everything is just fine here until you get to the diagonal. Now, how do we identify the diagonal element? It's the element i, i. So we change this to i and then we say, down here we need to continue. And when you split the range, you continue with i plus 1 all the way through n. Fair enough? But now we still have a problem. These entries here refer to entries below the diagonal. Why? Because j is less than or equal to i. Here, the i, j refers to entries above the diagonal. Why? Because j is greater than i. But notice that to then identify those entries or to find where those are actually stored, all we need to do is take i, j and change it to j, i. So we take this and look at it this way. And we can actually go one step further in drawing the analogy with the splitting of the range by saying maybe we actually want to work with that entry separately. In particular, we want to work with this entry separately because that's the entry that we actually are updating. And to make that clear, we can say, let's actually in the middle here say y of i is equal to A of i, i times x of i plus y of i. And then what you would want to do is do this range one less. And now you can go and see how that compares to what you did and you can see if you get the right answer when you do this. ",
                                        "unit_id":"5506f9788e174a4698da3c5683402771",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Scalar",
                                            "Axpy",
                                            "Algorithm",
                                            "Index",
                                            "Column"
                                        ],
                                        "data":" Robert van de Geijn: So how do we translate the algorithm that marched through the matrix by columns instead? Let's remember. The convention is to use the index i this direction. and index j for the column index of where we are. How does that algorithm work? Well, you partition the matrix and vector x like that. And then you identified the first column and the first element. You do this times that to add to what is currently in vector. But notice that the column times the scalar is the same as a scalar times the column and therefore, we can identify this as an axpy operation. What that does is changes these values to something else. And then you've completed through here. And now you're working right there and so forth. So notice that this algorithm works by columns. And therefore, it is that j index that is going to be the first loop that runs from 1 to n. And then what? Focusing on the second column, this is now the j column. We need to do the j element of x-- 12 in this case-- times 2 to update the first element of y, this times the second element to update the second element of y, and so forth. That's how the axpy is implemented. And if we expressed that explicitly as loops, what you get is for i from 1 to n, y of I has to be updated as A i comma j times x of j plus y of i, end, end, If you look at this carefully and compare and contrast that with the other algorithm, all that's really happened here is that these two loops have been interchanged. Now let's move on. What if we decide that only half the matrix is stored or is to be accessed? Why don't you go and change the program so that it only accesses the lower triangular part, but still in spirit marches down the columns. ",
                                        "unit_id":"9680084f521a4da2a99af40804d09c23",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Dot products",
                                            "Double loop",
                                            "Matrix multiplication",
                                            "Correct",
                                            "Loop",
                                            "Matrix"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: So hopefully, you figured out how to split the loops. And what I've done here is written the answer to what you just did next to the answer of what you did when you change the algorithm that computed by rows with dot products right next to it. And you can do a compare and contrast here. And think for a second what it would take if you just have this code to explain to a friend what this code actually does. And think for a second about what it would take to actually prove these algorithms correct. Given that there now is double loop and think of what it would take to actually derive them to be correct. And this is still a simple example. Now here is the question. Which of these two algorithms is better? And there you may have to think back for a second about what you learned in week four. In week four, we talked about matrix multiplication. And we said that if the matrix is stored by columns, then it's better to go by columns. And if the matrix is stored by rows, it's better to go by rows. Well, which one is better? Go think about that for a bit. ",
                                        "unit_id":"6c0292eefbe64feea2508d2b127bd445",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Cache lines",
                                            "Matrix",
                                            "Performance",
                                            "Roughly",
                                            "Implemented",
                                            "Time",
                                            "Column",
                                            "Computation",
                                            "Algorithm"
                                        ],
                                        "data":" Robert van de Geijn: Did you figure it out? Let's think about this. Let's say that we've gotten to a specific point and let's indicate it as such. The algorithm that computes by rows will do so partially by rows until it gets to the diagonal and then go by columns. Let's just assume that the matrix is stored by columns in column major order. Computing by columns is good, computing by rows is bad. So this is not an ideal algorithm because part of the computation is going to be by rows. And of course, as you go farther and farther into the matrix and as the matrix gets larger, you'll end up with more of the computation happening by rows. And if you think about it a little bit, roughly half of your computation will be by rows, roughly half will be by columns. What about the other algorithm? Well, the other algorithm will go by columns, but notice that it has the same problem. The elements above the diagonal are not stored, so you look towards the row instead and therefore you go by rows first and then by columns. Same problem. It also does roughly half of the computation by rows and roughly half of the computation by columns. So I actually would expect these two algorithms to perform roughly the same because roughly how they bring data in from memory is the same. And when you don't reuse data, that's where your expense is going to be. There are ways around this. One possibility is to say, well, when you compute by rows, inherently you're bringing in cache lines. We talked about that a little bit last week. So can't we just work 4 rows at a time? Which then would mean also working 4 columns at a time, and can't we then do better? And that's indeed how people would go and optimize this kind of problem and that then motivates what we're going to see, our blocked algorithms. Now, about 10 years ago we doodled a little bit on the blackboards using the notation that we now use in the course and we actually came up with a better algorithm. It's an algorithm that only goes by columns. And it just happened to be that the person who at the time provided the world with the fastest open source linear algebra libraries was in the room. Someone named Kazushige Goto, a colleague of ours. And when we derived the algorithm and described it, he overnight implemented this in his library and improved the performance of symmetric matrix vector multiply by a factor of 2. So what did we learn from that? The algorithm was not obvious to an expert and gave considerable performance improvement to a community that cares very much about performance. So what I want you to do is to stare at this and scratch your head. And think and see whether by just looking at this algorithm, or this program, as implemented with indices whether you can puzzle it out. And then in unit 2, we're going to systematically derive algorithms for symmetric matrix vector multiply and you're going to find out that the answer drops right in your lap. Enjoy this week. ",
                                        "unit_id":"99afc05cccda4c308c75b3db60514863",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"14694e0ed3f647ef953cf33b01d0e0a8",
                                "vertical_name":"5.1.1 Launch"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" 5.1. Opening Remarks 5.1.1. Launch 5.1.2. Outline Week 5 5.1.3. What you will learn 5.2. Partitioning matrices into quadrants 5.2.1. Background 5.2.2. Example: Deriving algorithms for symmetric matrix-vector multiplication 5.2.3. One complete derivation 5.2.4. Other variants 5.2.5. Visualizing the different algorithms 5.2.6. Which variant? 5.3. Matrix-matrix multiplication 5.3.1. Background 5.3.2. Matrix-matrix multiplication by columns 5.3.3. Matrix-matrix multiplication by rows 5.3.4. Matrix-matrix multiplication via rank-1 updates 5.3.5. Blocked algorithms 5.4. Symmetric matrix-matrix multiplication 5.4.1. Background 5.4.2. Deriving the first PME and corresponding loop invariants 5.4.3. Deriving unblocked algorithms corresponding to PME 1 5.4.4. Blocked algorithms 5.4.5. Other blocked algorithms 5.4.6 A second PME 5.4.5. Which variant? 5.5. Enrichment 5.5.1. The memory hierarchy 5.5.2. The GotoBLAS matrix-matrix multiplication algorithm 5.5.3. The PME and loop invariants say it all! 5.6. Wrap Up 5.6.1. Additional exercises 5.6.2. Summary ",
                                        "unit_id":"343700ce25ff41aca81b4afb4271e04c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"de6763453e8c48698c766d0c78c1e772",
                                "vertical_name":"5.1.2 Outline Week 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Matrix",
                                            "Derivation"
                                        ],
                                        "data":" While the FLAME notation has allowed us to abstract away from those nasty indices, so far the operations used to illustrate this have been simple enough that they could have been derived with the techniques from Week 3. We now see that the FLAME notation facilitates the derivation of families of algorithms for progressively more complicated operations with matrices and vector, yielding some algorithms that are not easily found without it. Upon completion of this week, you should be able to Multiply with partitioned matrices to take advantage of special structure. Derive partitioned matrix expressions for matrix-vector and matrix-matrix operations. Recognize that a particular operation can have several PMEs each with multiple loop invariants. Enumerate candidate loop invariants for matrix operations from their PMEs and how to eliminate loop invariants that do not show promise. Accomplish a complete derivation and implementation of an algorithm. ",
                                        "unit_id":"c16244f981f848729e36df443786ded7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d3f1bd59f7a049dd80a25ea83be718e1",
                                "vertical_name":"5.1.3 What you will learn"
                            }
                        ]
                    },
                    {
                        "sequential_id":"895f8181630e44f7b4b5ecde95fc16ab",
                        "sequential_name":"5.2 Partitioning matrices into quadrants",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square matrix",
                                            "Mooc",
                                            "Square matrices",
                                            "Symmetric matrix",
                                            "Part",
                                            "Vector",
                                            "Bottom",
                                            "Symmetric",
                                            "Top",
                                            "Transposed",
                                            "Matrix",
                                            "Transpose",
                                            "Multiply",
                                            "Partition",
                                            "Store"
                                        ],
                                        "data":" Robert van de Geijn: In the introduction, we already talked about symmetric matrix vector multiply. And in this section, we're going to abstract away from the details by slicing and dicing the matrix. So let's very quickly review how you slice and dice a symmetric matrix and what this means about the different parts of it. What we're going to see is that inherently we are going to want to partition the matrix into quadrants. And the fact that this is a 4 by 4 matrix and I happened to make it into 2 by 2 matrices is just coincidental. This could have been a larger matrix. And what do you notice? Well, we can label these different pieces of the matrix as A top left, A top right, A bottom left, and A bottom right. See? That, that, that, that. Now what are some properties? Notice that if a matrix is symmetric, it is a square matrix. If you then partition it so that this is a square matrix and therefore that is a square matrix, then this matrix is symmetric, as is that matrix. OK? So A top left is inherently symmetric, as is A bottom right if these are square matrices, which is what we're always going to make sure they are. And what else do we notice? Well, it's a symmetric matrix. And something that you may have learned is that if you transpose a partition matrix, then it's the same as transposing a 2 by 2 matrix. What would that mean? Leave this one in place. Move this one up here. Move this one down here. And leave this one in place. Except that you also have to transpose each of the pieces. And what does that mean? If the matrix is symmetric, then it is its own transpose, and what does that mean? Then A top right is actually the same as A bottom left transpose. So for a symmetric matrix, we only need to store half of the matrix because if you, for example, store the lower triangular part, you could recover what the upper triangular part is. And what we notice is that this submatrix here is simply that submatrix, except transposed. OK? So what does that mean? Let's get rid of this. Let's get rid of that. If we now choose not to store this, then we can recover what's there by saying, oh, that's just A bottom left transposed. Now if we multiply with a partition matrix, and it's just this times that plus this time that, et cetera. But you can also think of it as this times that plus this time that, and this times that plus this times that. So if we then multiply with a symmetric matrix, where we only store the lower triangular part, then we can think of taking the vector that we multiply and partitioning it into a top part and a bottom part, where the number of elements here is the same as the number of columns here. And then if you work it out, the top part of the result is this times that plus this times that. And the bottom part of the result is this times that plus this times that. OK, now that doesn't mean that you have to go and take this matrix and create a copy of it that's transposed in order to multiply. No, it just means that you have to compute with it as if it were multiplied. Now how do I remember this? I always go back and say, well, if I had a 2 by 2 matrix that I multiply it times a vector, then I would do that as that time that plus that times that for the top part, and this times that plus this times that for the bottom part. Exactly the same thing here, except with symbols. The catch being you can't commute. OK? So as long as you understand this, and as long as you just apply what we have here on the chalkboard, you'll be just fine. Just trust that this is how linear algebra works. Push it through. Everything will fall in place. All right, so now you're ready. Go do it. Ah, one more thing. If you don't quite get this, we have this wonderful MOOC called Linear Algebra Foundations to Frontiers. And if you go back to week three and week four of that MOOC, you'll be able to quickly figure out how this all works. All right? So that's the alternative. ",
                                        "unit_id":"fa110bfab26843039507de21ba40378a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3fea8caa31f14a1a86e1ad283577b8d1",
                                "vertical_name":"5.2.1 Background"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Symmetric matrix",
                                            "Mathematical expressions",
                                            "Loop invariant",
                                            "Linear algebra",
                                            "Symmetric matrices",
                                            "Final result",
                                            "Square matrix",
                                            "Recursive definition",
                                            "Multiply",
                                            "Vector",
                                            "Transpose",
                                            "Partitioned",
                                            "Left",
                                            "Matrix",
                                            "Top",
                                            "Loop",
                                            "Symmetric",
                                            "Bottom",
                                            "Result",
                                            "Part",
                                            "Computation",
                                            "Keeping",
                                            "Process",
                                            "Recursive",
                                            "Quadrant",
                                            "Bit",
                                            "Create",
                                            "Notation",
                                            "Square",
                                            "Algorithm"
                                        ],
                                        "data":" Robert van de Geijn: Hopefully from the launch, you got some appreciation of how number one, it's doable to transform a regular matrix vector multiply into this, but it's non-trivial. Number two, if you were to go and annotate either of these algorithms for correctness, you would have nested quantifiers. This would get pretty nasty. And if you actually wanted to turn it around and derive the algorithms to be correct, you would be in for quite a task. So what do we need to do? Well, we need to go and create notation. The first step is always notation. So let's go back to what we were doing here. Now, notice that at some time in our process, we inherently have gotten to some point in the matrix. And in the regular matrix vector multiply, we would then expose a column or expose a row. But really what you want to do here is expose a row and expose a column because of symmetry. And notice that then you do some computation. And then really, this orange line moves forward to here, and the process continues. And this all is in an effort to cleanly identify a block of the matrix that is not stored and then the corresponding block of the matrix and where it is stored. So what we want to do and capture with our notation is that picture. And if we can capture that picture, then maybe we can create some notation with which we can reason cleanly. Maybe we can come up with a partitioned matrix expression for this operation. Maybe we can then identify loop invariants. And with a little bit of luck, the magic algorithm that we're after that marches through the matrix by columns will just drop right in our lap. Wouldn't that be nice? OK, well, let's see if we can get there. I'm going to go and erase all of this here. OK. Now we have a partially clean chalkboard. How do we start? We want to compute y is equal to A times x plus y. And that means that the postcondition for what we want to compute is y is equal to Ax plus y hat. Now, A is symmetric. And we're just going to keep that in mind. Obviously, we might actually want to make that part of our precondition and carry that through, et cetera, et cetera. But you want to balance how much clutter you create with being extremely precise with the benefits of keeping things relatively simple, and then just keeping some facts in the back of your head as you're doing the derivation. So we're going to be-- we're going to keep in mind that A is symmetric. All right. On the left here, the picture there motivated us to say maybe matrix A should be partitioned into quadrants. So let's take our matrix A, and let's partition it into quadrants. OK. What do we know? Because every time through we pick up a row and a column, when we keep moving through this matrix, we keep the quadrants, the top left quadrant, square. And therefore because we started with a square matrix, the bottom right quadrant is going to be square as well always. So we know that this is square and this is square. What else do we know? We know that A is symmetric. And therefore we know that A top left is symmetric, and we know that A bottom right is symmetric. That's a property of symmetric matrices. Just think about it. This is-- this whole matrix is a symmetric matrix, and then this is a symmetric matrix. Well, it's 1 by 1, so it's a little bit hard to see. But you notice that this here is a symmetric matrix as well. The other thing you notice is that whatever matrix is sitting here is reflected up here. What was a column here becomes a row here. If it was more than that, then it would become the matrix there but transposed. So A is partitioned like that. But when you then take it and you plug it into the postcondition, which is how we went about trying to find a partitioned matrix expression, what we can plug in is A top left, A bottom left, A bottom right. And up here, you get A bottom left transpose because of symmetry. This is stored, this is not stored, but we do want to compute with it. OK. Now notice that in order to be able to now multiply it times x, we're going to have to partition x into top part and the bottom part, because the way partitioned matrix vector multiplication goes is you need to be able to do this times the first part of a vector plus this times the second part of the vector for the result. So. Let me give myself a little bit of room. We're going to put in a partitioned vector x. OK. And notice that what we find is that we end up doing this times that plus this times that, which creates a top part of a result vector. And this times that plus this times that creates a bottom part of the vector. And that tells us that y and y hat must be partitioned into a top part and a bottom part as well. So what did we just do? We took the postcondition. We partitioned the operands. We then took the partitioned operands, and we plugged it into the postcondition. This tells us in terms of the partitioned operands what the final result needs to be. And now what we do is we do what we have done before, which is we apply the rules of linear algebra to this to manipulate this into something from which we then hopefully will be able to recognize a partitioned matrix expression. So how does that work? Well, partitioned matrix vector multiply goes just like multiplying with numbers. If these were numbers, you would do this times that plus this times that. So the top part here is A top left times x top plus A bottom left transpose times x bottom. Notice that these are mathematical expressions. This doesn't that you need to go and take that data and transpose it. It means you want to compute as if that part of the matrix was transposed. And then you have to add the corresponding part of y to it. You got it? Same thing for the bottom part. And our final result must be equal to that. OK. Now notice that this tells us exactly what the top part of y should be when we're done in terms of these different pieces and what the bottom part of y should be done in terms of the different pieces. And that is our partitioned matrix expression. This is, if you think about it, a recursive definition of the operation. How is it recursive? This right here is a symmetric matrix vector multiply. This right here is a symmetric matrix vector multiply. So we have the partitioned matrix expression. We hope we can take the partitioned matrix expression now and, from it, systematically come up with different loop invariants. And then hopefully among those loop invariants is one that magically will give us the algorithm that we want. How do you go from a partitioned matrix expression to a loop invariant? You say, well, we haven't done all of the work yet. So some of these terms that show up perhaps haven't been done yet. Because if this part of the computation hasn't been done yet, then at this point you aren't done yet. You're still iterating. You're staying in the loop. So what I want you to do is take a second and think about coming up with two loop invariants. And once you find two loop invariants, we'll discuss how you may be able to come up with many loop invariants. And the two loop invariants that I would like for you to try to find are the loop invariants that corresponds to the algorithm that would go by rows if it was a matrix vector multiply where there was no symmetry and the algorithm that similarly goes by columns. So the one by rows from top to bottom, the one by columns from left to right. OK? Just take a minute and try to do that. ",
                                        "unit_id":"221503c8f98a4fd08ae45e8128c75c5f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Symmetric matrix",
                                            "Part",
                                            "Bottom",
                                            "Left",
                                            "Top",
                                            "Transpose",
                                            "Ve",
                                            "Step",
                                            "Don",
                                            "Matrix"
                                        ],
                                        "data":" Robert van de Geijn: So let's try to find the answer to the question I posed. We took our matrix A and we partitioned it, and we then recognized that this is just the transpose of that because we chose to only store the lower triangular part of the matrix. This is a symmetric matrix, a square. So is this. And then this becomes the transpose of that. Now, previously we took our matrix A and we partitioned it into a top part and a bottom part. All we really have done here is we're thinking of the top part as having a left part and a right part. So if previously our loop invariant was that the top part had multiplied x and had been added to the top part of y and the rest was left alone, the equivalent of that would be to say we partitioned it like this and they've computed with these two pieces. And notice that that's the loop invariant where these two pieces are not part of it. The top part has finished, the bottom part has been left alone. Now, similarly, we could say, what if we take our matrix A and partitioned it into a left part and a right part? Which is what we did for loop invariant 3. And then we have to multiply that times x top, x bottom. Here, all we have done is said, we'll think of the left part as having a top part and a bottom part and the right part as having a top part and a bottom part. And then the loop invariant was that currently y contains A left times x top plus the original contents of y. And the equivalent of that over here would be that these two terms go away and you're left with these two terms being added to the original part of y. And that's how the two are related. Now that we have answered that, we can think a little bit more generally. These are all the operations that have to be performed in order to update y top and y bottom. These are the original contents of y, so they have to be in the mix. We can't just go and get rid of those. But for each of these terms we can choose to either have done them or not. So we could come up with a loop invariant where we've done everything except for that term, everything except for that term, everything except for these two terms, everything except for these two terms. If you think about it, some of them have to be there, some of them don't. But let's first systematically come up with all potential loop invariants and then you can reason through those and say some of them don't make sense. In what sense don't they make sense? For some of them, there's no loop guard that can be derived. You can look at the loop invariant and the postcondition and say, this doesn't make sense. Or you can say, well, we can find the loop guard. But there is no initialization step that we can go through to put it in a state where the loop invariant is true. And with that, we can get rid of a bunch of them. And then we're actually left with the ones for which we can actually systematically derive algorithms. So how do we do that? Well, let me just sort of sketch out how we would go about it. One way to do it systematically is to create a table. We have the term A top left x top, A bottom left transpose x bottom, et cetera. We have four of these terms. And for each of them we can say, yes, it's in there or no, it's not in there. And we can just enumerate them. How many different ways are? Well, you have four choices. For each of them it's yes or no. That actually leads us to 16 potential loop invariants that we'll have to scrutinize to see whether they actually show some promise. Let me step out of the way and there is the table. ",
                                        "unit_id":"7f02edc1874b4711b2140a5c8b0c6798",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Final result",
                                            "Vice versa",
                                            "Square matrices",
                                            "Loop",
                                            "Left",
                                            "Matrix",
                                            "Ve",
                                            "Top",
                                            "Operation",
                                            "Derive",
                                            "Reason",
                                            "Ll",
                                            "Bottom"
                                        ],
                                        "data":" Robert van de Geijn: So let's together walk through one example. This is the partitioned matrix expression. I've gone ahead and just made it so that it expresses what y top needs to be and what y bottom needs to be, and then this line delineates the two. What's on the right we'll get to in a little bit. And notice that to come up with loop invariants, what do we do? We say, well, some of the computation has not yet been done. So let's take away this and this. Actually, there's a problem with this one. Why? Well, you want to find the loop guard so that you're done. Notice that if A top left is all of A, then x top is all of x. So this becomes A times x. And because sizes have to match, y top is all of y. So you get y is equal to A times x plus y hat, and you've computed the final result. And notice that y bottom would have no elements in it and this would disappear for similar reasons, and everything is good. So the point is you can come up with a loop guard such that when the loop guard becomes false, you've computed the correct result. So far, so good. But then let's go to the top and say, is there an initialization step that will put us in this state given that when we start we're in the state where y is equal to y hat? And there we have a problem, because if you say, let's take A top left to be 0 by 0-- we're going to be marching from top left to bottom right-- then inherently A bottom right is all A. So you're saying that when you start, you have to be in a state where y bottom is all of y and is equal to A times x plus y hat. But that means that the loop invariant is in a state where you've already computed everything that you want to compute in the loop. Before you even get started, you must be in a state where you've computed what needs to be computed. Obviously not a favorable thing. For this reason, you should never have both of these as part of your loop invariant for this operation. For a similar reason, you should never be in a state where neither of them are there. For example, what if you made it that? The problem then is that you can't find the loop guard, if you think about it hard enough, again, because we have to go from top left to bottom right because we want to maintain these blocks of the matrix as square matrices. And therefore, we can't just magically go and try to grow this matrix into the entire matrix so that we've computed everything. It's the symmetry that gets in the way. So what we just argued is that a loop invariant for this operation inherently has to have the term in it that references A top left and not the term in it that references A bottom right. Or vice versa, it has to have the term in it that references A bottom right but not the term that references A top left, because only those loop invariants will actually give you a valid loop guard and a valid initialization step. Them So if you take that into account, then you can get rid of half of the candidate loop invariants that we had in the previous table, and you're left with these 8 loop invariants for which you can then go and derive algorithms. And that's what we'll talk about next. What we'll do in the next video is pick loop invariant 1, which you then fill into the worksheet, and then with that, we will derive the other parts of the algorithm. ",
                                        "unit_id":"38cb4277d1ec4bcd9aa1ffab2898cdaa",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"269fb0f1c2eb4526960edd9f092114b3",
                                "vertical_name":"5.2.2 Example: deriving algorithms for symmetric matrix-vector multiplication"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Dot product",
                                            "Top hat",
                                            "Loop invariant",
                                            "Symmetric matrix",
                                            "Scalar product",
                                            "Top element",
                                            "Row vector",
                                            "Hat",
                                            "Repartition",
                                            "Exposed",
                                            "Step",
                                            "Product",
                                            "Update",
                                            "Left",
                                            "Element",
                                            "Row",
                                            "Scalar",
                                            "Body",
                                            "Guard",
                                            "Start",
                                            "Ve",
                                            "Top",
                                            "Vector",
                                            "Column",
                                            "Loop",
                                            "Matrix",
                                            "Transpose",
                                            "Bottom"
                                        ],
                                        "data":" Robert van de Geijn: OK. Now, let's look at one that does work. And that's the one where we are only left with this term right here. OK? So what if we picked that to be our loop invariant, OK? And what if we now say-- again, it's not that hard to reason through what the guard must be. It's not that hard to reason through what the initialization step should be. The loop guard is A top left is not all of A. The initialization step is pick A top left to be 0 by 0, because then you end up with a 0 by 0 matrix times the vector with zero elements in it. That disappears. And then you find that y top is empty, and y bottom all of y hat. And that's the state in which you start, because of the precondition. So that's good. OK. So now imagine getting into the loop. And now what you would like to do is say, I repartitioned my matrix, exposing a row and a column. What is the state, in terms of those exposed pieces? And notice that if you expose the row, and a column of A, then you must expose an element of x, the top element of x bottom, and the top element of y bottom. OK. How do we go about this? Well, we say, this is what must be in y at the top of the loop. That's the loop invariant. We now repartition exposed pieces. We then do textual substitution of those pieces into the loop invariant to find out what the state must be before the actual update happens in the loop body. So what do we Do Well, let's just repeat this. I like to just-- that's our loop invariant. We now say, at the top of the loop we repartition, y top becomes y0. A top left becomes A0, 0, x top becomes x0. y top becomes y0. And similarly, we get that y bottom becomes a psi1 y2. Let's actually write like that. And that has to be equal to. And then this becomes psi1 hat, y2 hat, OK? That's the state of the vector, in terms of the exposed pieces. And we get that by doing the textual substitution, all right? Now, what is it that we do at the bottom of the loop? At the bottom of the loop we say, take these pieces that we've exposed, and create the quadrants, and partitioned vectors from them, like that. And notice that where we are in the matrix now has moved forward by one row and one column. And similarly, we've gone one extra element into vector x. And one extra element into vector y. OK. So the state at the bottom of the loop, we can similarly start by saying, we know that we have y top, y bottom is equal to A top left x top plus y top hat and y bottom hat. Now, however A top left has become this sub-matrix right here. So we do a textual substitution, OK? And then we need to multiply that times x0, chi 1. We need to substitute in y0 hat, psi1 hat. This becomes y2 hat. This becomes y0 psi1. And this becomes y2. Now, there's one catch. Remember, A is a symmetric matrix. And since A is a symmetric matrix this right here is not actually stored. But we know that this here is part of a row of A, and therefore this column right here is just that row transposed. So in our expression we really need to put in a1, 0 transpose, transpose. Let's actually put it in that way, OK? Because they a one zero transpose really is a label that we give to this part of the matrix. And we need to take what's in that part of the matrix, and transpose it. You got it? OK. Now, all we have to do is apply the rules of linear algebra. This is actually equal to, and now we can multiply it out. This time that, times this times that, OK? This times that, plus this times that, plus that. OK. And y2 hat. OK. Just a matter of working out what must be in the vector. What does linear algebra tell us must be in the vector? So what we just did is derive step seven for the worksheet, the state of the variables after the update. And if we then plug that into the worksheet, this is what you get. OK. So this is what's true at the top of the loop, in terms of these pieces that we expose. This is what's in the vector at the bottom of the loop, in terms of the pieces there exposed. We need to somehow figure out how to update from here to here. OK. How do we do that? Well, we can read it off. We know that y0 must be equal to chi 0, 0, x0 plus a1, 0, transpose transpose-- actually, this is a vector. Remember, it's a row vector. Transpose becomes a column vector times the scalar. We can bring the scalar up front. So let's actually do that. Plus y0 hat, OK? psi1 must be equal to a1, 0 transpose x0, plus alpha1, 1 times chi 1, plus psi 1 hat. y2 must be equal to y2 hat. Now, we don't want to go and compute all of this, because then we would be computing, again, with a part of the matrix, with which we already have computed before. What we do instead is we say, oh, y0 already contains this times that. That's this part right here, OK? So all we need to do is update y0 by adding chi 1 times a 1, 0 transposed transposed to it. Oh, that's a scalar times the vector, added to the vector. That's an axpy operation, OK? Then you look at psi1, and you say, well, psi1 already contains its original contents psi1 hat. So this is already in psi1. And what we need to do is update it with this dot product, plus the scalar product. And that tells us how to update psi1. And then we look at y2, and we say, y2 already has y2 hat in it. It needs to have y2 hat in it. So nothing needs to happen to it whatsoever. And then we conclude that the actual updates are that y0 is updated with psi1 times a 10 transposed. That's the row vector sitting right here, plus what's already in y0. And psi1 has to be updated with the dot product of a 1 0 transposed to this row vector. With x0 to which we add the product of alpha 1, 1 times chi 1. And we must add that to what's already in psi1. And this then becomes the actual computation in the body of the loop. OK so what we just did was compare the result of step six with step seven. And that then yielded the actual update step, which we can then plug into the worksheet. And this is what you get. And then in the end we just take away all of the annotations out of the worksheet. And we're left with the actual algorithm that has been derived to be correct, ready to be translated into MATLAB code. OK. And notice, it's systematic. Trust the force. You just push through the linear algebra, and everything falls in place. ",
                                        "unit_id":"756044d970654896a35fcd1b4d6b78f6",
                                        "unit_type":"html"
                                    },
                                    {
                                        "data":"",
                                        "unit_id":"7e183403e19347f0ab4be7f48d748fef",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"317f70260aab4b9bae8467f4c65d039e",
                                "vertical_name":"5.2.3 One complete derivation"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"440f6dfca15b4194a611b10ad8250982",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4fe57ae4a1ef4c8494c749bca10dbfc9",
                                "vertical_name":"5.2.4 Other variants"
                            },
                            {
                                "units":[],
                                "vertical_id":"159419d3b1c9462da76affdfe736d7a9",
                                "vertical_name":"5.2.5 Visualizing the different algorithms"
                            },
                            {
                                "units":[],
                                "vertical_id":"68de2e433b2c4bf2a599e57ba5adbc5f",
                                "vertical_name":"5.2.6 Which algorithm is best?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a189d006f84e467b808cc90bddd783ee",
                        "sequential_name":"5.3 Matrix-matrix multiplication",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Read Unit 5.3.1 of the notes. [LINK to Week5.pdf] ",
                                        "unit_id":"61c75cf7b6064a098d191b6dc67f8932",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"30a572ba877b4a41bfd2317ee376b8ed",
                                "vertical_name":"5.3.1 Background"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "High performance computing",
                                            "Dot products",
                                            "Linear algebra",
                                            "Dot product",
                                            "General case",
                                            "Matrix",
                                            "Left",
                                            "Row",
                                            "Part",
                                            "Multiply",
                                            "Derive",
                                            "Put",
                                            "Equal",
                                            "Thing",
                                            "Case",
                                            "Product",
                                            "General",
                                            "Element",
                                            "Operation",
                                            "Column"
                                        ],
                                        "data":" Robert van de Geijn: We next discussed matrix-matrix multiplication. And this is possibly my favorite operation. I can actually take a lot of issues in high-performance computing and linear algebra and boil it down to illustrating the issues with this operation, which is much simpler. And, you know, I jokingly say that I may just go down in history as having written the most papers of matrix-matrix multiply of any researcher out there. We'll see how long that holds up. Anyway, what's this operation? It's you have a matrix C, and you compute it as A times B. And if C is an m by n matrix, then A is an m by k matrix, and B is a k by n matrix, the important thing being that this row size of C must match the row size of A. The column size of C must match the column size of B. And the column size of A must match the row size of B. And as before, we like to often go and add C to it. And actually, the most general case of this is where you then multiply A and B by a scalar alpha and C by a scalar beta. But let's not get into that. So let's look at how C is actually computed. And notice that we are adding C to the result. And we might put a colon equal here. Let's think of B as being two columns. In, general of course, you would have more columns. And let's think of C as having two columns. So the bar here separates the left column from the right column. In general, bars would separate the different columns. If you now look at a typical element in C, how is that computed? It's computed as the dot product of the corresponding row in A with the corresponding column in B. And If you think about all elements in that column, then what do you do? Well, you do dot products like that, of course adding to the elements of C. But what operation is it when you do this dot product followed by this product followed by that product? Oh, that's just a matrix-vector multiply. OK, so if we generalize this, what do we get? We leave A alone. We think of B as a bunch of columns, n of them. We think of C as a bunch of columns, adding it to the original contents of C. Let's see. Because we're doing an assignment, we don't need to put hats on there. And what do we conclude? We conclude that the j-th column of C, for every j from 0 to n minus 1, can be computed as A times the corresponding column of B added to the column of C, OK? All right, now, that does not give us a partition matrix expression. So let's see if we can take these insights and work it into a partition matrix expression. Well, think of a left part of the matrix-- let's call it CL-- and a right part of the matrix-- let's call it CR. And let's think of doing the same thing for B, and, of course, the original part of C, the original contents of C, like that. What do you notice? Each column in the left part is simply computed as A times the corresponding columns in the left part added to the columns in the left part. So we can conclude from that that the left part of C should be updated as A times the left part of B plus the left part of C. And similarly, you can see that-- hm, let's give ourselves a little bit of room. Similarly we can see that the right part of C should be computed as A times the right of B plus the right part of C, OK? Let's massage that a little bit further. That's just equal to A times the left part of B plus the left part of C on the left. And A times the right part of B plus the right part of C on the right. Ah, so when we're all done, what should be in C? A times the left part of B plus the original contents of C. And what should be in C right? A times the right part of B plus the original contents of C right. And there we have our partition matrix expression. And once we have a partition matrix expression, we can say what are the loop invariants? And once we have the loop invariants, we can derive algorithms. So why don't you go ahead and derive some algorithms for this particular case. ",
                                        "unit_id":"75969fb3c17841029fd75dc3c9eb557a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8c4111be348e41ba89894a605f826400",
                                "vertical_name":"5.3.2 Matrix-matrix multiplication by columns"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lowercase letters",
                                            "Partitioned",
                                            "Matrix",
                                            "Leave",
                                            "Confusion",
                                            "Partition",
                                            "Compute",
                                            "Put",
                                            "Row",
                                            "Column"
                                        ],
                                        "data":" Robert van de Geijn: What makes working with matrices interesting for this course is that you can partition matrices in multiple ways, and that leads to different algorithms. So what you've already looked at is what happens if you partition matrix B by columns, OK? Now, once you cut B by columns, we found out we also had to cut C by columns, but we could leave A alone. Let's see what happens if we cut A by rows, all right? So let's cut A by rows. So let's think for a second about matrix C. We know it's going to be a 3-by-2 matrix. Let's again focus on this entry right here that we focused on when we talked about computing C by columns. And let's think, what goes into computing that? Well, it's this row of A inner product with that column of B, added to that element of C, right? If you then were to also compute that element-- that other element in the same row, then what would happen there? It would be the dot product-- the inner product-- of that same row with the first column added to that element of C. Hm. Well, if you took our first Massive Open Online Course, you would have learned that this is the same as taking that row and multiplying it times the matrix B, OK? So we could think of, this row is computed by computing the product of the corresponding row of A with the entire matrix B, adding the result, then, to the row of C. So how could we say that more generally? We can say, well, what happens if we take our matrix A and partition it into rows? Let's see, there are m minus 1 of those. But wait a second. We decided to use lowercase letters a for vectors. This would be like a whole bunch of vectors on top of each other. That's not the same as a whole bunch of row vectors on top of each other. So to denote that these are row vectors, I'm going to add a T to this label for the row here, OK? We leave matrix B alone. We notice that C should also be partitioned by row, so we get c 0, c 1, through c n minus 1, like that. Hm, now we might get confused between c 0 being a column of A versus being a row of A, So let's actually put something on top of that. We shouldn't put a hat on it, because hat, we used for original contents. So let's put a tilde on top of this to indicate that these are different labels than the labels we used for the columns, OK? And then of course, we need to add that to those same rows over here. And since we did that, we should probably go ahead and put tildes on the a's, too, because later, we're going to see that we're going to partition A by columns, as well. So the confusion wouldn't happen right now, but the confusion will happen later on. OK, so this is now how we compute. And what we just reasoned is that a typical row in C is computed as the corresponding row of A, times the matrix B, added to that row of C. And from that, we conclude that c-- we use i for the row index, tilde, transpose-- that's just the label for the i-th row in C-- should be computed as the corresponding row in A, times B, plus that row in C. So what you can do now is go back and say, hm, how did we come up with a partitioned matrix expression when we have had our discussion about how to compute columns of C from columns of B? OK, what we did is, we took what we learned, and we made it into a partitioned matrix expression. What I want you to do now is to say, oh, we have figured out how to compute, if we think of these as individual rows. Let's translate that, now, into a partitioned matrix expression so that you discover the partitioned matrix expression. So why don't you go ahead and do that, and then we'll meet in the next video? ",
                                        "unit_id":"0afeabbe25e64c589118bbba129387ea",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Original content",
                                            "Partition"
                                        ],
                                        "data":" Robert van de Geijn: So hopefully, what you've figured out was that you could think of this as the top part of C, and this as the bottom part of C. And then you could think of this as the top part of A, and this as the bottom part of A. We needed to add to, of course, the top part of A and the bottom part of C. If you think of all these rows and these rows as being blocks, then you find out that the top part of C is computed as the top part of A times B plus the top part of C. And the bottom part of C is computed as the bottom part of A times B plus the bottom part of C. And then if you want to write this as an assertion so that we get our partitioned matrix expression, then you can think of that as this with a hat on each of the C's in order to indicate original content. Or alternatively, you could think of this as two equations. Sometimes I do one, sometimes I do the other. And what do you notice? We pick how to partition one of the operands. That tells us how to partition another operand. That then tells us how the pieces are computed, and that then tells us what the partition matrix expression is. And then you can take the partition matrix expression and come up with loop invariants. And once you have the loop invariants, then the algorithms are predetermined. So go and find the loop invariants. Go and find yourself some more algorithms for performing matrix-matrix multiplication. ",
                                        "unit_id":"cb1bd0c13d77425a88d6234ed24cb259",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"22ca9726a1bf4a1b9a4fb92a23eb13fd",
                                "vertical_name":"5.3.3 Matrix-matrix multiplication by rows"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Good thing",
                                            "Column vector",
                                            "Matrix multiplication",
                                            "Partitioned matrix",
                                            "Partitioned",
                                            "Column",
                                            "Tilde",
                                            "Transpose",
                                            "Matrix",
                                            "Put",
                                            "Ve",
                                            "Row"
                                        ],
                                        "data":" Robert van de Geijn: So if by now you've noticed that you're not all that comfortable with slicing and dicing of matrix, matrix multiplication and all of these different algorithms that come out, you may want to consider going back to our first massive open online course and looking at weeks four and five and week five in particular, because there would be talk about how to slice and dice matrix, matrix multiplication. There was a reason why we created that massive open online course first. It is to give you a place to go back to if you don't quite remember some of your linear algebra. How else can we actually do this matrix, matrix multiplication? Well, the one algorithm that you may not have learned about views matrix A as a set of columns, and matrix B has a set of rows. And then recognizes that you can update you matrix C by doing this times that, added to the matrix, followed by this column times that row, added to the matrix, followed by this column times that row added to the matrix. And how does that work more abstractly? Well, think of this as matrix C, which we're now not partitioning. We partition our matrix A by columns a 0, a 1, through a k minus 1. Remember there tare k columns in matrix A and k rows in matrix B, times B, partitioned by rows. But remember these are rows, so we add to label that identifies the row, the T for transpose to indicate that is it column vector on it's side, a row. And then we say, oh, but wait wait a minute. We saw A partitioned by rows before, and then we had to put it tilde on it to identify that it was a row and not a column. So that was a good thing that we did because otherwise we might have confused ourselves with these labels right here. We have seen the labels b 0 through b k minus 1 before, or at least through b n minus 1. So just to make sure we don't get confused with those, let's put tilde on these as well. And notice that we have to add to matrix C. And then, we're back to look, how you multiply with a partitioned matrix is exactly how you would have done it with matrices that have numbers in them, except now you do it with symbols. So let's think of this. Hmm, this is like a vector 1, 2, 3, multiplying a column vector 4, 5, 6. A row vector times and column vector, how would you do that? This times that plus this times that plus this times that. That's exactly what you do with the symbols here. It's this column times that row plus that column times that row et cetera. So you get a 0 times b 0 tilde transpose, row b 0 tilde, plus a 1 b tilde 1T et cetera. Plus C, of course. Let's make them equal here so that is an assertion one, then a computation. Keep in mind, this is a column times a row, plus a column times a row. et cetera. And we looked at that operation carefully. That's a rank one update. And oops, I guess we forgot to put a hat on here. But what we're noticing is that we could compute this as a rank one update to C plus a rank one update to C, et cetera. And this is why we made a big deal out of the rank one update in week four. All right. So how do we now get a partitioned matrix expression out of this? Well, we've given you quite a few hints, why don't you try to come up with a partitioned matrix expression from what we've given you here. ",
                                        "unit_id":"8bcaded519c54d4191096895f90190e4",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Partitioned matrix",
                                            "Matrix",
                                            "Part",
                                            "Straight"
                                        ],
                                        "data":" Robert van de Geijn: All right, so how should you have thought about that? Well, think of a left part of A and a right part of A, and a top part of B and a bottom part of B. And again, when you work with partitioned matrices, how does this work? This times that, plus this times that, plus this times that. So from that, what do you get? C is equal to the partitioned matrix A times the partitioned matrix B plus C. But that's equal to this times that, plus this times that, plus the matrix C. And ta-da, there's our partitioned matrix expression. Of course, if you were really fluent in everything we tried to teach you in our first MOOC, then you could have gone straight from this, to these partitionings, to that, and the partitioned matrix expression would have fallen straight into your lap. Oh, let's not forget that, OK? Now, my assumption is that, by now, once you've actually figured out what the partitioned matrix expression is, you yourself can come up with the loop invariants, and from the loop invariants, you can come up with the algorithms, and everything just falls immediately in place. So if you need to practice, you should go and do that. Oh, so, you need that practice, so go and do that. But you know, you may want to just come up with the algorithm for one of the loop invariants instead of both. ",
                                        "unit_id":"f5a526b3de4b4e09ab415922f31bdc6a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"730970848d3a4a4eaa2248cf261661e2",
                                "vertical_name":"5.3.4 Matrix-matrix multiplication via rank-1 updates"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Column vectors",
                                            "Case",
                                            "Substitution",
                                            "Blocking",
                                            "Matrix",
                                            "Column",
                                            "Algorithm",
                                            "Partition",
                                            "Update"
                                        ],
                                        "data":" Robert van de Geijn: All right, so now we get to the really important topic of blocking. When you were deriving your algorithms and you were using LaTeX and the Spark web page to typeset this, in the Spark web page you noticed there was this option of blocked versus unblocked. What's that all about? Here's the idea. Let's look at C equals A B plus C, matrix-matrix multiplication. And let's look at one of the loop invariants that came out for the algorithms that marched through the matrices by columns, matrices C and B. This was one of them. Now, when you derive the algorithm for that, what did you do? You said, repartition exposing the left column of the right part of C, do the same thing for B, and then you take this and you do a substitution into the loop invariant. And what do you get? You get that C0, c1, C2 is equal to A times B0 plus C0 hat, and then c1 hat and C2 hat. That's then what we call the state before the update. That's step 6 in the derivation process. And then you did the same thing to figure out what the state after the update had to be, step 7. And then comparing step 6 to step 7, what you found out was that the update had to be that c1 had to be updated with A times b1 added to c1, and then you can recognize this as a matrix vector multiply. And then when you implemented this with MATLAB, the update would have been something like c1 is equal to A times b1 plus c1. Correct? Does it all look familiar? If you actually did the work, then this should look very familiar. Now, the idea is as follows. For many reasons-- which will become particularly clear in the Enrichment for this week, when we talk about how to do highly optimized implementations of matrix-matrix multiply, which actually means slicing and dicing all over the place-- you're going to find out that what you really want to do many times is not pick up one column here, but actually pick up some set of columns. And you want to compute with that set of columns simultaneously. So how does that change things? Well, instead of having a lower case c1, which indicates a single column, we would then say partition exposing some set of columns where this here would be, say, b columns, some kind of blocking parameter that you can actually tune. And depending on the situation, you may want to pick that to be bigger or smaller. If you do that here, then over here you would want to pick up b columns as well. But then you can do exactly what you did before. You can do a textual substitution, in which case for the state before the update, step 6, you would get this and this. For step 7, if you worked it out, you would get C0, C1, C2 is equal to A B0 plus C0 hat, A B1 plus C1 hat, C2 hat. And if you then compare that to that, then you ask, how do I need to inherently update? This c1 would become a capital C1 because now it's a submatrix, the b1 would become a capital B1, and this c1 would become a capital C1. And then in the update step, when you do this in MATLAB-- first of all, when you would go to the Spark web page, you would indicate that you would want to use the blocked algorithm. That then would actually expose matrices instead of column vectors, and then the update that you would end up doing would be C1 is equal to A times B1 plus capital C1. And what this means is that-- well, this may seem a little bit silly to you. But what it means is that you're implementing matrix-matrix multiply in terms of matrix-matrix multiply. But actually, that's exactly the point. It may be that for this matrix-matrix multiply, you would want to use a different algorithmic variant, and you're going to see that that's exactly the case when we talk about this in the Enrichment. You'll want to partition in one direction, then you end up with a subproblem that's itself a matrix-matrix multiply. Then you want to partition in another direction, you end up with another matrix-matrix multiply that's a subproblem of that. You want to partition again, and you want to keep doing that. Eventually you end up with an unblocked algorithm because eventually you stop being able to partition it into matrices because how you want to partition is-- because you will want to partition with only one row or one column depending on the situation. So go and derive some blocked algorithms. For this particular operation, it's going to be relatively simple. In the next section, what we're going to talk about is how you can cast other matrix-matrix multiplications with matrices with special structure in terms of matrix-matrix multiply by using blocked algorithms. And then hopefully everything will start coming together. ",
                                        "unit_id":"880f1b495c1d4998af2dab2a9c1e8b3e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"17ca19861797420483741c6487ed78f1",
                                "vertical_name":"5.3.5 Blocked algorithms"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8a56c84a7ad946c8845633bfc73775a6",
                        "sequential_name":"5.4 Symmetric Matrix-Matrix Multiplication",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Basic linear algebra subprograms",
                                            "Optimize",
                                            "People",
                                            "Insight"
                                        ],
                                        "data":" Robert van de Geijn: In the Enrichment, you're going to learn a little bit about how we can highly optimize matrix-matrix multiplication by extreme slicing and dicing and then some extreme coding at the bottom where we optimize a very, very tiny matrix-matrix multiply that we're left over with. Now, in the early 1990s, somebody had a very important insight. And that was that if you can only afford to highly optimize matrix-matrix multiply, then actually you can highly optimize many other matrix-matrix multiply-like operations as well. Now, you've already learned a little bit about the BLAS in the Enrichment of week 4, these are the Basic Linear Algebra Subprograms. The very important sets among those are a set of matrix-matrix multiply-like operations. And it turns out that all of those operations themselves can be cast in terms of matrix-matrix multiply in ways that we're going to describe in this section. People dubbed this \"The Poor Man's BLAS.\" What if you could only implement matrix-matrix multiply highly efficiently? How could you then get the rest of the matrix-matrix operations to perform almost as well as if you highly optimized them individually by casting computations in terms of matrix-matrix multiply? And it also builds on insights that people actually had had previously, which was that higher level operations can also be cast in terms of matrix-matrix multiply in similar ways. And that is something that's the primary topic of next week. ",
                                        "unit_id":"75c4c7b467a24477880dd4a884d1b2e4",
                                        "unit_type":"html"
                                    },
                                    {
                                        "data":"",
                                        "unit_id":"1218a6d178c44b7da06313eab3129c63",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ba6fd5e16bca4557821b9b8f868135df",
                                "vertical_name":"5.4.1 Background"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Symmetric matrix",
                                            "Final result",
                                            "Symmetric",
                                            "Bottom",
                                            "Top",
                                            "Operation",
                                            "Find",
                                            "Multiply",
                                            "Partition",
                                            "Special"
                                        ],
                                        "data":" Robert van de Geijn: We saw symmetric matrix vector multiplication as an example in the beginning of this week. What we're now going to do is look at a very closely related operation, symmetric matrix-matrix multiply. And what is that? Well, what if you're trying to do C is equal to A times B plus C, except A is a symmetric matrix. So let's start by coming up with the partition matrix expression. And what did we learn from coming up with algorithms for matrix-matrix multiplication? Well, we learned that we should pick one of these operands, we should partition it, and then see what happens to the other ones. And notice that it might be beneficial to start with the operand that is most special. And which operand is most special? Well, operand A, which is the symmetric matrix, is most special. And we noticed before that a symmetric matrix we want partition into quadrants because we want to somehow be able to play with that symmetry that exists. All right. So what does that mean? We have this as the post-condition. Well, we have this as the post-condition. And now what? Well, let's partition matrix A. And how did we partition this when it was symmetric? Into the top left, the bottom left, a top right, and a bottom right. And then what we did was we recognized that if we chose these to be square and we only sort of the lower triangular parts, then this right here was actually just the bottom left part of A transposed. So we take that and we plug it into the post-condition. We've done that before. And then we say, well, how should everything else be partitioned? Well, notice that we learned that if you multiply them with a partition matrix you should do this times that plus this times that, and this time that plus this times that. So that indicates to me that B should be partitioned into a top part and a bottom part, at the very least. You could, of course, say, well, since we partitioned A into quadrants why don't we also partition B into quadrants? Well, there's nothing special about B. It doesn't have any special structure, at least we haven't said so. And therefore, we want to partition it as little as possible. We know we must partition it this way but we don't need to partition it anymore than that. So let's leave it alone. Now, notice that when you do this times that plus this times that, you end up with a top part. And this times that plus this times that gives you a bottom part. So that tells us that C must be partitioned into a top part and a bottom part. And that of course means then that C hat should be partitioned into the top part and a bottom part as well. You got it? So, what did we always do? You take the post-condition, you partition one of the operands, you plug it into the post-condition. You then figure out how everything else needs to be partitioned, and gets us to this state. And then what? Well then, we needed to be able to figure out what operations need to be done with the exposed pieces because that allowed us to systematically come up with a partial result towards the final result. So what do we do? You say, well, let's actually take this and let's actually multiply it out and see what comes out so that we know what operations must be done with the different pieces. So let's multiply it out. We got this times that plus this times that. This must be added to that. I get this times that plus this times that, which must be added to that. So now we have this, which by the way, looks exactly like what we had when we did symmetric matrix vector multiplication except these were lowercase x's and those were lowercase y's. It should look very familiar. And since it looks so familiar, you should be able to just go ahead and find all those loop invariants. And then you should be able to go ahead and find all of the algorithms. And then you should be able to go ahead and find block algorithms, where you simply say, well, let's actually go ahead and partition off not just one row and one column at a time but multiple rows and columns at a time. And why don't you go ahead and do that. And by now, you should be really fluent, so this should just happen really quickly. And then I'll see you in the next video. ",
                                        "unit_id":"71b53b06fff84018a7c280781aa948ff",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e4442622c8d947c3b770d5e7286d7f1d",
                                "vertical_name":"5.4.2 Deriving the first PME and corresponding loop invariants"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"1284cdc9c86d4b5f88df8593e1e2cd5f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b2da073803a74f0f81ca934bbdeb64fd",
                                "vertical_name":"5.4.3 Unblocked algorithms corresponding to PME 1"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"8f914622166e4ae997e6751b3c7d524e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"dbc3bdc6186b440ea0c804b07bf6fcda",
                                "vertical_name":"5.4.4 Blocked algorithms"
                            },
                            {
                                "units":[],
                                "vertical_id":"3fcc7c8391fe4f39a780ec654ef6b3c9",
                                "vertical_name":"5.4.5 Other blocked variants"
                            },
                            {
                                "units":[],
                                "vertical_id":"d70ad7c31ff7401b8849f53af3ef9255",
                                "vertical_name":"5.4.6 A second PME"
                            }
                        ]
                    },
                    {
                        "sequential_id":"da18de2e58bf4264935829e90a37ef0c",
                        "sequential_name":"5.5 Enrichments",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Floating point operation",
                                            "Main memory",
                                            "Memory hierarchy",
                                            "Cache memory",
                                            "Computer architecture",
                                            "Flip side",
                                            "Real numbers",
                                            "Outer product",
                                            "Good thing",
                                            "Small number",
                                            "Data movement",
                                            "Cubed",
                                            "Fast",
                                            "Memory",
                                            "Sitting",
                                            "Cache",
                                            "Multiply",
                                            "Small",
                                            "Movement",
                                            "Operation",
                                            "Cast",
                                            "Scalar",
                                            "Eventually",
                                            "Amount",
                                            "Introduced",
                                            "Number",
                                            "Total",
                                            "Data",
                                            "Ve",
                                            "Product",
                                            "Fact",
                                            "Computation",
                                            "Compute",
                                            "Good",
                                            "Write",
                                            "Matrix",
                                            "Vector"
                                        ],
                                        "data":" Robert van de Geijn: These enrichments are meant to give you a little bit of perspective of how matrix vector operations, matrix-matrix operations, and casting in terms of matrix-vector operations and matrix-matrix operations is important if you want to attain high performance. And then on the flip side, what this means is that it's very important to be able to derive algorithms that actually cast computation in terms of these operations. Which is what a big part of this course is all about. For those who aren't that familiar with computer architecture, let me just give you the basics. And there's no need to panic. I actually know remarkably little about computer architecture myself, and I've managed to have a very fruitful career that depends on knowing exactly what I'm about to explain to you. All right, so what you need to keep in mind is that computation-- multiplies and adds-- are useful operations in our field. And data movement is not useful. So data movement is overhead, and it's often the movement of data between memory layers that actually is a cause for concern. And if we can just overcome that, then we can achieve extremely high performance. So what you want to do is you want to think about the memory hierarchy. And what does that mean? Well, think of it as a pyramid. In order to compute, you have to have data in registers. Only if data reaches registers can compute with it, so inherently one must bring data into registers. And what are registers? Think of registers as extremely fast memory, but you have extremely little of it. Think in terms of 16 to maybe 128, or something like that. Let's not get into the details of that. A small number. On the other extreme is main memory. These days there is lots of main memory. You can put huge matrices there. After all, we're interested in computing with matrices. And they can be stored there. And main memory is relatively cheap. Now the problem is that main memory is extremely slow. While once you get data into the registers, accessing the registers is extremely fast. It better be, because if you can't get the data out of the registers fast enough to compute with it, then why bother having really fast compute units. All right? So main memories extremely slow. Registers are extremely fast. Now let's take a typical operation that we ran into during the course. Let's say that we want to do an axpy operation, which we will indicate by a vector plus equal some scalar plus a vector. OK, so we're going to take a scalar times a vector and add that to the vector. Hmmm. If this vector is of size n, then of course this vector is of size n. Notice that inherently these vectors have to be brought into registers. And therefore, inherently, you're going to have to-- if this is y plus equals alpha times x. Inherently you're going to have to read x, that's n memory operations. You have to read x. You have to read y. Then you have to write y back to memory. So in total, three n memory operations must happen. And if initially the vectors are in main memory-- and when you're finished they have to be in main memory-- then notice that that's a lot of data movement. Especially if you take into account that, with each pair of entries in the vectors, all you do is a multiply and an add. So in the end, you do 2n floating point operations. Typically in our field, we don't operate with integers. We operate with real numbers, but those are represented as floating numbers. OK. Now, no matter how fast you do these floating point operations, you've got a problem. Because you have a proportional number of memory operations that must be performed. And if that's really slow compared to performing the floating point operations, that's a problem. Now, how did people try to overcome the fact that main memories extremely slow? Well, they introduced something called cache memory. And what is cache memory? Cache memory is a very small amount of very fast memory. So close to the registers is an L1 cache. And then over time, they have introduced L2 and L3 caches as well. The L1 cache is small. The L2 and L3 cache get progressively larger. And then eventually, main memory is very large. Now do these caches actually do us any good? So the idea is, you can take the data out of main memory. Store it in, say the L1 cache. Compute with it much faster, because data can be brought into registers from the L1 cache much faster than from main memory. And then hopefully everything is fine. The problem is that if our premise is that we initially start with our vectors in main memory and we want to end up with those vectors in main memory, then having a very fast L1 cache doesn't really do you much good. Because inherently, these vectors must be brought in from main memory into the L1 cache. And you still pay a price of bringing it out of the main memory and back into the main memory. So it doesn't do you much good. That's where all the cost is. OK, well, fortunately, we learned about matrix-vector operations. And we learned that matrix-matrix operations could be cast in terms of matrix-vector operations when we do unblocked algorithms. Hmm. Does Those that do us much good? Well, think of the matrix-vector multiply. A vector is updated by a matrix times a vector. Now let's assume that it this vector is of size n, as is this vector. Which, then, of course means that the matrix is an n by n matrix. So now we're doing y plus equals A times x. Well, inherently every entry in the matrix must be brought into the registers. OK? When you think about it, when you perform a matrix-vector multiply, you do a multiply and add with every entry in the matrix. Hmm. What does that mean? Well, if it's an n by n matrix, then you inherently have to do n squared memory operations. And what we just said was that every entry in the matrix is used for a multiply and an add. If we count those separately as floating point operations, then inherently we end up doing two n squared floating point operations. And notice that we're still doing one memory operation for every two floating point operations. And again, if memory operations are extraordinarily slow, we still haven't come out ahead. Well, we come out ahead a little bit, because notice that we could take our vector x stored in the L1 cache, and then keep it there during the entire matrix-vector multiply. And that saves us some memory movements. But ultimately, we have to do one memory operation for every two floating point operations. And that's a problem. Inherently, the cost of moving the data between-- in and out of main memory is the problem. Might a rank one update be better? Well, there you have a matrix that you update with an outer product. But if you think about it, because you're updating the matrix, you have to read the matrix. And you have to write it. There are n squared entries again. So that means now that we have to do two n squared memory operations. And if you think about it, for every entry in A, you have to do a multiply and an add. You may have to go back and review what a rank-one update is. And therefore, we're still doing two n squared floating point operations. So we notice that, hmm, we actually are worse off. Right? Before we had one memory operation for every two floating point operations for matrix-vector multiply. Here we have one memory operation for every one floating point operation. That's worse. So you could say, well, at least if we can come up with algorithms that cast most computations in terms of a matrix-vector multiply instead of a rank-one update, then our memory movements have been reduced by a factor two. And then actually we do a little bit better. So you're already starting to learn that finding different algorithms that cast computation in terms of different other algorithms is a good thing. Still, any time you cast computations in terms of what we call matrix-vector operations, you're probably not going to get particularly good performance. Unless it happens to be the case that all of the data is already sitting in a cache somewhere. Or unless it happens to be the case that the computations that you do actually is a very small fraction of the total computations that you're having to perform. Now, you could just say, well, that's just tough luck. That's just the way it is. Let's just go home. Well, you could say that. But actually, we can do much better. What if we have a matrix-matrix multiply sitting in main memory? Well, then we have a matrix C that's been updated by the product of two matrices. C plus equals A times B OK. If you-- if you paid attention, you noticed that the matrix-matrix multiply can be implemented as a matrix-vector multiply for every column of B. And what that means is that the number of operations that you need to perform is, well, if each of these matrices is n by n, the number of operations that you need to perform is inherently two times n cubed. The matrix-vector multiply is to n squared floating point operations. A matrix-matrix multiply is therefore two n cubed floating point operations. Ah, so now we have an operation where we perform two n cubed floating point operations. One is a lower bounds on the amount of data that inherently has to flow across this boundary, which is where the problem is. Well, you have to read A. You have to read B. And you have to read C, and write C back out. So that's n squared memory operations plus n squared memory operations, plus two n squared memory operations. So that means four n squared memory operations. Ah, there's an opportunity here to say we can amortize the cost of memory operations over more floating point operations. Because the ratio here really is two memory operations for every n floating point operations. OK? Now, that is what would happen if you could take these matrices, cram them in the L1 cache. Do a bunch of computation, and then eventually write them back out. The unfortunate fact is that these matrices tend to be larger than fit in the L1 cache. What is the solution? Well, you learned about slicing and dicing. The solution is to somehow partition these matrices in a way so that you work with smaller subproblems that actually fit in the various caches. Now, how to slice and dice this so that you can get extremely high performance. That is the topic of the next video. ",
                                        "unit_id":"f04a0112f210454187d49537b72c03c1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2d7076bdddd84c5ca07edb609fc30a4d",
                                "vertical_name":"5.5.1 The memory hierarchy"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical software",
                                            "Paper"
                                        ],
                                        "data":" A number of recent papers on matrix-matrix multiplication are listed below. Kazushige Goto, Robert A. van de Geijn. \"Anatomy of high-performance matrix multiplication.\" ACM Transactions on Mathematical Software (TOMS) , 2008. This paper on the GotoBLAS approach for implementing matrix-matrix multiplication is probably the most frequently cited recent paper on high-performance matrix-matrix multiplication. It was written to be understandable by expert and novice alike. Field G. Van Zee, Robert A. van de Geijn. \"BLIS: A Framework for Rapidly Instantiating BLAS Functionality.\" ACM Transactions on Mathematical Software (TOMS) , 2015. In this paper, the implementation of the GotoBLAS approach is refined, exposing more loops around a \"micro-kernel\" so that less code needs to be highly optimized. These papers can be accessed for free from http://www.cs.utexas.edu/~flame/web/FLAMEPublications.html. (Journal papers #11 and #39.) We can list more reading material upon request. ",
                                        "unit_id":"251a3ba44ad949a8a0c061556e56da4a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4aee81373ca14520b2b6ff19f9385801",
                                "vertical_name":"5.5.2 The GotoBLAS matrix-matrix multiplication algorithm"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Loop index",
                                            "Free access",
                                            "Vise versa",
                                            "Computer science",
                                            "Parallel programming",
                                            "Loop",
                                            "Dissertation",
                                            "Parallelism",
                                            "Work"
                                        ],
                                        "data":" In Unit 5.2.6, Figure 5.10, you may have noticed a pattern between the PME and the two loop invariants that yielded the same update in the loop. One of those loop invariants yield an algorithm that marches through the matrix from top-left to bottom-right while the other one marches from bottom-right to top-left. Reversing the order in which a loop index changes (e.g. from incrementing to decrementing or vise versa) is known as loop reversal. It is only valid under some circumstances. What Figure 5.10 suggests is that there may be a relation between the PME and a loop invariant that tells us conditions under which it is legal to reverse. How the PME and loop invariants give insight into, for example, opportunities for parallelism is first discussed in Tze Meng Low, Robert A. van de Geijn, Field G. Van Zee. \"Extracting SMP parallelism for dense linear algebra algorithms from high-level specifications.\" PPoPP '05: Proceedings of the tenth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming , 2005. Look for Conference Publication #8 at http://www.cs.utexas.edu/~flame/web/FLAMEPublications.html for free access. This then led to a more complete treatment in the dissertation Tze Meng Low. A Calculus of Loop Invariants for Dense Linear Algebra Optimization. Ph.D. Dissertation. The University of Texas at Austin, Department of Computer Science. December 2013. This work shows how an important complication for compilers, the {\\em phase ordering problem} can be side-stepped by looking at the PME and loop invariants. This dissertation is also available from the same webpage. We believe you now have the background to understand these works. ",
                                        "unit_id":"5d568a118775406ba7881fb2510c7878",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"71f0e5afd764480c8b21499c796068a0",
                                "vertical_name":"5.5.3 The PME and loop invariants say it all!"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6e483ea9882a49b6b6451852fea79ac4",
                        "sequential_name":"5.6 Wrap Up",
                        "verticals":[
                            {
                                "units":[],
                                "vertical_id":"7aa03c8fe315495fab9751a092e9761b",
                                "vertical_name":"5.6.1 Additional exercises"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"7e105e7ebc574c119a3cc8a7ad58f65e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5368822f9c2b421b8d7963a71789ba54",
                                "vertical_name":"5.6.2 Summary"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"04de2365ac734a7685f69061e4bfd120",
                "chapter_name":"Week 6 Advanced Matrix Operations",
                "sequentials":[
                    {
                        "sequential_id":"3c94c1d6451b4e84b59fb84b32d86171",
                        "sequential_name":"6.1 Opening",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Unit lower triangular matrix",
                                            "Upper triangular matrix",
                                            "High school",
                                            "Linear equations",
                                            "Linear algebra",
                                            "Lu factorization",
                                            "Right hand side",
                                            "Numerical computing",
                                            "Derive",
                                            "Matrix",
                                            "Ve",
                                            "Ll",
                                            "Store",
                                            "Solve",
                                            "Taught",
                                            "Computing",
                                            "Memory",
                                            "Talk",
                                            "Diagonal",
                                            "Write",
                                            "Back",
                                            "Row"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: So welcome to week six. You've survived weeks one through five, so hopefully we've got your attention. Now, when someone gives a talk, say an interview talk for a faculty position here, the rule of thumb is that you should give a talk that everybody in the audience can follow along with for about 40 minutes, and then the last 10 minutes you get to wow the experts. Well, week six is that wowing of the experts, except that in this particular case, we have made you the expert, and therefore, you'll just be there with us and everything will be pretty crystal clear to you. So I'm going to motivate this week by looking at an operation that you may have seen in high school or in some other linear algebra course. We certainly spent quite a bit of time on it in our first MOOC, Linear Algebra, Foundations to Frontiers, and let's just go and have a look and see what it is that you were originally taught. OK, so what do we have here? We have three equations and three unknowns- three linear equations and three unknowns. And, somewhere in your math career, you were taught how to solve this. What were you taught? Well, you can take multiples of rows and add or subtract them off of other rows and not change the solution, unless you multiply by 0, but we're not going to do that. So how would you do that? Well, you would take the first row and add it to the second row and that would take this term away, and then you would take 2 times the first row and subtract it off the last row, and that would take that term away, and then you would be left with a smaller system of two equations and two unknowns. And then you would take a multiple of this equation and subtract it from that equation, and eventually what you would end up with is an upper triangular system. And then you could solve for z, and once you know what z is, you could solve for y, and once you know what y is, you know what z and y are, and therefore you can solve for x. Coming back to you? OK, now because it was a lot of bother carrying all of these symbols, x, y, and z around, what you were then told was to say, well create a two-dimensional array with the coefficients. So we would end up with 1, minus 2, 3, minus 1, 1, minus 2, 2, minus 2, 6, and then you'd recognize that this simply captures everything that's up here. And then you may have been told, and then append to the right-hand side, like that. And now, what you can do is just do multiples of the rows of coefficients as you go along, instead of also having to write these x, y's, and z's around. And lo and behold, this may have been your first exposure to what was then called a matrix. So it just may come back to you. So what did we then do with this? Well, this is going to be a little hard to keep track of because I want to always think in terms of subtracting a row from another row, and as a result we're going to take the negative sometimes, and sometimes the positive, so hang in there as I do this. So what can we do? Well, we could take minus 1 times the first row and subtract it off of this row. So let's write that down somewhere. We'll write it down here. Minus 1 times the first row is being subtracted off of the second row, and of course that just means that we take the first row and we add it to the second row, right? OK, so that becomes a 0, that is added to that and becomes a minus 1, that is added to that and becomes a 1, that is added to that and becomes a 3, OK? So far, so good? Then we need to take 2 times the first row and subtract it off of the last row. OK, so we'll write down a 2 here. And what? Well, that becomes 0, 2 times that subtracted from that means that this becomes a 2, 2 times that subtracted from that becomes a 0, 2 times that subtracted from that becomes a minus 4. OK? And then what? Then we said OK, we can think of this as a smaller subsystem, and then what? Then we can do minus 2 times this row subtracted from that row, which, of course, is the same as doing 2 times this row and adding it to that row. And if you do 2 times this and add it to that, you get 0. If you do 2 times that and add it to that, you get 2, and if you do 2 times that and add it to that you get 2. OK? And then you notice that this is an upper triangular system and you can say, oh this really represents 2 times z, so z is really 2 divided by 2 and therefore 1. And then you could take that and plug it in here and say, minus 1 times y plus 1 must be equal to 3, and you can compute y out of that, etc. All right? So let's take that away. Now here is the magic. Let's go back up here, and let's think back of the matrix that we have there, and let's write it over here-- 1, minus 2, 3, minus 1, 1, minus 2, 2, minus 2, 6. And let's take this and let's write it over here-- minus 1, 2, minus 2. And let's take this upper triangular matrix and let's write it here-- 1, minus 2, 3, minus 1, 1, 2, with 0's below there. OK? Now this is part that always makes me feel like I'm a magician. Nothing up my sleeves, here we go. If we go and we put 1's on the diagonal of this matrix, and we put 0's above the diagonal, then magic. If you multiply this matrix and that matrix, you get that matrix. OK? So this we can refer to as a unit lower triangular matrix. It's got 1's on the diagonal, and that's what we call a unit lower triangular matrix. This we can refer to as an upper triangle matrix, and what we're saying is, if you compute L times U, you get back A. And this then is known as the LU factorization of matrix A. And it turns out that you can compute the LU factorization of matrix A, and then you can do other things with that. For example, you can use it to solve linear systems, et cetera, and how that all fits in, you'll see later in the week. Now, what do we do in this course? We do goal-oriented programming. What if we make our precondition A is equal to A hat, and what if we make our post-condition A contains L and U? Let's write that like that with kind of a funny slash here there. Where-- and-- L times matrix U is equal to the original contents of A. Now, what do we mean by this particular notation here? Well, notice that you could take these entries here and put them right there, and in effect store L and U both in the same matrix by virtue of the fact that you know that the diagonal elements of L are 1, and therefore you don't need to store them. And what that means is that you can take the results of computing the LU factorization and you can have it overwrite the original matrix so that you don't need additional space for the result. And that's typically how it's done. People who do numerical computing are typically very stingy with memory. They want memory to be used for useful things, and therefore if you compute the LU factorization of matrix A, you want to in-place replace A with the result so that you don't need additional memory. Now, over the years different algorithms for computing the LU factorization have been found, inspired by different ways in which this computation can be arranged. And, as a matter of fact, over the years since-- this is sometimes referred to as Gaussian elimination-- was invented, five different algorithms came out. So every couple of decades somebody would find another algorithm. What you're going to find out is that, in about a half an hour, with the tools that we've given you, you can derive all five of those algorithms off the bat. And then you can go a step further and derive blocked algorithms that will obtain high performance and implement them, and you're done. And that kind of gives you an idea of the power of what we have now given to you. OK, let's get started. ",
                                        "unit_id":"1fc111a55bda480f95aba58824a1002a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"dc3f651bd21f460ab780e5ef41c44a62",
                                "vertical_name":"6.1.1 Launch"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lu factorization",
                                            "Variant"
                                        ],
                                        "data":" 6.1. Opening Remarks 6.1.1. Launch 6.1.2. Outline Week 6 6.1.3. What you will learn 6.2. LU Factorization 6.2.1. Background 6.2.2. From specification to the PME 6.2.3. Unblocked Variant 1 6.2.4. More loop invariants 6.2.5. Blocked algorithms 6.2.6. Which variant to pick 6.2.7. LU factorization with pivoting 6.3. Related Operations 6.3.1. Triangular solve 6.3.2. Triangular solve with multiple right-hand sides 6.4. Enrichment 6.4.1. To the frontier and beyond... 6.4.2. Practical libraries 6.4.3. Correctness in the presence of roundoff error 6.4.4. Beyond dense linear algebra 6.4.5. When the worksheet does not yield algorithms for matrix operations 6.4.6. If it is so systematic can&rsquo;t we get a computer to do it? 6.5. Wrap Up 6.5.1. Additional exercises 6.5.2. Summary ",
                                        "unit_id":"f47641cf20b74baeb41065eb00c703f2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"48a23b7d7ca0483796e25712e88d0dbe",
                                "vertical_name":"6.1.2 Outline Week 6"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lu factorization",
                                            "Loop invariant",
                                            "Discover"
                                        ],
                                        "data":" The final week shows the power of the FLAME notation. It demonstrates that advanced matrix operations can be tackled using this approach by examining LU factorization to discover unblocked and blocked algorithms used to solve systems of equations. Upon completion of this week, you should be able to Derive and implement the unblocked and blocked algorithms for LU factorization and related operations. Select a loop invariant so that the algorithm developed with it will have certain desired properties, such as accessing matrices by columns. Recognize practical applications and extend the ideas of goal-oriented program to new situations. Discover the many directions of research that what you have learned enable. ",
                                        "unit_id":"f0f087e17baa451bae125e1c614ba5c0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a6f5b3f0aa814f5597498ab57bd69153",
                                "vertical_name":"6.1.3 What you will learn"
                            }
                        ]
                    },
                    {
                        "sequential_id":"10ffab4eef494a69b4d9323d4db4397e",
                        "sequential_name":"6.2 LU Factorization",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Upper triangular matrix",
                                            "Linear systems",
                                            "Linear equations",
                                            "Lu factorization"
                                        ],
                                        "data":" Robert van de Geijn: So what is it that we're going to do? In the launch, you saw that one may wish to solve a system of linear equations. We alluded that the fact that taking matrix A and decomposing it into the product of L times U, a lower triangle matrix times and upper triangular matrix, is the way to go. What we're going to do now is to come up with lots of different algorithms for computing the LU factorization. This is going to expose other linear algebra operations that we need in support of that. We're also going to look at what linear algebra operations we need in order to then solve the linear systems in the end. And together, what that's going to give us is a small library of linear algebra operations, for each of which we will have derived lots of different algorithms. And this will give you an idea of how a group like ours, that is creating a linear algebra software stack, goes about this business. ",
                                        "unit_id":"1698b1b954ac46bdb37194cca46a38d3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9d56fde6506b4d91869c8674efc7eb8d",
                                "vertical_name":"6.2.1 Background"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lower triangular matrix",
                                            "Upper triangular matrix",
                                            "Part",
                                            "Matrix",
                                            "Create"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: OK. So what's important to remember about L and U is that L is a lower triangular matrix with 1's on the diagonal. You can create a little icon like that. And then U is an upper triangular matrix. Now, what we usually do is we start with matrix A. And as we compute, we overwrite it with L and U. And when we're then finished, we have U in the upper triangular part of A. And because L has 1s on the diagonal, we can store only the strictly lower triangular part of L below the diagonal right there. That means that we can overwrite A as we go along. OK. So how do we do that? Let's erase this. Now, these properties about L and U were kind of going to keep in the back of our minds. So we're going to be a little sloppy and not express that as part of our predicates. Now, the first thing we want to do is come up with a precondition and a postcondition. Obviously, a precondition is that A contains its original contents, A hat. And the postcondition is going to be a little bit more complex because somehow we have to be able to capture that A has been overwritten by L and U. So the way I'm going to denote that is that when we're done, A contains L and U. And I'll create this notation, this backslash between the two, to indicate that L is really sitting below here and U is sitting above here. All right? And then what has to be true about L and U? Well, if you multiply L times U, you should get back the original contents of A. OK? Precondition, postcondition. Now remember, in order to come up with a partitioned matrix expression, we needed to think through how we inherently march through the arrays. Think back about how we marched through the arrays when we were talking about eliminating equations. That may be a good hint. Think that through. ",
                                        "unit_id":"6b29b2dc67d04120aa0bd0a7a290daa3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1429c5c3b08f4636a9669dded5d421f0",
                                "vertical_name":"6.2.2 From specification to the PME"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Left",
                                            "Top",
                                            "Related",
                                            "Updated",
                                            "Part",
                                            "Bottom"
                                        ],
                                        "data":" Robert van de Geijn: Let me give you one loop invariant as a hint. You could say, OK, A has only been partially updated, so it has been updated with L and U of the top left part. But the other parts have been left alone. OK, now, to express that, what do we need? You would say A top left, A bottom left, A top right, A bottom right, has been overwritten with LU top left but leaving A bottom left alone, A top right alone, and A bottom right alone. Now-- but how are L and U top left related to the original matrix? Well, we don't need all this, but we do need to know that L top left times U top left is equal to A top left hat. So that becomes part of our loop invariant. L top left times U top left is equal to the original part of A. And now we have a loop invariant. A has been partially updated. The tricky part is that part of how it's defined is constrained. This tells you something about how the contents of L and U are related to A. Now, why don't you go and play with this, and come up with an unblocked algorithm for this. Hopefully that will give you some experience. And that then will allow us to revisit this, so that we can look at a little bit more complex loop invariants. ",
                                        "unit_id":"73c21b3d58da4bbe8abe57514e7406ba",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Line ahead",
                                            "Loop invariant",
                                            "Top",
                                            "Left",
                                            "Loop",
                                            "Part",
                                            "Bottom",
                                            "Ve"
                                        ],
                                        "data":" Robert van de Geijn: So what have I done here? I've picked one of the loop invariants, namely the very first one, the one where A top left has been overwritten with the result, but the other parts have been left alone. And notice that the constraint is that L top left times U top left is equal to the original contents. Now finding the loop guard-- not so difficult, right? Inherently, we're going to go from top left to bottom right. You've seen that before.&ne;&ne;&ne; You're used to that. Finding the initialization step-- &ne;&ne;&ne; 14 00:00:36,150 --&gt; 00:00:38,160 again, not a big deal. Partition A, L, and U such that the top left part is empty. And the loop invariant is inherently true. So that's good too. The loop invariant, we've already picked. How to repartition? Well, we need to make progress towards completion. And therefore, at the top of the loop, we repartition, exposing another row and another column, and then at the bottom of the loop we would move the line ahead. You've seen that before as well. So all of that is good The real question becomes what is the state of these exposed pieces after we do this repartitioning? And how do we do that? We take the loop invariant, we do a textual substitution of the pieces prior to fitting them in. But now, hopefully, you recognize that is sort of splitting the range, except for two dimensional arrays. And then we manipulate, right? So let's see what happens if we do that. Well, actually, why don't you go and try to figure it out? So come up with the state of the different pieces of the matrix in step 6. OK, let's have a look and see how that works. Why don't we do what we always do? We replace A top left with A zero zero. You recognize that A bottom left now becomes A one zero, A two zero. And we get an A zero one here, an alpha one one, a two one. So far, so good. Now A zero zero has been overwritten with L and U zero zero. But the rest of the parts have been left alone. OK? And L zero zero times U zero zero is equal to A zero zero hat. Very straightforward. So why don't you next come up with step 7, the state after the update. ",
                                        "unit_id":"48755d706b954c0a9d1065c29828aefc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Unit lower triangular matrix",
                                            "Linear algebra",
                                            "Dot product",
                                            "Bad news",
                                            "Matrix",
                                            "Good news",
                                            "Top",
                                            "Left",
                                            "Part",
                                            "Move",
                                            "Ve",
                                            "Write",
                                            "Hat",
                                            "Good",
                                            "Diagonal",
                                            "Inverse",
                                            "Compute"
                                        ],
                                        "data":" Robert van de Geijn: OK, so hopefully you've figured it out. I'm going to have to go way down here on the blackboard. What have we got? Well, A top left is A 0 0, a 0 1, a 1 0, transpose alpha 1 1. A bottom left, when we move forward, becomes A 2 0, a 2 1, A top right becomes A 0 2, a 1 2 transpose. And then finally down here we got A 2 2. And because we've now done some more computation, LU top left becomes LU 0 0. Below here, we just have l 1 0 transpose. Above here, we have use u 0 1. On the diagonal, we get the diagonal element of u upsilon 1 1. That's the top left part. Down here, we still have A 2 0 hat, a 2 1 hat. Up here, we have A 0 2 hat, a 1 2 transpose hat, and A 2 2 hat. OK, that's that part. And now comes the tricky part. What about L top left times U top left? Well, that is L 0 0, l 1 0 transpose, 1, because we know it has to have a 1 on the diagonal, times U 0 0, u 0 1, 0, upsilon 1 1. And that must be equal to A 0 0 hat, a 0 1 hat, a 1 0 transpose, alpha 1 1, with hats. Well, hopefully it fit on your piece of paper better than it fit for me. What's now the next question? Well, how do we go from this state to that state? I've created some space. Now let's just think this through. A0 should have l and u 0 0 in it. A 0 0 already has that in it, so nothing needs to happen to that variable. These five pieces of the matrix have this in it and must have that in it. So those obviously don't need to be updated either. So far, so good, right? So really, it is these pieces here that somehow have to be updated for having not changed at all yet to having pieces of L and U in it. So the first thing we know is a 0 1 must be somehow updated, a 1 0 transpose must be somehow updated, and alpha 1 1 must be somehow updated. And how should these be updated? Well, the key is right here. Because this really relates how pieces that we already know-- this, this, this, this, this, and this relates to pieces that you want to compute. Now we know that a 0 1 should be updated with u 0 1. And then a 1 0 transpose should be updated with l 1 0 transpose. Lambda 1 1 should become upsilon 1 1. But that doesn't help us much because we don't know what those are. If we now multiply this out, what do we get? Well, by now hopefully you're getting really good at partitioned pages matrix matrix multiplication. It's this times that plus this times that. So we get L 0 0 times U 0 0. We get this times that plus this times that. So that is l 1 0 transposed times U 0 0. We get this times that plus times that. That's L 0 0 times u 0 1, plus 0 times that. And then we get this times that plus this times that. That is l 1 0 transposed times u 0 1, plus upsilon 1 1. But we know that that must be equal to A 0 0 hat, a 1 0 transpose hat, a 0 1 hat, alpha 1 1 hat. So what do we know? Well, first of all, we know that L 0 0 times u 0 1 must be equal to a 0 1 hat. Where could we write that? Well, we'll write it here. We know that L 0 0 times u 0 1 is equal to a 0 1 hat. But wait a minute, we know L 0 0. It's already being computed, and it has overwritten part of A. So this we know. It's a unit lower triangular matrix. a 0 1 we know, it's the original contents of a 0 1, and we know that it's currently stored in a 0 1. So what we conclude from that is that we need to compute u 0 1 that satisfies the lower triangular system, l 0 0 times u 0 1 is equal to a 0 1, where we could take the hat off because we know that that actually is stored in a 0 1. That's good news. Because if you took a linear algebra course, you know that solving a lower triangular system is easy. It's bad news because we haven't developed a function to do so. Well, let's just assume that we know how to do this. And although we're not going to compute it this way, let's denote it by L 0 0 inverse times a 0 1. Because if we had the inverse of L 0 0, then we can multiply both sides by the inverse and we would get this right here. This is a statement of what needs to be computed, it's not actually how we would compute it. All right, so maybe you're catching on now. How do we compute l 1 0 transpose? Well, you know that l 1 0 transpose times U 0 0 is equal to a 1 0 transpose. You know what U 0 0 is. You know what a 1 0 transpose is. Well, we want to compute with a 1 0 transpose hat, but we know that it's stored right there. Well, we can multiply both sides of this with the inverse of U 0 0. And then we would find that this is equal to a 1 0 transpose times U 0 0 inverse. Now this brings up an interesting sticky point. We know that a unit lower triangular matrix has an inverse. So this operation is legitimate. This particular operation-- maybe not. Because if there is a 0 on the diagonal of U 0 0, then the inverse would not be well-defined. So obviously, we're only going to work with problems for which this doesn't break down. The theory behind all of that is a different matter, it's another course. All right, so now we have these two operations. We'll revisit later how to actually compute this. But we can move on. What's left? We need to figure out how to compute upsilon 1 1, and you kind of see the pattern. You look down here, you see that it's equal to that. We know alpha 1 1 hat, and we know it's stored in alpha 1 1. By now, we know l 1 0 and u 0 1, because those have not overwritten their counterparts in A. In other words, we know that l 1 0 transpose u 0 1 plus upsilon 1 1 is equal to alpha 1 1 hat. This we know, this we know, this we know. So we can bring this to the other side and say, oh, upsilon 1 1 is this right here. Take the dot product of these pieces and subtract if off. Ah, but this here is stored in alpha 1 1. And this l 1 0 transpose is stored in a 1 0 transpose, u 0 1 is stored in a 0 1. So what we need to compute is alpha 1 1 minus l 0 1 dot product with u 0 1, except stored in a 1 0 and a 0 1. And what we've just done systematically is come up with the update step should be. ",
                                        "unit_id":"f24eadc792ae44ea8b751df055a24e4a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8e9571d8c29843799522859d8abeec07",
                                "vertical_name":"6.2.3 Unblocked Variant 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Invariant"
                                        ],
                                        "data":" Robert van de Geijn: OK, so we discovered one loop invariant. And you've now worked through how to turn that into an actual algorithm. Let's go back to where we were. We had our partitioned matrix expression, and we had written down one loop invariant. And if you just look at this, what we're really saying here is, the top left quadrant is done. Nothing else has yet been computed. Well, we could go a little further and say, a little more has be computed. How can we express a little more has been computed? Well, this part of A may have been overwritten with L bottom left. But wait a minute? What is L bottom left? We need to somehow figure out how that's related to the original contents of A. For that you go to this constraint, and you say, oh I know that L bottom left times U top left is equal to that. I have a constraint that tells me what U top left is. So what I need to do is now add this equation right here-- that L bottom left times U top left is equal to A bottom left hat. So you can either think of it this way, or you can think of it as-- this is part of a bigger thing. Or you can say, and this, where our notation here captures that this has to be true, and that has to be true. Now, with this insight, you should be able to come up with two more loop invariants pretty easily. And then there is a third one. So let's count. We had the one we already had done. This is invariant number two. What I'm telling you is that invariants 3 and 4 should be relatively straightforwards. Invariant five is a little bit harder to find. What I want you to do is go and think about this, and then we'll work it out together in the next video. ",
                                        "unit_id":"63ae5d304c54473b8d9bc54d8bd36fb4",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Invariant"
                                        ],
                                        "data":" Robert van de Geijn: OK, so we discovered one loop invariant. And you've now worked through how to turn that into an actual algorithm. Let's go back to where we were. We had our partitioned matrix expression, and we had written down one loop invariant. And if you just look at this, what we're really saying here is, the top left quadrant is done. Nothing else has yet been computed. Well, we could go a little further and say, a little more has be computed. How can we express a little more has been computed? Well, this part of A may have been overwritten with L bottom left. But wait a minute? What is L bottom left? We need to somehow figure out how that's related to the original contents of A. For that you go to this constraint, and you say, oh I know that L bottom left times U top left is equal to that. I have a constraint that tells me what U top left is. So what I need to do is now add this equation right here-- that L bottom left times U top left is equal to A bottom left hat. So you can either think of it this way, or you can think of it as-- this is part of a bigger thing. Or you can say, and this, where our notation here captures that this has to be true, and that has to be true. Now, with this insight, you should be able to come up with two more loop invariants pretty easily. And then there is a third one. So let's count. We had the one we already had done. This is invariant number two. What I'm telling you is that invariants 3 and 4 should be relatively straightforwards. Invariant five is a little bit harder to find. What I want you to do is go and think about this, and then we'll work it out together in the next video. ",
                                        "unit_id":"6ef2991f37af472692a4e07e303a8c57",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ac500fc0831a44b1bcf8d488ed66f61d",
                                "vertical_name":"6.2.4 More loop invariants"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lu factorization",
                                            "Loop invariant",
                                            "Column vectors",
                                            "Library routine",
                                            "Small block",
                                            "Performance",
                                            "Implement",
                                            "Matrix",
                                            "Computation",
                                            "Cast",
                                            "Operation",
                                            "Step",
                                            "Important",
                                            "Block",
                                            "Square"
                                        ],
                                        "data":" Robert van de Geijn: So the way we got it LU factorization was to look at the problem of solving simultaneously linear systems. And that actually turns out to be a really important problem. And it's important enough that when people use a library routine that implements this operation, they demand extremely high performance. So how do we attain extremely high performance? Well, we could go and carefully implement LU factorization exactly the way we did for matrix matrix multiplication, as was explained in one of the enrichments in week five. But you can only imagine how complex that particular implementation would become, and if you had to do that for every important operation that's out there, this would be a major strain, and then it would have to be tuned every time a new architecture came out. So what do people do instead? Well, what people do is they cast computation in terms of matrix matrix multiplication. And what we're going to look at now is how to cast most of the computation that is involved in an LU factorization in terms of matrix matrix multiplication. How do we do that? Well, the important thing is that instead of repartitioning the matrix, exposing the scalar here on the diagonal, which then meant that the pieces above and below were column vectors, and to the left and to the right were row vectors. What we do instead is we pick up a small block. This block may be of size b by b. It's important that it's square, because that means that as we go through the matrix, these blocks are always square, these blocks are always square. And we nicely identified pieces of L and U that are hidden in A because they overwrite the A, et cetera. So this block is some square block. The blocking parameter is dictated by how the matrix matrix multiply is optimized, again, as was discussed in week five. And the question now becomes, OK, how do we come up with blocked algorithms? Well, it's no different than what we did when we looked at unblocked algorithms. We have a partitioned matrix expression. What's different is that we now march through the matrix in terms of blocks. But it's still a matter of just taking the repartitioned matrix and plugging it in there to come up with the state before the update step. The state at step six. And similarly, it's just a matter of taking how the matrix is repartitioned and moved forward in order to determine what step 7 is, and then it's still a matter of comparing step 6 to step 7 to come up with what the update step must be. So what I'm going to do is I'm going to go and take this and do this. The loop invariant that I chose is loop invariant five. And the reason for that is that I happen to know that that, in the end, will cast computation in terms of a matrix matrix multiply, that tends to be preferred because it gets slightly better performance. And what I want you to do is, while I'm working on this, I want you to go ahead and work on step six as well. And then we'll reconvene in the next video and we'll compare notes. ",
                                        "unit_id":"5809ad23ceef455e8bfa02431349fa3b",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Loop invariant",
                                            "Linear algebra",
                                            "Simply",
                                            "Multiply",
                                            "Bottom",
                                            "Top",
                                            "Part",
                                            "Work",
                                            "Ll",
                                            "Thing"
                                        ],
                                        "data":" Robert van de Geijn:: Now, that was a little exhausting, wasn't it? But what you hopefully learned is that, if you don't panic, if you simply plug things in and apply the rules of linear algebra, then everything just kind of falls in place. So let's have a look at what I did. I started with the loop invariant. I needed enough room that I had to get rid of the repartitioning. But hopefully, you have that written down somewhere. And then I simply went ahead and said, well, what is A top left now? It is A0,0. What is A bottom left now? It is A1,0 A2,0, et cetera. OK? So this is straightforward. This part and this part is straightforward as well, right? That's just a matter of figuring out that U top right was now U0,1 and then to its right, U0,2. Same thing here-- that's simple enough. This is the hard part. How do we get to it? Well, A bottom right hat is now this 2 by 2 matrix, right here. L bottom left is this little 2 by 1 block matrix. U top right is this 1 by 2 block matrix. OK? You're now an expert at multiplying partitioned matrices together, so you know that this here becomes a 2 by 2 block matrix. And in the top left, you get L1,0 times U0,1. Then in the top right, you get L1,0 U0,2, et cetera, which then have to be subtracted off of this right here, this 2 by 2 matrix. And when you do that, you get exactly this. It's just a matter of working through it, right? And then when we get to the constraints, it's exactly the same thing. We know that L0,0 has now taken the place of L top left, U0,0, et cetera. This part here-- this here is L bottom left. You must multiply that times U top left. But that's a 2 by 1 block matrix times a 1 by 1 block matrix. That's a matter of this times that for the top part, this times that for the bottom part, which then must be equal to the corresponding parts of A hat. And a similar argument gives you this right here. So it's a matter of textual substitution and then applying the rules of how to multiply partition matrices together. And everything falls in place, right? It kind of makes you think back to that unit, Don't Panic, OK? Nothing to panic about. You just do it. All right. Well, you're probably bracing yourself for the next step. Now you have to do step seven. So now the repartitioning moves forward. Things get a little bit more complicated yet. Why don't you go work on that, I'll work on this, and we'll see each other in the next video. ",
                                        "unit_id":"e3ca92401e4e4c29ba52d1ce586f3c89",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Bottom"
                                        ],
                                        "data":" Robert van de Geijn: OK, well, that was probably a little bit exhausting. Don't you wish that the computer would just do it for you, all this manipulation? OK, this is what I came up with it. Now we have moved forwards. And that means that this block of matrix A is done. And then this block of matrix A has to be overwritten with the counterpart for matrix L. This part has been overwritten with the counterpart from matrix U. This here is overwritten by A bottom right by minus L bottom left times U top right. But L bottom left is this. U top right is that. Multiply it together, that times that plus that times that, and you get that. So this side is OK. So this part is just a matter of pushing it through. The details for this are in the notes. So I'm just going to move on. ",
                                        "unit_id":"071cb12b43d8465692648269e546d3bf",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Current contents",
                                            "Lu factorization",
                                            "Overwrite",
                                            "Minus",
                                            "Ll",
                                            "Compute",
                                            "Knew",
                                            "Part",
                                            "Update"
                                        ],
                                        "data":" ROBERT VAN DE GEIJN: Now here's the important part. What do we do? We say, this is step seven, we compare this to step six, and that then tells us what the updates must be. So let's go in here and let's carefully check what's already in matrix A and highlight that. I'll circle it, or I'll put a box around it. And hopefully you have your step six handy. I don't, so I'm going to do this from memory. We'll see how that goes. And then we'll talk about how to get the pieces that we don't know yet. So here we go. This is already stored in A0,0. So is this, this, this, and this. So those are known quantities. What else do we know? Well, this is already in matrix A. OK? All right, so what do we need to do? We need to compute L1,1 and U1,1 because those are going to overwrite block A1,1. OK, so what do we do? We go over to this side and we say, here is an equality, a constraint, that tells us something about L1,1 and U1,1. What do we know? Well, L1,0 we already know, U0,1 we already know, and this we originally knew. If you go back to step six, what you will find out is that this minus this term actually has overwritten and now exists in A1,1. So what I'm saying is, currently A1,1 contains A1,1 hat minus L1,0 times U0,1. But we know that now L1,1 times U1,1 should equal that. This is the current contents of A1,1, not the original ones. And what does that mean? That means that we need to take what's currently in A1,1 and we need to compute its LU factorization. How might we do that? Well, we could use any of the unblocked algorithms that have been developed before. OK? So what's our first step? Take A1,1, overwrite it with the LU factorization of what's currently in A1,1. So far, so good? OK, so at that point, we will have overwritten A1,1 with that, and that means that now, all of a sudden, we know all kinds of things. We know L1,1 and we know U1,1, in addition to everything we knew before. Let's move on and have a look at U1,2. We haven't computed it yet. But we can go over here and we can find an equation. And if you now go back to step six, what you find is that A1,2 currently contains A1,2 hat minus L1,1-- sorry L1,0-- times U0,2. Now, what do we see here? This minus that is already in A1,2, but we also know what L1,1 is. So what we need to do is solve L1,1 times U1,2 equal to what's currently in A1,2, for U1,2, and then overwrite A1,2 with that. One way in which we can do that is to say L1,1 inverse A1,2. That's what would compute U1,2, and that's what we then need to assign to A1,2. Well maybe, just maybe, you can figure out how to update these other parts, how to compute L2,1 and how to update A2,2. Why don't you go ahead and think about that for a bit. ",
                                        "unit_id":"cfab5f45052644c283b6fe21e2027625",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Matrix",
                                            "Minus sign",
                                            "Multiply",
                                            "Shape",
                                            "Minus"
                                        ],
                                        "data":" Robert van de Geijn: OK, so hopefully you caught on and you said, oh, I need to figure out what L21 is. I go over here and I find a constraint that tells me something. I know that in steps six, A21 contains that minus that. So I know that L21 times U 11 is equal to what is currently in A21. I can then multiply both sides by U11 inverse. And then I can assign the result to A21. Then we go over here and we say, oh, this is already in A22. All we need to do, there's a minus sign that you can't see so well anymore. All we need to do is subtract off an L21 times U12. And that turns out to be where most of your computation is. And the shape of that is it's a matrix being updated by subtracting off the long skinny matrix times the skinny long matrix. Does a matrix matrix multiply? As a matter of fact, it's something that we have given a special name, a rank k update. And if you go back to the enrichment in week five on how to optimize matrix matrix multiply, this particular shape features prominently. And therefore, that particular way of optimizing matrix matrix multiply fits very nicely with the blocked algorithm that comes from loop invariant number five. You may want to go ahead and now derive the other blocked variants. ",
                                        "unit_id":"5105fac57f5b43d1aeda612bee52d840",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0024551fe4aa400f9e5294abd4bf0061",
                                "vertical_name":"6.2.5 Blocked algorithms"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Bad news",
                                            "Lu factorization",
                                            "Food chain",
                                            "Loop invariant",
                                            "Start",
                                            "Matrix",
                                            "Large",
                                            "Update",
                                            "Block",
                                            "Panel",
                                            "Updated",
                                            "Invariant",
                                            "Read",
                                            "Column",
                                            "Derive",
                                            "Nice",
                                            "Derived",
                                            "Completely",
                                            "Checkpointing",
                                            "End",
                                            "Algorithm",
                                            "Store",
                                            "Ve",
                                            "Data",
                                            "Left",
                                            "Called",
                                            "Computation",
                                            "Variant"
                                        ],
                                        "data":" Robert van de Geijn: OK. So you have derived a whole bunch of unblocked algorithms. You've derived a whole bunch of blocked algorithms. And now you may ask yourself, which algorithm should I pick, when? Well, let's first start discussing blocked versus unblocked. Well obviously when you do a blocked algorithm, at some point you have the LU factorization of the current block on the diagonal that needs to be performed. You could use a blocked algorithm with a smaller block size for that. But at some point, you need to switch to an unblocked algorithm. That's not unlike the matrix matrix multiply that was discussed in the enrichment for week five. Where at some point, at the bottom of the food chain, there was a rank one update based algorithm that updated the tiny little matrix that was sitting in the registers. So the same thing kind of would happen here as well. OK, well, let's focus a little bit on blocked algorithms, then. Which invariant or variant should you use? Obviously when you derive the algorithm you start with an invariant. So you may think in terms of the algorithm associated with the invariant. Most people really only look at the algorithm that comes out, and would then discuss the variant instead. All right. So over here I have made a picture that depicts a matrix. And it's let's assume that we've gotten through the matrix up to a certain point, so that we can discuss what is in the different quadrants, and therefore discuss what might be the benefits of the different algorithms. All right. Well let's think for a second about the algorithm where only the top left is done, but the rest of the matrix is left completely alone. That's sometimes called the bordered algorithm in the literature. We call it variant 1, which corresponds to loop invariant 1. All right. Well let's contemplate this. What if you expect for there to eventually be 0 on the diagonal, and that therefore you are using this algorithm in part to detect that the matrix has a problem. Once you end up encountering a 0 on the diagonal, you'll end up doing a divide by 0, and that's a problem. Notice that this particular variant will have performed the least computation leading up to the point where you find out that there is a problem. So if the purpose of the game is to detect that there's a problem, then you may actually want to use this particular loop invariant. So that's-- would be variant 1. Let's go to the other extreme. What we discussed in the enrichment for week five was that inherently a high performance matrix matrix multiply itself is cast in terms of matrix matrix multiplies. And the particular shape that's important along the way is a rank-1 update, which is a tall skinny matrix times a skinny long matrix. Or whatever you want to call it. A column panel times a row panel. Now, variant 5 maintains the loop invariant buried where this, this, and this is completely done. And this quadrant is partially updated. And as a result, the blocked algorithm casts most computation in terms of exactly the shape of matrix matrix multiplied. OK. Now what other algorithms are there along the way? Well, let's look at one more. We don't need to do this exhaustively. Recall that variant-- hmm, I think it's variant 3. Anyway, it's the loop invariant where this is done, that is done, and these blocks of the matrix have been left alone. It's either variant 2 or variant 3, I forget. That particular loop invariant has a very nice property. Everything to the left of this point has finished. Everything to the right of this point has been left alone. Now, when you try to solve extremely large problems, problems so large that they don't fit in your memory, you have to store them on disk. You run the risk that during the computation, your system fails. Now, the good news is-- the data involved in your computation is sitting on disk, and therefore should be OK. The bad news is, if something happens in the middle of updating a further panel of the matrix, then you may have a partially corrupt matrix. And you won't know what to do. Now, to overcome that, what people do is something called checkpointing. They sort of say, well, up to a certain , point everything has been properly updated on disk. I'm going to do a small sliver of computation. Once the computation is done, I'm going to very carefully update the data on disk so that I know whether it actually was updated correctly. And at that point, I move the checkpoint forward to the new point. Now, notice that actually variants 1, 2, 3 and 4 have the inherent property that you update a relatively small sliver of the matrix. And therefore they inherently lend themselves to checkpointing. The reason why this particular algorithm is nice is that when you store data on disk, you again tend to store by columns. Reading from a disk is much more efficient when you do one huge read as opposed to little pieces. So when you come to a new piece of the matrix, you can read that all from disk as one big chunk of data, that makes the reading from the disk very efficient. Then you can do computation with it where you read pieces of the matrix to its left. And then eventually you can write it out as one big chunk of data that gets written. And then you can move the checkpoint forward. By the way, that particular algorithm is something that's called the left-looking algorithm. It's left-looking by virtue of the fact that most of the computation comes from data the left of the current panel of columns with which you're computing. Which is a little forced, perhaps. So what have we seen? We've seen a bordered algorithm. We've seen a left-looking algorithm. We've seen this algorithm, variant 5, which is something called the right-looking algorithm. And what we've argued is that each of them has merits under different circumstances. And therefore it's great to be able to systematically derive all possible loop invariants and all possible algorithmic variants from those loop invariants because then you can reason through which algorithm might actually be most appropriate for a particular circumstance. ",
                                        "unit_id":"2abbb78a694f40f1af234c13ea27a979",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cb988c1198bd484682872db6b5e3a082",
                                "vertical_name":"6.2.6 Which variant to pick"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Lower triangular matrix",
                                            "Lower triangular",
                                            "Big block",
                                            "Top",
                                            "Structure",
                                            "Matrix",
                                            "Partition",
                                            "Block",
                                            "Bottom"
                                        ],
                                        "data":" Robert van de Geijn: So in thinking about how to partition this, you should think this way. Matrix L inherently has special structure. It's lower triangular. As we march through this matrix, we would like to identify a big block of 0s. That inherently you don't need to compute with, or that don't come into the picture. If you only partition in one direction, you can't do that cleanly. So inherently, when dealing with a lower triangular matrix, you want to partition into quadrants, because that identifies this as a nice big 0, and this block, if square, is then itself lower triangular, as is that. And of course, the exact same argument goes for U. Now, matrix A doesn't have any special structure. But matrix A is going to be overwritten with L and U. So the fact that along the way it becomes L and U impose a structure on it, and therefore you want to partition it into quadrants as well. So the insight is, we take our matrix A, we partition it into a top left, bottom left, top right, bottom right. Now, that's the matrix with which we're actually going to be working. In order to be able to reason about correctness, we're also going to want to reason about L, which is going to be partitioned into a top left, bottom left, bottom right, with a nice block of 0s identified there. Under the assumption that these blocks are square themselves. And then the same thing is true for U, which becomes U top left, U top right, U bottom right, with a block of 0s right there. Because L is unit lower triangular, L top left is unit lower triangular, as is L bottom right. Now, what we do next? We take the partition operands-- A, L and U, in this case-- we plug it into the post-condition, and then we manipulate that into a partition matrix expression. Why don't you stop for a second, take a piece of paper, and see if you can work that out. ",
                                        "unit_id":"12bb591a68a14a09baf4f55a6f70ef76",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"918672e3af1346a0ba89c0077c64715a",
                                "vertical_name":"6.2.7 LU factorization with pivoting"
                            }
                        ]
                    },
                    {
                        "sequential_id":"80c5734b330a48908d1a2ea5a5f0a812",
                        "sequential_name":"6.3 Related Operations",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Unit lower triangular matrix",
                                            "Lower triangular matrix",
                                            "Upper triangular matrix",
                                            "Lower triangular",
                                            "Upper triangular",
                                            "Linear systems",
                                            "Square matrix",
                                            "Row vector",
                                            "Lu factorization",
                                            "Gaussian elimination",
                                            "Column vector",
                                            "Right hand side",
                                            "Inverse",
                                            "Unit",
                                            "Transpose",
                                            "Matrix",
                                            "System",
                                            "Ax",
                                            "Vector",
                                            "Column",
                                            "Easier",
                                            "Side",
                                            "Transposed",
                                            "Solve",
                                            "Compute",
                                            "Result",
                                            "Lot"
                                        ],
                                        "data":" Robert van de Geijn: : In the last section, we spent a lot of time on coming up with algorithms for computing the LU factorization. But computing the LU factorization in by itself is not really interesting. Let's see how it actually fits into something that is useful. If you have a square matrix A and you're trying to solve Ax equals y, then one thing you can do is create an appended system and do Gaussian elimination, et cetera, et cetera. The other thing you can do is say OK, let's take A, let's compute its LU factorization, probably with pivoting, but let's leave that alone. And then we can use that LU factorization to solve the system. How? Well, you know that A is equal to L times U. So you know that this set of equations really can be stated as L times U times x is equal to y. You can then place some parentheses there and you could say, well, I don't know what this vector is because I don't know what x is, but I can give it a name. Let's call it z. And then you get that L times z is equal to y. Well, when you get to this point, you know what y is and you know what L is. Why do you know what L is? Because you've done your LU factorization. And then, you can use this to solve for z. This is now a lower triangular system and a lower triangular system is easier to solve. And then once you know what z is, you know that U times x is equal to z. And you know what U is and you know what z is and, therefore, you can solve for x. And notice that U is an upper triangular matrix and solving with an upper triangular matrix is also a lot easier than solving a general system. So what's the point? The point is that, in order to do something useful with the LU factorization, we should also derive algorithms for solving with a unit lower triangular matrix and an upper triangular matrix. Now, if you manage to come up with algorithms for computing the LU factorization, you can come up with algorithms for computing the solution to triangular systems. And then, of course, you would want to derive multiple algorithms because you probably want to pick the one that computes with the matrices with columns. And then you add that to your library routines with which you can now solve in linear systems We actually ran into some of this already before. For example, when we discussed algorithmic variant 1, the one that was derived from loop invariant 1, at some point we had to compute what-- in the end we stated as a01 becomes L00 inverse times a01. And I made some vague comments about the fact that you really should think of this as the operation that multiplies the inverse times that as opposed to procedurally inverting the matrix and then multiplying. Now why is that? Well, that's because you can rewrite this as L00 times, let's call it x0, is equal to a01, where you know what L 00 is and what a01 is. From this you can then use the exact same algorithm that you derived here to compute x0. And if you do that in such a way that the result overwrites a01, then you will have achieved the net effect of this operation here. So triangle solve. Now, in the same algorithmic variant, the one that comes from invariant 1, we also ran into the case where a10 transpose had to be updated by a10 transpose times U00 inverse. Well, that gets a little trickier. A row vector should be computed as a row vector times the inverse of a matrix. We can think of that alternatively as trying to find x0 that satisfies this constraint right here. Where we know what U00 is, we know what is row vector on the right-hand side is. And that starting to look sort of, kind of, like solving a triangular system. I should have had transpose on here because this is a row vector. Well, we can play with this a little bit more. We could say, well, what if we just transpose both sides? Remember, if you multiply and then transpose, that's the same as swapping the order and transposing each part. So what do we get? We get U00 transpose x0 transpose transpose is equal to a10 transpose transpose. Now remember this here to transpose as part of the label we give to that part of the matrix. Here we could actually just say, well, we want to compute this vector and whatever comes out is row vector or column vector, it doesn't matter. We want to take the result and just overwrite it into the result. But let's go ahead and put the two transpose on there. This now is a column vector. This is now a column vector. What about U00? Well, if you take an upper triangle matrix and you transpose it, you get a lower triangular matrix. So you could go ahead and actually take the matrix, transpose it, and then feed the result into a function very much like the one you created for this. The catch being that this matrix doesn't necessarily have 1s on the diagonal, while this here was a unit lower triangular matrix. So you have to change things slightly. Or you could say, well, wait a minute. We don't actually have to explicitly transpose the matrix. We can just compute with it as if it was transposed. And if you start looking at the partition matrix expression for something like this, you can simply come up with algorithms that work with the data where it's always stored without having to explicitly transpose. How can we summarize all of this? Remember that there is this interface called Basic 116 00:07:37,460 --&gt; 00:07:39,620 Linear Algebra Subprograms. And one of the operations that it supports is triangular solve. And there it looks at Ax is equal to y overwriting y with the result. Where this particular matrix can be lower triangular or upper triangular. It can be optionally transposed. That would give us the ability to solve with this. And you can also indicate whether it's unit or non-unit triangular, which means that if it's unit triangular, then implicitly the entries on the diagonal are equal to one. And if not, then you actually use the entries that are stored on the diagonal. And you can imagine that you can come up with all of the different algorithms for all of the different cases, where notice, you'll also need to be careful because while the vector x mathematically here is a column vector, physically it may actually be stored as a row vector. There's a difference between how it's stored and how you view it mathematically. And what does that mean? That means we can come up with lots of different algorithms. You can imagine how many homework exercises I could make from just this problem right here. ",
                                        "unit_id":"1c01ec2fe5f244d382e4a0ffcfe0bb8e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"50245be7eaf34093978ae5b303e3455f",
                                "vertical_name":"6.3.1 Triangular solve"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Unit lower triangular matrix",
                                            "Lower triangular matrix",
                                            "Lower triangular",
                                            "Lu factorization",
                                            "Upper triangular",
                                            "Triangular",
                                            "Matrix",
                                            "Solve",
                                            "Block",
                                            "Override",
                                            "Variant",
                                            "Algorithm",
                                            "Operation",
                                            "End"
                                        ],
                                        "data":" Robert van de Geijn: Here's another loose end. When we discussed variant 5 for LU factorization, but the block algorithm, what we ran into was that the current block was factored, and then the matrix to the right had to be updated by A12 becomes L11 inverse times A12, and the matrix below here had to be updated with A21 becomes A21 times U11 inverse, Now, just like for the triangular solve, we said we shouldn't really invert the matrix. You should compute with it. Here, too, we don't really want to compute with it like this. So what we have here? Well, let's abstract away from the details here. What we really have here is an operation that is LX is equal to B, where you want to solve knowing what L is and what B is for X. And then in the end, X overrides B. All right. Now, if we draw a picture, we have a lower triangular matrix, actually a unit lower triangular matrix, times a block like that. Is equal to a block like that. Now, just like for the symmetric matrices multiplied in week 5, you can partition L into quadrants, and then partition X and B conformally. But you can also leave L alone and say partition only X and B into a left and a right part. Now, if you do that, then you actually end up with a set of algorithms that either march through X from left to right one column at a time, or from right to left one column at a time. Or block, if you chose to make it a block algorithm. Hmm. It turns out that what you do with each column-- let's go and have a look at unblocked algorithm, what do you do there is actually a triangular solve. Because this times that column has to equal that column. That's something you learned from multiplying partitioned matrices together. So this particular operation, where you know L and you know B, you want to solve for X, is known as a triangular solve with multiple right-hand sides. Right -hand sides. Or, short, TRSM, Triangular, Solve with Multiple right-hand sides. And I want to stress again, it's like solving with each column of X and B separately, except you can think of it as a bigger operation, and then you have more potential for creating different algorithms. So this, you really would implement as a dot operation. And again, you can come up with lots of different partitioned matrix expressions. You can come up with lots of different loop invariants, and you can come up with lots of different variants, both unblocked and blocked. This one, similarly, you could think of as X times U is equal to B. What did we do there? We brought this to the other side, and then we viewed this as B, and we viewed this as X, except that in the end, we'll override B with the result, X. And now we know this, and we know that. Well, that's also a triangular solve with multiple right-hand sides. Why? Because you can always take the transpose of both of these, explicitly, but implicitly, in the specification of the operation. This then becomes U transposed X transposed is equal to B transposed, where this is known, and that is known, and this is to be computed and is to overwrite B. And then all of a sudden you recognize that there's a triangular solve, because U is triangular, and it's just one of the special cases. So, sub-operations you encounter when implementing a block LU factorization are triangular solves with multiple right-hand sides. And obviously, you have the case where the matrix is or is not transposed, where it's lower triangular or upper triangular, whether it appears on the right or on the left, and finally, whether it's unit triangular or not unit triangular. Lots of different options. Lots of different algorithms. Lots of different PMEs, lots of loop invariants, lots of different algorithmic variants. Lots of homework exercises. But hopefully, you don't have to do all of those homework exercises just to get the gist of what we're after here. You've seen enough. OK? ",
                                        "unit_id":"4242f46ad02a4dcd939655eac4b045ed",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cd995e07fa264056920def609339e09a",
                                "vertical_name":"6.3.2 Triangular solve with multiple right-hand sides"
                            }
                        ]
                    },
                    {
                        "sequential_id":"b5e541d3e3d24f9a94a6966f197f38b8",
                        "sequential_name":"6.4 Enrichment",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Sparse matrices",
                                            "Software engineers",
                                            "Formal derivation",
                                            "Don",
                                            "Programming",
                                            "Apply"
                                        ],
                                        "data":" For those who yearn for more, further readings can be found at http://shpc.ices.utexas.edu/publications.html . Most can be accessed for free by clicking on the title of the paper on that webpage. When an undergraduate or graduate student shows interest in pursuing research with us, we ask them to read Robert A. van de Geijn and Enrique S. Quintana-Orti. The Science of Programming Matrix Computations. www.lulu.com, 2008. and some of the materials mentioned in Unit 5.5.2. After this, if they are still interested, they may be ready to pursue research. Now, this course provides that background. As one learns about formal derivation of algorithms, one starts to wonder... Can the techniques yield production quality libraries? Since scientific computing typically involves real valued data, stored in finite precision in the memory of a computer, what does correct mean anyway? The examples in the second part of this course seem to focus on dense matrix operations (dense matrices don't have enough known zeros to warrant taking advantage of them). Does the methodology apply to all such operations? Does it apply to operations with sparse matrices (which do have enough known zeros to warrant taking advantage of them)? Does it apply to operations that don't involve matrices or multidimensional arrays? Why haven't software engineers been programming using APIs like FLAME@lab all along? As you were doing the various homework assignments, you may have noticed systematic the approach is. Can it be automated? Spark on steriods? In this week's enrichments, we address some of these questions. But what we really hope is that you now see opportunities to take what you have learned in new directions. ",
                                        "unit_id":"aff91a1a5580483bbc0602a8199fbe57",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"269a9dbe61b94637b05186b4bcf286ae",
                                "vertical_name":"6.4.1 At the frontier and beyond..."
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Cholesky factorization",
                                            "Lu factorization",
                                            "Science",
                                            "Html",
                                            "Robert"
                                        ],
                                        "data":" In this course, we illustrate how algorithms can be represented in code using the FLAME@lab API for MATLAB. To attain high performance, one would need to instead use a language like C. An overview of how the techniques have been implmented in a practical library can be found in Field G. Van Zee, Ernie Chan, Robert A. van de Geijn, Enrique S. Quintana-Orti, Gregorio Quintana-Orti. The libflame Library for Dense Matrix Computations. IEEE Computing in Science and Engineering, Vol. 11, No 6, November/December 2009. A complete reference for the libflame library that has resulted is given in Field G. Van Zee. libflame: The Complete Reference. wwwlulu.com, 2009. We are funded by the National Science Foundation's Software Infrastructure for Sustained Innovation (SI2) program (most currently by Award ACI-1550493, which also partially funds this MOOC) to create a new linear algebra software stack. In addition, we receive funding from a number of partner companies, listed at http://shpc.ices.utexas.edu/sponsors.html . A video of Robert implementing the Cholesky factorization, an operation that is closely related to LU factorization, in C that illustrates the performance benefits of blocked algorithms can be found at http://www.cs.utexas.edu/users/flame/Movies.html#Chol (If you would like to try your hand at this, be warned that at this time we need to still check if the given links still work. In particular, the link to the GotoBLAS2 is out of date.) ",
                                        "unit_id":"c92877b908fb4ac48c54a6f4d4ff9868",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cb949277e61a41a09928d0555d592612",
                                "vertical_name":"6.4.2 Practical libraries"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Backward error analysis",
                                            "Floating point arithmetic",
                                            "Floating point numbers",
                                            "Matrix analysis",
                                            "Numerically stable",
                                            "Right hand side",
                                            "Roundoff error",
                                            "Numerical stability",
                                            "Computer sciences",
                                            "Small change",
                                            "Matrix",
                                            "Error",
                                            "Paper",
                                            "Journal",
                                            "Correct",
                                            "Dissertation",
                                            "Data",
                                            "Computer",
                                            "Result",
                                            "Computation",
                                            "Derivation",
                                            "Algorithm",
                                            "Solve",
                                            "Input",
                                            "Systematic",
                                            "Implementation"
                                        ],
                                        "data":" The problem with correctness for matrix algorithms is that in practice the data is real valued (stored as floating point numbers) and that the computation uses floating point arithmetic that introduces roundoff error when real valued numbers are approximated. A notion of correctness in the presence of roundoff error is that of numerical stability. A computer implementation of an algorithm (which incurs roundoff error) for computing a result is said to be numerically stable if it computes the exact result for a slightly changed (perturbed) input. The idea is that if the problem is such that a small change in the input yields a large change in the output, then the problem is inherently difficult to solve accurately and is then said to be ill-conditioned. It is only if the computed result cannot be linked to a slightly changed problem that the implementation has a serious concern. In this case, the implementation and/or algorithm is not correct in the presence of roundoff error. Let us illustrate this by considering the problem of solving A x = y where A and y are given and x is to be computed. When we solve this on a computer, we expect an inexact result to be computed because of roundoff error that accumulates as the computation proceeds. Let's call this result x ~ . Then A x ~ = y ~ , some alternative right-hand side. Now, it is easy to show that A ( x ~ &minus; x ) = y ~ &minus; y . Rather than focusing on whether x ~ is close to'' x (which it won't be if the problem of solving {\\em this} linear system is ill-conditioned), we instead ask whether x ~ is the solution to a nearby problem: Is y ~ close to'' y ? In practice the matrix and the right-hand side often involve measured data that is inexact. So, we would expect that y has some error in it anyway: even x then only solves a nearby problem. Thus, computing the solution to a nearby problem is the best we can hope for. If the problem is badly behaved, then a small change in the input ( y ~ ) could yield a large change in the output ( x ~ ) and hence one can't hope for a good solution, regardless of how correct'' our implementation is. To prove a matrix algorithm correct thus means that one must not only find a correct algorithm in the absence of roundoff error, but one must also then prove that the algorithm is numerically stable. Proving that an algorithm is numerically stable typically employs a technique known as backward error analysis.'' Fortunately, we have shown that for many matrix computations backward error analysis can be systematic much like the derivation of matrix algorithms was systematic. This involves what we call the error worksheet.'' Details can be found in the journal paper Paolo Bientinesi, Robert A. van de Geijn. Goal-Oriented and Modular Stability Analysis. Journal on Matrix Analysis and Applications Volume 32 Issue 1, February 2011. The material in that paper is based on the dissertation Paolo Bientinesi. Mechanical Derivation and Systematic Analysis of Correct Linear Algebra Algorithms. Ph.D. Dissertation. The University of Texas at Austin, Department of Computer Sciences. Aug. 2006. If you are interested, we recommend you instead read the technical report Paolo Bientinesi and Robert A. van de Geijn. The Science of Deriving Stability Analyses. FLAME Working Note \\#33. Aachen Institute for Computational Engineering Sciences, RWTH Aachen. TR AICES-2008-2. November 2008. which is very much like the journal paper, but includes exercises for the reader. ",
                                        "unit_id":"a0ccffee97cc4af1bd70eda030a0b8bb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"77b1edae1bca400e8d04e06638159116",
                                "vertical_name":"6.4.3 Correctness in the presence of roundoff error"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Primitive recursive functions",
                                            "Conjugate gradient method",
                                            "Computer science",
                                            "Scientific computing",
                                            "Recursive definition",
                                            "Machine learning",
                                            "Dense",
                                            "Method",
                                            "Matrix",
                                            "Definition"
                                        ],
                                        "data":" Computations with matrices and vectors are of great importance to scientific computing and domains like machine learning. While operations with dense matrices are important, so-called sparse matrix computations are more common. In preliminary work, we have extended the FLAME methodology to so-called Krylov subspace methods (including the Conjugate Gradient method): Victor Eijkhout, Paolo Bientinesi, Robert van de Geijn. Toward Mechanical Derivation of Krylov Solver Libraries. Procedia Computer Science, 1(1) 1805-1813, 2010 (Proceedings of ICCS2010.) For those who know about such methods, the trick is to view the vectors that are produced by the iteration as the columns of a matrix, as was advocated by Alston Householder in the 1960s. That matrix is dense, allowing a variation of the FLAME methodology to be applied. In Tze Meng Low. A Calculus of Loop Invariants for Dense Linear Algebra Optimization. Ph.D. Dissertation. The University of Texas at Austin, Department of Computer Science. December 2013. it is suggested that the FLAME methodology can be extended to the class of Primitive Recursive Functions (PRFs). Those familiar with recursion will have noticed that the PME is invariably a recursive definition of the operation and that the FLAME methodology transforms this definition into a family of loop-based algorithms. This makes the operations to which we have applied the FLAME methodology members of the class of PRFs. ",
                                        "unit_id":"f8ec3ca8e4e145c59031fc0bc1e9375f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"eaa8ae2eb8d948b5b5ecff2b7c8a0fcb",
                                "vertical_name":"6.4.4 Beyond dense linear algebra"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Finite number",
                                            "Matrix",
                                            "Eigenvalue"
                                        ],
                                        "data":" There are matrix operations for which the FLAME methodology will not yield loop-based algorithms. (Or, at least, not in a straight forward fashion.) It is well-known that, in general, there is no formula for solving the algebraic eigenvalue problem for larger matrices. (Given a matrix of size at least 5 &times; 5 there is no formula for finding the eigenvalues, except for special matrices.) Thus, we cannot expect a loop to be derived, via the FLAME methodology or otherwise, that computes these in a finite number of iterations. ",
                                        "unit_id":"eca98cff87b44d6a87387980a72dc888",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fb6b766f217c493d90efeaee10090889",
                                "vertical_name":"6.4.5 When the worksheet does not yield algorithms for matrix computations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Math induction",
                                            "Robert"
                                        ],
                                        "data":" You may enjoy the talk \"Weapons of Math Induction for the War on Error\" that Robert gave to the \"Programming Lunch\" at UT-Austin. However, this is a very long lecture (more than an hour.) You may just want to skip it, and go on to the video by Paolo. (That video is also shown in the lecture by Robert.) ",
                                        "unit_id":"1d479b843840458693bb5aeb5c1b5d36",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Linear algebra",
                                            "Doctoral students",
                                            "Positive definite",
                                            "Hand waving",
                                            "Lower triangular",
                                            "Triangular matrices",
                                            "Cholesky factorization",
                                            "Loop invariant",
                                            "Sylvester equation",
                                            "Expression",
                                            "Matrix",
                                            "System",
                                            "Mathematica",
                                            "Loop",
                                            "Operation",
                                            "Generate",
                                            "Automated",
                                            "Talking",
                                            "Robert",
                                            "Equation",
                                            "Output",
                                            "Methodology",
                                            "Bit",
                                            "Input"
                                        ],
                                        "data":" PAOLO BIENTINESI: Hello, I take it over from here. I want to show you that the methodology that Robert has been talking about can be fully automated. As a matter of fact, Robert mentioned several times that the whole methodology is fully prescribed. However, in his presentation, there was a little bit of a hand waving. And several times, he said that he would leave some details behind, hidden. Because they would be tedious and the formulas would become so large that they would not fit on the screen. And so first, when I was a PhD student, I started working on automation. And then, one of my doctoral students, Diego Fabregat, took over. And he really went ahead and took care of all the minute details. And he also included a good amount of numerical linear algebra-- sorry, of linear algebra rules, and put them into Mathematica. So now, let me show you that this system-- this is an interface that connects to a Mathematica server back in Germany. And as I said, this Mathematica server knows this FLAME methodology that Robert presented. And it knows also quite a bit of linear algebra. Let's see what we can do. If I-- since you have heard about the Cholesky factorization, let me go ahead and show how it can be automated. So there are two operands, one input and one output. L is an output. Sorry about that. And it's a matrix. And it's lower triangular. And then, we have a matrix A, which is an input matrix. And we know it's symmetric, positive definite. OK, the operation that we want to perform is L times L transpose. And we want that to equal A. So this is everything that the system needs to know. And in fact, this is everything that an expert would start with. OK. I ask, I press, OK. The equation, which is described by these precondition and post-condition has been shipped to a Mathematica server. The first step was to automatically generate a partition matrix expression. Here it is. As you can see, there is only one for this specific operation. And from this partition matrix expression, three loop invariants were identified. The first one is then translated, transformed into an algorithm. And as I loop over the loop invariants, the algorithm's implementation changes. And I want to show you that, if we click on Details, all those details that Robert was talking about-- so the loop invariant at the top of the loop-- sorry, before the loop, and then at the top of the loop, and then at the bottom of the loop. All these predicates are shown. And it's then from the difference between these two predicates that the updates are described. OK, so this is it for the Cholesky factorization. I want to show you that we can tackle significantly more involved equations. So I will talk about the Sylvester equation, Syl just to shorten Sylvester. OK, here, we have the four operands. We have a couple of triangular matrices. Let's call them A and B. Then, we have a general matrix and the unknown matrix. So A is, let's say, lower triangular. B, let's also set it as lower triangular. C is just a general matrix. And X is the output matrix. And the Sylvester equation is defined by this, AX plus XB equals C. Once again, this is all the knowledge that is necessary to specify the equation. And it's all the knowledge that the symbolic system takes as input. OK, the equation was a little bit more complicated. So it took a little bit longer. Here you go. This is the definition of the inputs, so the precondition and post-condition. Now, the important thing to notice is that we don't have only one partition matrix expression, but we have three of them. So one-- and for this one, we identify two loop invariants; second partition matrix expression, two more loop invariants; and then, third partition matrix expression, corresponding to a two by two partitioning of the matrix C and X. And for these we have, 16 loop invariants. And as we traverse, as we march through these loop invariants, you see that the algorithm is automatically updated. OK, to show what was going on under the cover, you see that these are the algorithms, loop invariants, and the PMEs that came from Mathematica server. Let's see if I go up, I think that this is that-- no. Yeah, this is still all the formulas. I wanted to show you the input, the expression, that was sent to-- here we go, yes. So this is what we sent to the Mathematica server, what we inputted. And then, all those pages, all this garbage right here, is the encoding of all these algorithms. And from the exact same encoding, we can either represent algorithms like these or generate C and Matlab code. OK, I'm going to stop with this and pass it over to Robert again. Thank you. ",
                                        "unit_id":"9cd5d73c46e4440592e4a1b8e8fa533e",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Computer algebra",
                                            "Computer sciences",
                                            "Technical report",
                                            "Matrix computations",
                                            "Computer science",
                                            "Control theory",
                                            "Mathematical software",
                                            "Scientific computing",
                                            "Computational science",
                                            "Systematic",
                                            "Worksheet",
                                            "Flame",
                                            "Note",
                                            "Science",
                                            "Dissertation",
                                            "Methodology",
                                            "Automation",
                                            "Analysis",
                                            "John"
                                        ],
                                        "data":" Computer scientists make knowledge systematic with automation as the ultimate goal. For many matrix computations, programming with the FLAME methodology is systematic. Can it be automated? The above video by Prof. Paolo Bientinesi demonstrates the Cl1ck tool (pronounce as \"One-Click\") mentioned later in this unit. (Unfortunately, the interface that is used in that video is not publicly available. Fortunately, Cl1ck is now written in Python.) The FLAME methodology was first published in John A. Gunnels, Fred G. Gustavson, Greg M. Henry, Robert A. van de Geijn. FLAME: Formal Linear Algebra Methods Environment. ACM Transactions on Mathematical Software (TOMS), 2001 and the dissertation John A. Gunnels. A Systematic Approach to the Design and Analysis of Linear Algebra Algorithms. Ph.D. Dissertation. FLAME Working Note \\#6, The University of Texas at Austin, Department of Computer Sciences. Technical Report TR-2001-44. Nov. 2001. The Worksheet'' to which you were introduced in Weeks 4-6 was first published in Paolo Bientinesi, John A. Gunnels, Margaret E. Myers, Enrique S. Quintana-Orti, Robert A. van de Geijn. The science of deriving dense linear algebra algorithms. ACM Transactions on Mathematical Software (TOMS), 2005. What the worksheet made obvious was that, on the one hand, the methodology had pedagogical potential and, on the other hand, it could be automated. A prototype was first published in Paolo Bientinesi, Sergey Kolos, and Robert A. van de Geijn. Automatic Derivation of Linear Algebra Algorithms with Application to Control Theory. PARA 2004, LNCS 3732, pp. 385--394, 2005. and became a major part of the dissertation Paolo Bientinesi. Mechanical Derivation and Systematic Analysis of Correct Linear Algebra Algorithms. Ph.D. Dissertation. The University of Texas at Austin, Department of Computer Sciences. Aug. 2006. More recently, how to automatically generate PMEs is described in Diego Fabregat-Traver and Paolo Bientinesi. Knowledge-Based Automatic Generation of Partitioned Matrix Expressions. Computer Algebra in Scientific Computing, Lecture Notes in Computer Science, Volume 6885, pp. 144-157, Springer, 2011. Technical report: http://hpac.rwth-aachen.de/aices/preprint/documents/AICES-2011-01-03.pdf . and how to then derive invariants in Diego Fabregat-Traver and Paolo Bientinesi. Automatic Generation of Loop-Invariants for Matrix Operations. Computational Science and its Applications, International Conference, pp. 82-92, IEEE Computer Society, 2011. Technical report: \\http://hpac.rwth-aachen.de/aices/preprint/documents/AICES-2011-02-01.pdf The complete automation of the methodology is the subject of Chapter 4 of Diego Fabregat-Traver. Knowledge-Based Automatic Generation of Linear Algebra Algorithms and Code. Dissertation. RWTH Aachen, April 2014. Technical report: \\http://arxiv.org/abs/1404.3406 The Cl1ck tool that resulted from this work can be downloaded from https://github.com/dfabregat/Cl1ck . There you will also find instructions and examples. ",
                                        "unit_id":"e6079cdcaf064dc1844ab9d3ddda7d05",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"10b3e7e76c974d62923c35ab7d0f633c",
                                "vertical_name":"6.4.6 If it is so systematic, can't we get a computer to do it?"
                            }
                        ]
                    },
                    {
                        "sequential_id":"35c56f5d65b3411a9c431f47eedbd716",
                        "sequential_name":"6.5 Wrap Up",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"2f9f4a1945654086a7d2f12ed789e70f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ed830d9e8527451a876bbedb833a70ee",
                                "vertical_name":"6.5.1 Additional exercises"
                            },
                            {
                                "units":[
                                    {
                                        "data":"",
                                        "unit_id":"a901fec5a79546a9a6ea2c42a40e6ecb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fd5f5c1f3a60478795c906087297e2ef",
                                "vertical_name":"6.5.2 Summary"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"92b48667261147869726292698c1e85b",
                "chapter_name":"Epilogue",
                "sequentials":[
                    {
                        "sequential_id":"a1bc0e63f7e74fc5bfc0644d0954e385",
                        "sequential_name":"We hope you enjoyed the course",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In the future, we hope to list pointers to further materials here. Stay tuned! ",
                                        "unit_id":"7c7a3efd40164c25b7ac011c61e7a391",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f6d618fcc48d4b99ad32d3554f1720e1",
                                "vertical_name":"Further Study"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Good thing",
                                            "Eyes open",
                                            "Apply"
                                        ],
                                        "data":" We hope you found this course useful. Its purpose is to make you think about programming for formally and systematically. It may have raised as many questions as it answered. When you are a researcher, this is a good thing! Now, keep your eyes open for opportunities to apply these or similar techniques to other domains. As you program, you may also notice that you consciously or subconsciously apply these techniques. Help spread the word about the course! One way to do so is to write a review on CourseTalk, at https://www.coursetalk.com/providers/edx/courses/laff-on-programming-for-correctness Reviews that are most helpful are those that describe the course, why it was valuable (or not) to you, and why you think it would (or would not) be valuable to someone who might be thinking of taking it. We hope to develop one more course, tentatively called \"Final LAFF On Programming for Performance\" that will build upon our experience developing high-performance linear algebra libraries. If we do, we look forward to having you as a participant again! ",
                                        "unit_id":"7b82dc3d5e9546b49be607a46e0d3a3e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b3971a3929704a6fb62f77303b19a119",
                                "vertical_name":"Feedback"
                            }
                        ]
                    }
                ]
            }
        ],
        "course_id":"course",
        "course_name":"LAFF \u2013 On Programming for Correctness"
    },
    {
        "course_chapters":[
            {
                "chapter_id":"0177b46d2e1e429184ecacf56dac864f",
                "chapter_name":"Getting started",
                "sequentials":[
                    {
                        "sequential_id":"407352f1729f4c7ca752a89aedeae57a",
                        "sequential_name":"Welcome to Calc001x",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Hello! Welcome to the Pre-University Calculus course. In this course you will learn about functions, equations, differentiation and integration. In this \"Getting started / Welcome\" section we start by introducing ourselves and ask you to introduce yourself as well. After that you will find more information about the course, you will learn how to enter your answers and how to use the edX platform. We hope you will have a great learning experience! The Calc001x Course Team: Bart, Fokko, Roelof, Wolter, Mijke, Pascal, Esm&eacute;e and Ingrid ",
                                        "unit_id":"da12886ab3d948e3ad1877c4da010d99",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4ff19ab0e4fc4d69b79bf56f344e9eaa",
                                "vertical_name":"Welcome to Pre-University Calculus"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Teaching assistants"
                                        ],
                                        "data":" In this video you will be introduced to your teachers and teaching assistants! ",
                                        "unit_id":"67ec80a2355e44278ec77375973ec886",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Applied physics",
                                            "World map",
                                            "Real life",
                                            "Mathematical concepts",
                                            "Teaching staff",
                                            "Sunny day",
                                            "Laguerre polynomials",
                                            "Teaching assistants",
                                            "Good luck",
                                            "Assistant professor",
                                            "Hypergeometric functions",
                                            "Algebraic geometry",
                                            "Mathematical analysis",
                                            "World wide",
                                            "Utrecht university",
                                            "Applied mathematics",
                                            "Delft",
                                            "University",
                                            "Mathematics",
                                            "Study",
                                            "Amsterdam",
                                            "Year",
                                            "Playing",
                                            "Phd"
                                        ],
                                        "data":" Hello! Before we start our pre-university Calculus course we would like to introduce the teaching staff to you. This is a course taught by teachers and students of the Delft University of Technology or as we call it the TU Delft. Let&rsquo;s first introduce the teachers: Hello! and Welcome to the course! My name is Bart van den Dries, I am one of the 4 teachers in this course. I obtained my PhD diploma in Algebraic Geometry at Utrecht University, where I also studied Physics and Mathematics. My favourite pastime is playing the violin. And I also like to cook. Hello, I am Fokko van de Bult. I received my PhD from the University of Amsterdam specializing in hypergeometric functions. You can think of those as very complicated extensions of the sine. After three years of research at Caltech in the US, I went back to Amsterdam and started to work here in Delft. Apart from math, I like sailing and playing the piano. Hello! My name is Roelof Koekoek. I received my PhD at the Delft University of Technology on the subject of generalisations of Laguerre polynomials. I like to play bridge and to ride my motorcycle on a sunny day! Hi! My name is Wolter Groenevelt and I am an assistant professor in Mathematics at TU Delft. I received my PhD in Mathematical Analysis and still do research in this area. I like basketball and playing guitar. In this course the Teaching Assistants are students of Applied Mathematics. Let&rsquo;s hear their introductions. Hi! My name is Mijke Carlier. I am a Master student of Applied Mathematics. I did my Bachelor study of Mathematics in Leiden. I like drawing and cooking. Hi there! My name is Pascal de Koster. I study both Applied Physics and Applied Mathematics in a combined Bachelor study. Beside my study I also like to do judo and jujitsu. Hi! My name is Esme&eacute; Vermolen. I am a first year Bachelor student of Applied Mathematics. I already finished a first year in econometrics, but decided that I prefer Mathematics. My hobbies are boxing and golfing. Finally I would like to introduce myself. My name is Ingrid Vos. I studied Applied Physics at the TU Delft. I like ballet. This course will cover the topics functions, equations, differentiation and integration. We will introduce each of the topics with a real life example. After this self-paced course you will be well prepared to start your university calculus course. You will learn to understand the mathematical concepts by watching the videos and you will get a lot of practice by doing the exercises. So now that we introduced ourselves, we would like you to introduce yourself as well. Please go to the tab, that says world wide class and fill in your introduction. Please tell us and your fellow classmates something about yourself! Which study are you going to start? Where are you going to study? What is your favourite pastime? If everybody introduces himself or herself, it will be shown on the world map and you can find fellow students from your region. Thank you very much for introducing yourself! And good luck with the course! ",
                                        "unit_id":"0218cef332474a01b7bdb99b04e4ef5b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f0647bf952794191b6b701ac78af7584",
                                "vertical_name":"Introduction video"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c7410f02d4164d39ab094d70339fc2f4",
                        "sequential_name":"World Wide Class",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "World map",
                                            "Location"
                                        ],
                                        "data":" Please introduce yourself to your fellow students using the form below. For location you can fill in the name of your country and city. Your submission will be presented on the world map (see next page). Please check if your submission is at least 20 characters long. Shorter submissions will result in a location error. ",
                                        "unit_id":"38c64abc69a94e7486f9d4d43846a68a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"acb5a8e9d3ed4ec18c5e6456bed29d30",
                                "vertical_name":"Introduce yourself"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "World map",
                                            "World"
                                        ],
                                        "data":" Ever imagined being with so many students from all over the world? :-) On the world map below you can see all introductions submitted by your fellow students. You can also see your own introduction in case you filled in the form on the previous page. ",
                                        "unit_id":"2c74cea8112949e59ae3c9972cbec7d8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"db9f182f7bfd4316b2a9afe7801a6901",
                                "vertical_name":"World Map"
                            }
                        ]
                    },
                    {
                        "sequential_id":"4247061a30a9457abc15cc735e3cb402",
                        "sequential_name":"Course overview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In this subsection you will find a lot of information about the course: Learning objectives Topics, release dates and deadlines Learning activities Grading and Certification ",
                                        "unit_id":"60373e819f7f40188ed49b92662af6fa",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"151eb690f13349ff8127c36b3b2aa5f8",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Elementary functions",
                                            "Logarithmic functions",
                                            "Trigonometric functions",
                                            "Rational functions",
                                            "Integration"
                                        ],
                                        "data":" By the end of the course, you will be able to: Manipulate elementary functions, like power functions, rational functions, polynomials, trigonometric functions, exponential and logarithmic functions. (Weeks 1 and 2) Solve equations and inequalities involving these elementary functions. (Weeks 3 and 4) Use the concept of differentiation and calculate the derivatives of compositions of elementary functions. (Week 5) Use the concept of integration and use some elementary integration techniques. (Week 6) ",
                                        "unit_id":"5e34f54f7f6146debd5deb4c959caa6b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7214f64160674d5eb7d6126d5256a1b1",
                                "vertical_name":"Main learning objectives"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Trigonometric functions",
                                            "Elementary functions",
                                            "Rational functions",
                                            "Exponential functions",
                                            "Mathematical modeling",
                                            "Square roots",
                                            "Fundamental theorem",
                                            "Differentiation",
                                            "Learn"
                                        ],
                                        "data":" Topics In week 1 you will be introduced to mathematical modeling and the role of functions to model real-world phenomena. You will learn what a function is and how to describe a function in text, graph, table and formula. You will learn the characteristics of polynomials, rational functions and power functions and their rules of calculation. In week 2 you will familiarize yourself with other elementary functions: trigonometric functions (sine, cosine and tangent) and exponential functions and their inverse: logarithms. In week 3 you will learn the role of equations in mathematical modeling. You will learn to solve equations involving polynomials, fractions and square roots. You will also learn general techniques to solve equations. In week 4 you will solve equations involving trigonometric functions (sine, cosine and tangent) and exponential functions and logarithms. You will also learn to solve inequalities and systems of equations. In week 5 you will be introduced to differentiation using speed and slope as an example. You will learn to calculate the derivative and practise with the rules of calculation. You will see applications of differentiation, especially to finding maxima and minima of functions. In week 6 you will be introduced to integration. You will learn the definition and the fundamental theorem of Calculus that relates differentiation and integration. You will also practise with the rules of calculation for integrals. Final Exam The course finishes with a final exam. Deadline The course has only 1 deadline: September 29, 2017, 23.30 hours UTC (Universal Time Coordinated). ",
                                        "unit_id":"37869b07480247b8ad1627fda0dba22b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4177979be866461bb2f03934669d6b5a",
                                "vertical_name":"Topics & deadline"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Teaching assistants",
                                            "Training sequence",
                                            "Teaching assistant",
                                            "Real world",
                                            "Share tips",
                                            "Discussion forum",
                                            "Explaining",
                                            "Graded",
                                            "Discussion",
                                            "Forum",
                                            "University"
                                        ],
                                        "data":" Every topic (functions, equations, differentiation and integration) starts with a video explaining the topic using a real world example as context. Every topic will have videos or text explaining the concept or definition. There will be graded exercises after the videos, so you can check if you understood. Every topic will have videos explaining the rules of calculation. There will be graded exercises after these videos, so you can apply these rules yourself. Every week a teaching assistant will solve a problem in a video. But be careful! The solution contains a mistake. It's up to you to catch the error! After each video you will find the Discussion icon, where you can ask questions and discuss the course content with your colleagues. These discussions are specific for the topics explained in the videos. There are a few rules for using the discussion forum. Be polite and considerate to your fellow students and to the teachers and teaching assistants. Search the forum, before you ask your question. Be specific. Give your posts clear titles and post them in the correct place (below the specific video/exercise). Share tips but don't give the answers to exercises or homework problems. For more information have a look at the discussion and collaboration guidelines Every week you can practise the content of that week in the training sequence to prepare for the homework. These exercises are not graded. Each week one of the teachers will give you a university preview of the mathematics that will be treated at university. Every week one of the teaching assistants will give a summary of the content of that week to help you prepare for the homework. The homework is a set of problems. These problems are graded and are part of your final score. ",
                                        "unit_id":"4398d05ea67f4e629e7d7aab69002424",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6ec7871321624d4c84b073e9a2d17c5e",
                                "vertical_name":"Learning activities"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Total score",
                                            "Training sequence",
                                            "Score",
                                            "Homework",
                                            "Calculated",
                                            "Final",
                                            "Percentage"
                                        ],
                                        "data":" This course contains three types of activities that contribute to the final grade: Exercises (12%) Homework (60%) Final exam (28%) The exercises are exercises that are given after videos to practice immediately with the content. The homework problems are positioned at the end of each week. The final exam is in week 7 and contains problems on all the topics. Every week also contains a training sequence. Those training questions are NOT graded. In the table below you see how many percent of the total score you can earn each week with the exercises and the homework and which percentage you can obtain with the final exam. Week 1 Week 2 Week 3 Week 4 Week 5 Week 6 Week 7 Total Exercises 2% 2% 2% 2% 2% 2% 12% Training 0% 0% 0% 0% 0% 0% Homework 10% 10% 10% 10% 10% 10% 60% Final exam 28% 28% 100% Your score will be calculated by multiplying your percentage of correct answers per item (for example exercises week 1: 90% correct) by the weight percentage in the table above (in the case of the example: 2%) and then adding all the items. The verified certificate is issued if your total score is 60% or more. These certificates will be issued on the week after the course ends. Your final grade will be your calculated score percentage. Please note that this course doesn't lead to any type of formal credit at TU Delft. ",
                                        "unit_id":"87cd174d167e433d8c407f5316e18ab3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"77a2a47052fc478383bf4898627d6017",
                                "vertical_name":"Grading & Certification"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Course notes: For every week, there will be course notes containing a short summary of the main topics. Calculators: You should be able to do the exercises without the help of a calculator (ordinary or graphic), unless stated otherwise. ",
                                        "unit_id":"06382553f41f45d1a32a51a6eac8b3a5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fae647baaa1e47db8fe6245a4631d99b",
                                "vertical_name":"Resources & Tools"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2618d5765e1a41988b465773069a797f",
                        "sequential_name":"* Student life",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Medical doctor",
                                            "Discussion forum",
                                            "Study"
                                        ],
                                        "data":" What is your dream in life? Do you want to become a scientist, engineer, medical doctor? What study are you going to do? And what study goals do you set for yourself to realize this dream? What are your study goals and how do you plan to achieve them? Please share them on the discussion forum. See if you can provide your fellow students with tips to help them achieve their goals! ",
                                        "unit_id":"4c022ca349b645d7b897155ac23e8616",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3a57b03105f34775bf25da9a2268a399",
                                "vertical_name":"Study goals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Computer science",
                                            "Electrical engineering"
                                        ],
                                        "data":" Are you interested in getting to know Delft and our Faculty of Electrical Engineering, Mathematics and Computer Science? Please watch the video below! ",
                                        "unit_id":"ae4e20b8b6c94aca8eeb39d0e566b384",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"088ee502ec5f43ed92b60104df953267",
                                "vertical_name":"Getting to know EEMCS"
                            }
                        ]
                    },
                    {
                        "sequential_id":"48175c8ca4334b24a60efd0b1b0e4abd",
                        "sequential_name":"Entering answers",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical expressions",
                                            "Mathematical expression",
                                            "Complete information",
                                            "Square root",
                                            "Ln",
                                            "Sin",
                                            "Entering",
                                            "Enter"
                                        ],
                                        "data":" In many exercises and homework problems, you will need to enter your answer as a mathematical expression. For example if the answer is 17, instead of entering the approximation 0.14 you should enter the exact answer 1/7. That's why it's very important to know how to enter a mathematical expression into the answer fields, before you start this course. Symbols and operators Your answer Enter Add a+b a+b Subtract a&minus;b a-b Multiply a&sdot;b a*b Divide ab a/b Square root a sqrt(a) Power ab a^b Cosine cos(a) cos(a) Sine sin(b) sin(b) Exponential ea exp(a) Natural logarithm ln(a) ln(a) Pi &pi; pi Complete the following (ungraded) exercises in order to get familiar with entering some of these mathematical expressions. For complete information about how to write mathematical expressions on the edX platform, have a look at the Entering Mathematical and Scientific Expressions in the edX Guide for Students. Still having problems? See our FAQ. ",
                                        "unit_id":"67084dfb1f0940f0ad79a68f8844d1c3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"31f1149685c544d9b63b014d27d00af1",
                                "vertical_name":"Entering answers the correct way"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rational numbers",
                                            "Positive integers",
                                            "Natural numbers",
                                            "Complex numbers",
                                            "Boundary points",
                                            "Real numbers",
                                            "Real number",
                                            "Number line",
                                            "Calculus",
                                            "Notation",
                                            "Infinity",
                                            "Starting",
                                            "Number",
                                            "Symbol",
                                            "Interval"
                                        ],
                                        "data":" Some common notations Mathematics is not just a set of tools with which you can calculate things, it is also a language in which you can make very precise statements about, for example, numbers. This language uses its own symbols and while we do not think you should be able to use them yourselves yet, you might encounter them a few times in this course and perhaps also in more advanced courses you take later. You can use this entry both as an introduction to the symbols, and as as a reference. The basic sets of numbers Depending on the context you would like to talk about all fractions, or just about integers. As such it is convenient to have a nice name and symbol for a few of the most common sets. N is the set of Natural numbers, that is all positive integers. Sometimes it does include zero and sometimes it does not; this depends on who uses it, so if it is important you should check that. Examples are 1, 13, and 23852. Z from the german word for numbers Zahl, is the set of all integers. Examples are -5, -53, and 78. Q is the set of all rational numbers, those numbers which are the Quotient of two integers (the denominator of which is nonzero). This includes all integers (as, for example, 5=51). Examples are &minus;73, 234159023, and 9. R is the set of all Real numbers, those numbers located on the number line. This includes the fractions, but many more numbers. Examples are 2, e2, and &pi;. C is the set of complex numbers, which you might not yet know. We have added the symbol here for completeness, and you can learn a bit about this new set of numbers in the University Preview of week 3. Intervals In calculus many of the sets we consider are intervals: sets which contain all real numbers in between their starting point and their ending point. An interval can either include or exclude its starting and ending points, and several different notations for this are in use in different sources. We use what we believe is the most common notation in American calculus books. (a,b) is the set of all x with a&lt;x&lt;b (thus excluding the boundary points). [a,b] is the set of all x with a&le;x&le;b (thus including the boundary points). (a,b] is the set all x with a&lt;x&le;b (thus only including b, but excluding a). Likewise we have [a,b). [a,&infin;) is the set of all x with a&le;x. The symbol &infin; denotes infinity: a quantity larger than any real number. Note that infinity is itself not a number, so it can not be included in an interval. Similarly we have (a,&infin;), (&minus;&infin;,b] and (&minus;&infin;,b). (&minus;&infin;,&infin;) is the set of all x (i.e. R). A set of just one number is also an interval, though a somewhat special one. We denote the set with just a by {a} (which is also [a,a]). Element of: &isin; One thing you want to say over and over again is a sentence like \"x is a real number'', or \"x is in the interval [&minus;2,4)'' (that is: \"&minus;2&le;x&lt;4\"). To abbreviate this statement we use the \"element of\"-symbol &isin;. Thus the above two sentences can be written as \"x&isin;R,'' respectively \"x&isin;[&minus;2,4).'' We can also say ''x is not an integer'' or \"x is not in the interval (&minus;&infin;,0).'' by striking through the \"element of''-symbol as follows: \"x&notin;Z'', respectively \"x&notin;(&minus;&infin;,0).'' ",
                                        "unit_id":"ab245bfb43fc49d788a4220b27d8cd30",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"34666c22d2204b66975f3b565267c0e0",
                                "vertical_name":"A word on notation"
                            }
                        ]
                    },
                    {
                        "sequential_id":"775483e963784811af1037d89da32b1f",
                        "sequential_name":"Using the edX platform",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "World map",
                                            "Discussion forum"
                                        ],
                                        "data":" Demo course By now you should already be familiar with the course structure, how to navigate, met your fellow students in the discussion forum and the world map, and practiced with some simple math input to get you ready for the exercises you'll find in the course. However, if this is your first course on edX or you want to refresh on how to use the platform, you can enroll in the edX demo course. Follow the link below to access this course: https://www.edx.org/course/demox-edx-demox-1 Getting Help If you need technical help using the edX platform, click on the &ldquo;Help&rdquo; tab, located on the top left corner of the browser screen. ",
                                        "unit_id":"21405e57fc984f588971993edf6b5e6f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b3f1da81b64945608a478fc7d5fec692",
                                "vertical_name":"Demo course & Getting help"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a2bb6eb58df44f8ca335c448f9638ab5",
                        "sequential_name":"Using the edX platform",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "World map",
                                            "Discussion forum"
                                        ],
                                        "data":" Demo course By now you should already be familiar with the course structure, how to navigate, met your fellow students in the discussion forum and the world map, and practiced with some simple math input to get you ready for the exercises you'll find in the course. However, if this is your first course on edX or you want to refresh on how to use the platform, you can enroll in the edX demo course. Follow the link below to access this course: https://www.edx.org/course/demox-edx-demox-1 Getting Help If you need technical help using the edX platform, click on the &ldquo;Help&rdquo; tab, located on the top left corner of the browser screen. ",
                                        "unit_id":"7d3974ea2ef44f5b9fae6150fe0d6047",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b16d5ecf8e7244429b8090d6892b1060",
                                "vertical_name":"Demo course & Getting help"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Encounter"
                                        ],
                                        "data":" If you encounter technical issues during the course, please have a look at the FAQ section. Some well-known issues are documented here. Did you encounter a problem that is not in the FAQ section? Please let us know! You can leave a post in the Discussion box below (press \"show discussion\" first). The course staff or eventually one of your peers will help you as soon as possible. ",
                                        "unit_id":"d0432d963f3a44669034e6a39886c483",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fe8ce3f4856e4702aaf1293bb7444c82",
                                "vertical_name":"Technical questions"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9c6cbc0f0fc44754a8a902a7dce9614c",
                        "sequential_name":"Pre-survey",
                        "verticals":[
                            {
                                "units":[],
                                "vertical_id":"d4c14bdb4d7b43cd8836f0fc6c9fa003",
                                "vertical_name":"Pre-survey"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"1ffc6bbf27d542c884f192d3f1c1dc77",
                "chapter_name":"Badges",
                "sequentials":[
                    {
                        "sequential_id":"293fb1d560f4430097db039ccb53dcdd",
                        "sequential_name":"Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Badge"
                                        ],
                                        "data":" Badges In this course you can earn the following badges: Week 1: Leibniz badge Week 2: Euler badge Week 3: Cardano badge Week 4: Gauss badge Week 5: Newton badge Week 6: Riemann badge In order to qualify for these badges you need to have a score of at least 75% on the homework of the corresponding week. ",
                                        "unit_id":"e1e346768798418685924e2cb489a288",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"274ab0fb21a2429aafa387ce39e36318",
                                "vertical_name":"Introduction"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"21d7e41d4e3943cea0229d8914c769a0",
                "chapter_name":"Week 1. Functions (part 1)",
                "sequentials":[
                    {
                        "sequential_id":"ae07805e57334a20896595038cccebe1",
                        "sequential_name":"1.1 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical modeling",
                                            "Taylor polynomials",
                                            "Rational functions",
                                            "University"
                                        ],
                                        "data":" WELCOME TO FUNCTIONS - PART 1 This week the topic is Functions. First we will look at the role of functions in mathematical modeling using the Nuna solar car as an example. You will learn the definition of a function, as well as properties like domain, range and continuity. This week we will look at the properties of polynomial functions, rational functions and power functions. You will learn the rules of calculation for these functions and practice a lot! We finish this week with a university preview on Taylor polynomials to give you a flavor of the mathematics you might encounter at university. The student life topic of this week is planning. We help you and encourage you to make a planning for this course! ",
                                        "unit_id":"137f3e552bf64901b7cc0e4c55f42955",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"358c9c56aa1c4f7eb637d63419476607",
                                "vertical_name":"Welcome to week 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Mathematical modeling"
                                        ],
                                        "data":" What is the role of functions in mathematical modeling? Watch the video! ",
                                        "unit_id":"2dd85c78f2324c7f889bf4e61beadae9",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "World solar challenge",
                                            "World championship",
                                            "Solar power",
                                            "Solar cars",
                                            "Solar cells",
                                            "Electrical power",
                                            "Power source",
                                            "Mathematical modeling",
                                            "Mathematical functions",
                                            "Mathematical model",
                                            "Weather conditions",
                                            "Air friction",
                                            "Trigonometric functions",
                                            "Long distance",
                                            "Exponential functions",
                                            "Solar car",
                                            "Building blocks",
                                            "Loss",
                                            "Power",
                                            "Energy",
                                            "Solving",
                                            "Challenge",
                                            "Model",
                                            "Start",
                                            "Car",
                                            "Speed",
                                            "Roll",
                                            "Cycle",
                                            "Calculus",
                                            "Building",
                                            "Function"
                                        ],
                                        "data":" Hello! Welcome to the first week of the Pre-University Calculus course! Do you remember this from our course promotion video? The World Solar Challenge. A race for cars using only solar power to cross Australia. Racing three thousand kilometers from Darwin to Adelaide. Students of the Delft University of Technology built the Nuna7 and won this world championship of Solar cars. How are mathematics like Calculus, important to building a winning car? The students of the Nuon Solar team have a clear challenge: Design a solar car that can drive the long distance as fast as possible, using only the sun as a power source. This is what we would call a real-world problem. In terms of energy: you want to build a car that maximizes power input and minimizes power loss. The first step with such a problem or challenge is analysis: You try to break down the question in smaller and more specific questions, like: how much power can you harvest from the sun? What is the influence of power losses like air friction, roll friction and battery loss? Here starts the modeling cycle that is used in science, design and engineering. You have a real-world problem and you try to formulate it in terms of a mathematical model. A mathematical model describes the relation between the different parameters that are of influence in this real-world problem. Such relations are described by mathematical functions. Just a small example of such relations. The power input of the Nuna car is described by a function relating the efficiency of the solar cells, the area of solar cells, the height of the sun and other quantities. Power loss depends on roll and air friction, which both depend on speed and other parameters, and loss of electrical power. Once you modeled your problem in terms of functions, you can start making calculations. This often involves solving equations. In particular if you try to find an optimal situation. For example: what is the highest speed the Nuna car can attain given certain weather conditions? After solving the mathematical questions, you have to interpret the results to predict how a design or phenomenon will work in real-life. And, ultimately, you will have to test your predictions and see whether they are correct, or whether you need another or more refined model. This cycle of mathematical modeling is used in medicine, economics, science and engineering to tackle real world problems. Think of questions like: What is the optimum dose for this medicine? How can you maximize the profit of your company? How can you design a thrilling roller coaster ride? How can you reduce energy consumption? In particular, it shows how important it is to have a thorough understanding of mathematics if you want to be a scientist or engineer. This starts with understanding of the building blocks of any model: mathematical functions. In first two weeks of this course we will review the standard functions like polynomials, exponential functions and trigonometric functions. You will have lots of opportunity to practice with these functions, their properties and their applications. Have fun! ",
                                        "unit_id":"7909b622dce34b27817fec3311f94882",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"0e749eb2fc374af19e5e2cb3045ee8d6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f37212804edc41d39907a1f29d5839dc",
                                "vertical_name":"Video: Context"
                            }
                        ]
                    },
                    {
                        "sequential_id":"84aa2fc22485422484d4cb9d4513701a",
                        "sequential_name":"1.2 Functions in general",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" What is a function? After watching this video you will know the definition of a function, domain and codomain. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"11abddad79e341759c271ce9e5eb7de7",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Real numbers",
                                            "Trigonometric functions",
                                            "Exponential functions",
                                            "Computer program",
                                            "Elijah wood",
                                            "Real number",
                                            "Movie actors",
                                            "Abstract machine",
                                            "Program",
                                            "Number",
                                            "Actor",
                                            "Database",
                                            "Movie",
                                            "Square",
                                            "Question",
                                            "Abstract",
                                            "Describe",
                                            "End",
                                            "Case",
                                            "Machine",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! In the context video, you saw that functions are the tools to describe dependencies between quantities and to model reality . You probably already know a lot of examples of functionslike polynomial functions, trigonometric functions, exponential functions, etcetera. In the next two weeks, we will look at all those specific types of functions and review their properties. But first, let&rsquo;s set the stage by asking a simple, yet important, question. What is a function? In short: a function is a rule that relates two given sets to each object of one set, it associates precisely one object from the other set. It is quite illustrative to think of a function as a machine: it accepts certain inputs , and depending on what you put in, something comes out. This is quite abstract, so let's look at a concrete setting. Suppose you have some database that contains movie actors and the movies they had a role in. Think of the Internet Movie Database. It is possible to write a computer program that takes an actor&rsquo;s name as input , searches the database, and produces the movies that this actor was in. Although this gives a relation between the two sets, this is not a function. A function should have one output per input, but most actors played in more than one movie . For example, Elijah Wood was in Back to the future II and The Fellowship of the ring. However, we can change the program to produce only the first movie featuring the given actor. In case of Elijah Wood, this would be Back to the future II. Now, this computer program defines a function! Again, you can look at this program as an abstract machine that takes an element of the set of actor names as input, and then associates to that name exactly one element in the set of movie titles, namely the actor&rsquo;s first movie. We say that this is a function from the set of actor names, to the set of movie titles. To be more precise, a function consists of the following data &bull; a set of possible inputs. In this case: &ldquo;actor names&rdquo;. This is called the domain of the function. &bull; a set in which the outputs end up. In this case &ldquo;movie titles&rdquo;. This is called the codomain of the function. &bull; a rule that associates to every element in the first set, an element in the second set. In this case &ldquo;take the first movie this actor was in&rdquo; We will deal with the concepts of domain and codomain in more detail in section 1.6. Now, you may complain that this example has very little to do with calculus. And indeed, in this course we will restrict to functions that send real numbers to real numbers. You are probably already used to think of functions in that way. But it still helps to use the picture of functions as machines. For example, take the &ldquo;square&rdquo; function; it is a machine that accepts any real number as inputfor example 3, and produces its square, in this case 9, which is again a real number. In this case, both domain and codomain are the set of real numbers. To summarize: you can view a function as a machine that gives a relation between two sets. But remember: each input of a function should produce exactly one output. We have seen it in the context of actors and movies. In the context of calculus it simply means: if you put one number in, you cannot get multiple numbers out. Now we have seen what a function is , the next natural question is: how to describe a function? This will be the subject of the upcoming video! ",
                                        "unit_id":"2a4b9abb36a6446bb7a06e52b85851fc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"089b2666c870416496ca47d996fe3f74",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e8b3cda129274138b662cf7fdb7bfcbf",
                                "vertical_name":"Video: What is a function?"
                            },
                            {
                                "units":[],
                                "vertical_id":"89cf47421a2d443a94a6dc63dd426af4",
                                "vertical_name":"Identify the functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" How to describe a function? You can describe a function in words, as a graph, a table and a formula. Watch the video! ",
                                        "unit_id":"429ec801f04841369cabc45e46ca4cbc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Real line",
                                            "Vertical displacement",
                                            "World population",
                                            "Car racing",
                                            "Hard time",
                                            "Square function",
                                            "Find",
                                            "Sense",
                                            "Represent",
                                            "Square",
                                            "Time",
                                            "Lap",
                                            "Hard",
                                            "Standard",
                                            "Description",
                                            "Variable",
                                            "Summarize",
                                            "Clear",
                                            "Make",
                                            "Incomplete",
                                            "Output",
                                            "Behavior",
                                            "Input",
                                            "Number",
                                            "Table",
                                            "Function",
                                            "Graph",
                                            "Formula"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back! In the previous video we pictured functions as machines that produce a certain output, given an input. Remember that we only consider functions that send numbers to numbers. A natural question is: given a function, how to describe what it does to the possible inputs? The most common way to do this is by means of a formula. Take for example the square function, that sends any number to its square. I guess you know how to describe this function by a formula If we represent the input by the symbol x, then the output is x^2. We call x the variable, and x^2 is the formula that describes the function. How to denote such a function? First we have to give the function a name. A standard name is &ldquo;f&rdquo;, One way to denote this function is &ldquo;f colon x to x squared&rdquo;. Here f denotes the function name, x is the variable denoting the input, and x^2 is the formula that describes the output. Another common way to denote the function is by writing f(x)=x^2. Sometimes you may even hear &ldquo;the function x^2&rdquo;, although this is a bit sloppy. The power of a description in terms of a formula is that it is clear what the function does for all possible inputs. But there are also drawbacks. For functions that arise in practice it is often difficult, impossible or senseless to give a describing formula. Just a simple examplethink of car racing on a track. For every lap you can measure its lap time and put it in a table. This table then completely describes the function that associates to each lap number its corresponding time. You can try to find a formula for this, but this makes little sense. The table contains all information. A table is a convenient way to summarize dependence between quantities obtained from measurement data. For example, if you measure the world population every 5 years, from 1990 to 2010, this can be nicely summarized in a table. The problem is that you can only adopt finitely many possible inputs. More explicitly, think again of the square function You can make a table for this function, adopting a number of possible input values and corresponding output values, but this table does not make clear what happens for other input values It is a very incomplete description of the function. This problem is partially solved by another common way to represent functions by means of a graph. You have probably already seen a lot of graphs in your life, but for completeness, let me remind you how a graph corresponds to a function: the points on horizontal axis represent the input values. If you pick one, then the corresponding output value is the vertical displacement from that point to the graph. For example, we see from the graph that f(1) equals -3. In a graph, you can represent much more information on a function than in a table. Of course, you cannot make a graph for the whole real line. But often you do not need the full real line to capture the interesting behavior of a function. Another advantage of a graph is that it clearly shows properties of the function like: where is it increasing or decreasing, where does it change rapidly, where slowly and where are the extrema. You can get this information from a formula or a table as well, but you may have to do a lot of work. For example, I can give you the formula for this particular graph, but you may have a hard time to determine the function&rsquo;s behavior from this formula. In a graph, you can just see it! However, a drawback of graphs over formulas or tables is that it is hard to find exact values. Finally, a way to describe a function is just in words. For example, let us consider the socalled floor-function. If I want to explain to you what it is, I can write a formula. In this case, it does not tell you anything, unless you know what is meant. I can give a table with some input and output values or give a graph, but they are both incomplete. It may still be unclear what the function does. This may become much clearer if I tell you in words what it doesputting a number x into the floor-functions gives you the largest integer smaller than or equal to x. I hope that now the graph and the table make sense. The formula that I wrote is simply a special notation for this function. Let me summarize. We have seen four ways to describe a function: by means of a formula, a table, a graph and in words. It is very useful and important to be able to switch between these four ways to describe a function. Especially when it comes to the standard functions that we deal with in this course, do not only focus on the formula and its properties, but make sure you also know what the graph looks like, that you can read tables and that you can describe the behavior and properties of the function in words! End of transcript. Skip to the start. ",
                                        "unit_id":"629ca42a1f7c474fb8b623d8397a015d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"ad4c1b9db8334e148aa59babdfb089f4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"755eaf9af63341ce8134c51068d09c67",
                                "vertical_name":"Video: How to describe a function?"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Blue dot",
                                            "Function"
                                        ],
                                        "data":" MORE ON FORMULAS AND GRAPHS In the previous video you saw four ways to describe a function: by a formula, by a table, by a graph and in words. It is useful to be able to translate from one type of description to another. You can practice this in the exercise below. Before you start, read the following two remarks! 1. Sometimes, it is more convenient to describe a function by several formulas instead of one. For example, consider the absolute value function abs(x). If you want to describe what it does, it is convenient to distinguish between x&lt;0 and x&ge;0: abs(x)={x for x&ge;0&minus;x for x&lt;0 Note: although we need two formulas, this is one function! 2. When drawing a graph, you sometimes want to indicate explicitly that a certain point is not part of the graph. A common way to do this is to use an open circle. For example, consider the function f that is 1 for all non-zero x, and 2 if x is 0. The graph would look like this: The open circle indicates that the line does not continue there, but jumps to y=2. This value is indicated by the blue dot. ",
                                        "unit_id":"73928ba996464343a33bf73762ef15ec",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7e95ad1fe9044d6782fd1bd1ebc97312",
                                "vertical_name":"Formula, graph, table, words"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Vertical line test",
                                            "Function"
                                        ],
                                        "data":" more on graphs: The vertical Line Test Not every curve in the plane is the graph of a function. We have seen that for a function, there should be only one output per input. So for a given x, there can be at most one y such that the point (x,y) lies on the graph of the function. But, for example, for a circle this is not true. Indeed, for some values of x, there are two y-values such that (x,y) lies on the circle. So a circle cannot be the graph of one function In fact the following holds: a curve in the plane is the graph of a function precisely if every vertical line intersects the figure in at most one point. This is sometimes called the vertical line test. You can use it to see whether a figure in the plane is the graph of a function. Use the vertical line test in the exercise below! ",
                                        "unit_id":"2a003fc108df4eb696b6c7ded5e46ac1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"39d48346d7de4565b9797a5e9bbb4fb4",
                                "vertical_name":"More on graphs"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0c319a4ef83e476591339e1a6a924f82",
                        "sequential_name":"1.3 Polynomials",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Polynomial function",
                                            "Function",
                                            "Polynomial"
                                        ],
                                        "data":" What is a polynomial function? A polynomial function is a function that can be constructed from a variable and a set of numbers, using only addition and multiplication. Learn more about polynomials by watching the video! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"a3c15d1dd0cb4a69b7a6395f968878fd",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Mathematical operations",
                                            "Positive integers",
                                            "Relative difference",
                                            "Square roots",
                                            "Standard form",
                                            "Power function",
                                            "Low power",
                                            "Polynomial function",
                                            "Real number",
                                            "Finally",
                                            "Add",
                                            "Power",
                                            "Standard",
                                            "Function",
                                            "Polynomial",
                                            "Simplify",
                                            "Low",
                                            "Evaluate",
                                            "Number",
                                            "Multiplication",
                                            "Expression",
                                            "Calculator",
                                            "Degree",
                                            "Term"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! You probably know calculators like this one. If you look at the buttons, you see that it can evaluate a lot of the functions that you are familiar with. But if you zoom in on the electronics behind these buttons, you will find that at a very elementary level it can only perform two mathematical operations exactly: addition and multiplication. This may seem very limited, but using only these, there is already a large class of functions that you can construct: the so-called polynomial functions. To be more precise, polynomial functions are functions that can be constructed from a variable and a set of numbers, using only addition and multiplication. Let us look at an example. Suppose our function takes x as input. We can raise it to the fifth power, since this is just repeated multiplication, then add -1 multiply by 2x+3, and finally add 1/2 times x This is an example of a polynomial function. The expression that defines the function is called a polynomial. The expression looks a bit messy. There is a standard way to simplify polynomials. How does this work? First, get rid of the brackets by expanding the product. Remember how to do this: you take all possible products of terms in the first factor with the terms in the second factor and add those products. So in this case, you get four terms from the expansion, and the term &frac12; x was already there. After this, combine the terms with the same power of x. Finally, make sure that the terms are ordered from highest power to lowest power. This is already the case in the last expression. The final expression that we found is called the standard form of this polynomial. In general, the standard form of a polynomial looks like this: a sum of terms, and each term is a product of a number and x raised to some integer power. The terms are ordered from high power to low. Note that the powers of x are positive integers; division by x is not allowed. The a&rsquo;s are called the coefficients. These coefficients can also be negative and can also be fractions. In fact, they can be any real number. A polynomial can always be put into standard form by following the simplification procedure that I sketched earlier: get rid of brackets, gather the terms with the same power of x, and order the terms from high power to low power. An important property of a polynomial is its degree. It is defined as the highest power that occurs in standard form. Be aware, you have to look at the standard form! For example, the expression on the screen is a polynomial that is not in standard form. What is it&rsquo;s degree? You might say &ldquo;6&rdquo;, since that&rsquo;s the highest power, but that is not correct! First rewrite it to standard form. If you simplify, you find that the terms containing x^6 cancel. The highest occurring power is 5, so that is the degree . I invite you to check the calculation yourself. Why is the degree important? One answer is that it provides information about the behavior of a polynomial function when x becomes large. For example consider the polynomial function p(x)= 2x^3+8x^2-13x. You can see in the table that as x grows larger, the first term grows the fastest. For x very large, the first term will be much larger than the other terms. So then the function roughly behaves as 2 times x^3, which is a power function. That is, the relative difference becomes very small. In a similar way, when x becomes much smaller than 0, the relative difference between p(x) and 2x^3 also becomes very small. In general we have the following: given some polynomial function of degree n, then for x-values much larger than zero or much smaller than 0, it will be roughly equal to the power function a_n times x^n. The exponent of this power function is precisely the degree of the polynomial. In the next video, you will learn more about the relation between the degree of a polynomial and its behavior. Let me end with a final remark on the calculator that I started with. Given the basic mathematical operations that it can perform - addition and multiplication - it follows that a calculator is very good at evaluating polynomial functions. But most calculators can do much more: there are buttons for sine and cosine, logarithms, square roots, etcetera. How can a calculator evaluate those? The answer is: it cannot! But using polynomials, these functions can be approximated. More about that in the university preview video of this week! End of transcript. Skip to the start. ",
                                        "unit_id":"e1850168e37d43b28782c12dbcd68d5f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"6cd75470bd61479db381c557aaf83131",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"66bdd9c1195743fd93759817ecbe7d5d",
                                "vertical_name":"Video: Polynomial functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"3fc3eedb805d4f88b6a28ff863bc0844",
                                "vertical_name":"Exercises: Standard form and degree"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polynomial"
                                        ],
                                        "data":" The graphs of polynomial functions have certain characteristics depending on the degree of the polynomial. Watch the video! ",
                                        "unit_id":"d466052074fa422b856788167cb648f1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Golden gate bridge",
                                            "Suspension bridge",
                                            "Quadratic functions",
                                            "Linear functions",
                                            "Horizontal axis",
                                            "Vertical line",
                                            "San francisco",
                                            "Vertical axis",
                                            "Good luck",
                                            "Straight line",
                                            "Constant term",
                                            "Quadratic function",
                                            "Standard form",
                                            "Linear function",
                                            "Intersection point",
                                            "Polynomial function",
                                            "Higher degree",
                                            " ",
                                            "Linear",
                                            "Called",
                                            "Polynomial",
                                            "Form",
                                            "Function",
                                            "Equal",
                                            "Y intercept",
                                            "Point",
                                            "Clear",
                                            "Parabola",
                                            "Higher",
                                            "Vertex",
                                            "Degree",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back! In this video, we will focus on the shape of graphs of polynomial functions. In practice you will most often work with polynomials of degree 2 and lower. Let us look at those separately. The easiest non-zero polynomial functions are those of degree 0. Is that possible? Yes! We can write these functions as f(x)=a x^0. Now remember that x^0 is equal to 1, so these are just constant functions. The graphs of these functions are simply horizontal lines. Let&rsquo;s make this a little bit more exciting by passing to degree 1. Degree 1 polynomials have the form f(x)=a x+b, where \"a\" and \"b\" are constant numbers, and \"a\" is nonzero. The graph of a degree one polynomial function is a straight line. That is why these functions are also called linear functions. By the way, also constant functions are examples of linear functions. If you consider the graph, the coefficients \"a\" and \"b\" actually have a meaning: &ldquo;a&rdquo; represents the increase of the function value if x increases by 1. As such, it is a measure for the steepness of the graph, called the slope. &ldquo;b&rdquo; is precisely the height of the intersection point of the graph and the vertical axis. It is called the y-intercept. For example, let&rsquo;s look at the graph of the linear function f(x)=-&frac12; x + 2. Indeed you see from the graph that the slope is -&frac12;, and the y-intercept equals 2. It is surprising how many dependencies between everyday quantities can be modelled by linear functions. You will see examples of such dependencies in the exercises. Ok, let&rsquo;s go one degree up, to functions of degree 2. These functions are called quadratic functions. Quadratic functions also occur in many applications. For example, if you throw a ball, both the height as function of time and the trajectory of the ball can be well described by a quadratic function. A very different example is a suspension bridge, such as the Golden Gate bridge in San Francisco. If the cables are much lighter than the deck they carry, the shape of the cables between the pillars can be approximated by a quadratic function. The standard form of a quadratic function is f(x) = ax^2 + bx + c, where a, b and c are numbers. Let&rsquo;s have a look at the graph of such functions. The shape of the graph of any quadratic function is a parabola. It has precisely one extremum, called the vertex, and it is symmetric in the vertical line through this vertex. The relation between the coefficients a, b and c of the polynomial on the one hand, and the shape of the graph on the other hand, is not as clear as in the case of linear functions. However, we can at least say the following: \"a\" is a measure for the wideness and orientation of the parabola: if \"a\" is positive, the parabola opens upward, if it is negative, it opens downward. Also, the closer &ldquo;a&rdquo; to zero, the wider the parabola is. Furthermore the x-coordinate of the vertex of the parabola is located at x= -b/2a. And finally, c gives the y-intercept of the graph. Let me show you an example: f(x) equals &frac12; x^2 -3x + 5/2. Indeed, you see that the graph opens upward, the x-coordinate of the vertex equals -b/2a, and the y-intercept equals the constant term. As we mentioned, you can write any polynomial in standard form. But when it comes to quadratic polynomials, there are at least two other forms that are also very useful. The first is the factorized form: a(x-p)(x-q), where a, p and q are numbers. The advantage of this form is that it tells you a lot about the shape of the graph: &ldquo;a&rdquo; gives information about the wideness of the parabola, and whether it opens upward or downward, just as before. p and q, are precisely the x-coordinates of intersection points with the horizontal axis. The polynomial function in our example can be rewritten as &frac12; (x-1) (x-5). And indeed, you see that the graph intersects the horizontal axis in x=1 and x=5. Another common form is the complete square form: a(x-r)^2 + s, where a, r, s are numbers. Here &ldquo;a&rdquo; plays the same role as before. But also r and s, have clear interpretation: they are the x and y coordinate of the vertex! Our example polynomial can also be written in this form: &frac12;(x-3)^2 -2. And indeed, you see that the vertex is located at (3, -2). What about polynomial functions of higher degree? Of course, there is always a relation between the coefficients and the shape of the graph, but this relation becomes more complicated and obscure the higher the degree gets. We can say some general things though. It turns out that the degree is a measure of how complicated a polynomial function and its graph can be. In fact, the following is true: if you look at the graph of a polynomial function of degree n, then it will intersect the horizontal axis in n points or fewer. The only exception is the polynomial which is constantly equal to zero. For example, the graph of a degree 4 polynomial function may intersect the horizontal axis in 4 points or in less than 4 points, but never more than 4. Intuitively, you can think of it as follows: the higher the degree, the more &ldquo;wobbly&rdquo; the graph may look. Since you will encounter polynomial functions in many contexts, especially linear and quadratic functions, it is important to get a feeling for the relation between a polynomial and the shape of its graph. The exercises that follow this video will give you the opportunity to practice this. Good luck! End of transcript. Skip to the start. ",
                                        "unit_id":"14e6688abe274b3d80b14cb2d83f25cc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"09f3bb5d53cb4020acd1b59e6ebb9cfe",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"29ef2b795f084e84b9495942cf867c44",
                                "vertical_name":"Video: The graph of a polynomial function"
                            },
                            {
                                "units":[],
                                "vertical_id":"b3070b4df0294952bcc38627b086f03a",
                                "vertical_name":"Graphs of polynomial functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Right hand side",
                                            "Minus sign",
                                            "Complete",
                                            "Form",
                                            "Square",
                                            "Area",
                                            "Part",
                                            "Piece",
                                            "Side"
                                        ],
                                        "data":" MORE ON THE COMPLETE SQUARE FORM In the second video we mentioned that every quadratic polynomial ax2+bx+c can be written in the form a(x&minus;r)2+s. The latter is called the \"complete square\" form. Where does that name come from? For simplicity of the argument, let us assume that a=1. We can interpret the standard form x2+bx+c as sum of area's of three pieces: a square with side x, a rectangle with sides x and b and a piece of area c. Now, we can split the second piece in half and glue the pieces to the first square. The sum of areas remains the same. We get an \"incomplete square\" and the remaining piece of area c. Finally, we can \"complete the square\" by taking a part of the yellow piece. Again, the total area remains the same. Now: the first piece is a square with side x+12b. The remaining part has area c&minus;(12b)2. Since in the first and last picture the total area is the same, we obtain: x2+bx+c=(x+12b)2+c&minus;14b2 The right-hand side is precisely the complete square form a(x&minus;r)2+s with a=1,r=&minus;12b (note the minus sign), and s=c&minus;14b2 ! ",
                                        "unit_id":"8640d7e728a745ea87992fceda0076c8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"57317c940f9e43e4890525f4535d8879",
                                "vertical_name":"More on the complete square form"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Quadratic function",
                                            "Quadratic polynomial",
                                            "Educated guess",
                                            "Polynomial function",
                                            "Form",
                                            "Polynomial",
                                            "Solving",
                                            "Factored"
                                        ],
                                        "data":" HOW TO FACTORIZE A QUADRATIC FUNCTION? In the video on graphs of polynomial functions, we showed the factorized form, also called factored form, of a quadratic polynomial: a(x&minus;p)(x&minus;q). We also showed that given this form, it is very easy to find the zeros of the polynomial function: they are simply x=p and x=q! This comes in very handy when you are solving quadratic equations. More about that in week 3 of the course. But if you have a quadratic function that is in standard form ax2+bx+c, how to factor it? In general, it is not easy without actually solving the equation ax2+bx+c=0 to find p and q. However, in some cases you can find a factorization by making an educated guess. For example, suppose we want to find p and q such that 2x2&minus;8x+6=a(x&minus;p)(x&minus;q). Let's rewrite both sides: 2(x2&minus;4x+3)=a(x2&minus;(p+q)x+pq). Both sides are equal precisely if a=2, p+q=4 and pq=3. If you think about it, it is easy to see that p=1 and q=3 will do. So we find: 2x2&minus;8x+6=2(x&minus;1)(x&minus;3). In general, factoring ax2+bx+c to a(x&minus;p)(x&minus;q) amounts to solving: p+q=&minus;ba and p&sdot;q=ca. In some cases, this can be done easily by inspection. One final remark: not every quadratic polynomial can be factored! For example, consider the polynomial x2&minus;2x+2. If we could write it as a(x&minus;p)(x&minus;q), then p and q would be zeros. But if you look at the graph, you see that it does not intersect the x-axis! So this polynomial cannot be factored. ",
                                        "unit_id":"7ea9843722a841ffa01abd3364ac3a62",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a2f681bd153945629d4759e54b714412",
                                "vertical_name":"More on the factorized form"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Arrow keys"
                                        ],
                                        "data":" Interactive Exercise: Find the line through two points Determine the equation y=ax+b of the line which runs through the two given points. You can use the sliders to adjust a and b. To adjust them more precisely you can use the arrow keys on your keyboard after selecting a slider. What is more convenient: trying to get a correct first, or to get b correct first? This interactive exercise is powered by GeoGebra: www.geogebra.org ",
                                        "unit_id":"f5d95dc37a614c8b840ac2f8da2929a7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5dbb4ae6a2784f88975ac97a303722d3",
                                "vertical_name":"Interactive exercise"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Quadratic function",
                                            "Arrow keys",
                                            "Polynomial"
                                        ],
                                        "data":" Interactive exercise: The graph of a quadratic function In the applet below you can plot the graph of an arbitrary second degree polynomial. You can use the sliders to change the coefficients of the polynomial. After selecting a slider you can also move it using the arrow keys. This interactive exercise is powered by GeoGebra: www.geogebra.org ",
                                        "unit_id":"9906a6539cf74614b810d7e9953aa65a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d4cfe9ea666e42a7a7ae722b24f05153",
                                "vertical_name":"Interactive exercise"
                            }
                        ]
                    },
                    {
                        "sequential_id":"10095695f4a64e708ad4c1fff9de6d3d",
                        "sequential_name":"1.4 Rational functions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Rational function",
                                            "Function"
                                        ],
                                        "data":" What is a rational function? A rational function is a function that can be constructed from a variable and a set of numbers, using addition, multiplication and division. Watch the video to learn more! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"7b8e665a833a4ba1bc032d69ed531ef3",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Rational functions",
                                            "Good luck",
                                            "Horizontal asymptotes",
                                            "Vertical asymptotes",
                                            "Average speed",
                                            "Rational function",
                                            "Horizontal asymptote",
                                            "Vertical asymptote",
                                            "Oblique asymptote",
                                            "Minus infinity",
                                            "Horizontal line",
                                            "Common denominator",
                                            "Constant polynomial",
                                            "Small",
                                            "Number",
                                            "Distance",
                                            "Work",
                                            "Speed",
                                            "Large",
                                            "Power",
                                            "Time",
                                            "Asymptote",
                                            "Function",
                                            "Traffic",
                                            "Fraction",
                                            "Part",
                                            "Constant",
                                            "Infinity",
                                            "Equal",
                                            "Line",
                                            "Polynomial",
                                            "Denominator",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hello. The quotient of two quantities is called their ratio. A rational function is the quotient, or ratio, of two polynomials. Let us look at an example. Suppose my trip to work involves 3 km of city traffic, which always takes me 6 minutes which is 1/10th of an hour. Subsequently I have to drive 20km on the freeway with a speed v, which depends on the amount of traffic. Thus the time on the freeway is 20km/v. What will be my average speed? Well, it is total distance divided by total time. The distance is 23 km. The time spend is 1/10 of an hour for the city part and 20/v for the part on the freeway. Thus the average speed is 23/(1/10+20/v). Multiplying both numerator and denominator by v we obtain 23v/(1/10 v+ 20). This rational function is a quotient of two linear polynomials. In general, rational functions are precisely those functions you can make with a variable, numbers, addition, multiplication and division. These functions can all be written as a fraction P/Q where P and Q are polynomials. Of course, Q can not be the polynomial which is always 0. Note that constant functions are also polynomials, so by taking the denominator to be the constant polynomial Q=1, we see that any polynomial is also a rational function. Of course those are not the rational functions that interest us in this video. You do get functions we could not define before, even in the simple cases where the numerator is constant, or the denominator is just a power of x. Note that we cannot define a rational function at a point x where the denominator equals zero. This means that the zeros of the denominator are not in the domain of the function. You can calculate with rational functions, just as you are used to with ordinary fractions. In particular if you want to write a sum of two rational functions as a single fraction, you have to put both terms over a common denominator. For example if we add 1/(x-2) + 1/(x^2+2) we use (x-2)(x^2+2) as a common denominator. The result is (x^2+x)/[(x-2)(x^2+2)]. Typically factored expressions are easier to work with, so refrain from expanding the denominator unless you have a good reason to expand. In general it is not easy to draw the graph of a rational function. A characteristic feature of graphs of rational functions are the asymptotes. For example, the function (2x^2+2x-1)/(x^2+x+1) has a horizontal asymptote for x to infinity. This means that for very large x the graph approaches a horizontal line very closely, in this case the line y=2. Notice that the graph also approaches this line for very large negative x, so it is also an asymptote for x to minus infinity. A rational function has a horizontal asymptote if the degree of the numerator is at most the degree of the denominator. You can find the location of a horizontal asymptote for a rational function by dividing both numerator and denominator by the largest power of x in the denominator. For very large x the terms 1/x, 1/x^2 etcetera tend to zero, so both numerator and denominator become a constant. In this way you can determine the height of the horizontal asymptote. A rational function can also have vertical asymptotes. Consider f(x)=1/(x-2). For x equal to 2 the denominator becomes zero and the function is not defined. For x slightly more than 2 this becomes 1 over a small positive number, which is very big. For x slightly less than 2 it is 1 over a small negative number, which is large negative. Therefore the graph has a vertical asymptote at x=2. A rational function can only have vertical asymptotes at zeros of the denominator. Now consider g(x) = (x-1)/[(x-1)(x-2)]. This can be simplified to f(x). However g is not defined at x=1, whereas f is. Apart from this difference in domain the functions are equal. In the graph, we denote the fact that 1 is not in the domain by adding an open circle at x=1. Notice that g has no vertical asymptote at x=1 even though this is a zero of the denominator. This is because the numerator also vanishes at x=1. Finally consider the graph of x+2+ 1/(x+1). For very large values of x the 1/(x+1) becomes very small, and the graph of the function thus approaches the line y=x+2. Similarly for very large negative x. The line y=x+2 is called an oblique asymptote. A rational function can only intersect the x-axis if the numerator is zero. But beware, as you saw in a previous example, if numerator and denominator have the same zero, then this point is not in the domain of our function. Thus it is not a zero of the rational function. The zeros of a rational function are precisely those zeros of the numerator for which the denominator is non-zero. The locations of the zeros can heavily influence what the graph of a rational function looks like. For example compare (x-2)/(x-1)(x-3) to x/(x-1)(x-3). Both graphs have vertical asymptotes at x=1 and x=3, the zeros of the denominator. Since the degree of the numerator is less than the degree of the denominator both graphs have a horizontal asymptote at y=0. But the first function has a zero in between the two asymptotes at x=2 and the second function has a zero to the left of either asymptote at x=0. Therefore the two graphs are quite dissimilar. To summarize: Rational functions are the quotient of two polynomials. A rational function can only be defined for the x-values for which the denominator is unequal to zero. You add rational functions by making the denominators equal. The graph of a rational function often has asymptotes. Horizontal asymptotes can be found by dividing both numerator and denominator by the highest power of x occurring in the denominator. Vertical asymptotes can be found by looking at the zeros of the denominator. The zeros of the rational function are found at the zeros of the numerator. Good luck with the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"5d2ceb079afb450082bb269150d9e7f9",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"ca2e3d47a4d6492f852ba47a7620de44",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"15c03e2c98ab4e9183b39408428ab0ae",
                                "vertical_name":"Video: Rational functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"c65169f0b27f4f589b3598901056349f",
                                "vertical_name":"Exercises: Rational functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"16b21a7bdf964a0f80264d8e5f08a0fe",
                                "vertical_name":"Match the graphs"
                            }
                        ]
                    },
                    {
                        "sequential_id":"33496eaa9fc54cd3bafd0a5e1336ed84",
                        "sequential_name":"1.5 Power functions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Power function",
                                            "Discussion forum"
                                        ],
                                        "data":" What is a power function? Learn the characteristics and rules of calculation for power functions! In this video we will look at power functions with integer exponents. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"dbcbffc997b24e9598da80a23d7170bc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Straight lines",
                                            "Vertical axis",
                                            "Vertical asymptote",
                                            "Gravitational force",
                                            "Negative integer",
                                            "Horizontal asymptote",
                                            "Horizontal axis",
                                            "Special case",
                                            "Power function",
                                            "Integer",
                                            "Positive",
                                            "Odd",
                                            "Symmetric",
                                            "Negative",
                                            "Minus",
                                            "Horizontal",
                                            "Etcetera",
                                            "Product",
                                            "Calculation",
                                            "Power",
                                            "Cubed",
                                            "Case",
                                            "Function",
                                            "Called"
                                        ],
                                        "data":" tart of transcript. Skip to the end. Hi there! In this video we will consider so-called power functions. A power function is a function of the form x to the power a with &lsquo;a&rsquo; a constant, called the exponent. They occur at many places in and outside mathematics. A few examples, the area of a disc of radius r is given by pi times r to the power 2. If you know the volume V of cube, the size of an edge is given by V to the power one-third. A last example: if a satellite has distance r to the Centre of the earth, then the gravitational force on the satellite is proportional to r to the power minus 2. The properties strongly depend on whether the exponent is positive or negative, and whether it is integer or not. In this video, we focus on integer exponents. Let&rsquo;s first restrict to the case that &ldquo;a&rdquo; is an integer larger than or equal to 0. In this case a power function is a special case of a polynomial of degree n. It is also called a monomial and can be seen as a repeated product. For n is zero, it is just the constant 1, for n equals 1 we have x, for n equals 2 we have x squared, for n equals 3 we have x cubed, etcetera For power functions, with positive integer exponents we easily check the following rules of calculation: x to the power &lsquo;a&rsquo; times x to the power b is a product of a plus b x&rsquo;s, and is therefore equal to x to the power a plus b (x to the power a) to the power b is a product involving b factors of x to the power a, and is therefore equal to x to the power (a times b), and (x times y) to the power a [click] is a product of a factors x times y. reordering the terms leads to x to the power a times y to the power a. To be able to deal with power functions, it is important that you know these rules. Let&rsquo;s look at some graphs. x to the power zero is just the constant 1 and x to the power 1 is just x. So, their graphs are straight lines. The graph of x squared is a parabola. The graph of x cubed looks like this, and here we see the graph of x to the power 4 and x to the power 5. If we plot the graphs of even powers of x into one single picture, we see the similarity and if we do the same for odd powers of x, we also see quite similar graphs. For even powers the graphs are line symmetric in the vertical axis. These functions are called even, which means that f of minus x equals f of x for all x. For odd powers you can first reflect the graph in the vertical axis and then in the horizontal axis, and you will end up with the same graph. Another way to look at it is as follows: if you rotate it half a turn around the origin...... We say the graph is point symmetric in the origin. In formula&rsquo;s, this means that f of minus x equals minus f of x for all x. Such functions are called odd. Now, let&rsquo;s look at x to the power a with &ldquo;a&rdquo; a negative integer. We can use the rules of calculation to define these. For example: What should x to the power minus 3 be? Well, according to the rules of calculation, (x to the power 3) times (x to the power minus 3) should be equal to (x to the power zero) which equals 1. This implies that (x to the power minus 3) should be 1 over (x to the power 3). In this way we can define x to the power &ldquo;a&rdquo; with &ldquo;a&rdquo;, a negative integer as follows: for n equal to 1 we have 1 over x, for n equals 2 we have 1 over x squared, for n equal to 3 we have 1 over x cubed etcetera. For these negative values of n, the graphs are quite different. The graph of x to the power minus one is called a hyperbola. For n equals 2 the graph looks like this. This is the graph of x to the power minus three. For n equal to 4 it looks like this. All these graphs have a horizontal and a vertical asymptote. In general the following holds: if &ldquo;a&rdquo; is negative, the graph of x to the power a has a vertical asymptote at x equal to 0, and a horizontal asymptote at y equal to 0. We have the same symmetries as for positive powers. For even powers, the functions are even, and therefore the graphs are symmetric in the vertical axis. For odd powers, the functions are odd, so the graphs are point symmetric in the origin. The rules of calculation completely extend to negative powers as well, as long as x is nonzero. In fact we can add a rule: x to the power a divided by x to the power b equals x to the power a minus b. This is just a consequence of the first rule, and the definition of negative powers. So far we looked only at integer exponents. What about non-integer powers? More about that in the next video! End of transcript. Skip to the start. ",
                                        "unit_id":"d700fffb0d84451b8ef59e3bc46f6b23",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"cf3359aa98ab4266bbe35ae33493e4be",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a2d3f4b7b6654a26bc59ed68417fae3b",
                                "vertical_name":"Video: Power functions with integer exponent"
                            },
                            {
                                "units":[],
                                "vertical_id":"4322121861284e6b87a51ffc266d7f0b",
                                "vertical_name":"Exercises: Graphs and powers"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In this video you will learn about power functions with non-integer exponents. ",
                                        "unit_id":"0ec6889cc55b428ca5152721287dafad",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Exponential functions",
                                            "Good luck",
                                            "Cube root",
                                            "Vertical axis",
                                            "Fourth root",
                                            "Nth root",
                                            "Square root",
                                            "Fourth power",
                                            "Positive integers",
                                            "Power function",
                                            "Positive number",
                                            "Positive integer",
                                            "General",
                                            "Square",
                                            "Define",
                                            "Power",
                                            "Integer",
                                            "Odd",
                                            "Number",
                                            "Positive",
                                            "Function",
                                            "Negative",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. In the previous video we only considered power functions with integer exponents. Now we will turn to the case of non-integer exponents. How to define power functions in that case? For negative x-values, it is only possible in exceptional situations. So first, we restrict to positive values of x. We can use the rules of calculation to define the power function when &ldquo;a&rdquo; is a fraction. For example, what should x to the power 1 over 4 be? Well, according to the rules of calculation, we should have that (x to the power 1 over 4) to the power 4 is equal to (x to the power 1), which equals x. We define (x to the power 1 over 4) to be the positive number which has x as fourth power. That is, (x to the power 1 over 4) is the fourth root of x. In this way we define x to the power 1 over n with n a positive integer as the nth root of x. Let us look at the graphs of these power functions. For even values of n, the graphs look quite similar. These functions are only defined for non-negative values of x. For odd values of n the graphs look quite similar too and are defined for all real values of x. These graphs are also point symmetric in the origin. Using the power functions that we have defined so far, and the rules of calculation, we can define more general power functions. For example, x to the power 2 over 3 is equal to (x squared) to the power 1 over 3, which is same as the cubed root of x squared. On the other hand, it is also equal to the square of the cube root of x. And x to the power minus 5 over 2, is equal to (1 over x to the power 5) to the power one half, which is 1 over the square root of x to the power 5. On the other hand, it is equal to 1 over the fifth power of (the square root of x). In this way we have defined x to the power p over q with p and q positive integers, as the qth root of (x to the power p) or (the qth root of x) to the power p, and x to the power minus p over q, as 1 over the qth root of (x to the power p), or as 1 over (the qth root of x) to the power p. Not every number is a quotient though. For example, sqrt 2 cannot be written as a fraction of two integers. How do you define power functions for such exponents? This is a bit tricky. We will return to this in the next week, when dealing with exponential functions. However, I will show you the properties of power functions for general exponents. The first question is: for what x values are they defined? Well in general we have that if &ldquo;a&rdquo; is larger than or equal to zero, then the function is defined for x larger than or equal 0. If a is negative, then we have to exclude x equal to 0. If &ldquo;a&rdquo; happens to be integer, and non-negative, then x to the power &ldquo;a&rdquo; is defined for all x. If &ldquo;a&rdquo; is negative, then again we exclude x equal to 0. There are some non-integer exponents for which this holds as well. To be precise, if &ldquo;a&rdquo; equals p divided by q, where p and q are integers and q is odd. I&rsquo;ll be honest: you will probably rarely have to deal with such exponents for negative x. As for the graphs, if &ldquo;a&rdquo; is positive, they are increasing for positive x. If &ldquo;a&rdquo; is negative, the graph decreases for positive x. Furthermore, in that case, the graphs have asymptotes along the horizontal and vertical axis. If the power function happens to be defined for negative x as well, the graph has symmetries; it is either line symmetric in the y-axis, or point symmetric in the origin. Finally, lets have a look at the rules of calculation that we encountered before. As long as x and y are positive, these rules are true for any choice of a and b. But for other values for x and y, it depends. Problems may occur for negative or non integer exponents. More about that in the excercises. That was a lot of information. To get a feeling for all the different properties of power functions. make sure you have a look at the exercises. Good luck! End of transcript. Skip to the start ",
                                        "unit_id":"d6e488f8d77345f2b41555ecc92be4c4",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"b06ad614edfd4c768138d9493e0c0c00",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2a1757c80b87471091d1c357d4c6c56d",
                                "vertical_name":"Video: Power functions with non-integer exponents"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Power function",
                                            "Positive",
                                            "Function",
                                            "Xb"
                                        ],
                                        "data":" EXPLANATION: COMPARING THE GRAPHS In the video, you saw that for positive x a power function f(x)=xa is increasing if a&gt;0, and decreasing if a&lt;0. But how do two functions f(x)=xa and g(x)=xb compare? First of all, we have the following: if x&gt;1 and a&lt;b, then xa&lt;xb. This is not hard to see for positive integer exponents. For example, suppose f(x)=x2 and g(x)=x3. Then g(x)=x&sdot;f(x). Since x&gt;1 and f(x) and g(x) are positive, we have that g(x)&gt;f(x). But the statement above is true also for negative and non-integer a and b. If x lies between 0 and 1, the inequality reverses: if 0&lt;x&lt;1 and a&lt;b, then xa&gt;xb. Again, this is not hard to see for positive integer exponents. Take the same example: f(x)=x2 and g(x)=x3, so g(x)=x&sdot;f(x). Since 0&lt;x&lt;1 and f(x) and g(x) are positive, it follows that g(x)&lt;f(x). Again, the second statement is true also for negative and non-integer a and b. ",
                                        "unit_id":"c2cad2ef8cbf4fd18ebd499059bffd0e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"60918e3b70ba4d2580dae797cf9aa851",
                                "vertical_name":"Exercises: Match functions with graphs"
                            },
                            {
                                "units":[],
                                "vertical_id":"68ad075179c34bc68e5ed4782a79c5df",
                                "vertical_name":"Exercises: Rewriting expressions involving power functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In this video a mathematical problem involving power functions is solved. But the solution contains an error! Do you know what the error is? Share your thoughts in the discussion box below! The answer will be released at July 4th. ",
                                        "unit_id":"92e39a751fb34d6cb2fe13ced4a1c2ae",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Power function",
                                            "Square root",
                                            "Sqrt",
                                            "Error"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome to the first Catch the Error video. In catch the error videos we present a derivation that contains an error. Your task is to identify the error. You can discuss your ideas on the forum below this video. I will rewrite the following expression: sqrt(x^2), using the rules of calculation for power functions. First, note that x^2 equals x times x, so I can write the expression as sqrt(x times x). Now remember that the square root is a power function, with exponent &frac12;, so let me rewrite this as (x times x)^(&frac12;). By the rules of calculation for power function we can rewrite this as x^(&frac12;) times x^(&frac12;). By another rule of calculation, we can simplify this to x^(&frac12; +&frac12;), which is just x. We conclude sqrt(x^2)=x. But this is wrong! Why? Well, let&rsquo;s take x=-1. Plug it into the left hand side, here we get (-1)^2, which is 1, and then take the square root. But sqrt(1)=1. And the right hand side x = -1. So we get 1 equals -1, and that is not true! Do you know what the mistake is here? End of transcript. Skip to the start. ",
                                        "unit_id":"a71ca9596b2a480296818f456fcbb909",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d32f1e9e5826479cad308552f70a9985",
                                "vertical_name":"Video: Catch the error"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Did you catch the error? Find out what went wrong! ",
                                        "unit_id":"42b72e9b2afd4137b177656d2f5fa442",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Positive integers",
                                            "Positive"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Did you find the error? The funny thing is that the whole derivation is correct if we would restrict to x larger than or equal to 0. Indeed, in that case, sqrt(x^2)=x. But this is not true for negative x! So what went wrong? Well, if x is negative, the rules of calculation of power functions lead to problems, or are simply not true in general. Ok, I&rsquo;ll admit, as long as the exponents are positive integers, there is no problem. But especially for fractional exponents, you must be cautious! You can see this in our derivation: in this step , we split the product. Here a problem arises if x is negative: the expression after this step is not defined for negative x! After the next step , the expressions again are defined for negative x, but we made an illegal move in the middle, and this actually caused the problems. In general, if you want to be on the safe side, only apply the rules of calculation for power functions if the arguments are positive or the exponents are integer. End of transcript. Skip to the start. ",
                                        "unit_id":"0fb723712c8e45cdb74d61b6623bb64c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bbd9bb1bfe8d4048a26999c7c477a96c",
                                "vertical_name":"Video: Catch the error - explanation"
                            }
                        ]
                    },
                    {
                        "sequential_id":"00828586bb71458388346c3eeabfa8d3",
                        "sequential_name":"1.6 Domain, codomain and range",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" What is the domain, codomain and range of a function? What numbers can you put in a function and what is the influence of the context? Learn more in this video! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"4dcb25df43f94360bc01c53de54fced7",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Real numbers",
                                            "Good luck",
                                            "Square roots",
                                            "Negative numbers",
                                            "Natural domain",
                                            "Context",
                                            "Sense",
                                            "Maximal",
                                            "Volume",
                                            "Negative",
                                            "Natural",
                                            "Input",
                                            "Formula",
                                            "Domain",
                                            "Precisely",
                                            "Defined",
                                            "End",
                                            "Make",
                                            "Function",
                                            "Codomain",
                                            "Output",
                                            "Equal",
                                            "Range"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! We have already seen quite a few examples of functions, and we will see many more. In this video, I would like to stop for a moment and ask the following questions: given a function &ldquo;What numbers can you put into it?&rdquo; and &ldquo;What numbers do you WANT to put into it?&rdquo;. Let me explain what I mean. First of all, we have defined functions in terms of formula&rsquo;s, for example f(x)=1 divided by (x-3). But some formulas do not make sense for all values of x. Here, f(x) is not defined for x equal to 3. To understand the behavior of a function, you have to know for which input values it is defined. As for the second question, consider the following example. If a cube has edges of size x, its volume is equal to x cubed. This is the volume function of the cube. In principle, this function is defined for all values of x. But given the context, it makes no sense to put in negative numbers. So in this case, it is natural to restrict the input values to numbers larger than or equal to 0. Given a function, it is often natural, or even necessary, to restrict the set of input values. That is, we have to choose the domain of the function. Remember the setup: a function is defined by three pieces of data: &bull; The domain: the set of possible inputs, &bull; the codomain: a set in which the outputs end up &bull; and a rule that associates to every element in the domain an element in codomain. In previous videos, we mainly focussed on the rule that tells you how to get from input to output. Now, I&rsquo;d like to look at the domain more closely. As an example, consider the function f(x) = 2 +sqrt(x-3). I did not specify the domain. What options do we have? Well, the only restriction is that we cannot take square roots of negative numbers. So in this case, the function is defined precisely for x-3 larger than or equal to zero. That is, x must be larger than or equal to 3. The set of such x is the largest possible domain we can choose, called the maximal domain. In this case, it is the interval [3,infty), including 3. Often, we will not mention the domain of a function explicitly, and silently take it to be the maximal domain. However, sometimes the context makes restrictions natural. For example, think again of the volume function of a cube. The maximal domain is the set of all real numbers, which we denote by R. But given the context, it is natural to restrict to the set of numbers larger than or equal to 0, since only then the volume makes sense. Ok, enough about the input-side of functions. What about the output side? There are two related concepts that play a role here: codomain and range. Remember: the codomain is a set that contains the possible outputs of the function. Let me stress here: I said &ldquo;contains&rdquo;; it does not have to be exactly equal to the set of possible outputs! You can take it larger if you like. Since every function that we consider produces real numbers, we can just take the set of all real numbers as codomain. From now on, we will always make this choice. Much more interesting is the range of a function: this is precisely the set of all possible values that the function can attain. Note, it can be a smaller than the full codomain. Let&rsquo;s look again at the example function, f(x)=2+sqrt(x-3). In this case the range is the interval [2,infty). You can clearly see this from the graph; [click] it starts at height equal to 2 and then keeps increasing. In general, the range is the set of all y-values for which f(x)=y has a solution. Indeed, you can show that for this function, the equation has a solution precisely if y is larger than or equal to 2. I invite you to try that yourself. The range of a function may depend on the chosen domain. To illustrate this, let me return to the cube once more. The maximal domain is the set of all real numbers. In that case, the range is the set of all real numbers as well. But for the natural domain we left out the negative values of x. Choosing this domain, the range is also the set of all numbers larger than or equal to 0. This makes sense, since volumes cannot be negative! To summarize: we considered domain, codomain and range. if we do not specify the domain of a function, we just take it to be maximal. Sometimes, the context makes it more natural to restrict the domain. We will always take the codomain equal to R. Finally, remember that the range depends on the chosen domain. In general, determining the maximal domain and the range of a given function involves solving equations and inequalities. This can be quite difficult, and we will return to these matters in week 3 and 4 of the course. In the following exercises you can practice with domains and ranges of standard functions and simple combinations. Good luck! End of transcript. Skip to the start. ",
                                        "unit_id":"217c852cd9724f63ab7174b9e98718b3",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"4a94fe03847640e58844d974d9e41cda",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b1993c60b24a41049f8108633d1b46cf",
                                "vertical_name":"Video: Domain, codomain and range"
                            },
                            {
                                "units":[],
                                "vertical_id":"c5b9dd112a6648e0bb3638f6bec880c4",
                                "vertical_name":"Exercises: Domain and range"
                            },
                            {
                                "units":[],
                                "vertical_id":"00e5e9cb889345e5840a9d0f8b624b20",
                                "vertical_name":"Exercises: Natural domain"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d96d6b1c9bd04dda8bd19ff47ca66ba0",
                        "sequential_name":"1.7 Continuity",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Continuous function",
                                            "Discussion forum",
                                            "Piecewise defined function"
                                        ],
                                        "data":" What is a continuous function? And what is a piecewise-defined function? Watch the video! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"af2efc09fab04f1dbf7361f663e2efb1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Piecewise defined function",
                                            "Frame rate",
                                            "Rational functions",
                                            "Bank account",
                                            "Horizontal axis",
                                            "Solving equations",
                                            "Real number",
                                            "Vertical axis",
                                            "Small change",
                                            "Continuous functions",
                                            "Discontinuous function",
                                            "Time interval",
                                            "Continuous function",
                                            "Fluid motion",
                                            "Defined",
                                            "Discontinuous",
                                            "Shorter",
                                            "Time",
                                            "Change",
                                            "Negative",
                                            "Function",
                                            "Continuous",
                                            "Fluid",
                                            "Motion",
                                            "Interval",
                                            "Close",
                                            "Property",
                                            "Balance",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! Suppose you make a film of a moving basketball. If the film has a low frame rate, which means there are not many pictures taken in one second, the motion of the ball looks a bit jerky. If you want to see a more fluid motion, you need pictures of the ball taken at shorter time intervals, that is, at a higher frame rate. The shorter the time interval between the pictures, the more fluid the motion looks. This is because the distance travelled by the ball is a continuous function of time. What does this mean? Well, here is the graph of a function f, describing the distance travelled by the ball. You can see that f(3)=2. If we now take a point x on the horizontal axis which is close to 3, you see that the value of f at x stays close to 2. We say that the function f is continuous at the point 3. The function that you see here is actually continuous at any point p, because if we take a point x which is close to p, then f(x) will be close to f(p). In other words: a small change on the horizontal axis will give only a small change on the vertical axis. A function that is continuous at any point p in the domain, is called a continuous function. So the function f that you see here is continuous. Not every function is continuous. Suppose you make a film of the balance on your bank account. At a certain point, you see the balance change from, say, 50 to 150. No matter how high the frame rate of your film is, the balance always jumps, the change will never look fluid. If you look at the graph of this function, which is the amount of money on your bank account, you can see that a small change on the horizontal axis from t=1 to the left, will always result in a change on the vertical axis of 100, that is, a large change. This is an example of a discontinuous function. This function, the balance on your bank account, can be described with a piecewise defined function, that is, the function itself is given on different intervals by different formulas. In this case, the function can be given by f(t) equals 50 for t less than 1, and f(t) equals 150 for t greater or equal to 1. The open dot in the graph indicates that the value of f in 1 is not 50, and the closed dot indicates that it is 150. Another example of a piecewise defined function, is the absolute value function, which is defined to be -x for negative x, and the value is x for non-negative x. Note that the absolute value function is continuous, but piecewise defined functions are often discontinuous, as is the function on the left here. You see that the graph of this discontinuous function makes a jump, so the function skips values in between. For a continuous function this never happens. To be more precise, a continuous function has the intermediate value property. This says that if f is continuous on a closed interval [a, b], then it attains all values between f(a) and f(b). For the graph of f on this interval it means then you can draw the graph without having to take your pen off the paper. The intermediate value property guarantees for instance that the equation x^5-x^2+1=0 has at least one solution on the interval [-1,0], even though we can not calculate it exactly. This is because the function x^5-x^2+1 is continuous, and it attains positive and negative values on the interval [-1, 0], so it must also be zero at some point. You can clearly see this from the graph. If f is not continuous the intermediate value property might not hold. For example, if the balance of your bank account goes from 50 to 150, it has not attained any of the values in between. Most of the functions that you&rsquo;ve seen so far are continuous functions. For example, polynomials, but also rational functions and power functions are continuous on every point of their domain. For instance, the function 1/x is continuous on its domain, which consists of all real number except 0. Sometimes this causes confusion because the graph makes a jump at x equals 0, but this is not a point in the domain. If we make a new function out of two continuous functions by adding, multiplying, or dividing them, we get again a continuous function. For example, \\sqrt{x}/(x-1) is continuous on its domain, that is on numbers larger than or equal to zero, except 1, because it is the quotient of two continuous functions. Be careful though with piecewise defined functions. For example, the function which is equal to x for x less than 0, and equal to 1 for x greater of equal to 0, is made of continuous functions, namely the functions x and the constant function 1. But f itself is not continuous because there is a jump at x equal 0. Continuous functions have nice properties, such as the intermediate value property. As we have seen, this plays a role in solving equations. Realize however, that not every function is continuous. So, it is important to be able to see whether a function is continuous or not! You can practice this in the exercises. End of transcript. Skip to the start. ",
                                        "unit_id":"517cfcb79ecf4a94b9a13e3d95b10fc8",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"30e38ca57a9c476992130c29e84c784f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"012d3fe53c824abbadd1ca4754f0179c",
                                "vertical_name":"Video: Continuity"
                            },
                            {
                                "units":[],
                                "vertical_id":"c6e98f0aca2d4cb6a52470cfe0b4f763",
                                "vertical_name":"Exercises: Continuity"
                            }
                        ]
                    },
                    {
                        "sequential_id":"b1a569accebb4a2ea2b088748280e0ae",
                        "sequential_name":"Training sequence",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Rational functions",
                                            "Training sequence"
                                        ],
                                        "data":" In this training sequence you can apply everything you have learned on functions in general and on polynomials, rational functions and power functions. This training sequence will help you prepare for the homework, in addition to the previous sections. The results of your answers do not count for your final grade. The exercises are ordered per topic. You can decide to make all exercises or just a few. It's up to you! Have a good training! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"1741726ce2ff40beab08440d15972841",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7523c31642034724909d30165d7c5761",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[],
                                "vertical_id":"c7dd0decf45141c98c5e545e409a1c1c",
                                "vertical_name":"Factorization exercise"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Standard form"
                                        ],
                                        "data":" Exercise 2: Polynomials in standard form ",
                                        "unit_id":"a4cf50ffeb24448ba252962c7b918ab6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ec5eca0d56b443a89bc67413e0b1cca0",
                                "vertical_name":"Rewrite polynomials"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 3: Simplify power functions ",
                                        "unit_id":"03178bde78ec442a91a39efcf394d414",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4626c4ad4be84ccd956f39f6800f7410",
                                "vertical_name":"Rewrite power functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 4: Basic rules of calculation ",
                                        "unit_id":"4f4c2872ba684d9587f4ed910e289107",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6f87c8a34f4e40cfb9481f2826c36869",
                                "vertical_name":"Basic rules of calculation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Standard form",
                                            "Rational functions"
                                        ],
                                        "data":" Exercise 5: Standard form of rational functions ",
                                        "unit_id":"94ee269b37cb45818d47e197cc5bc1f0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"797198bcac6c40d38c3a706f1ba02971",
                                "vertical_name":"Standard form of rational functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 6: Find the Function In this exercise functions are described in various ways. You have to find the formula of these functions. ",
                                        "unit_id":"c3e4c6942e2a48c2ae9edc5d9fcb4adc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"144883b8b51247988d2ff0c67930ebec",
                                "vertical_name":"Find the function"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" Exercise 7: asymptotes Remember that in all exercises whenever multiple values are asked you should always write them in ascending order. ",
                                        "unit_id":"c1e8e6bbc7714faf92cbbc60711bad4a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"89644d70638a4eb99eacbc6063ebeac3",
                                "vertical_name":"Exercises on rational functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Domain"
                                        ],
                                        "data":" Exercise 8: domain and range In the exercises below, find domain and range of the given functions. Tip: it helps to make a sketch! ",
                                        "unit_id":"539c223ae7754584a18769cb84e75e0b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1b2e6c7d7b0c471e9874bb3a6ff627ae",
                                "vertical_name":"Domain and range"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 9: Continuity In the exercises below you see some functions that involve a parameter. You have to determine if you can choose that parameter such that the function becomes continuous. ",
                                        "unit_id":"69e317eda88e450ea38e34d2c2b55ca2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"31ea883883634f4abd872f67c659e62b",
                                "vertical_name":"Continuity"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rational functions"
                                        ],
                                        "data":" Applications of Rational Functions ",
                                        "unit_id":"1cef6b5beaeb4fd0805d6302ba317775",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fd836b2e09b64fd38e2f5d0f32053de2",
                                "vertical_name":"Applications of rational functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Empirical law",
                                            "Power function",
                                            "Function",
                                            "Law",
                                            "Rank",
                                            "City",
                                            "Population"
                                        ],
                                        "data":" Exercise 12: Application of Power Functions - Zipf's Law Suppose you make a list of all cities in your country and order them from high population to low. In this list, every city gets a rank: the city with most inhabitants has rank 1, the second-largest city rank 2, etc. As it turns out, in many cases the relation between rank r and population P can be well described by a power function P(r)&asymp;C&sdot;ra, for some constants C and a. This is an instance of Zipf's law: an empirical law that states that in many contexts, a function that relates rank to size can be approximated by a power function. In the exercise below, we investigate this for the 150 largest cities in the Netherlands. ",
                                        "unit_id":"e389d6a57b0641eba461961096eb8847",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0c98545f4808422c86151cff18c57016",
                                "vertical_name":"Application of power functions"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ab4989a9a5e6490e9e64d3077820cbf4",
                        "sequential_name":"Summary",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Rational functions"
                                        ],
                                        "data":" In this subsection we will give a summary of everything you have learned this week on polynomials, rational functions and power functions. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"46fc3880d0954d19947534efb0b3cf8e",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Vertical asymptotes",
                                            "Horizontal axis",
                                            "Real numbers",
                                            "Standard form",
                                            "Rational functions",
                                            "Straight lines",
                                            "Good luck",
                                            "Minus infinity",
                                            "Straight line",
                                            "Continuous functions",
                                            "Quadratic function",
                                            "Piecewise defined function",
                                            "Rational function",
                                            "Continuous function",
                                            "Polynomial function",
                                            "Power",
                                            "Precisely",
                                            "Form",
                                            "Continuous",
                                            "Polynomial",
                                            "Hold",
                                            "Constant",
                                            "Input",
                                            "Integer",
                                            "Large",
                                            "Low",
                                            "Called",
                                            "General",
                                            "Codomain",
                                            "Important",
                                            "Denominator",
                                            "Function",
                                            "Domain",
                                            "Degree",
                                            "Defined",
                                            "Graph"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! We are almost at the end of the first week, and have seen a lot of topics. To get you ready for the homework, I will summarize the most important content of the past week for you. This week was all about functions and their properties. We started with the general definition: a function can be seen as a machine that takes its input from a certain set, called the domain, and then produces an output that ends up in a set called the codomain. Remember that we only consider functions that send real numbers to real numbers. So the codomain can always chosen to be R. However, the domain does not have to be all real numbers: given the context it may be more natural to restrict the domain, and sometimes the defining formulas are simply not defined for certain input values. Once the domain is chosen, you can look at the range: the set of values that the function can attain. This set can be smaller than the full codomain. We have seen four ways to describe a function: by means of a formula, using a table, using a graph and in words. It is important that you can switch between these types of description. We then considered specific types of functions, starting with polynomial functions. Polynomial functions can be constructed from a variable and a set of numbers, using only addition and multiplication. Any polynomial can be put into its standard form, in which no brackets occur anymore, every power of x occurs once, and the terms are ordered from high power to low. The highest occurring power in standard form is called the degree. As we have seen, the degree determines the behavior of the polynomial function as x grows large. Also, the higher the degree, the more complicated the function and its graph may behave. It is important to understand the behavior of polynomial functions of low degree. Polynomials of degree zero are of the form p(x)=a. They are constant functions. Polynomials of degree one have standard form ax+b. The graph is a straight line with slope a and y-intercept b. Polynomial functions of degree two, also called quadratic functions, are of the form ax^2+bx+c. The graph of any such function is a parabola. It is often useful, when possible, to rewrite a quadratic function in factorized form: a(x-p)(x-q). p and q are the x-values where the graph intersects the horizontal axis. Another useful form is the complete square form: a(x-r)^2+s. r and s are precisely the coordinates of the vertex of the parabola. The second class of function that we considered are the rational functions. These are precisely the functions that can be constructed from a variable and a set of numbers, using addition, multiplication and division. Any rational function can be written as the quotient of two polynomials. In the exercises, you saw how to do this. The graph of a rational function may have asymptotes: straight lines that are approached by the graph. Vertical asymptotes, where the function grows to plus or minus infinity, can occur at x-values for which the denominator vanishes. Be careful though: if the numerator vanishes as well, an asymptote may be absent. Horizontal asymptotes occur precisely if the function tends to a constant for x much larger or much smaller than 0. The common technique to find such asymptotes is to divide numerator and denominator by the highest power of x occurring in the denominator. Then you can see clearly what happens as x grows large. The final class of functions that we considered are the functions of the form x^a, the so-called power functions. The domain depends on &ldquo;a&rdquo;. All power functions are defined for x&gt;0. However, if x = 0, x^a is only defined for positive a. For negative x it is more complicated. There is no problem if \"a\" is an integer. For non-integer &ldquo;a&rdquo; it is usually not defined, but there are exceptions, like x^{\u2153}. For the graphs of power functions we have the following in general: if a&gt;0, it is increasing for positive x. The larger the exponent, the faster it grows for large x. For a&lt;0 the graph is decreasing. In this case, we have the smaller a, the closer to 0 for large x. For integer exponents, the graphs have symmetry properties: they are line-symmetric in the y-axis if a is even, and point symmetric in the origin of a is odd. Finally, power functions obey certain rules of calculation that you should know: x^a times x^b equals x^{a+b}, (x^a)/ (x^b)= x^{a-b} (x^a)^b = x^{ab}. And finally, (xy)^a = (x^a)(y^a) If x and y are positive these rules hold for all a and b be careful for other values of x and y. All the functions that we treated share a property: they are continuous on their maximal domain. Roughly, a function f is called continuous if the following holds: if you change x by a small amount within the domain of f, f(x) will also change by a small amount. In particular, the function values cannot jump. If f and g are continuous functions, then so is their sum, product and quotient, whenever those are defined. If a continuous function is defined on an interval from a to b, including a and b, then it will attain all values between f(a) and f(b). This is called the intermediate value property. Intuitively, it means that you can draw the graph on the interval without lifting your pen. You should be aware that not all functions are continuous. For example, functions that have graphs with jumps. Such functions have to be defined piecewise, using different formulas on different intervals. Conversely, given such a piecewise-defined function, you should be able to tell whether it has jumps or not. These were the main topics of this week. Good luck with the homework! End of transcript. Skip to the start. ",
                                        "unit_id":"507c814953684d22ae4c0e458fe0c09e",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"dfe7525e68ab4abc90be0d39e1d0ce4e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e23d2c4745b54cdb9ed2223c64d003ef",
                                "vertical_name":"Video: Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"507ff28f32b34061980d44539ad2cef1",
                        "sequential_name":"Homework week 1",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" This is the homework for week 1. These problems are graded and are part of your final score. All homework is due on September 29, 23.30 UTC. However we recommend you to finish the homework of week 1 on July 4th. Please note: the number of attempts and the number of points vary from exercise to exercise! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted before posting your question. We kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"5d79d8f66ead468abf6ed3d1474385ef",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"57c694a3ee694a59a9e66cd52c6dcc2b",
                                "vertical_name":"Homework"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polynomial function",
                                            "Function"
                                        ],
                                        "data":" problem 1 In this exercise, five functions are given. For each, indicate whether it is a polynomial function in x. If so, find the degree. ",
                                        "unit_id":"134e49f609094f848fbb2c0fda424bf8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8298651f5dda4de9ad3b5c39040e60c8",
                                "vertical_name":"Identify the polynomial"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" FEEDBACK Drag the items onto the image above. ",
                                        "unit_id":"2419ca19b10c4a908c129ba637a58e37",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"71cb695acc6c4c47bd6b571aa7016e0c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"490f02dbf78b4566b13580a97cb61b32",
                                "vertical_name":"Match the graphs I"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" FEEDBACK Drag the items onto the image above. ",
                                        "unit_id":"aadd872458694b5cb17bf8cffb851527",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" FEEDBACK Drag the items onto the image above. ",
                                        "unit_id":"b0e756113e5f484cb5b1404c680333bd",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers ",
                                        "unit_id":"4f9c1120207342058d1e18eb239e85cd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"88ecb5a2015342249d252339d313b979",
                                "vertical_name":"Match the graphs II"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers ",
                                        "unit_id":"afbf2223c8de413a8c28bab61aad8e67",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e148e06707d7486884942823e3f4e51f",
                                "vertical_name":"Find the functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"da266a1050b9468c8ec6001b5901822a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"33b3fef029754a2aaf13b5acf4e28d05",
                                "vertical_name":"Rewriting expressions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"6ac8e2e2ba384836b4e98d8ae0d1a1a7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ab68c298501b4e81a545be9d3abf5a60",
                                "vertical_name":"Asymptotes"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" problem 7 In the exercises below, find domain or range of the given functions. ",
                                        "unit_id":"aa3a5593dd5e4f54a793543794d850ee",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"424966daff27406f84623439362fc292",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"07af690b07a04308afa090c3d9a0305e",
                                "vertical_name":"Domain and range"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 8 ",
                                        "unit_id":"ec967db3844540e78c5a934c44ecfef9",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" ProblemOn the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. 8 ",
                                        "unit_id":"2f76ae8a2f87461e9f7f776ec69f3def",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fe78f364be1a46cab670a3afbcf902aa",
                                "vertical_name":"Continuity"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0816eb122b1744099c50aad50757ad04",
                        "sequential_name":"University preview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "University"
                                        ],
                                        "data":" In a university preview we explain a mathematical topic that you might encounter at university. This university preview discusses Taylor polynomials and the way these are used by calculators. The exercise after the video is for fun only and not part of your final grade. ",
                                        "unit_id":"8ce3d93767da47488fed13e54f8aec15",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Square root",
                                            "Higher degree",
                                            "Taylor polynomials",
                                            "Taylor polynomial",
                                            "Horizontal line",
                                            "Straight line",
                                            "Tangent line",
                                            "High school",
                                            "Exponential function",
                                            "Approximately equal",
                                            "Line",
                                            "Degree",
                                            "Polynomial",
                                            "Calculator",
                                            "Tangent",
                                            "Change",
                                            "Sqrt",
                                            "School",
                                            "Error",
                                            "Simpler",
                                            "Equal",
                                            "Calculating",
                                            "Function",
                                            "University",
                                            "Approximating",
                                            "Question",
                                            "Calculate"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Do you know how your calculator calculates square roots? In this video I will show you the essential idea. Welcome to this: the first university preview. Mathematics does not end at high school and each week we will try to give you a view of some cool things you might learn about at university. This week I will give a short introduction to Taylor polynomials. While some smart other methods are used as well, many calculators use Taylor polynomials when calculating a square root, and also for other functions such as the sine and exponential function. Let us consider the graph of the function sqrt(1+x) and look at the point x=0.6. That is, we want to calculate the square root of 1.6. A first approximation might be to say that 0.6 is close to 0, and thus the value of our function at x=0.6 is approximately equal to the value at x=0, which is 1. In essence we are approximating the graph of the function with a horizontal line at height 1. Can we find a better approximation of the graph near x=0? Well, there is of course the tangent line. The tangent line is a straight line which is tangent to the graph at x=0. If we draw this line you see that it is a better approximation to the graph than the horizontal line we drew before. In school you probably learned how to calculate the equation for the tangent line, and we will review this in week 5. In this case the tangent line is given by the equation y=1+x/2. Plugging x=0.6 into this equation we obtain sqrt(1.6) is approximately 1.3, which is a better approximation of the square root of 1.6 than 1 is. To obtain an even better approximation of our square root we first realize that 1+x/2 is a polynomial of degree 1. Thus we can try to approximate our function not with a polynomial of degree 1, but with a polynomial of higher degree instead: let's start with 2. It turns out there is one polynomial of degree 2 which best approximates sqrt(1+x) near zero; this is called the Taylor polynomial of degree 2. The formula for the tangent line is calculated using the derivative. In fact, the function 1+x/2 giving the tangent has the same value and derivative as the function sqrt(1+x) at x=0. The degree 2 Taylor polynomial can be calculated by also insisting that the second derivative of f equals the second derivative of the approximating polynomial. The result is 1+x/2-x^2/8; as you can see this tracks the graph of sqrt(1+x) pretty well. A better approximation for sqrt(1.6) is thus 1.255. But we are not yet satisfied with our approximation. We want 10 digits to fill up the screen of our calculator. How can we make an even better approximation? Well, we could try approximating our function with a degree 3 polynomial. The best approximation of f with a degree 3 polynomial is the Taylor polynomial of degree 3, and it turns out to be the one on the slide. The approximation of sqrt(1.6) becomes 1.2685. We made an adjustment of just .01, so we might be confident in our first 2 digits: 1.26. Indeed in this case the approximation always improves if you use a higher degree polynomial. To get to 10 digits it turns out we need to calculate the degree 32 Taylor polynomial. This polynomial contains 33 terms and it might still sound a lot of work to add up 33 numbers, but for a calculator this is of course no work at all. In particular we have reduced calculating a square root to simpler operations as multiplication and addition. Most functions you will encounter can be approximated by Taylor polynomials. The advantage of using Taylor polynomials instead of the original function is that polynomials are some of the easiest functions around. Thus however complicated a problem gets, you can always make it simpler by turning every function in sight into its Taylor polynomial. One question you should ask yourselves whenever you approximated anything is how big the error is? An approximation is only useful if the error is small. So you can ask yourself questions like: How does the error change if I change the degree of the polynomial? How does the error change if I calculate sqrt(1.2) instead? Do I also get good approximations for different functions? And of course the fundamental question \" How do I even calculate these Taylor polynomials?\" At university you can explore these questions and others. End of transcript. Skip to the start. ",
                                        "unit_id":"4a13b32fd19242ea89befbc009640252",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"fe57f3e22a6f4a2cb98a5a00c47844b5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"42a6e2fa0d4a4ad9a4d5d1394a759655",
                                "vertical_name":"Video: University preview - Taylor polynomials"
                            },
                            {
                                "units":[],
                                "vertical_id":"894226dae5c74499aa028c481bde16cb",
                                "vertical_name":"Exercises: Taylor polynomials"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3e1ffa0ef5f14df9b0177d03eed9fe1f",
                        "sequential_name":"* Student life 1 - Planning",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "University",
                                            "Planning"
                                        ],
                                        "data":" Failing to plan is planning to fail. If you start a study at university planning your work is an important key to success. Watch the video to learn more about the importance of planning and common pitfalls for students starting a study at university. ",
                                        "unit_id":"5f39e5ce59d34f88910767764c9cfdc7",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Mobile phone",
                                            "Social media",
                                            "High school",
                                            "Good luck",
                                            "Study guide",
                                            "School",
                                            "Start",
                                            "Pitfall",
                                            "Good",
                                            "List",
                                            "Expect",
                                            "Time",
                                            "Find",
                                            "Activity",
                                            "University",
                                            "Planning",
                                            "Study",
                                            "Spend",
                                            "Make",
                                            "Work"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hello! Failing to plan is planning to fail is a quote by Alan Lakein, an author on personal time management. Unfortunately this quote is true for many students. Students that fail or drop out of university often don&rsquo;t lack the intelligence or capacity to finish their course succesfully, but they do lack the planning skills and self-discipline to plan their work and actually do it. Today Esme&eacute; and I will discuss planning with you! Let&rsquo;s first look at the most important changes in your life, when you start studying at university: Study, home and friends. Esme&eacute;, what are the differences between life in high school and life as a student at a university? In high school you get homework and you have many small deadlines given by the teachers. At university for some courses the only deadline is the exam after 3 or 6 months. So you need to plan your work yourself over longer periods of time. If you started working only a few days before the deadline in high school you could often still make it. In university that will be the recipe for failure. Another difference is that in high school you have to go to school, but at university most of the times it&rsquo;s your own choice whether or not you attend the lectures. Also when you are in high school most kids live at home and have parents who cook, clean and shop groceries. When you start living on your own, when you start university, you have also a household to run. Starting university also means making new friends and being member of associations. That also takes time. So that are a lot of changes! What are your tips for planning your first semester? My first tip is: Actually make a planning! Find out what is expected from you! When are the courses, practical work, workgroups, deadlines and exams? Also find out how much self-study is expected per course per week. This is often explained in your study guide. How many hours does the university expect you to work on your study per week? In my case, they expect us to spend 42 hours per week on our study. But the time you spend on courses is only 20 hours. So a common pitfall is that students don&rsquo;t plan enough time for self study during the week. And what are other common pitfalls? Every period you have 3 or 4 different courses that you follow. Now often you&rsquo;ll find one very interesting and another less so. The risk is that you spend too much time on the courses and activities you love and are very good at and less on the courses you find difficult or uninteresting. So, it&rsquo;s important to plan how much time you spend on each course. Another pitfall is that you postpone everything till the end, because the deadlines seem far away. The remedy is to set intermediate deadlines for yourself. For example this afternoon I will finish the chapter on polynomials and will do at least 5 exercises. It&rsquo;s rewarding make an activity list and to tick finished activities off your list. So to study effectively you need to be able to focus on your work. It&rsquo;s important to be in a quiet environment and avoid distractions. So how do you do that? I like to meet with fellow students at the university to do work. There are some nice quiet spots where you can work with 4 or 5 students at one table. However I am easily distracted by Facebook, WhatsApp or other social media. If I have to be very focused I put my mobile phone on silent and leave it in my bag. So to summarize: to be succesful: Make a planning. Try to find out what is expected from you! Set intermediate deadlines for yourself and find out where and when you can study in a quiet environment. We want you to be very successful in this pre-university Calculus course. That&rsquo;s why we recommend the following activity: make your planning for this course! Good luck! End of transcript. Skip to the start. ",
                                        "unit_id":"1fd1c269e863499fae55ce79156792d1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Planning"
                                        ],
                                        "data":" What are your tips for making a good planning? And for realising your planning and goals? ",
                                        "unit_id":"faf9d658f9624296b455cdf2d989bb70",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c11598c03a114bf29e61283ec8cca286",
                                "vertical_name":"Student life 1: Introduction"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"c8fffd3839ad4939a8fa7c3afefe3311",
                "chapter_name":"Week 2. Functions (part 2)",
                "sequentials":[
                    {
                        "sequential_id":"edadab4ed10d4ca2bc4f925c09388874",
                        "sequential_name":"2.1 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Savings account",
                                            "Fourier series",
                                            "Trigonometric functions",
                                            "Signal processing",
                                            "Exponential functions",
                                            "Inverse function",
                                            "Elementary function",
                                            "Function"
                                        ],
                                        "data":" Welcome to Functions - part 2 This week we will continue working on Functions. We will start by looking at trigonometric functions like the sine, cosine and tangent and their rules of calculations, followed by exercises to give you the opportunity to apply these rules yourself. Now that you know different types of elementary function you learn how to compose them and the operations of scaling and translation. Then you will learn about exponential functions using a savings account as an example. The concept of inverse function will be needed to define logarithms. The university preview of this week is about Fourier series, used for example in acoustics, optics and signal processing. The student life topic of this week is \"introduction activities\". These activities offer you plenty of opportunities to make new friends and find activities you like! ",
                                        "unit_id":"9879b2afa9304367a24761cb0b36185f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"12cefb445e784f21b55314dacd68974e",
                                "vertical_name":"Welcome to week 2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5bcf88ff004b4980abdcfb9ecac09187",
                        "sequential_name":"2.2 Trigonometric functions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rectangular triangle",
                                            "Discussion forum",
                                            "Trigonometric functions",
                                            "Trigonometric function",
                                            "Unit circle",
                                            "Unit"
                                        ],
                                        "data":" What is a trigonometric function? The trigonometric functions are usually defined as the ratio of two sides in a rectangular triangle. Alternatively you can define the sine, cosine and tangent using the unit circle. Watch the video to see how. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"318420ddeab24e8e98031a1b0921df60",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Big wheel",
                                            "Ferris wheel",
                                            "Adjacent side",
                                            "Square root",
                                            "Trigonometric functions",
                                            "Vertical axis",
                                            "Vertical asymptotes",
                                            "London eye",
                                            "Good luck",
                                            "Periodic phenomena",
                                            "Water waves",
                                            "Horizontal axis",
                                            "Rectangular triangle",
                                            "Unit circle",
                                            "Periodic function",
                                            "Side",
                                            "Degree",
                                            "Measured",
                                            "Theta",
                                            "Horizontal",
                                            "Angle",
                                            "Triangle",
                                            "Pi",
                                            "Half",
                                            "Circle",
                                            "Negative",
                                            "Tour",
                                            "Minus",
                                            "Height",
                                            "Radian",
                                            "Positive",
                                            "Function",
                                            "Tangent"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! In this video we will introduce the trigonometric functions. Trigonometric functions arise in periodic phenomena such as acoustic waves and water waves and also in circular movements such as of a big wheel or Ferris wheel. Here we see the London Eye, also called the Millennium Wheel since it was build at the occasion of the millennium change at the year 2000. At that time it was the world&rsquo;s largest Ferris wheel. It&rsquo;s height is 135 meters, it contains 32 closed cabins, and it takes 30 minutes for one tour. The height of a cabin of the London Eye as a function of time can be described by means of trigonometric functions. Let&rsquo;s assume that at time t=0 a cabin is in its lowest position so that people are able to enter. Furthermore, we assume that the big wheel turns at a constant speed and that it takes 30 minutes for a complete tour. After 7 and a half minutes the cabin has reached half of its maximum height and after 15 minutes it is at his highest position. Then the cabin is going down and after 22 and a half minutes it is back at half of its maximum height. After 30 minutes it is back down at its lowest position. From there the movement is repeated and we end up with a periodic function. The trigonometric functions are usually defined as the ratio of two sides in a rectangular triangle. For the acute angle theta we have: the sine of theta is the length of the opposite side divided by the length of the hypotenuse, the cosine of theta is the length of the adjacent side divided by the length of the hypotenuse, and the tangent is the length of the opposite side divided by the length of the adjacent side, the sine of theta divided by the cosine of theta. In mathematics angles are usually measured in radians instead of degrees. The angle of a complete revolution contains 360 degrees, which is equal to 2pi radians. The number pi is a quite complicated number, which is close to 3 point 1 4. So we have: pi radians equals 180 degrees. This implies that 1 radian equals 180 over pi degrees and that 1 degree equals pi over 180 radians. If we consider a sector with angle theta in a circle with radius r, then the length of the arc s equals theta divided by 2pi times the circumference 2pi r of the complete circle which is the radius r multiplied by the angle theta. If we take a circle with radius 1, then the arc s is equal to the angle theta measured in radians. Since the trigonometric functions only depend on the ratio of two sides of a rectangular triangle, we might draw this triangle inside a circle with radius 1, being the hypotenuse of the triangle. This circle is called the unit circle. Then we have for an acute angle theta that the value of the sine can be found at the vertical axis and the value of the cosine at the horizontal axis. Both are positive for acute angles. The value of the tangent is the indicated height at the vertical line tangent to the circle, which explains its name. In this way we can collect the values of the trigonometric functions for special values of the angle theta between zero and pi over 2. We consider the angles zero, pi over 6, pi over 4, pi over 3 and pi over 2. For the sine, we obtain these values using the vertical axis, and for the cosine we obtain these values using the horizontal axis. Then the value of the tangent is obtained by the ratio of the sine and the cosine. Of course, this does not exist for theta is pi over 2, since then the cosine is equal to zero. Now the unit circle can be used to define both the sine and the cosine for other values of the angle theta as well. For instance, consider theta is equal to 2pi over 3. This angle is indicated in the picture and we have to determine the indicated values at the horizontal and the vertical axis. Note that the value of cosine, at the horizontal axis, is negative and that the value of the sine, at the vertical axis, is positive. In this way we can find the values of the sine and the cosine for all special values of the angle theta in the unit circle. Let us look at an example. If we want to find the value of the cosine of 5pi over 6, we make a turn with an angle of 5pi over 6 in the positive direction, which is counterclockwise, till we have reached 5pi over 6 on the unit circle. Now we look at the horizontal axis and obtain the value minus one half times the square root of 3. For the value of the sine of 5pi over 6, we look at the vertical axis and obtain presenter] the value plus one half. Now the value of the tangent is the quotient of the sine and the cosine which is equal to plus one half divided by minus one half times the square root of 3 which simplifies to minus one third times the square root of 3. Another example. If we want to find the value of the cosine of minus 2pi over 3, we make a turn with an angle of 2pi over 3 in the negative direction, which is clockwise, till we have reached minus 2pi over 3 on the unit circle. Now we look at the horizontal axis and obtain the value minus one half. For the value of the sine of minus 2pi over 3, we look at the vertical axis and obtain the value minus one half times the square presenter] root of 3. Now the value of the tangent is the quotient of the sine and the cosine which is equal to minus one half times the square root of 3 divided by minus one half which simplifies to the square root of 3. Finally, we look at the graphs of the trigonometric functions. Both the cosine and the sine are defined for all real values of the angle, which is the argument of the function. The graph of the cosine looks like this and the graph of the sine like this. Since the tangent is the ratio of the sine and the cosine, it is well defined for all values of x for which the cosine is not equal to zero. At the zeros of the cosine the graph has vertical asymptotes. In the next video we will cover the main properties of these trigonometric functions as well as their rules of calculation. Good luck with the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"6e5ffdc22b7b4c7aab0ab9ea60d2ae57",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"11e0d212a8144c128b42584c9e86b97e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f658723df52c41e9be758bbb4a5e7c1d",
                                "vertical_name":"Video: Definitions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "London eye"
                                        ],
                                        "data":" photo: Kham Tran - www.khamtran.com The London Eye has a maximum height of 135 meters, it contains 32 closed cabins, it turns at a constant speed and it takes 30 minutes for one complete tour. ",
                                        "unit_id":"e805e4521c8645daa995101c3cc40350",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7717db0f8fba4784bd1dceb05a29f829",
                                "vertical_name":"Exercises: Definitions"
                            },
                            {
                                "units":[],
                                "vertical_id":"0140f7d6821a4416b349739ec6c1cc70",
                                "vertical_name":"Exercises: sine and cosine rules"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Trigonometric functions",
                                            "Unit circle",
                                            "Pythagorean theorem"
                                        ],
                                        "data":" What are the rules of calculation for trigonometric functions? Using the Pythagorean Theorem many rules can be derived. Others are more easily interpreted by considering the graph of the trigonometric functions, or by considering their definition in the unit circle. The most important trigonometric formulas are explained in this video! ",
                                        "unit_id":"48dd81c6148e4ef88af7bf03deab0a73",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Double angle formulas",
                                            "Trigonometric functions",
                                            "Rectangular triangle",
                                            "Vertical axis",
                                            "Adjacent side",
                                            "Good luck",
                                            "Unit circle",
                                            "Periodic functions",
                                            "Odd function",
                                            "Triangle",
                                            "Angle",
                                            "Formula",
                                            "Theta",
                                            "Hypotenuse",
                                            "Equal",
                                            "Pi",
                                            "Beta",
                                            "Odd",
                                            "Positive",
                                            "Hold",
                                            "Opposite",
                                            "Lead",
                                            "Periodic",
                                            "Alpha",
                                            "Function",
                                            "Sine",
                                            "Cosine"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back! In the previous video we have introduced the trigonometric functions. From the definitions we can derive several important properties which lead to rules of calculation that we can use to solve equations involving these trigonometric functions. For instance, look at the rectangular triangle with hypotenuse equal to one. Then the Pythagorean Theorem leads to: cosine squared plus sine squared equals one. In fact, this holds for all real theta. From the unit circle, it is clear that both the cosine and the sine are periodic functions. In fact, if we make a complete turn counterclockwise, which is the positive direction, we run through the same values of the angle theta again. This implies that the cosine of theta plus 2pi equals the cosine of theta, and that the sine of theta plus 2pi equals the sine of theta. Moreover, if we make a complete turn clockwise, which is the negative direction, we also run through the same values of the angle theta again. This implies that the cosine of theta minus 2pi equals the cosine of theta, and that the sine of theta minus 2pi equals the sine of theta. This implies that the unit circle can be used to find the values of both the cosine and the sine for all values of the angle theta. Both functions are periodic with period 2pi. The periodicity of the cosine and the sine also becomes clear from their graphs. A shift of 2pi in both the positive and negative direction leads to the same values for both the cosine and the sine. The graph of the tangent shows that this function is periodic too. However, it has period pi instead of 2pi. Back to the rectangular triangle. Consider the indicated angle in the top corner, which equals pi over 2 minus theta. For this angle the opposite side and the adjacent side of the rectangle are reversed, which shows that the cosine of pi over 2 minus theta equals the sine of theta, and that sine of pi over 2 minus theta equals the cosine of theta. The periodicity of both functions shows that these formulas hold for all values of theta. Back to the unit circle and consider the angle theta. Then, reflection in the horizontal axis shows that the cosine is an even function, [click] which means that the cosine of minus theta equals the cosine of plus theta, and that the sine is an odd function, which means that the sine of minus theta equals minus the sine of theta. The graph of the cosine is line symmetric in the vertical axis, which shows that the cosine is even and the graph of the sine is point symmetric in the origin, which shows that the sine is odd. The graph of the cosine also shows that the cosine of pi minus x equals minus the cosine of x and the graph of the sine also shows that the sine of pi minus x equals the sine of x. Finally, we will derive the so-called addition formula for both the sine and the cosine. This is a formula for the sum of two angles. We start with the rectangular triangle with hypotenuse equal to 1. Then the opposite side of the angle alpha equals the sine of alpha, while the adjacent side equals the cosine of alpha. Now we add an angle beta and create two extra rectangular triangles. Consider the lower one with hypotenuse equal to the cosine of alpha instead of 1. Then we easily obtain the lengths of both the opposite and the adjacent side of the angle beta involving this factor cosine of alpha.............. (pause) Then we consider the upper rectangular triangle with hypotenuse equal to the sine of alpha instead of 1. Similarly, we obtain the lengths of both the opposite and the adjacent side of the angle beta involving this factor sine of alpha. So we have this Now we create an extra rectangular triangle with one of the angles equal to the sum of alpha and beta. Note that the hypotenuse of this triangle is equal to 1. This implies that the sine of alpha plus beta is equal to the length of the red sides. This is the addition formula for the sine. For the cosine of alpha plus beta we must have the green side, which is the difference between the blue side below and the orange side above. This leads to the addition formula for the cosine. If we take both alpha and beta equal to x, these formulas lead to the double angle formulas for the sine and for the cosine. This proof only holds for acute angles alpha plus beta. However, both formulas hold for all values of alpha and beta. All formulas derived in this video can be useful in solving equations involving trigonometric functions. Good luck with the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"225d61b7c36f461f83bf0da80d0199b1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"e6d5f62d3e3e4192bc8d18344b2bd308",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"dcd8f665738b41278fbc2d0478302202",
                                "vertical_name":"Video: Rules of calculation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Trigonometric functions"
                                        ],
                                        "data":" Explanation: Other trigonometric functions In this course we only consider the trigonometric functions sin(x), cos(x) and tan(x). However, sometimes the reciprocals of these functions are given a name too (the cosecant, the secant and the cotangent respectively): csc(x)=1sin(x) sec(x)=1cos(x) cot(x)=1tan(x) ",
                                        "unit_id":"c3f16829c955488da60f29c2c791282d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3bcb64a7da664242a8560520cc7430d4",
                                "vertical_name":"Exercises: Rules of calculation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" The calculation in this video contains an error. Do you know what the error is? Share your thoughts in the discussion box below! Note: the angles are calculated using degrees. This is not the error you should catch :) The answer will be released on July 11th. ",
                                        "unit_id":"af75691a6f584282980c7dbd53c8b4dd",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Pythagoras theorem",
                                            "Square root",
                                            "Equation",
                                            "Cosine"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi and welcome to another catch the error exercise. I'll make a calculation and you have to be on the lookout for the mistake. Suppose I know that the sine of 127 degrees equals about 0.8, but I would like to know the cosine instead. Of course I could use my calculator to directly calculate cos(127), but unfortunately I left it at home. But recall there is an equation relating cosine and sine at the same angle, so I can use that equation instead. This relation is sin(x)^2+cos(x)^2 = 1, which is just Pythagoras theorem. Applying it here we find cos(127)^2=1-sin(127)^2 = 1-(0.8)^2 = 1-0.64=0.36. Now we just have to take a square root to obtain the value of the cosine: cos(127) = sqrt(0.36) =0.6. I was very happy with this result but then later on, I checked on my calculator, and this answer turned out to be incorrect. Can you determine the correct answer and see where I went wrong? End of transcript. Skip to the start. ",
                                        "unit_id":"de24a09311f94b0a98b7848f8a6781d2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9d323c0b27294086a0f1a52f0e3da2d5",
                                "vertical_name":"Video: Catch the error"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7bdc8a2215024ffe95e6cac24482d15e",
                        "sequential_name":"2.3 Compositions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Functions can be composed by applying a function to another function. Watch the video to find out how! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"6fda0ba91e30457a93bae526ece91a0b",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Assembly line",
                                            "Chain rule",
                                            "Quadratic formula",
                                            "Square function",
                                            "Line",
                                            "Combine",
                                            "Square",
                                            "Function",
                                            "Equation",
                                            "Order"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Would you like to know how to reduce complicated expressions into smaller simpler pieces? In this video you will learn about the concept of composition, which will help you to break up those complicated expressions in manageable pieces. In order to have a large library of functions to use in modelling real world phenomena we need more than just the basic functions we have been telling you about. You can combine polynomials and sines by, for example adding them or multiplying them. One of the more complicated ways to combine two functions is to compose them. The most tricky rule of differentiation, the chain rule, deals with composed functions, as you will see in week 5. If you consider a function to be a machine with inputs on the left and outputs on the right, a composed function is akin to an assembly line. We take two functions, let us say sine and square and put them in a line. Moving the input x first through the sine the intermediate outcome is sin(x). Then moving this through the square function we end up with (sin(x))^2. Together they form a new function, the composition x^2 (the rightmost function) with sin(x) (the leftmost function). If we had put the boxes in opposite order we would have obtained x goes to x^2 goes to sin(x^2), which is the composition of sin(x) with x^2. Notice that these two expressions are not equal: If we plug in x=1 we obtain either sin(1)^2 = 0.71 or sin(1) = 0.84. The order of operations matter! Of course this is true of a real assembly line as well. A cookie manufacturing line first mixes the ingredients and then puts them in the oven. If it were to first put the ingredients in the oven and then mixes the results you would not buy the resulting cookies. If you have two functions f and g their composition is written as f(g(x)), so the first function on the assembly line is placed inside the last function. The order in which you apply the functions is important. I can&rsquo;t repeat this often enough. If you have a composed function you want to explicitly realize what the inner and outer functions are. I like to designate the inner function by putting a box around it like so. This way I can quickly see the structure of my complicated function. This concept of composition is useful because it allows you to turn complicated problems in multiple simpler ones. As an example, consider the equation x^8+2x^4+1=4. There is no quadratic formula for degree 8 equations. However we can see x^8+2x^4+1 as the composition of f(x)= x^2+2x+1 with g(x)=x^4. Thus we first solve f(p)=4, which gives p^2+2p+1=4, so p=-3 or p=1. Hence f(g(x))=4 whenever g(x)=-3 or g(x)=1. Now we solve the latter two equations, x^4=-3 and x^4=1. The first has no solutions, and the second has solutions x=1 and x=-1. Thus these are the only two solutions to the complicated equation x^8+2x^4+1=4. Now, try to figure out how you can explicitly see the complicated functions from the exercises as compositions. End of transcript. Skip to the start ",
                                        "unit_id":"b261c0fc12774cda8926b372db424eb1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"a84e23af34924d2ea72839d44cf600ed",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e33097efa63544abaec45d20cb917bdc",
                                "vertical_name":"Video: Composing functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"fdccd518ddc8401790a1c85b5d431f6b",
                                "vertical_name":"Exercises: Composing functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear function",
                                            "Function"
                                        ],
                                        "data":" In the next video you will see what will happen to the graph of a function if you compose it with a linear function. ",
                                        "unit_id":"bb7d7fa052134fe5a10ecea8da8c3a6d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Linear functions",
                                            "Vertical direction",
                                            "Average height",
                                            "Horizontal scaling",
                                            "Linear function",
                                            "Vertical scaling",
                                            "Sine function",
                                            "Vertical",
                                            "Equilibrium",
                                            "Composed",
                                            "X axis",
                                            "Average",
                                            "Order",
                                            "Scaling",
                                            "Sine",
                                            "Left",
                                            "Function",
                                            "Factor"
                                        ],
                                        "data":" Start of transcript. Skip to the end. After the previous video you might wonder what the graphs of those composed functions look like. Since you can make very many completely different functions it is impossible to easily describe all of them. In case you compose a function with a linear function you can see what happens to the graph of the resulting function. In this video you will learn how. Linear functions, such as f(x) = 2x+1 can be viewed as having two characteristics: There is the scaling (times 2) and the translation (+1). We will consider these two separately. First we will consider only the translation. What happens to the graph of a function if you compose it with f(x)=x+5? We consider the composition of g(x)=x^2 with f. Remember that it mattered in which order we composed. If we look at f(g(x)) we obtain the function f(x^2) = x^2+5. The graph of this function is equal to the graph of g shifted upward by 5. And indeed if we look at x^2+5 for arbitrary x the result is always 5 higher than the value of x^2, so the graph is shifted upwards. Now we consider the composition in the alternative order: g(f(x)) = (x+5)^2. As you can see the graph is again translated, but now it is shifted 5 to the left. This might seem counterintuitive at first. However, if we consider (x+5)^2, then the value at x=-5 of (x+5)^2 is equal to the value at x=0 of x^2. Thus the graph of the function is the same, but for (x+5)^2 the x-values must be reduced by 5, that is, the graph must be shifted to the left. Let us now consider scaling. We take f(x)=2x and g(x) = sin(x). Then f(g(x))=2sin(x), and the graph is equal to the graph of the sine but stretched by a factor 2 in the vertical direction. Indeed, in general the value of f(g(x)) = 2g(x) is twice the value of g(x); thus the distance of the graph to the x-axis is multiplied by 2. Finally we have to consider g(f(x)) = sin(2x). In this case the graph of the sine is shrunk by a factor of 2 to the y-axis. We see that sin(2x) has the same value at x=1 as sin(x) has at x=2. Thus the graph looks identical but the x-values must be shrunk by a factor 2. You have seen four different compositions with separate results for what happens to the graph: &bull; g(x)+a gives a vertical shift of the graph a upwards &bull; g(x+a) gives a horizontal shift of the graph a to the left &bull; ag(x) gives a vertical scaling by a factor a from the x-axis &bull; g(ax) gives a horizontal scaling by a factor 1/a from the y-axis. Now we will apply these rules for scaling and translation to the graph of the sine function. The resulting functions describe all sorts of waves, like sound and light. The formula for these functions has the form f(t) = a sin(bt+c)+d, where we traditionally think of the variable t as time. The values a and b correspond to scaling in the vertical and horizontal directions. a is called the amplitude and gives the difference between the minimum or maximum of the wave and the average value. 2 pi /b is called the period. It is the time between two waves. The values of c and d correspond to translations. c is called the phase of the wave. The phase of a wave does not change what the wave looks like, but tells us at which time it passes through equilibrium. Finally, d determines the average height, the equilibrium position of the wave. Now you figure out what functions correspond to the graphs in the exercises. End of transcript. Skip to the start ",
                                        "unit_id":"2aeeee2110b14382b2e60a2e64d4e06d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"5af2d402760c4a2a929468830c074e90",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9f1c3b6c7d1143d58c635177a468b731",
                                "vertical_name":"Video: Scaling and translation"
                            },
                            {
                                "units":[],
                                "vertical_id":"96f0bd8e26aa4289941c61c494d8c4e1",
                                "vertical_name":"Exercises: Scaling and translation"
                            },
                            {
                                "units":[],
                                "vertical_id":"26d4c9c5d17046f59e8fc325aba73a6f",
                                "vertical_name":"Interactive exercise"
                            }
                        ]
                    },
                    {
                        "sequential_id":"39cfb776f46c481c9201f2a97dde7e9a",
                        "sequential_name":"2.4 Exponential functions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Grow exponentially",
                                            "Discussion forum",
                                            "Exponential function"
                                        ],
                                        "data":" Things grow very fast if they grow exponentially. In this video you will learn what an exponential function really is. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"c60f91770f6c44109eb6ca831761da11",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Exponential functions",
                                            "Rational numbers",
                                            "Rational number",
                                            "Savings account",
                                            "Population growth",
                                            "Real number",
                                            "Natural number",
                                            "Exponential function",
                                            "Decreasing function",
                                            "Increasing function",
                                            "Constant function",
                                            "Interest rate",
                                            "Positive",
                                            "Called",
                                            "Number",
                                            "Function",
                                            "Interest",
                                            "Give",
                                            "Faster",
                                            "Property",
                                            "Euro",
                                            "Calculation"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! Do you have a savings account at a bank? The interest rate is related to exponential functions. Let&rsquo;s see how. Suppose you have some money, say &euro;200, on a savings account that gives you 3% interest per year. How much money have you got after 10 years? And after 15 years? Or, can we give a function that describes how much money you have after x years? Of course, we assume here that you don&rsquo;t make extra deposits or withdrawals. Ok, let&rsquo;s see. After year 1 you get 3% of 200 euros interest, so you have 200*1.03 equals 206 euros. After year 2 you get interest over these 206 euros [click]: 206 * 1.03 equals 212 euro and 18 cents. We can write this as 200*(1.03)^2. After three years you have 200*(1.03)^3 euros, and so on. So after year x you have 200*(1.03)^x euros. This is an example of an exponential function. In general, an exponential function has the form A b^x. Here A is some nonzero constant, and b is a positive number called the base of the exponential function. The number x is called the exponent. We will assume that b is not equal to 1, since this would just give a constant function. The function we found in the example is indeed of this form: 200 * (1.03)^x, so A equal 200 and b equals 1.03. In the example x is a natural number, because you only receive the interest on your money once a year. In general, we would like to define b^x for any real number x. To do this, we need some properties for exponential functions. We already know calculation rules for power functions. These rules immediately give us rules of calculation for exponential functions with rational exponents. In particular, using the third rule we know what b^x should be if x=p/q, with q larger than 0: it is the q-th root of b^p. So what if x is not a rational number? Well in this case x can be approximated with rational numbers, and for rational numbers we know what to to. For example, what is 2^{\\sqrt{2}}? We can approximate \\sqrt 2 by 1.4, which is the rational number 14/10. Then we can approximate 2^{\\sqrt 2} by 2^{1.4}, which is 2.63 etcetera. Using more decimals for \\sqrt{2} we get a better approximation: By taking a limit we find 2^\\sqrt{2}. Let&rsquo;s have a look at the graph of b^x. First we assume that b&gt;1. We see that [click] f is an increasing function, since, for positive h, b^{a+h} is a factor b^h greater than b^a. In the same way we find that for b&lt;1 the function b^x is a decreasing function. To see how fast an exponential function grows, we compare the graph of 2^x to the graph of x^11. Which function do you think will grow the fastest? Well, look at the graphs: it looks like x^11 grows the fastest. But if we zoom out, we see that 2^x catches up quickly, and still grows much faster that x^11. In fact, b^x with b&gt;1 grows faster than x^n for any number n. A base that is often used for exponential functions is the number e, which is approximately 2.718. Later on in week 5 we will see that the function e^x has the special property that it is its own derivative. Now, let&rsquo;s summarize: an exponential function is of the form A b^x, we have the rules of the calculation for exponential functions, and, an exponential function with b&gt;1 grows faster than any polynomial. You will see that exponential functions occur in many different applications. In the exercises, for instance, you will model interest rates and population growth with exponential functions. End of transcript. Skip to the start. ",
                                        "unit_id":"7cbe5f0c606b4eb1abe7c94510a5f60f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"abdfb0fbf40047e99b201f18d760ae0a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b461f8f6d2b7481db86d0a77b2263fc3",
                                "vertical_name":"Video: Exponential functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"47abb16aff5041768d5a99b8d4b44886",
                                "vertical_name":"Exercises: Exponential functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"f641fea05ed64dbd8f27259007a7fd7a",
                                "vertical_name":"Interactive exercise"
                            }
                        ]
                    },
                    {
                        "sequential_id":"6ce79b26fa3c459c82fae4a05d99afd0",
                        "sequential_name":"2.5 Inverses and logarithms",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Do you ever want to undo what you have done? If they exist, inverses allow you to do so for functions. Watch the video! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"aa626d44a8c94159869596076a455323",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Horizontal line test",
                                            "Positive real numbers",
                                            "Real numbers",
                                            "Horizontal line",
                                            "Positive numbers",
                                            "Good luck",
                                            "Weather forecast",
                                            "Inverse functions",
                                            "Inverse function",
                                            "Injective function",
                                            "Positive",
                                            "Line",
                                            "Intersects",
                                            "American",
                                            "Delft",
                                            "Inverse",
                                            "Function",
                                            "Called",
                                            "Letter",
                                            "Injective",
                                            "Fahrenheit",
                                            "Celsius"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back! If I travel to the U.S. and watch the weather forecast there, I see all temperatures in Fahrenheit. To understand them I need to translate them to Celsius. But if an American comes to Delft in the Netherlands, he has to translate from Celsius to Fahrenheit. This is an example of an inverse function. Converting Fahrenheit to Celsius is a function with domain the square on the left with all possible temperatures in Fahrenheit, and the range is the square on the right with the corresponding temperatures in Celsius. An American visiting Delft wants to go from right to left, that is: convert Celsius to Fahrenheit. This is the inverse function. Note that the domain of f is the range of f^{inv}, and the range of f is the domain of f^{inv}. What exactly is an inverse function? Suppose f is a function with domain D and range R. So f maps an x in D to a number y in R. The inverse function goes in the opposite direction, that is, it maps each number y in the range R back to its original x in the domain D. In other words, if y equals f(x), then the inverse function is a function f^{inv} such that f^{inv}(y) equals x. How can you find the inverse function? For example, take f(x) is equal to 3x. The domain and range both consists of all real numbers. We start by setting y equal to 3x. Now the inverse function maps y back to x, that is f^{inv}(y) is equal to x. If we solve the equation y equals 3x for x, we get x equals 1/3 y, so we see that f^{inv}(y) is 1/3 y. As you know we can use any letter for the variable of a function. Usually we use the letter &ldquo;x&rdquo; for the variable, and we also do this for inverse functions. So we replace y by x, and we find that the inverse of 3x is 1/3 x. You just saw how to find the inverse function: solve the equation y equals f(x) for x, and then interchange x and y. But does this always work? Let us look at the function x^2. To find the inverse function we must solve the equation y equals x^2 for x. This gives two solutions: sqrt{y} and -sqrt{y}. And indeed, you can see that for example y equals 4 occurs twice in the table. So if we only know the value of y, we cannot know what the original value of x was. This means that there is no inverse function for x^2. We see that a function f only has an inverse if, for each y in the range of f, the equation y equals f(x) has exactly one solution. [click] Functions with this property are called &ldquo;injective&rdquo;. There is an easy way to see if a function is injective: [click] the graph of f must intersect any horizontal line in at most one point. This is called the &ldquo;horizontal line test&rdquo;. If we apply the horizontal line test to the graph of x^2, we see that it intersects a horizontal line at more than one point, so this is not an injective function. However, if we take the positive real numbers as domain of x^2, we see that the graph now intersects horizontal lines at just one point, so now it is injective. In this case, for positive y the equation y equals x^2 has exactly one solution, namely x is equal to \\sqrt{y}. Now interchanging x and y, [click] we see that the inverse of x^2 with domain the positive real numbers, is \\sqrt{x}. Let us now look at the graph of an inverse function. Suppose that (x,y) is a point on the graph of the function f, then y equals f(x). Since x equals f^{inv}(y), we find by interchanging x and y, that (y,x) is a point on the graph of f^{inv}. So, the graph of f^{inv} can be obtained from the graph of f by interchanging the x- and y-coordinates, which is the same as reflecting the graph of f in the line y equals x. You just saw that \\sqrt{x} is the inverse of the function x^2 restricted to the positive numbers. So we obtain the graph of \\sqrt{x} by reflecting the graph of x^2 in the line y equals x. In the same way you can obtain the graph of \u2153 x from the graph of 3x. Ok let&rsquo;s summarize: If f is a function with domain D and range R. Then f only has an inverse if f is injective, which can be seen using the horizontal line test If f has an inverse then f^{inv}(y) equals x precisely when y equals f(x), f^{inv} has domain R and range D, and the graph of f^{inv} is obtained from the graph of f by reflection in the line y equals x. In the next video we will use inverse functions to define logarithms. But first, try to find another inverse of x^2 by using a different domain. Good luck! End of transcript. Skip to the start. ",
                                        "unit_id":"2f5f1d6763634f94aa5aecfb8967c74a",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Forum"
                                        ],
                                        "data":" The forum is a great place to share knowledge and to learn from others. Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"3e9124b5db7c431cb61651c35374ecfe",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"42bb5dbd3bb3440cacc502ebbbc1df0b",
                                "vertical_name":"Video: Inverse functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"7a18acc9bb4742fcbf70ec545ade431f",
                                "vertical_name":"Exercises: Inverse functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Inverse function",
                                            "Exponential function"
                                        ],
                                        "data":" A logarithm is the inverse function of an exponential function. Learn more in this video! ",
                                        "unit_id":"fd6f9653ed7f403aafddf03538c11fdb",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Horizontal line test",
                                            "Horizontal line",
                                            "Minus infinity",
                                            "Real line",
                                            "Computer science",
                                            "Exponential function",
                                            "Positive numbers",
                                            "Positive number",
                                            "Natural logarithm",
                                            "Inverse functions",
                                            "Inverse function",
                                            "Line",
                                            "Log",
                                            "Function",
                                            "Positive",
                                            "Faster",
                                            "Base",
                                            "Number",
                                            "General",
                                            "Logarithm",
                                            "Inverse",
                                            "Graph",
                                            "Make"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! In computer science the smallest unit of information is a bit. It can have two values: 1 or 0, which correspond, for instance, to on or off, or true of false. Here we represent a bit by a box which can contain a 1 or a 0, so with one box we can make two combinations. By combining boxes we can make more combinations. For example, there are four possible combinations when we use two boxes. The more boxes you use, the more combinations you can make. You can ask how many combinations can be made with three boxes, or four, or more general, x boxes? Each box can contain two values, so with three boxes you can make 2^3=8 combinations . In general, if we have x boxes we can make 2^x combinations, so the number of combinations is given by an exponential function. Now suppose you want to make a 1000 combinations. How many boxes do you need? In this case you need to solve the equation 2^x = 1000. Just by trying you find that 2^9 is smaller than a 1000, and 2^10 is larger than a 1000. This means that the number x you are looking for, is between 9 and 10, and therefore you need 10 boxes to make at least a 1000 combinations. But what if you want to make at least 10 billion combinations. You really don&rsquo;t want to calculate successive powers of 2 until you passed 10 billion. So, we want to solve the equation 2^x = 10 billion, and to do this we need the inverse of the exponential function 2^x. This inverse is called a logarithm. Let&rsquo;s consider a more general setting. We look at the exponential function with base b&gt;1, so f(x)=b^x. The function b^x is defined for any x, so the domain of f is the whole real line. The range of this function consists of all positive numbers. If we look at the graph of b^x, we see that it satisfies the horizontal line test, that is, the graph intersects a horizontal line in at most one point. So from the previous video we now know that f has an inverse function. This inverse is called the logarithm in base b. From what we know from inverse functions we have the following properties \\log base b is the inverse of b^x, so y=\\log base b of x, precisely when b^y=x. The domain of \\log base b is the range of b^x, and the other way around. For example, \\log base 2 of 8 is equal to 3 because 2^3 equals 8. A logarithm can also be negative, for instance \\log base 5 of 1/5 is equal to -1, because 5^{-1} equals 1/5. In general, \\log base b of b^a equals a. Also, note that \\log base b of 1 equals 0 for any base b, since b^0 is always equal to 1. Although logarithms can be defined for any base b greater than 1, the numbers 10 and e are the most common bases. If the base of the logarithm is the number e, we call it the natural logarithm, and we use the notation \\ln(x). The logarithm in base 2 is also used frequently, especially in computer science, as you saw in the beginning of this video. If the symbol \\log is used without a base, the base should be clear from the context. Most often this means the base is 10. Let&rsquo;s go back to the general function \\log base b of x. Since this is the inverse of the exponential function b^x, the graph of \\log base b of x is the reflection of the graph of b^x in the line y equals x . Note that the logarithm tends to minus infinity, if x tends to zero. Recall that the exponential function b^x grows faster than x^c for any positive number c. As a consequence the inverse of b^x grows slower than the inverse of x^c, which is x^{1/c}. Since d=1/c is also positive for any positive number c, we find that \\log_b(x) grows slower than x^d for any positive number d. If we compare for example the graphs of \\log_2(x) and x^{1/3}, it seems that for x &gt; 3 the graph of x^{\u2153} lies below the graph of \\log_2(x). But if we zoom out, we see that x^{1/3} catches up at some point, and from there it grows much faster. Let&rsquo;s summarize what we know so far about logarithms. First, the logarithm in base b is the inverse of the exponential function b^x, and second, a logarithm grows slower than x^d for any positive number d Let&rsquo;s go back to the question from the beginning: how can we solve 2^x=10 billion? Using a logarithm we find that x is equal to \\log base 2 of 10 billion. How big is this number? If you want to use a simple calculator to find out, you need rules of calculations for logarithms. We look at these rules in the next video. End of transcript. Skip to the start. ",
                                        "unit_id":"609cbb150ae84cde90f8ffd4b7fdbdbd",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments in the discussion forum below. ",
                                        "unit_id":"814b9ed03c434854a6b9ae4125b1dd0b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fc9075bf8eae4c61a0b167c7549a4fb1",
                                "vertical_name":"Video: Logarithms"
                            },
                            {
                                "units":[],
                                "vertical_id":"91225df80fc14d98806e928aed16bc20",
                                "vertical_name":"Exercises: Logarithms"
                            },
                            {
                                "units":[],
                                "vertical_id":"f7b98de856be4bea976b44583d7bf166",
                                "vertical_name":"Interactive exercise"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" From this video you well get some intuition about the rules of calculation for logarithms. ",
                                        "unit_id":"95731aa7d32c4a7cb5e3a520645c5203",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Natural numbers",
                                            "Constant factor",
                                            "Real number",
                                            "Negative number",
                                            "Natural logarithm",
                                            "Approximately equal",
                                            "Formula",
                                            "Calculator",
                                            "Power",
                                            "Log",
                                            "Defined",
                                            "Calculate",
                                            "General",
                                            "Number",
                                            "Logarithm",
                                            "Make",
                                            "Rule",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! In the previous video we defined logarithms and looked at their graphs. In this video we illustrate the rules of calculation for logarithms with examples. If you are interested in the precise proofs of these rules, you can look in the course notes. The rules of calculation will be very useful when you need to solve equations involving logarithms. And, as promised in the previous video, these rules will also help us to calculate logarithms on a simple calculator. Let&rsquo;s start with this rule : the logarithm of a product is a sum of logarithms. Suppose we can make A combinations of bits, that is, of zeros and ones, by putting them in these M boxes. In the previous video you have seen that this means that M equal \\log of A. We have a second set of boxes with which we can make B combinations, so the number of boxes equals N which is \\log of B. If we put all boxes together, we can make A time B combinations, and the number of boxes is N+M. This means that \\log of A times B is equal to M+N which is equal to \\log of A + \\log of B, which illustrates the general rule. Let&rsquo;s take the first set of boxes again: we have A combinations and M boxes, so M equal \\log of A Now assume we have K of these sets. If we put them all together, we have K times M boxes and A^K possible combinations of zeros and ones. This gives \\log of A^K equals K times M, which equals K times \\log of A. So, we can take the exponent out of the logarithm. In general this rule is valid for any real number K, not only for natural numbers. Finally, let&rsquo;s look at the change of base formula. Now we look at a slightly different situation. So far we considered how many combinations we can make with a given number of boxes. That is, if we have N boxes which can all contain two symbols, namely 0 and 1, how many combinations can we make? Let&rsquo;s say we have 10 symbols now; 0, 1, 2 up to 9. How many combinations can we make in this case? Well, if we have 1 box, we can of course make 10 combinations. With two boxes we can make a 100 combinations, and in general, with N boxes we can make 10^N combinations. Let&rsquo;s compare this to the number of combinations with just zeros and ones. Suppose we want to make a 100 combinations. In base 10 we need 2 boxes, and in base 2 we need 7 boxes, since 2^7 is smallest power of 2 larger than a 100. This differs by a factor 2/7 which is 0.29. Now what about a 1000 combinations? In base 10 we need 3 boxes, since 10^3=1000, and in base 2 we need 10 boxes, since 2^{10} is the smallest power of 2 larger than a 1000. This differs by a factor 3/10 which is 0.3. What about 10.000 combinations, or a million? Here are the numbers for these cases. You can see that the ratio is always about 0.3. What does this tell us about logarithms? Well, the first number on the left is the log in base 2 of the number of combinations that we want. Actually, we rounded it up, because the number of combinations that we chose, is not a power of 2. The number on the right is the log in base 10 of the number of combinations. So we have the formula \\log base 10 of A is approximately equal to 0.3 times \\log base 2 of A, which says that logarithms in base 10 and base 2 differ by a constant factor. We can actually calculate the constant factor. If \\log base 10 of A equals C times log base 2 of A, then taking A equal to 2, gives C is equal to \\log base 10 of 2. So the factor 0.3 in our example is actually \\log base 10 of 2. The change of base formula is very useful for calculating logarithms on a simple calculator. Suppose you want to calculate \\log base 2 of 500. On your calculator [click] you see a button log, for the logarithm in base 10. From the change of base formula [click] it follows that \\log base2 of 500 is equal to \\log(500) divided by \\log(2). The result on your calculator is then 8.96 etcetera. If you use the natural logarithm instead, you find the same result. Here you see the rules of calculation for logarithms that you should remember. These will be very useful when you have to solve equations involving logarithms. You should, however, be careful when applying these rules! They only work if all logarithms involved are defined! For example, \\log base 3 of (-3)^2 is equal to 2, because (-3)^2=(+3)^2 and \\log base 3 of 3^2 equals 2. Applying the third rule then gives 2 is equal to 2* \\log base 3 of (-3). But this is nonsense, because the logarithm of a negative number does not exist! Now, have a look at the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"2f71f3c63fbd4df483b3e778e60bd205",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments regarding this video in the discussion forum below. ",
                                        "unit_id":"15137fa156f048f09e14724f2af0cc45",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"91944fcf55ef47bbb0a7ca0045b17834",
                                "vertical_name":"Video: Rules of calculation"
                            },
                            {
                                "units":[],
                                "vertical_id":"afcfb6a1b307428d847398433d6496d3",
                                "vertical_name":"Exercises: Rules of calculation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Horizontal line test",
                                            "Special case",
                                            "Injective function",
                                            "Exponential functions",
                                            "Inverse function",
                                            "Line",
                                            "Inverse",
                                            "Ba",
                                            "Logarithm",
                                            "Bx"
                                        ],
                                        "data":" Explanation: Logarithms in base &lt; 1 We defined the logarithm logb(x) as the inverse function of bx, where we assumed that b&gt;1. But bx is also defined for 0&lt;b&le;1. Assume from here on that 0&lt;b&lt;1. In the figure we see that the graph of bx satisfies the horizontal line test, so bxis an injective function and therefore has an inverse function. This inverse function is logb(x), but now with 0&lt;b&lt;1. So, just as before, y=logb(x)&hArr;by=x. Example log12(2)=&minus;1, since (12)&minus;1=2 Graph Since logb(x) is the inverse of bx, the graph of logb(x) is obtained from the graph of bx by reflection in the line y=x. Relation with log1b(x) Another way to obtain the graph of logb(x) is by relating it to the graph of log1b(x). Write x as ba for some number a, then using rules of calculation for exponential functions gives x=ba&hArr;x&minus;1=(1b)a. Using the definition of the logarithm, we find logb(x)=logb(ba)=a=log1b(1b)a=log1b(x&minus;1). We take the exponent &minus;1 out of the logarithm to obtain the identity logb(x)=&minus;log1b(x). (Note that this is a special case of the change of base formula!) So the graph of logb(x) is obtained from the graph of log1b(x) by reflection in the x-axis. ",
                                        "unit_id":"d277f6ceea914ec58cf8e24b6934f3bd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"825dcbcc854e4abcb2ba4207c25b5fc4",
                                "vertical_name":"Logarithms in base smaller than 1"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3cea883d7bb841559ff79b4d05838418",
                        "sequential_name":"Training sequence",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Trigonometric functions",
                                            "Exponential functions",
                                            "Training sequence"
                                        ],
                                        "data":" In this training sequence you can apply everything you have learned on trigonometric functions, exponential functions and logarithms. This training sequence will help you prepare for the homework, in addition to the previous sections. The results of your answers do not count for your final grade. The exercises are ordered per topic. You can decide to make all exercises or just a few. It's up to you! Have a good training! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"65e508d5ec884b5e9ae2e37bb464bd51",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"efc4b2dc0b394f4f91f0afacd08158a8",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Trigonometric functions"
                                        ],
                                        "data":" Exercise 1: Basics of Trigonometric Functions ",
                                        "unit_id":"6409e8349a3e4b59b9a481ad2b556925",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8009f98161184abba0b914be04ee6e18",
                                "vertical_name":"Exercises: trig. definitions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 2: Trigonometric Simplifications ",
                                        "unit_id":"1fec07f8a0424960869259f4a8ff8805",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"002f3ff668c446ada62221ad8172cb71",
                                "vertical_name":"Exercises: trig. rules of calculation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 3: Addition formulas ",
                                        "unit_id":"4a9929aefef9408f96857a5817b65bcb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ed8d1c3f24954384a5361ddcf5c9e178",
                                "vertical_name":"Exercises: addition formulas"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Measuring heights"
                                        ],
                                        "data":" Exercise 4: Measuring heights ",
                                        "unit_id":"1c44354852d94ff7bfe6c342edbb5a22",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4a51028accd1412b8cacbe5bceb0c6d8",
                                "vertical_name":"Exercises: applications"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 5: Compositions ",
                                        "unit_id":"8722e916d964485d81266e3a076b5915",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"11b80cc512c740489c8a632af0e1ddb4",
                                "vertical_name":"Compositions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Exponential functions"
                                        ],
                                        "data":" Exercise 6: Exponential Functions ",
                                        "unit_id":"831d984e4e824560b1ddf1f321871447",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ab541d9bd61c4b2ab724feedaa8e2a21",
                                "vertical_name":"Exponential functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Exponential functions"
                                        ],
                                        "data":" Exercise 7: Applications of exponential functions ",
                                        "unit_id":"ace85de6476e466da49e68c0bc4adb06",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2f79aa2376664f4c8f6b49910987db85",
                                "vertical_name":"Exponential functions: applications"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Inverse functions"
                                        ],
                                        "data":" Exercise 8: Inverse Functions Solve the following exercises on inverse functions. ",
                                        "unit_id":"83971ed8453b4f2e859671aad57eff10",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5ad0216bd9634dbc8e9661ca95e2b815",
                                "vertical_name":"Inverse functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 9: Logarithms ",
                                        "unit_id":"8e8ba6d999924a1eb54ae1caa32cba3d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0aeef2804d1948f197f7497ec12e224d",
                                "vertical_name":"Logarithms"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 10: LOgarithmic plots ",
                                        "unit_id":"bc131cde76854000851569a002fb8d90",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fdb293fa99c24bdeacf80b419d157c00",
                                "vertical_name":"Application: Log-plots"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8de40eb1636a4a85a9aa734c5aba59dd",
                        "sequential_name":"Summary",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Exponential functions",
                                            "Discussion forum",
                                            "Trigonometric functions"
                                        ],
                                        "data":" This week you learned a lot about trigonometric functions, exponential functions and logarithms. You can watch the summary video below. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"c9c28c90bdba42f98d93dab0e8c063dc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Horizontal line test",
                                            "Linear function",
                                            "Exponential functions",
                                            "Trigonometric functions",
                                            "Adjacent side",
                                            "Unit circle",
                                            "Exponential function",
                                            "Vice versa",
                                            "Vertical direction",
                                            "Vertical asymptotes",
                                            "Average height",
                                            "Good luck",
                                            "Vertical asymptote",
                                            "Right angled triangle",
                                            "Special angles",
                                            "Polynomial function",
                                            "Inverse function",
                                            "Tangent function",
                                            "Natural logarithm",
                                            "Common base",
                                            "Sine function",
                                            "Logarithm base",
                                            "Line",
                                            "Growth",
                                            "Point",
                                            "Period",
                                            "Opposite",
                                            "Divided",
                                            "Important",
                                            "Trigonometric",
                                            "Theta",
                                            "Equilibrium",
                                            "Tangent",
                                            "Function",
                                            "Inverse",
                                            "Symmetric",
                                            "Sin",
                                            "Distance",
                                            "Cosine",
                                            "Logarithm",
                                            "Base",
                                            "Sine"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome to the summary of week 2. This week we considered the trigonometric and exponential functions and logarithms. We first looked at trigonometric functions: that is the sine, cosine and tangent function. There are two basic ways to define the trigonometric functions: By looking at a right-angled triangle and by looking at the unit circle. In a right angled triangle with angle theta the sine of theta is equal to the quotient of the opposite side and the hypotenuse. In the unit circle it is the y-coordinate of a point rotated counterclockwise over an angle theta from the positive x-axis. The cosine equals the adjacent side over the hypotenuse or the x-coordinate in the unit circle. The tangent function is equal to the opposite side divided by the adjacent side, and thus satisfies the relation tan(theta) equals sin(theta) divided by cos(theta). Remember that the inputs of these functions are typically angles and that in calculus we measure angles in radians. The length s of an arc of angle theta equals the radius of a circle times theta. Thus a full circle is 2pi radians, because that is the circumference of the unit circle. To convert degrees to radians you can multiply by a factor of 2pi divided by 360. You should know the values of the sine and cosine for certain special angles. These are given in the table. Using symmetries you can extend this table to other special angles. As you learned last week another important method to visualize functions is to look at the graph. The graph of the cosine is periodic, and you can see it is symmetric in the y-axis, so the cosine is even. The graph of the sine is also periodic, and point symmetric in the origin, so the sine is odd. From the graph of the tangent you can see that the period equals pi and that it has vertical asymptotes at the points where the cosine vanishes. Other important formulas for the trigonometric functions are sin(x)^2 plus cos(x)^2 equals 1, which follows from the theorem of Pythagoras. You also learned how to transform a sine into a cosine and vice versa. You also recalled the addition and doubling formulas, they can be very convenient to solve equations. Then we considered compositions. A composition of two functions means you first apply one function and then another. The order in which you compose can be important as, for example, 2 to the power (x squared) is unequal to (2 to the power x) squared. Recognizing that a function is a composition can be helpful as then you might use a substitution to turn a complicated problem in a simpler one. Typically it is hard to identify what the graph of a composed function looks like, but when you compose a function with a linear function the graph changes predictably. The graph of f(x)+a is equal to the graph of f but shifted &ldquo;a&rdquo; upwards. f of x+a shifts the graph of \"f\" a distance &ldquo;a&rdquo; to the left. &ldquo;a&rdquo; times f(x) stretches the graph a factor of &ldquo;a&rdquo; in the vertical direction, while f of &ldquo;a&rdquo; times &ldquo;x&rdquo; stretches a factor of (one over &ldquo;a&rdquo; ) horizontally. The compositions of a sine function with linear functions typically describe waves. Four important aspects of a wave are: its amplitude, the distance between the equilibrium position and the extremal values; the period, the distance between two consecutive maxima; the phase, which determines when the graph first passes through the equilibrium; and the equilibrium height which is the average height of the function. We also considered exponential functions. Exponential functions describe many processes of growth and decay. An exponential function A times b to the power x has base b and exponent x. Exponentiation is repeated multiplication, and thinking about it that way explains the important rules of calculation. Using these rules of calculation we can also define the exponential functions for exponents x which are rational, negative and even arbitrary real exponents. The graph of the exponential function b to the power x is increasing if b is larger than 1 and decreasing if b is smaller than 1. Moreover for b larger than 1 the function b to the power x grows faster than any polynomial function which is why &ldquo;exponential growth&rdquo; is sometimes used as a synonym for &ldquo;very quick growth&rdquo;. Before we defined the logarithms, which are inverses of the exponential functions, we first considered inverses in a little more detail separately. The inverse of a function f does the opposite of f, that is: f inverse(y) equals x precisely when y equals f(x). An inverse of a function exists only if it never gives the same output for two different inputs. You can check this by using the horizontal line test. If this happens we call the function injective. As inverse functions interchange the role of input and output, the domain of an inverse function is the range of the original f, and vice versa. Moreover the graph of an inverse function is obtained by interchanging the x- and y-axes, that is, reflecting the graph of f in the line x equals y. The logarithm base b is the inverse function of the exponential function b to the power x. If b is unequal to 1, the exponential functions satisfies the horizontal line test, so the inverse exists. For any base, the logarithm has a vertical asymptote at x equals 0. For base b larger than 1 the graph is ever increasing. The rules of calculation for exponential functions translate to rules for the logarithm. The last formula shows that you only need logarithms in one base to calculate all others. Typically only a few bases are used. If the base is not explicitly mentioned it should be clear from the context what the base is. Often this means the base is 10. Another common base is e equals 2.718 etcetera. The base e has the special property that the derivative of e to the power x is e to the power x itself, which makes it very well-suited for use in calculus. The logarithm with base e is called the natural logarithm and is usually written as ln. These were the main topics of this week. Good luck with your homework. End of transcript. Skip to the start. ",
                                        "unit_id":"1bb04c63372742bfb4df6e2c0d66f8f6",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments regarding this video in the discussion forum below. ",
                                        "unit_id":"6ad7cf92a3fc4f54b31c89c1d1ebac98",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1dd82eb6927e442c8f7a8f0cbfd837d1",
                                "vertical_name":"Video: Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0922e11a4fde44bf866ab1ed801871cc",
                        "sequential_name":"Homework week 2",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" You nearly completed the topic \"Functions\". This is the homework for week 2. These problems are graded and are part of your final score. All homework is due on September 29, 23.30 hours UTC. However we recommend you to finish the homework of week 2 on July 11th. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted before posting your question. We kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"5e99ab7c26184c569a0259f455baf8fd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c6cef7c1363841a79c796a1cdfaf1bd9",
                                "vertical_name":"Homework"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 1 ",
                                        "unit_id":"847d4d4e1ab64d4ebe59c303c130e045",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"07c413301e6c4af7b670fc3b72c801d9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"08730d33413744f281660d8e560974bd",
                                "vertical_name":"Trigonometric functions I"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 2 ",
                                        "unit_id":"f54a8ac01d9c437eb53df42ac216d1ab",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"254fca3ec6624c33821bd24a5aa2f2cb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"43e562feb8004cbdbc18c283b2ff8727",
                                "vertical_name":"Trigonometric functions II"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers ",
                                        "unit_id":"c388910ecdf344269831084591e8568b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d4043c3613274a37922e0c3b056b30df",
                                "vertical_name":"Compositions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 4 ",
                                        "unit_id":"d901ed6f977f42758b5d036122d00176",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"2b7ec3e82bae4c33b1bedc413da992ee",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7f490f86c20d4c80bc182c27c7a250d4",
                                "vertical_name":"Scaling and shifting"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 5 ",
                                        "unit_id":"2290486d60b4473dbfea952aed5b877e",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"809266b400af4827a202d2910b262b37",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4ab81fe74cc3404fbfbd91f28e1a3654",
                                "vertical_name":"Exponential functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"410c861b4e264e84b0664563bb1bddb6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f7d633bd383d432e84b2bee70c39f8e6",
                                "vertical_name":"Inverse functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 7 ",
                                        "unit_id":"070c15d286a64549ba214f71abac8a93",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" On the forum below, we kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"73f52746e00741e1874d2bcf2be22f4b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d80b9c5d34954f728d3251ef8bcd0381",
                                "vertical_name":"Logarithms"
                            }
                        ]
                    },
                    {
                        "sequential_id":"20a2b9589e8845ff88a74917547903c9",
                        "sequential_name":"University preview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" This university preview discusses Fourier series: the mathematics of splitting sound into notes of different frequencies. The exercise after the video is just for fun and doesn't count for your final grade. ",
                                        "unit_id":"541610d10d9f472fb8cf00c293b20072",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Fourier analysis",
                                            "Eighteenth century",
                                            "Fourier series",
                                            "Human ear",
                                            "Signal processing",
                                            "Heat flow",
                                            "Iron rod",
                                            "Heat conduction",
                                            "Infinite sum",
                                            "Wave function",
                                            "Sound wave",
                                            "Fourier",
                                            "Function",
                                            "Rod",
                                            "Theory",
                                            "Heat",
                                            "Wave",
                                            "Sound",
                                            "Sum",
                                            "Timbre",
                                            "Temperature",
                                            "Shape",
                                            "Amplitude",
                                            "Frequency"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! This is the sound of a oboe and this is the sound of a trumpet .The frequency and volume of these two sounds is the same, and yet you clearly hear a difference: they differ in timbre. Because of this, we can distinguish between these instruments. Now we know how to catch pitch and volume in numbers: they can be described by frequency and amplitude of the sound wave. But how to quantify timbre? This seems very elusive. And yet, there is a way! If we plot the sound wave as a function of time for both the oboe and the trumpet , you already clearly see a difference in the shape of the graphs. But &lsquo;shape&rsquo; is still a bit vague. What to do? What helps here is the theory of so-called Fourier analysis. It is named after its inventor, Jean-Baptiste Joseph Fourier, a French mathematician, born in the eighteenth century. The theory roughly states the following: suppose you have a periodic continuous function of frequency f . Then this can be written as sum of sines and cosines with frequencies f, 2f, 3f, etc. The shape of the function determines the precise amplitude of each sine and cosine. How does this work? First , we take a sine same frequency as the wave, and scale choose the amplitude such that it best fits the wave function. What that means precisely is a bit technical, I will not explain it here. We do the same for the cosine. The sum of the sine and cosine already approximate the wave. To improve the approximation, we add a sine and cosine of double frequency, each with such an amplitude that the sum fits the sound function the best. And then continue in this way by adding sines and cosines of three times the frequency, etcetera. The more frequencies you take, the better the shape is appoximated! In the limit, you obtain an infinite sum, called the Fourier-series. When it comes to sound, you need only finitely many terms in practice, since the human ear is insensitive to high frequencies. The only choices you make are the amplitudes. In fact, the shape of the graph is precisely encoded by these amplitudes. Moreover, the more frequencies we take into account, the better the shape is approximated. The theory of Fourier analysis is of fundamental importance in acoustics, optics and signal processing. But it&rsquo;s applications are not constrained to analysing periodic signals. In fact, Fourier himself was not studying sound or light, but rather heat conduction through material; if you have an iron rod and heat it at some point, how does the temperature in each point of the rod change over time? You may surprised to learn that Fourier could solve this by writing the temperature profile in the rod as a Fourier series. Do you want to know how to find a Fourier series of a given function? And how it can unexpectedly help you to solve problems like heat flow? At university, you can learn all about it! End of transcript. Skip to the start. ",
                                        "unit_id":"d0cc1f1af3b646469024c930e0ac80ec",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Please post your questions or comments regarding this video in the discussion forum below. ",
                                        "unit_id":"1495b7ad6855474880fd4f200d58f7b7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6c3c788248544e2581c07e18ec1657bb",
                                "vertical_name":"Video: University preview - Fourier series"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Fourier series",
                                            "Fourier theory",
                                            "Periodic function",
                                            "Blue",
                                            "Approximation",
                                            "Function"
                                        ],
                                        "data":" Fourier approximation In the applet below, you see a periodic function (in blue). Even though it is discontinuous, it can be approximated by a Fourier series (in orange). As it turns out, you only need sines to approximate this particular function. Try to approximate the blue graph by the first five terms of the Fourier series as well as you can! You can adjust the coefficients by moving the corresponding slider. You can use the arrow-keys to fine tune a slider. This interactive exercise is powered by GeoGebra: www.geogebra.org Using Fourier theory, you can calculate the coefficients of the best approximation exactly. As it turns out, the result for this particular function is: c1=4&pi;&asymp;1.27c2=&minus;42&pi;&asymp;&minus;0.64c3=43&pi;&asymp;0.42c4=&minus;44&pi;&asymp;&minus;0.32c5=45&pi;&asymp;0.25\u22ee Does this correspond to the coefficients that you found? ",
                                        "unit_id":"0b880b34807041b98322026c909dc20f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"69e6371abf6a4772b19eb19fe21117d0",
                                "vertical_name":"Interactive exercise"
                            }
                        ]
                    },
                    {
                        "sequential_id":"eab38a7b89964bb3a4301edf808b5735",
                        "sequential_name":"* Student life 2 - Introduction activities",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" If you start your study, it is important to make new friends and find activities you like. Universities organise introduction activities. Students of the TU Delft explain the OWEE (general introduction) and the introduction weekend for your study. ",
                                        "unit_id":"1d161cbb24254297993c4ab9c1e21391",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Computer science",
                                            "High school",
                                            "Electrical engineering",
                                            "Information market",
                                            "Kick start",
                                            "Organise",
                                            "Study",
                                            "Association",
                                            "Introduction",
                                            "Fit",
                                            "Introduce",
                                            "Bit",
                                            "Club",
                                            "Join",
                                            "Fun",
                                            "Faculty",
                                            "Choice",
                                            "University",
                                            "Christiaan",
                                            "Start",
                                            "Weekend",
                                            "Marijke",
                                            "Delft",
                                            "Activity",
                                            "Organising"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Last week we spoke about the changes in your life going from high school to university and the importance of planning. Another important new aspect of your student life is making new friends. Today we welcome Marijke Stoel and Christiaan Ouwehand to our studio. Marijke is student of the architecture faculty and is the president of the committee organising the student introduction week for the TU Delft. Christiaan is student of the faculty of Electrical Engineering, Mathematics and Computer Science and helps to organise the introduction weekend for the students of Electrical Engineering. Welcome! Thanks! Nice to be here! First of all: what is this introduction activity that you are organising exactly? We are organising the OWee. It&rsquo;s the introduction week for all new students of the TU Delft for all the different studies. It&rsquo;s a 5 day program to introduce the new students to all the different aspects of Delft and the university. Also it gives them a taste of all the student associations that we have in Delft for sport, music and fun. Each bachelor study association organises a weekend before the OWee to give new students the opportunity to meet and get to know their new fellow students and older students from that study. I help to organise this weekend for my study: Electrical Engineering. We offer all kind of fun activities to help new students make new friends among their fellow students so that they can create groups for the OWee if they are going there. Why would you recommend new students to go to these introduction activities? It is a kick start for you time in Delft. You get to know a lot of new people, so you won&rsquo;t be alone the first weeks in a new city. You will get to know the city and the campus real quick, so you know where to go when the university starts. It&rsquo;s a bit like Marijke said, you&rsquo;re not in high school any more. You&rsquo;re going to build up a new life here in Delft and it&rsquo;s important to get to know the people you will share your study years with, but also the new study environment you will be in. So Here&rsquo;s a short movie showing the OWEE and the information market of the introduction week, where all associations introduce themselves. I can imagine it&rsquo;s a bit overwhelming all these possibilities and choices. Any tips? Try to find something you really like doing already or an activity that you always liked to take up, like rowing for instance. This way you can narrow down your choices. You can also join an association which offers not just one activity, but a whole range of possibilities. On the information market, and also later in the week, you will meet a lot of people who are member of an association. Ask them a lot of questions: like how much time and money will I need to spend on it? When and where do we meet? What commitment is asked? How can I combine this with my study? The better the people and activities of a club fit with your preferences, the better you will fit in there and the more fun you will get out of it. There is no such thing as a wrong choice, just choose the club where you feel most at home. Christiaan, you are member of a study association. What does a study association do? Well the study association organises a lot of serious and fun activities concerning your study. For example you can buy your study books at our association, we organise mentor groups for new students, we organise lunch lectures around interesting topics. Every year we are also organising a study trip abroad to visit several companies and later on we organise activities to help you choose your master study or find a job. Also I like getting a coffee at the study organisation during breaks and chat with fellow students. Thank you very much for showing us the introduction activities. We hope you'll join us! See you at the Owee! End of transcript. Skip to the start. ",
                                        "unit_id":"8991e2862f6e45d1907a54bb9b4bb838",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" Find out which introduction activities your university offers for new students and share it in the forum! ",
                                        "unit_id":"268c6c345be84fdda1de33c191d7ebd1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3278f032daf9486c9d3e98a53d10876c",
                                "vertical_name":"Student life 2: Introduction activities"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"f6bfbe66f50a47429c135ed44afd8c20",
                "chapter_name":"Week 3. Equations (part 1)",
                "sequentials":[
                    {
                        "sequential_id":"d7bee09dce524a139e3d0e0c091173ce",
                        "sequential_name":"3.1 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Proton therapy",
                                            "Square roots",
                                            "Complex numbers"
                                        ],
                                        "data":" Welcome to Equations - part 1 This week we introduce Equations to you by looking at proton therapy. You will learn several ways to solve polynomial equations of degree one and two and higher degrees. Then you will learn how to solve equations involving fractions and square roots. You will have plenty of opportunity to practice. This week's university preview is on complex numbers. In the student life topic of this week two students are interviewed. They combine their study with high-level rowing or running a business. ",
                                        "unit_id":"78fd60874c3942cfb85af9f4bcdd0f9d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ff0bfdecfe824d4db4e10f65f6ffa03d",
                                "vertical_name":"Welcome to week 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Video: Context ",
                                        "unit_id":"a9427b87453a4c1d8d6ad3666f2d0561",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Treatment centre",
                                            "Mathematical modeling",
                                            "Lung tumors",
                                            "Mathematical equations",
                                            "Charged particles",
                                            "Proton therapy",
                                            "Equation solving",
                                            "X ray",
                                            "Technique",
                                            "Treatment",
                                            "Ct scan",
                                            "Cancer",
                                            "Radiotherapy",
                                            "Radiation",
                                            "Mathematics",
                                            "Tissue",
                                            "Proton",
                                            "Energy",
                                            "Leaving",
                                            "Passed",
                                            "Case",
                                            "Target",
                                            "Solve",
                                            "Delft",
                                            "Absorption",
                                            "Beam",
                                            "Bart",
                                            "Equation",
                                            "Higher",
                                            "Advance",
                                            "Box"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Ingrid: Hello! Advances in healthcare are often the result of advances in medical science combined with advances in technology. Proton therapy in the treatment of cancer is an example of such a technological advance. In Delft the building of the first treatment centre for proton therapy in The Netherlands has started. Two Dutch medical centres Erasmus Medical Centre and Leiden University Medical Centre work together with the Delft University of Technology to realize the Holland Particle Therapy Centre. Every year, about 100.000 people in The Netherlands are diagnosed with cancer. More than half of all cancer patients require treatment with radiation in order to halt the growth of their tumors: radiotherapy. Established radiotherapy techniques direct a beam of high-energy X-rays at the cancer site. In recent years, however, more and more patients around the world are treated using a beam of charged particles such as protons to eradicate the tumor. Bart: A major challenge in treating cancer by radiotherapy is to focus as much as radiation as possible at a target, which is the tumor, but at the same time keep the radiation dose deposited in the surrounding healthy tissue as low as possible. In proton therapy, this can be done much more accurately than using X-rays. With the use of more and more advanced techniques in medicine, also mathematics becomes increasingly important. Think of questions like &ldquo;How to construct a 3D picture of a body to locate tumors and organs at risk?&rdquo; &ldquo;What energy and angles should the proton beams have to accurately target the tumor, while leaving the surrounding tissue intact?&rdquo; Answering these questions involves a lot of mathematics. Ingrid: For example, before the start of a radiotherapy treatment, we need to know how large the tumor is and where exactly it is located in the body. For this, doctors use an X-ray technique called X-ray computed tomography, or CT-scan. Bart: Let&rsquo;s look at how the technique of a CT-scan involves mathematics. Suppose we want to detect a tumor in a region of tissue. For simplicity, we divide the region into small boxes. For some tumors, such as lung tumors, the density of the tumor is typically higher than the surrounding tissue. If an X-ray passes through the tissue it will be absorbed; the higher the density, the higher the absorption. By measuring the intensity of the out coming beam, the total absorption in the boxes it passed through can be calculated. From that we learn something about the density of the tissue the X-ray passed through on the way from the source to the detector. For each ray, this is the sum of the absorptions in the separate boxes. But we want to know the absorption in each separate box. To determine this we shoot X-rays from several angles through the tissue, and measure the total absorption in these angles as well. This gives a lot of relations between the quantities that we can measure - the total absorptions- and the quantities that we want to know - the absorption per box. The relations between the absorption in the boxes and the measured total absorptions are mathematical equations that can be solved. In this way the absorption of each box can be calculated and hence the tumor be discovered. Ingrid: This example illustrates the important role of mathematical modeling. Theory provides relations between quantities that you want to know, in this case absorption per box, and quantities that you can measure, in this case, the total absorption of each X-ray leaving the body. But often, these relations are not explicit; you will have to solve equations to express the quantities you need in terms of the quantities that you know. Only after that you can calculate and interpret the results Bart: Another example: when a proton with a certain energy enters a tissue or material, it will slow down and stop reaching a maximal depth. Physics can tell you how deep it will penetrate as a function of the initial energy. But for proton therapy, you need to know the converse: the proton has to reach the tumor, so you know the desired depth. But you want to know the energy that the proton needs to reach the tumor. So you have to solve the equation! Ingrid: Equation solving is essential to extract the quantities you want to know from a model. In the following two weeks we will show you techniques to attack all kinds of equations, and common mistakes that you should avoid. Have fun! End of transcript. Skip to the start. ",
                                        "unit_id":"13f1b1d140d4415ab90f08022c054ffe",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5de0ddc3a4ac4e048c92547176d952c7",
                                "vertical_name":"Video: Context"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8baa06e841df42bc85c146e806b47779",
                        "sequential_name":"3.2 Equations involving polynomials",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Quadratic formula",
                                            "Quadratic equations"
                                        ],
                                        "data":" How do you solve an equation involving polynomials of degree 1 and 2? This video shows you how! For quadratic equations you will learn the techniques of factorization, using the quadratic formula, and completing the square. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"fefb8cad30a44ad488ea9b4953d80539",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Horizontal axis",
                                            "Quadratic equation",
                                            "Formula",
                                            "Left",
                                            "Case",
                                            "Equation",
                                            "Polynomial",
                                            "Form"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! If you throw a basketball, it&rsquo;s trajectory is a parabola, that is, the graph of a second degree polynomial. A lot of models in for example engineering or physics rely on polynomials, so equations involving polynomials also occur often. In this video we look at equations of the form p_1(x)=p_2(x), where p_1 and p_2 are polynomials. For example, this equation. Graphically this means that we try to find the x-coordinates of the intersection points of the two graphs. As a first step we simplify the equation by bringing all terms to the left. We see that the left hand side here is again a polynomial. This is always the case: the equation p_1(x) = p_2(x), reduces to an equation of the form p(x)=0, for some polynomial p. That is, we try to find the zeros of p. We start with the simplest case: p is a polynomial of degree 1. Now we need to solve the equation ax+b=0 for x. Well, you know what to do here: bring b to the right hand side and divide by a. Then the solution is x=-b/a. Next we look at equations of degree 2. First you look whether you can factorize. For example, if we want to solve x^2-8x+12 equals 0, we factorize the polynomial as (x-2) times (x-6). You can check this by expanding. Now we have an equation of the form A times B is equal to 0, so that either x-2 is equal to 0 or x-6 equals 0. This gives x is equal to 2, or x is equal to 6. What if you don&rsquo;t see how to factorize? In this case you can either use the quadratic-formula, or you can complete the square. Let&rsquo;s first use the quadratic-formula. D, which is b^2-4ac, is called the discriminant. We can see from the value of D how many solutions our second degree equation has. If D is negative, the equation has no solutions. Graphically this means that the graph of the second degree polynomial, a parabola, does not intersect the horizontal axis. If D equals 0, there is exactly one solution, and if D is positive, there are two different solutions. For example, we want to solve this equation, so a is 3, b is -8 and c is equal to 4. We plug this into the formula. Then we see that the discriminant is equal to 16, which is positive, so there are two different solutions: namely 2 and \u2154 . The other way to solve a quadratic equation is by completing the square. Let&rsquo;s demonstrate this method with an example. Suppose we want to solve x^2+4x+1=0. We want to find a square of the form (x-r)^2 such that this square gives the first two terms of our equation. So what we do, we Expand (x-r)^2 as x^2-2rx+r^2 now we see that (x-r)^2 - r^2 = x^2 - 2rx So what we want, we want -2r to be equal to 4. That is r = -2 Now we can replace: x^2+4x by (x+2)^2 - 4, we still have the +1 and this is equal to 0 well -4 +1 = -3 =&gt; (x+2)^2 = 3. And now we solve this: x+2 = sqr root of 3 or x+2 = - sqr root of 3 so our solutions are x= -2 +sqr root 3 or x=-2-sqr root of 3 So we found our two solutions. In general, the method of completing the square is as follows: write ax^2+bx+c in the form a*(x-r)^2 + s for certain constants r and s. From this form you can find the solution to the quadratic equation as in the example. Let&rsquo;s summarize: &bull; We can simplify an equation between two polynomials to an equation of the form p(x) equals 0 &bull; If p is of degree 2 then there are three ways to solve the equation p(x) equals 0: &bull; factorize, and if you don&rsquo;t see how to do this then &bull; use the quadratic formula &bull; or, complete the square Now, what can we do with equations of degree 3 or higher? We will consider these equations in the next video. End of transcript. Skip to the start. ",
                                        "unit_id":"8892ecf6525f48e787ddb19a4f9a7871",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"315c542381184a628e2514f1652ccf36",
                                "vertical_name":"Video: Linear and quadratic equations"
                            },
                            {
                                "units":[],
                                "vertical_id":"8b34e68a1cd04dfeb1109145e7b62c1b",
                                "vertical_name":"Exercises: Quadratic equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" How do you solve an equation involving polynomials of degree 3 and higher? This video shows you that there is no general method, but you will learn some useful tools. ",
                                        "unit_id":"2b55f8928f934835b60e1a05374d28a8",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Horizontal axis",
                                            "Good luck",
                                            "Continuous function",
                                            "Quadratic formula",
                                            "Odd number",
                                            "Odd degree",
                                            "Solving",
                                            "Side",
                                            "Number",
                                            "Compare",
                                            "Positive",
                                            "Factor",
                                            "Odd",
                                            "Formula",
                                            "Complicated",
                                            "Guess",
                                            "Negative",
                                            "Degree",
                                            "Equation",
                                            "Form",
                                            "Solve",
                                            "Polynomial"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi, welcome back. In the previous video you saw how to solve equations of degree 1 and 2. In this video we look at equations of the form p(x) equals 0, with p a polynomial of degree 3 or higher. Let&rsquo;s first see if we can already say something about solutions of this equation, without actually solving it. In the video on polynomials in week 1 you have seen that the graph of a polynomial of degree N intersects any line in at most N points. So the graph of p intersects the horizontal axis in at most N points. This means that the number of solutions of p(x) =0 is less than or equal to the degree of p. For example, in the picture you can see that the equation x^3-7x+6 equals 0 has exactly three solutions. Now suppose that the polynomial p has odd degree, that is, p is of the form A_n x^n + lower degree terms, with n an odd number. Let us assume that A_n is positive. We know that, for x far away from 0, the polynomial behaves like A_n x^n. So p(x) is positive if x is a very large positive number, and p(x) is negative if x is much smaller than 0. Since a polynomial is a continuous function, it has the intermediate value property, which guarantees that p becomes zero somewhere, as you can also see in the graph. This means that the equation p(x) equals 0, has at least one solution if the degree of p is odd. Note that we can of course use the same arguments for negative values of A_n. If p has even degree, it can happen that there is no solution at all. For example, the equation x^4+1 equals 0 has no real solutions. Let&rsquo;s now try to solve the equation p(x) equals 0. You may be surprised to hear that if p is of degree 3 or 4 there are formulas to solve this. However, they are much more complicated than the quadratic formula. The question is, if we don&rsquo;t want to use these complicated formulas, can we still solve equation of degree 3 or higher? And yes, in some cases we can. We want to factorize the polynomial, but most of the times this is difficult. However, sometimes we can guess a solution, which gives us at least one factor of the polynomial we are looking at. For example, we want to solve x^3-7x+6 equals 0. In this case it is not hard to see that x equals 1 is a solution. I claim that this means that the polynomial contains a factor (x-1), that is, the polynomial can be written in the form (x-1) times a polynomial of degree 2. To find the coefficients A, B and C of the unknown polynomial, we expand the left hand side, and then we compare the coefficients with the original polynomial. We start with the coefficient of x cubed. This immediately gives A equals 1. Next we look at the coefficient of x squared. This gives B &ndash; A equals 0. We substitute A is 1 in this equation, and then we find that B is equal to 1. Finally, the coefficients of x give us the equation C-B equals &ndash; 7. Substituting the value of B here, we find that C is equal to -6. We can also compare constant terms on both sides. This gives us the equation &ndash;C equals 6, which indeed corresponds to the value of C that we found. So, we factorized our polynomial as (x-1) times (x^2 + x &ndash; 6). Now we continue solving the third degree equation with the factorized polynomial. The factor x-1 gives the solution x equals 1, which we already knew, so it remains to solve the second degree equation x^2+x-6 equals 0. We know how to do this! In this case we factorize as (x+3) times (x-2), and then we obtain two more solutions: x equals -3 and x is equal to 2. Let&rsquo;s summarize what you&rsquo;ve seen in this video. We consider the equation p(x) equals 0, where p is a polynomial. &bull; If p has degree N, then there are at most N solutions &bull; If N is odd, there is at least one solution &bull; And if N is even, there might be no solution at all For solving p(x) equals 0 &bull; You first try to factorize p &bull; And if you don&rsquo;t see how the factorize, try to &ldquo;guess&rdquo; a solution A and extract a factor x-A Note that there is no guarantee that this always works! In the exercises you can practice solving equations involving polynomials. Good luck! End of transcript. Skip to the start. ",
                                        "unit_id":"9d96ee0106c54a93ae72fe4d75b40e20",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"7c7b49a5a619458c920fd0d7c76a0246",
                                "vertical_name":"Video: Polynomials of degree 3 and higher"
                            },
                            {
                                "units":[],
                                "vertical_id":"d14549d64f2e4a0b8156f07e66fe3337",
                                "vertical_name":"Exercise: Cubic equation"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5110054950dd4f1392f2ea6ad2e2af58",
                        "sequential_name":"3.3 Equations involving rational functions and square roots",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" How do you solve an equation containing fractions? This video shows you the general idea: Simplify, Solve and Check. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"8e4e831585a5464c87ddcb68725f5de1",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Rational functions",
                                            "Solving equations",
                                            "Real world",
                                            "Quadratic formula",
                                            "Polynomial equations",
                                            "Quadratic equation",
                                            "Polynomial equation",
                                            "Rotterdam",
                                            "Side",
                                            "Solving",
                                            "Ugly",
                                            "Trip",
                                            "Make",
                                            "Left",
                                            "Equation",
                                            "Factored",
                                            "Simplified",
                                            "Polynomial",
                                            "Simplify",
                                            "Time",
                                            "End",
                                            "Water",
                                            "Solve",
                                            "Check",
                                            "Speed"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome. We want to solve more complicated equations than just the polynomial ones. Other equations often involve ugly terms such as fractions, roots and logarithms. In this video you will learn how to deal with equations involving fractions and see the potential pitfalls. As an application of an equation containing rational functions, consider the ferry between two cities in the Netherlands, Dordrecht and Rotterdam. The ferry's speed with respect to the water is v. The water flows with a speed of 8km/h. On the way downstream the speed of the ferry with respect to the banks is increased with the speed of the water, and becomes v+8 km/h. On the way back the speed is decreased by the same speed, thus it is v-8 km/h. The distance between these two cities is 30 km. How high should v be such that the return trip takes 2 hours? You might think 30km/h as we need to travel 60km in 2 hours, but let us take a closer look. We can rewrite this question as an equation as follows. The time taken for the trip to Rotterdam equals 30/(v+8) as the speed in this direction was increased by the flow of the water. The time for the return trip is 30/(v-8) as the speed is decreased on the way back. The total time is thus 30/(v+8) + 30/(v-8). This should equal 2 hours, so we obtain the given equation The most basic rule when solving equations is \"Try to make things simpler\". Thus the first thing we do is to simplify the equation. The \"ugly\" part of this equation is that there are fractions. To get rid of the fractions we multiply by both denominators. That is: we multiply the entire equation by (v-8) and (v+8). This gives \\[2(v-8)(v+8) = 30(v+8) + 30(v-8).\\] I have not expanded yet, because factored expressions can be easier to work with: Only expand if you have a good reason. Notice that you obtain a quadratic equation upon expanding, so we can solve this equation using the quadratic formula or by completing the square. No simple solution without expanding seems evident, so let's expand anyway. We obtain 2(v^2-64)=60v. Dividing both sides by two and then simplifying gives v^2-30v-64=0. Do you see a factorization of this polynomial? If not you can always complete the square or use the abc-formula. However observing this equation equals \\[(v-32)(v+2)=0\\] shows the answers are v=-2 and v=32. You should always check your solutions by plugging them back into the original equation. If we plug these results into the original equation we obtain for v=-2 that the equation is valid. And for v=32 as well. In summary we have found our solutions by first simplifying the equation, solving the simplified equation, and checking the results in the original equation. In our application the boat must clearly have a positive speed so the first solution is nonsense, and we see that the boat has to cruise slightly faster than 30 km/h to compensate for the flow of the water. In the real world the flow of the river is a little less strong and the ferry just turns its engine faster or slower to make both trips last exactly one hour. Recall rational functions are quotients of two polynomials. If you have an equation involving rational functions and multiply by the denominators you will always end up with a polynomial equation. You can solve these with the techniques of the video on polynomial equations. Thus in principle you can always solve these. End with checking your results in the original equation. In short the method consists of: Simplify, Solve, and Check. I&rsquo;ll now show you why it is so important to always check your solutions. Consider the equation \\frac{2x}{x-1} = \\frac{x+3}{x^2-1} We multiply by the denominators (x-1) and (x^2-1) to obtain 2x(x^2-1) = (x+3)(x-1) This gives the cubic equation 2x^3-2x = x^2+2x-3, which becomes 2x^3-x^2-4x+3=0. Now we have simplified the problem to a polynomial equation. I already factored this polynomial for you, you can check the result yourselves, and obtained (x-1)^2(2x+3)=0 Thus we find the solutions x=-3/2 and x=1. Remember we always need to check our solutions. We first check x=-3/2 and both the left and the right hand side become 6/5 so this is indeed a valid solution. However a problem occurs when we plug x=1 into the equation, because the left hand side becomes 2/0 and the right hand side 4/0. Indeed, x=1 is outside the domain of both the left and the right hand side and can therefore not be a solution to this equation. The problem occurred because we multiplied by (x-1) which becomes 0 for x=1. That an equation is valid after you multiply both sides by zero is not surprising. To summarize: the basic idea of solving complicated equations is always to simplify solve and check End of transcript. Skip to the start. ",
                                        "unit_id":"6c856af1ed3243e39951082a7e77fad7",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b409f1dee4964c30bbf961dbd311e34c",
                                "vertical_name":"Video: Equations involving rational functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"750ef46fbe5c4a8bbe247844b3a8e362",
                                "vertical_name":"Exercises: Equations involving rational functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square roots"
                                        ],
                                        "data":" How do you solve an equation containing square roots? The general idea is again to Simplify, Solve and Check. ",
                                        "unit_id":"29db040109ad4d32bddebbaeed3a8758",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Solving equations",
                                            "Square root",
                                            "Square roots",
                                            "Polynomial equation",
                                            "Minus minus",
                                            "Sqrt",
                                            "Square",
                                            "Squared",
                                            "Minus",
                                            "Expanding",
                                            "Equation",
                                            "Side",
                                            "Step",
                                            "Check"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Remember the basic idea for solving equations: simplify, solve and check? In this video you will learn to deal with the complexity of square roots. Consider the equation 3 = sqrt(x^2+3) -x. Step 1 is to simplify, so we want to get rid of the ugliest term in this expression, the square root. How do you remove a square root? Well, by squaring obviously. Taking the square directly in this equation will not work. The square of the right hand side contains the square of the square root, the square of minus x, but also the product of the square root and minus x. We still have a square root and did not succeed in simplifying the equation. The best option is to isolate the square root on one side of the equation and then square. This gives x+3=sqrt(x^2+3), which, after squaring, [click] becomes (x+3)^2 = x^2+3. This is a polynomial equation, so now we know how to proceed. Expanding the brackets and simplifying gives us 6x+6=0. The solution is x=-1. We solved the equation and the final step is to check this solution in the original equation. Remember that minus minus is plus, so this gives 3=sqrt(1+3) +1 which is correct. The question arises what problems might arise when you square both sides of an equation. To show what can go wrong, let us consider the equation -1 = sqrt(x^2+3)-x Isolating the square this becomes x-1 = sqrt(x^2+3), squaring both sides gives (x-1)^2 = x^2+3 and the square root is gone. Expanding brackets and bringing everything to one side shows x=-1 again. But plugging in x=-1 in the equation we obtain -1=3 which is not correct! Apparently this equation has no solutions. How can it be that we found a false solution? We have introduced a solution to our equation at some point in our calculation. If we plug x=-1 into all our steps we can see where the problem occurred. We see that it occurred when we squared both sides of the equation. Before squaring the equation said -2=2, and after squaring 4=4. More generally, if the two numbers (x-1) and sqrt(x^2+3) are equal then their squares are also equal. Thus any solution to the equation x-1 = sqrt(x^2+3) is also a solution to the squared equation (x-1)^2 = x^2+3. However, the other way around is not true: if the squares are equal than the original numbers need not be. And this is exactly what happens in our equation. By squaring an equation you can introduce extra solutions. Fortunately you can easily check if this happens by plugging your solutions into the original equation. Remember to always simplify, solve and check! Try to solve the examples in the exercises yourself. End of transcript. Skip to the start. ",
                                        "unit_id":"26c1fd6e191d45bd94d806efb385b2e3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fed2f508f3fd4a55ae68bab1f11f7595",
                                "vertical_name":"Video: Equations involving square roots"
                            },
                            {
                                "units":[],
                                "vertical_id":"8520d66d2ca246d8a9a26b5423e8ca55",
                                "vertical_name":"Exercises: Equations involving square roots"
                            }
                        ]
                    },
                    {
                        "sequential_id":"9c7d3910740643788c38774c2d10c6a2",
                        "sequential_name":"3.4 Overview of strategies",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Equation"
                                        ],
                                        "data":" What are good strategies to solving an equation? This video shows you an overview of techniques! Simplify the equation! Solve it! and Check your answers in the original equation! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"629491e231f244258490915373c49512",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Good luck",
                                            "Solving equations",
                                            "Quadratic equations",
                                            "Cube roots",
                                            "Cube root",
                                            "Common factor",
                                            "Square root",
                                            "Square roots",
                                            "Quadratic equation",
                                            "Square function",
                                            "Inverse function",
                                            "Cube",
                                            "Function",
                                            "Make",
                                            "Factor",
                                            "Method",
                                            "Move",
                                            "Identify",
                                            "Square",
                                            "Power",
                                            "Possibility",
                                            "Standard",
                                            "Variable",
                                            "Strategy",
                                            "General",
                                            "Inverse",
                                            "Derivation",
                                            "Equation",
                                            "Step"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome! You may wonder: is there a general recipe that tells how to solve a given equation? The answer is, unfortunately, no. But as you have seen in the previous videos of this week, there are techniques that you can use to attack equations, and several good habits that help you avoid making mistakes. Given an equation, the following steps are important to solve it: &bull; Simplify the equation to a form that you know how to solve; &bull; Solve it and identify the solutions; &bull; Check your solutions In this video, I&rsquo;d like to give you a general overview of these steps, and summarize techniques and issues that we have encountered. To solve an equation, the main step is to simplify or reduce it to a form that you know how to solve. The idea is to transform the equation into one or several simpler equations, in such a way that any solution to the new equations is also a solution to the old equation. Let&rsquo;s look at some strategies. The main strategy is sometimes called the balance method: perform the same operation on both sides to simplify the equation. I Let me give you a list of examples of common operations: &bull; Add or subtract the same term on both sides. In the example, we can add 3 to both sides, and solve the equation. &bull; Divide by a common factor. In thethe example, we can divide by 1+sqrt(x). &bull; Multiply to get rid of denominators. Here, multiply by 1 + x^2. &bull; Square to get rid of square roots. &bull; More generally, to get rid of a standard functions, like power functions, apply its inverse if it exists. Here we use that the cube root is the inverse of the cube function. I would like to add some warnings: be careful if you divide by a common factor. In the example, we divided by 1+sqrt(x). This is possible, since 1+sqrt(x) is non-zero for all x. But consider the example x times (x-4) equals 5 times (x-4). As long as x-4 is nonzero, you can cancel this factor and obtain x=5. This is a solution. But don&rsquo;t forget the possibility x-4=0, that is, x=4. This is a solution as well! In general: if your equation has the form A ties C = B times C, where A,B and C are certain expressions, then you can simplify this to A=B or C=0. Furthermore, be careful if you want to invert a function. In the example, we could get rid of the cube by applying a cube root. No problem there. But be careful when it comes to squares! For example, consider the equation x^2=(x-2)^2. I have seen many students make the following mistake: to get rid of the square, we take the square root on both sides, and end up with x=x-2, which has no solution. But there is a solution: namely x=1, as you can check. What is the problem here? Well, we are trying to get rid of the square function by applying an inverse function. But the square function is not invertible! In general, if A^2 = B^2 for some expressions A and B, then either A=B, or A=-B. If you forget the second, you may miss solutions. So in this example, we have to add the possibility x=2-x, which indeed has x=1 as solution. Let&rsquo;s move on to other simplification strategies. You have already seen factorization. For example, the equation x^2-5x+4 can written as (x-1)(x-4)=0. This implies that either x-1=0 or x-4=0, hence x=1 or x=4. This method is not limited to quadratic equations. In general the following holds: if you can rewrite your equation as AB=0, then either A=0 or B=0. Of course, this only works if AB is 0. For other constants, there is no easy way to factorize! The last technique I&rsquo;d like to mention is substitution. Let me show an example. Consider the equation x^6-3x^3-4=0. This is a high degree polynomial equation. However, we can rewrite it as follows. Note that x always occurs with a third power. Now we introduce a new variable, p=x^3. We can rewrite the equation in terms of p: p^2-3p-4=0. We call this substitution. This is a quadratic equation, which you can solve using your favorite method. We obtain 2 solutions: p=-1 or p=4. Now we can return to the original variable x we get x^3=-1 or x^3=4. We can then take cube roots and find x=-1 or x=cubed root of 4, which I cannot really simplify. I cannot give you a general rule that tells when to use which technique. This is a matter of practicing a lot. So make sure you have a look at the exercises! Once you have reduced your equation to a simple equation, or several simple equations that are standard to solve, solve everything and collect the solutions. As a last step: check your solutions by plugging them back into the original equation!!! Why? Well, first of all, you may have made errors, and this is the way to detect them. But even if you did not make mistakes, you may have obtained false solutions in your derivation. For example, consider the equation sqrt(x)=-3. You can square both sides to obtain x=9. That is a legitimate move, [click] but check that x=9 is NOT a solution of the original equation. What&rsquo;s the mistake? Well, our derivation tells us that IF x is a solution to the first equation, THEN it is also a solution of the second. But in general, the reverse does not have to be true. And in this case, it isn&rsquo;t! This is not a problem, as long as you are aware that the new equations in your derivation may have more solutions than the first one. You can easily identify the false solutions by simply checking. I hope that by watching this video, you have an idea of useful techniques and common mistakes when it comes to solving equations. But the best way to learn it is by lots of practice! So good luck with the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"0c0d3b8e5ed54e85addf052fae56d448",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8cb24477e8614b27ad92ace3e2713473",
                                "vertical_name":"Video: Strategies for equation solving"
                            },
                            {
                                "units":[],
                                "vertical_id":"75cb576bec1442ef8552ede04c51abb3",
                                "vertical_name":"Exercises: Strategies for equation solving"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Absolute values",
                                            "Ascending order",
                                            "Training sequence",
                                            "Absolute",
                                            "Exercise",
                                            "Solve",
                                            "Equation"
                                        ],
                                        "data":" quations involving absolute values In the video, you saw that to simplify equations, it is sometimes necessary to split it into separate cases. In particular, this may be necessary if the equation involves products or squares of expressions. Another situation in which you have to split the equation is when it involves the absolute value function. Remember the definition: |x|={&minus;x for x&lt;0x for x&ge;0 The function is also denoted by abs(x). So for any expression A, it follows that |A|=A or |A|=&minus;A. This helps to get rid of absolute values in equations, by splitting the equation into separate cases. For example, if the equation has the form |A|+|B|=C, for certain expression A,B and C, then this can be split into four cases: A+B=C,A&minus;B=C,&minus;A+B=C,or&minus;A&minus;B=C. You will have to solve all four equations! Note, many solutions that you find may be false solutions, so always check! In simple cases, you can take a slightly more sophisticated approach and consider the equation on separate intervals. For example, consider the equation |x|+|x&minus;1|=3. Note that the following holds: |x|={&minus;x for x&lt;0x for x&ge;0and|x&minus;1|={&minus;(x&minus;1) for x&lt;1x&minus;1 for x&ge;1 So it suffices to consider the following three cases: x&lt;0. The equation then reads: &minus;x&minus;(x&minus;1)=3, that is, &minus;2x+1=3. The solution is x=&minus;1, which indeed lies in the interval under consideration. 0&le;x&lt;1. The equation then reads x&minus;(x&minus;1)=3, that is, 1=3. This has no solutions! x&ge;1. The equation then reads x+(x&minus;1)=3, that is, 2x&minus;1=3. The solution is x=2, which indeed lies in the interval under consideration. So we find: x=&minus;1 or x=2. In the exercise below, you can practice solving equations involving absolute values. For more such equations, see the training sequence. Exercise 3 Solve the equations below. There may be no solutions, one solution or several solutions. If there are no solutions, check the box before \"There are no solutions\". Otherwise, check as many boxes as there are solutions, starting from x1, and enter the solutions. Multiple solutions should always be entered in ascending order: x1&lt;x2&lt;\u22ef ",
                                        "unit_id":"d78a075776da4cd2ab918091c691b98e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0711397ef6614e9cb8cb3907ead77a00",
                                "vertical_name":"Equations involving absolute values"
                            },
                            {
                                "units":[],
                                "vertical_id":"9c54df59254e40ec9d178c8604bdd6e2",
                                "vertical_name":"Interactive exercise"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" The calculation in this video contains an error. Do you know what the error is? Share your thoughts in the discussion box below! The answer will be released on July 18th. ",
                                        "unit_id":"89c15748855e44098fe32edd81139a25",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" Start of transcript. Skip to the end. Welcome to another &ldquo;Catch-the-error&rdquo; video. In this video I will show you that 1 is equal to 2. We start with the identity A=B where A can be any number, except 0. now we multiply both sides by A and then we subtract B^2, Now we factorize both sides (A+B) (A-B) = B(A-B), As you can see we have A-B at both sides, so we get rid of that. So now we have: A + B = B And because we asumed A = B, we replace B by A, So we get 2A=A. So 2=1. So now we proved that 2=1 Clearly, we must have made an error somewhere. Did you see the error? End of transcript. Skip to the start. ",
                                        "unit_id":"384ca1b8948741239bbc3de30f30d760",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8017192e3a3c491d968e25324493d2f2",
                                "vertical_name":"Video: Catch the error"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7e5751ff62144590808ab657e6af0320",
                        "sequential_name":"Training sequence",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Solving equations",
                                            "Discussion forum",
                                            "Square roots",
                                            "Training sequence"
                                        ],
                                        "data":" In this training sequence you can apply everything you have learned on solving equations containing polynomials, fractions and square roots. This training sequence will help you prepare for the homework. The results of your answers do not count for your final grade. Have a good training! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"b0b1372637554f48833f09a4a4e6d6c8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"81a4c815c1294216940d396ba05830eb",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Quadratic equations",
                                            "Quadratic formula"
                                        ],
                                        "data":" Exercise 1: Quadratic equations Solve the following quadratic equations. Use the quadratic formula, completing the square and factorization! ",
                                        "unit_id":"97f43747de9140deb135f282b5f62d0d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4fb14f3b67f543d588c9351bfcf7e6ff",
                                "vertical_name":"Quadratic equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Quadratic equations",
                                            "Quadratic formula"
                                        ],
                                        "data":" Exercise 1: Quadratic equations Solve the following quadratic equations. Use the quadratic formula, completing the square and factorization! ",
                                        "unit_id":"90317192a58e4dae9e00648fd07f8818",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"383f24cacde34e398027612b965a8a24",
                                "vertical_name":"Equations involving higher degree polynomials"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order",
                                            "Degree",
                                            "Higher"
                                        ],
                                        "data":" xercise 2: Equations involving higher degree polynomials Solve the following equations involving polynomials of degree three or higher. There may be no solutions, one solution or several solutions. If there are no solutions, check the box before \"There are no solutions\". Otherwise, check as many boxes as there are solutions, starting from x1, and enter the solutions. Multiple solutions should always be entered in ascending order: x1&lt;x2&lt;\u22ef ",
                                        "unit_id":"184832d6601246318a03551bd30269f2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ff465838396743abbf45a5b9bc4015f6",
                                "vertical_name":"Equations involving higher degree polynomials"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" Exercise 3: Equations involving rational functions Don't forget to enter possible multiple solutions in ascending order. ",
                                        "unit_id":"21adc43e3a8f469b8ffc475211750a46",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fcdf5552bbbb43e199b5a53c238b819b",
                                "vertical_name":"Equations involving rational functions I"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" EXERCISE 4: MORE EQUATIONS INVOLVING RATIONAL FUNCTIONS Don't forget to enter possible multiple solutions in ascending order. ",
                                        "unit_id":"ecf42717b1844e04add16821696cee57",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"43e7f2ca9139471d8598c2125c816ade",
                                "vertical_name":"Equations involving rational functions II"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" Exercise 5: Equations involving radicals Don't forget to enter possible multiple solutions in ascending order. ",
                                        "unit_id":"94be32deb70f488d987f0a4314356bd6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e1be657b42f943ff83f035d71126df1e",
                                "vertical_name":"Equations involving radicals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" EXERCISE 6: EQUATIONS involving absolute values Solve the following equations involving absolute values for x. There may be no solutions, one solution or several solutions. If there are no solutions, check the box before \"There are no solutions\". Otherwise, check as many boxes as there are solutions, starting from x1, and enter the solutions. Multiple solutions should always be entered in ascending order: x1&lt;x2&lt;\u22ef ",
                                        "unit_id":"036d098b85204f818d2c133c2f522c47",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6525af852ed24f08babda9fed063cbc5",
                                "vertical_name":"Equations involving absolute values"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" Exercise 7: MOre equations with polynomials There may be no solutions, one solution or several solutions. If there are no solutions, check the box before \"There are no solutions\". Otherwise, check as many boxes as there are solutions, starting from x1, and enter the solutions. Multiple solutions should always be entered in ascending order: x1&lt;x2&lt;\u22ef ",
                                        "unit_id":"c0c43be9c24a40cd8ee20648f367ca48",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"414296a2735e4109bc139faf492150e1",
                                "vertical_name":"More polynomial equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 8 In this exercise, we will solve the following equation using substitution: (1&minus;x)3=4&minus;4x. ",
                                        "unit_id":"5b447d8e9cca449d8feff2f70f019772",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a5e1397cebc5469b9402ce2384f8723b",
                                "vertical_name":"Substitution method I"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polynomial equation",
                                            "Equation"
                                        ],
                                        "data":" Exercise 9 Suppose you have to find all solutions to a given polynomial equation. If you know one solution, say \\(x=a\\), the equation can often be simplified by making a substitution \\(u=x-a\\). We will illustrate this by the following polynomial equation: \\[ x^3-2x^2-5x+6=0.\\] You can check that \\(x=1\\) is a solution, so we will try the substitution \\(u=x-1\\). ",
                                        "unit_id":"573412993cfe4da1a0a1d68cc64cfcb0",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b115e25c8db94aa08a970da530b39675",
                                "vertical_name":"Substitution method II"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Domain"
                                        ],
                                        "data":" Exercise 10: Domain and range As was mentioned in week 1, investigating the maximal domain or range of a given function often involves solving inequalities. In this exercise, you will see a few examples. ",
                                        "unit_id":"fbfd9a7b455c4d34a53648567d4d96ea",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"21d7a84af95d49d594fb334f92097738",
                                "vertical_name":"Domain and range"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d3de912c90474787934e8f4a7c2fb333",
                        "sequential_name":"Summary",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Square roots",
                                            "Discussion forum"
                                        ],
                                        "data":" In this section you can watch a summary on everything you learned this week on equations involving polynomials, fractions and square roots. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"ba0e1226214c4724a22a741c36782e06",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Trigonometric functions",
                                            "Solving equations",
                                            "Polynomial equations",
                                            "Polynomial function",
                                            "Quadratic formula",
                                            "Higher degree",
                                            "Square roots",
                                            "Form",
                                            "Polynomial",
                                            "Formula",
                                            "Reduces",
                                            "Square",
                                            "Degree",
                                            "Remember",
                                            "Simplify",
                                            "Equation"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! This week we looked at solving equations. You have seen useful techniques to attack several types of equations and common mistakes that you should avoid. To get you ready for the homework, let me summarize the most important topics of this week. For any equation that you encounter remember to take the following steps: simplify, solve and check! Simplify means: reduce your equation to one or several equations that you know how to solve. There is no general recipe that tells you how to do that, but there are some useful techniques: the balance method; try to simplify the equation by applying the same operation on both sides. Be careful, you may have to separate cases! If the equation has the form AC=BC, then this reduces to A=B or C=0. Equations of the form A^2=B^2 can be reduced to A=B or A=-B. Some equations can be factorized: that is, written in the form AB=0. In this case the equation reduces to two simpler equations A=0 or B=0. Finally, you can sometimes use substitution: rewrite the equation in terms of a new variable to simplify it. Once the equation has been reduced to several easy equations, solve them and gather the results. Finally, always check the solutions! This way you can see whether you made mistakes. And even if you didn&rsquo;t, you may have picked up false solutions along the way! This is the general story, but we also looked at specific types of equations. We started by considering polynomial equations. Remember that any such equation can be written as P(x)=0, where P(x) is a polynomial function. The most important cases are those where P has degree 1 or 2. The degree 1 equation has the form ax+b=0, with \"a\" nonzero. The solution is simply x=-b/a. The degree 2 equation has the form ax^2+bx+c=0. We have seen three ways to solve it: factorization, completing the square and the quadratic formula. In the first case, you try to write the equation as a(x-p)(x-q)=0. This is not always possible, but if it is, the solutions are simply x=p or x=q. In the second case, you try to write the equation as a(x-r)^2+s=0. This is always possible, and the equation can then be solved easily. Finally, you can use the quadratic formula: first calculate D, the discriminant. If D&lt;0, there are no solutions. If D is larger than 0, there are two solutions, given by the quadratic formula. For D equal to 0,you can still use this formula, but then the solutions coincide, so then &sect;there is only one solution. For polynomial equations of higher degree, there is no general method. But there are some techniques that can be useful. If you know a factorization, you can reduce the equation to equations of lower degree. Sometimes, you can guess a solution x=A. Then you can write P(x)=(x-A)Q(x), where Q has degree 1 less than P. Then you try to solve Q(x)=0. Sometimes you can use a substitution to express the polynomial in terms of a new variable, and reduce the degree. But as said, a general method does not exist. However, we can say something about the number of solutions of P(x)=0. Suppose P has degree n, then there are at most n solutions. If n happens to be odd, there is at least one solution. We then considered equations involving rational functions and square roots. The main message is: try to get rid of those. In the case of fractions: get rid of the denominators by using multiplication. If you have a root, isolate it at one side of the equation, then raise to the appropriate power to eliminate it. We have not yet treated equations involving exponential functions, logarithms and trigonometric functions. More about that next week. But always keep in mind our three-step-plan: simplify, solve and check! End of transcript. Skip to the start. ",
                                        "unit_id":"5d43b0c7528a4534b39bcd1bd4a43cc3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6815c78062c146a9ba0ef4cd6d51136b",
                                "vertical_name":"Video: Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5844751c047149db861e4457d580eb4c",
                        "sequential_name":"Homework week 3",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Part"
                                        ],
                                        "data":" You nearly completed part 1 of the topic \"Equations\". This is the homework for week 3. These problems are graded and are part of your final score. All homework is due on September 29, 23.30 hours UTC. However we recommend you to finish the homework of week 3 on July 18th. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted before posting your question. We kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"f2efe64222224f938cb1a6a3c6bba0a4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2c20e200545a4295847063ffca5143fe",
                                "vertical_name":"Homework"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" problem 1 Remember to enter possible multiple solutions in ascending order. ",
                                        "unit_id":"76e805c0e7d9466cbcbb71289de8fa70",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"69f14a9cee234119a1bacf5143c42aff",
                                "vertical_name":"Polynomial equations I"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" problem 2 Solve the following equations for x. There may be no solutions, one solution or several solutions. If there are no solutions, check the box before \"There are no solutions\". Otherwise, check as many boxes as there are solutions, starting from x1, and enter the solutions. Multiple solutions should always be entered in ascending order: x1&lt;x2&lt;\u22ef ",
                                        "unit_id":"36923964f1134f618b1decc2b0260ed6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8c6e809d710d487195f5b8425f216eee",
                                "vertical_name":"Polynomial equations II"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" problem 3 ",
                                        "unit_id":"99b30c3a44d3408daea15b40e13edc91",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"604c6a8901104201a8bc24c9c6dbe8fe",
                                "vertical_name":"Polynomial equations III"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" problem 4 Remember to enter possible multiple solutions in ascending order. ",
                                        "unit_id":"0cd6b04fb11545ba831e740228fa9aa8",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"dedce5c4749c4c24a9778578cbdc8e89",
                                "vertical_name":"Equations involving rational functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order"
                                        ],
                                        "data":" problem 5 Remember to enter possible multiple solutions in ascending order. ",
                                        "unit_id":"e6656aab28bb4c37be7ca144e5b51876",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8d69073ffb2f43ac845e20153c9257de",
                                "vertical_name":"Equations involving square roots"
                            },
                            {
                                "units":[],
                                "vertical_id":"20c38d0cb4f64dceb1f4eaba55616e43",
                                "vertical_name":"Applications"
                            }
                        ]
                    },
                    {
                        "sequential_id":"1da929250a8145f0b28656cc96859d2e",
                        "sequential_name":"University preview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex numbers"
                                        ],
                                        "data":" In this university preview you will learn about complex numbers and their rules of calculation. You can apply these rules in the exercises. Complex numbers will be very useful if you want to solve differential equations (more about that in the university preview of week 5!) The exercises after the video are just for fun and your results on these exercises will not constitute a part of your final grade. ",
                                        "unit_id":"e025c0f2e5214c3c9d39d253fba3414a",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Complex numbers",
                                            "Complex number",
                                            "Real numbers",
                                            "Horizontal axis",
                                            "Electrical circuits",
                                            "Electrical current",
                                            "Shock absorbers",
                                            "Imaginary number",
                                            "Imaginary part",
                                            "Real part",
                                            "Quadratic equation",
                                            "Introduce",
                                            "Define",
                                            "Equal",
                                            "Real",
                                            "Minus",
                                            "Part",
                                            "Squared",
                                            "Find",
                                            "Square",
                                            "Equation"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! In this video we will introduce so-called complex numbers. As we have seen, not every equation has a solution. However, in many applications - such as vibrations of springs or in electrical circuits - these kinds of equations often occur. In order to describe the motion of such a spring or the electrical current in such a circuit, it is rather annoying that these equations don&rsquo;t have any solutions. For instance, it is clear that the equation x squared plus 1 equals zero, has no solutions. This becomes clear if we look at the graph of x squared plus 1. There are no intersections with the horizontal axis. In mathematics there is a trick to overcome this difficulty. We just define a solution! In fact, [click] we introduce an imaginary number i with the property that i squared equals minus 1. Based on this new imaginary number i, we enlarge the set of real numbers and define so-called complex numbers: z is equal to x plus i times y with x and y real is called a complex number. This number consists of two parts: x is called the real part of z, and y is called the imaginary part of z. Here you see the notations. Now the equation z squared plus 1 equals zero, has two solutions: z is plus or minus i. Surprisingly, we can compute with complex numbers just as with real numbers. We can add, we can subtract, we can multiply, and we can divide with complex numbers, and always the answer can be written in the form x plus i times y. Let us look how this works in some examples. If we add two complex numbers, we just add the real parts and the imaginary parts, and we end up with a new complex number. Subtraction is similar. We subtract both the real and the imaginary parts, to obtain a new complex number. Multiplication is somewhat more difficult. The multiplication is defined by expanding the product as usual. So, here we get minus 2 plus 3 i plus 4 i minus 6 i squared. Now we use the convention that i squared equals minus 1, to find minus 2 plus 6 for the real part and 3 plus 4 for the imaginary part, which yields 4 plus 7 i. If we want to divide two complex numbers, we expect to obtain another complex number with the property that if we multiply this by the denominator , we get the numerator. By expanding this product, this would lead to a system of two equations, which can be solved. However, there is a more elegant way to do this. If we multiply both the numerator and the denominator by 1 plus 2 i and expand both the numerator and the denominator, we see that the denominator gets real and after simplifying the numerator, we only have to divide by the real number 5, and we end up with the answer minus 2 plus 3 i. Now we have that every quadratic equation has two solutions in terms of complex numbers. For instance, if it can be factored, it might have two different real solutions: z=2 and z=3. And, if it can be factored into a single square, we have only one solution, or in fact, two equal real solutions. However, if it has no real solutions, we can complete the square. Then this square should be negative, and with the convention that minus 1 equals i squared, we find two complex solutions. Now you may think that this is just an abstract game invented by mathematicians. But it turns out that complex numbers are very useful in many parts of engineering. For example, if you want to model oscillating systems, like shock absorbers in a car, or if you want to understand how electronic signals pass through a circuit. It turns out that the use of complex numbers makes calculations much easier in these situations. Are you curious how that works? You can learn all about it at university. Thanks for watching! End of transcript. Skip to the start ",
                                        "unit_id":"1438caa75cfe47af9a2f15480e5bcf9c",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3f4d6d1e27c6437dab1c626e6f154bca",
                                "vertical_name":"Video: University preview - Complex numbers"
                            },
                            {
                                "units":[],
                                "vertical_id":"29590d54b9c44f94becbd234fc56edad",
                                "vertical_name":"Exercises: Complex numbers"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2bb9d464ceda48cf9b9c7b2f2c8e200a",
                        "sequential_name":"* Student life 3 - Combining activities with your study",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In this video two students are interviewed who combine their study with a time-consuming activity. One student participated in the world championship rowing and the other runs a business. ",
                                        "unit_id":"22314131fcb24a7eb4a03263175ea30b",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Industrial design",
                                            "World championship",
                                            "Rowing competitions",
                                            "Senior citizens",
                                            "Bronze medal",
                                            "Daily life",
                                            "Bart",
                                            "Master",
                                            "Setting",
                                            "Rowing",
                                            "People",
                                            "National",
                                            "Team",
                                            "Bram",
                                            "Roughly",
                                            "Study",
                                            "Train",
                                            "Training",
                                            "Project",
                                            "Designed",
                                            "Schedule",
                                            "Activity",
                                            "Time"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Last week we spoke about all the opportunities to build new friendships through study and student associations and the week before about planning. Today we are going to combine these two by talking about study/life balance. How do you combine your study with a demanding activity? We have two special guests. Bart Lukkes studies Industrial Design and combines his Strategic Product Development Master study with high-level rowing. He participated five times in the World Championship and won a silver and a bronze medal. Welcome! Thanks And we welcome Bram van der Veen. Bram is student Industrial Design. He combines his study with setting up a company that develops a care robot. Thanks for joining us! My pleasure! Bart, what does it entail to be a topsport rower? I am part of the national rowing team. We compete in rowing competitions such as the national and world rowing championships. We train roughly 2 hours per training, 9 to 12 times a week with races in weekend during summer. In the winter it&rsquo;s not always possible to go out on the water so as an alternative we work on the ergometer or lift weights. In spring, summer and autumn the conditions are often better and we train in our boat on the canal between Delft and Rotterdam. So you spend about 20 hours on your rowing a week? Wow! Yes, that&rsquo;s right! How about you, Bram? Tell us about your company and how much time you spend on it. I made the external design of the care robot Eva 2 and the interaction behaviour of Eva 2. In general you could say I&rsquo;m responsible for concept development and a part of the hardware development. Eva 2 was originally designed for the aid of senior citizens in residential care homes for moving about material and facilitating contact. Her predecessor Eva 1 was designed with the thought of providing help for senior citizens at home with tasks of daily life. Since the Eva 2 project has finished some time ago I now spend less time on the project and my firm, but I used to work on Eva 2 about half a day per week. This is of course excluding the late nights and odd times when new ideas pop up. And doing things like demonstrations and discussing with potential users often requires that you have to be present at times that often conflict with your schedule. Hmm.. You could say it differed a bit per week. How do you combine these time-consuming activities with your study? Can you show us your schedule for a typical week? Well.. I train before I go to the faculty and again when I&rsquo;m done there. You can see what I do roughly in my training schedule. During the most intense times of Eva 2 it simply meant doing small tasks late at night. It posed a challenge to combine it with my Master and nowadays my thesis. Often I would meet with my team during lunch breaks or organize a meeting during dinner at someones place. If you desire to work with five different people from five different faculties, a rigid schedule is not something that is feasible. So, I&rsquo;m sorry but a schedule? I wish I could do something like that! What do you do to be successful in both activities? I think the most important think is to remain flexible and enthusiastic about both your work as an entrepreneur and your education as a student. And do not let negative statements from others get you down. I work very hard every day. I plan and I put side some things other people wouldn&rsquo;t. In the end the reward is nearly always worth the sacrifice. Any tips for students who have ambitions to combine their study with an activity like topsport or a job or company? Do it both. It&rsquo;s worth all the hassle. Definitely do it. However, in the case of being entrepreneur I would strongly suggest setting clear deadlines and goals. These help you to keep your focus. End of transcript. Skip to the start. ",
                                        "unit_id":"84be71d6059f4c18834616db3341dceb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c18ff9d8bfd64e8f8001e0efc3e3a516",
                                "vertical_name":"Student life 3: Combining activities"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"e317f2b5e81f4ddfa3c878e87664ba97",
                "chapter_name":"Week 4. Equations (part 2)",
                "sequentials":[
                    {
                        "sequential_id":"27e159989e504876be74f6a282193420",
                        "sequential_name":"4.1 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Exponential functions",
                                            "Linear programming"
                                        ],
                                        "data":" Welcome to Equations - part 2 This week you will learn to solve equations involving trigonometric functions, exponential functions and logarithms. You will also learn how to solve inequalities and systems of equations. How do you maximize the profit of your company? That is a question we will look into in the university preview of this week on linear programming: a method to optimize a situation using equations. This week's student life topic is teamwork. How can you build a good team and how can you become a great team member? The leader of the Nuon Solar Team shares his experiences! ",
                                        "unit_id":"62e21e54f34347fbb3b1c63dc92202dc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5ff296fa0d704e04842479438f6130c6",
                                "vertical_name":"Welcome to week 4"
                            }
                        ]
                    },
                    {
                        "sequential_id":"70617eb56a4f46ac963cad1f3442301e",
                        "sequential_name":"4.2 Equations involving trigonometric functions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Sine"
                                        ],
                                        "data":" How do you solve an equation involving sine, cosine and tangent? This video shows you how! Using the periodicity and other symmetries of the sine and cosine you can find all solutions! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"635bbb2361d64a99bca23c6217eb7523",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Trigonometric identities",
                                            "Common mistake",
                                            "Minus sign",
                                            "Green solutions",
                                            "Horizontal line",
                                            "Sine function",
                                            "Negative",
                                            "Simplifying",
                                            "Pi",
                                            "Form",
                                            "Sin",
                                            "Cosine",
                                            "Green",
                                            "Final",
                                            "Function",
                                            "Equation",
                                            "Adding",
                                            "Integer",
                                            "Formula",
                                            "Method",
                                            "Reflecting",
                                            "Property",
                                            "Line",
                                            "Angle",
                                            "Sine",
                                            "Graph",
                                            "Table",
                                            "Find",
                                            "Solve"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome. If you want to know how long it takes to rise 34 meters while in the London Eye starting from the rightmost point, you have to solve an equation involving the sine of this duration. Typically, equations involving angles include trigonometric functions as sines and cosines. In this video I will show you how to solve such equations. Let us begin with the most basic kind of equation. Consider the angle x which satisfies sin(x) = frac12. You can look in the table of the sine function and see that pi/6 or 30 degrees is a solution. You can also find this solution from your calculator by using the sin inverse button. This angle must thus be pi/6 right? What else could it be? Well, consider the triangle on the slide. That is not a 30 degree angle, but its sine is also equal to 1/2. Let us look at the graph of sin(x). We add a horizontal line at y=1/2. The [click] intersections of this line with the graph of sin(x) are the solutions to the equation sin(x)=1/2. We see that there are many solutions. Pi/6 is just one solution. How can you find the other solutions, knowing pi/6 is a solution? You can use the properties of the graph of the sine function to find these others. The simplest property is that the sine is periodic, so the graph remains the same if we shift it a distance 2 pi horizontally. The red points of intersection are obtained by adding a multiple of 2pi to the original solution. So we have 13pi/6 and 25 pi/6, and to the left -11pi/6, and so on. The green point is obtained by using the symmetry of the graph of the sine upon reflecting in the line x=pi/2. This reflection sends x to pi-x, so it is pi-pi/6=5pi/6. The other green solutions can subsequently be found by adding multiples of 2pi to 5 pi/6. You can see in the graph that we have now found all solutions. We find infinitely many solutions to this equation. How can you describe all these solutions without using an infinite amount of ink? You can do this by giving a formula which describes all solutions. For example, [click] you can write x=pi/6 + 2pi k or x=5pi/6 + 2pi k, where k is an integer, either positive or negative. By plugging in all integer values of k you obtain all solutions of the equation. For k=0 you obtain pi/6 and 5pi/6, for k=1 you obtain 13pi/6 and 17 pi/6, etc. You have now seen how to solve a basic equation sin(x)= constant. A similar method works for cos(x) =constant: Find one solution using a table or calculator, and shift and reflect this solution to get the other ones. Other equations involving trigonometric functions first have to be simplified to this form. There are two basic ways to do this. The first method is to use a substitution. Consider the example cos(x)^2-cos(x)=3/4. We can replace cos(x) by a new variable p. Using this substitution the equation simplifies to p^2-p=3/4. You should make sure no stray x's remain in your equation: You need to have an equation involving only p's and no x's, as we do here. We can solve this equation for p as p=-1/2 or p=3/2. Thus we find that x satisfies cos(x)=-1/2 or 3/2. We now have two equations of the basic form. The second equation has no solutions as a cosine is always between -1 and 1. For the first equation we need to solve cos(x) = -1/2. Let us consider the graph and table of cos(x). There are no negative values in our table, but the cos^{-1} button of our calculator will still work. We can do better than using our calculator though. We can expand our basic table to x-values from 0 to pi, and we know that the cosine takes negative values from pi/2 to pi. Another symmetry of the graph shows that those values mirror the values of the cosine from 0 to pi/2, but with a minus sign. Thus we see that cos(pi/3)=1/2 implies that cos(pi-pi/3) =-1/2. This gives our first answer. Reflecting 2 pi/3 in the y-axis gives the green solution -2pi/3. The remaining solutions are 2 pi shifts of plus minus 2pi/3. All solutions can thus be expressed as 2pi/3 + 2 pi k or -2pi /3 + 2pi k. Let us go back to our original example and use these solutions. As a final step we check that these are valid by plugging these in our equation, using that cos(x)=-1/2 for all of them. Warning! If you want to use a substitution a common mistake is to use a substitution that leaves some x's remaining in the resulting equation. For example if we use p=cos(x) in the equation x cos(x) = 1, to get x p =1 we have an x remaining. This must not happen: The final equation should only contain the new variable. In the previous example we have used a substitution to simplify our equation to the basic form cos(x)=c. A second method for simplifying is to use trigonometric identities. Consider the example cos(x) sin(x)=1/4. Recall that sin(2x)=2cos(x)sin(x). Thus we recognize the result of the doubling formula for the sine in our equation. Using this, the equation simplifies to sin(2x)=1/2. We can use that we already solved sin(x)=1/2 to obtain 2x=pi/6 or 5pi/6 + 2pi k. Dividing by 2 gives our final solution. In summary there are two important aspects to solving equations involving trigonometric functions: To solve a more complex equation you need to first simplify it to a basic equation. Use a substitution whenever this is possible. Remember that no x's are allowed in the resulting equation. Otherwise you should look for a simplifying trigonometric identity. We reviewed them in week 2. Be on the lookout for sin^2+cos^2 and the results of doubling formulas and addition formulas as you want to go from complicated expressions to easier one. Sometimes you may even need to combine both methods. To solve a basic equation sin(x)=c or cos(x) = c you first find a single solution by looking in the table or using your calculator, and subsequently use the graph of the function to obtain all other solutions. Try these techniques yourself today! End of transcript. Skip to the start. ",
                                        "unit_id":"7e556204c0ef46a4a597bd2a2707d51a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ecc49f46e1e34ac0a1d537a2118660ae",
                                "vertical_name":"Video: Equations involving trigonometric functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"93e97b89d67b4837a701ca4776ccf6c4",
                                "vertical_name":"Exercises: Equations involving trigonometric functions"
                            }
                        ]
                    },
                    {
                        "sequential_id":"af99dbc932c3441f974fd6647c412d81",
                        "sequential_name":"4.3 Equations involving exps and logs",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Equation"
                                        ],
                                        "data":" How do you solve an equation containing exponentials and logarithms? This video shows you how! Simplify the equation by changing to one base, possibly use substitution and reduce to a basic equation form. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"f3d9bc7674344e7a9e0fd9a7a560957d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Trigonometric equations",
                                            "Exponential functions",
                                            "Injective function",
                                            "Bank account",
                                            "Single base",
                                            "Standard form",
                                            "Base",
                                            "Exponential",
                                            "Negative",
                                            "Kind",
                                            "Equation",
                                            "Reduce",
                                            "Substitution",
                                            "Form",
                                            "Simplify",
                                            "Valid"
                                        ],
                                        "data":" Start of transcript. Skip to the end. In this video we consider equations involving exponential functions and logarithms. Consider the situation from the introductory video on exponential functions. Suppose you have a bank account and you obtain 3% interest per year. How long will it take before you double your savings? This situation is equivalent to the equation (1.03)^x=2, where x is the time in years after your first deposit. This equation is an example of the simplest kind of equation involving exponentials and you can solve it using logarithms. Indeed the solution is \\log[1.03](2), which is the definition of logarithm. Is this the only solution? Yes! A look at the graph of 1.03^x shows that it does not take the same value twice: it is an injective function. Therefore this equation has only one solution. To solve more complicated equations involving exponentials the goal is always to reduce them to a simple equation of the kind a^p=a^q, implying p=q. There are two main techniques that can help you simplify the equation. The first technique is to change everything to a single base. For example for the equation 4^x=2^(x^2) You can rewrite everything in base 2. In this case we can use 4=2^2, so 4^x = (2^2)^x = 2^(2x). This gives 2^(2x)=2^(x^2), which is an equation in standard form. Therefore we find 2x=x^2. The solutions are x=0 and x=2. And remember to check the solutions at the end, in this case we get 1=1 for x=0 and 16=16 for x=2, so both are valid solutions. The second technique to simplify equations is by using a substitution, just as you could do with trigonometric equations. In the equation 2^x+4^x=6 we first change all exponentials to the same base by rewriting it as 2^x+2^(2x) = 6. Now we substitute y=2^x and use 2^(2x)=(2^x)^2 to obtain y+y^2=6. Simplifying gives (y+3)(y-2)=0. The solutions are y=-3 and y=2. To obtain x we must solve 2^x=-3 and 2^x=2. The first equation has no solutions as exponentials are never negative, the second equation has solution x=1. Checking the solution x=1 in the original equation shows that we have indeed found the solution. In dealing with exponentials in equations you want to * Change all exponentials to the same base * Possibly make a substitution * To reduce it to a basic equation of the form a^p=a^q. Let us now consider equations involving logs. Dealing with logarithms you want to use the same ideas as for equations with exponentials, that is * Change all logarithms to the same base * Possibly make a substitution * Reduce it to a basic equation of the form \\log[a](p) = \\log[a](q). Subsequently we can infer p=q. However some complications can arise, consider \\ln(x) + \\ln(2x-3) =\\ln(2). All logarithms are already in the same base, so that is fine. Using the rules of calculation this equation reduces to \\ln(x(2x-3)) = \\ln(2). Thus we need to solve x(2x-3)=2. This is equivalent to 2x^2-3x-2=0 which can be factored to (2x+1)(x-2)=0. The solutions are x=-1/2 and x=2. Let us plug these into the original equation to check if they are valid. For x=2 we obtain \\ln(2) + \\ln(1) = \\ln(2) so x=2 is a valid solution. However we can't plug x=-1/2 into the equation as both logarithms on the left hand side take on a negative argument. In particular x=2 is the only valid solution. Remember to simplify, solve and check. End of transcript. Skip to the start. ",
                                        "unit_id":"d2e5296f494e4dae99457adff0b1b7bd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1dfbbaaaa73649f0963b60c40c6c5026",
                                "vertical_name":"Video: Exponentials and logarithms"
                            },
                            {
                                "units":[],
                                "vertical_id":"8955887ab7c94bafbd14e0ec6f5ee93d",
                                "vertical_name":"Exercises: Exponentials and logarithms"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In this video a mathematical problem involving logarithms is solved. But the solution contains an error! It's up to you to catch the error! You can share your thoughts in the discussion box below. The answer will be released on July 25th. ",
                                        "unit_id":"25b62611ed364e99ae4dbfa3ec821097",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Equation"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there. Here&rsquo;s another catch-the-error video. As always, I will do a calculation which contains a mistake. It&rsquo;s up to you to see where I make this mistake. We will solve the following equation log_2((x+1)^2) = 6. First we can simplify this equation using the rules of calculation for logarithms. We can take the exponent out of the logarithm 2 \\log_2(x+1) = 6. Now we divide both sides by 2 \\log_2(x+1)=3, and using the definition of the logarithm in base 2, we find that x+1 = 2^3 = 8, so x=8-1=7. We can check that this is indeed a solution of our equation: \\log_2((7+1)^2)=\\log_2(8^2) = \\log_2(64) = \\log_2(2^6) = 6. So, we simplified the equation, solved it, and checked the solution. But actually, this is not the only solution of our equation, there is another one! Can you find the other solution, and do you know why we missed it here? End of transcript. Skip to the start. ",
                                        "unit_id":"4686420dd69a46ce95e126b0a0e95cfb",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3cf7de4856a94146afa45d8f9a664c36",
                                "vertical_name":"Video: Catch the error"
                            }
                        ]
                    },
                    {
                        "sequential_id":"819c4b58e79246fdb6c761bda866de8b",
                        "sequential_name":"4.4 Inequalities",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Solving"
                                        ],
                                        "data":" Solving an inequality means finding the answer to the question: For what input is the one function larger than the other? This video gives some general ideas for solving inequalities. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"a5b63ee570734ac3b2711bc5bf78950c",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Real line",
                                            "Round bracket",
                                            "Boundary points",
                                            "Square bracket",
                                            "Solving equations",
                                            "Inequality sign",
                                            "Inequality signs",
                                            "Bounded interval",
                                            "Boundary point",
                                            "Notation",
                                            "Boundary",
                                            "Graph",
                                            "Path",
                                            "Valid",
                                            "Square",
                                            "Tricky",
                                            "Left",
                                            "Solving",
                                            "Inequality",
                                            "Greater",
                                            "Question",
                                            "Function",
                                            "Check",
                                            "Find",
                                            "Solve",
                                            "Side",
                                            "Smaller",
                                            "Equation",
                                            "Interval",
                                            "Point",
                                            "Equal"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! Up until now we have been solving all kinds of equations. As we have seen, solving an equation amounts to the question &ldquo;Given two functions, for what inputs are they equal?&rdquo;. But there are also situations in which you do not want to set two functions equal, but rather compare them: for what input is the one function larger than the other? For example, think of a jet that follows some curved path. If you know a function describing the path, you can calculate the g-forces that act on the pilot, as function of time. The G-forces should not be too high, at least not for too long, otherwise the pilot may lose consciousness. We should check at what times the g-forces exceed the safety threshold. This comes down to solving an inequality. Before we turn to solving inequalities, let me review the terminology and notation. There are several inequality signs that you should know. This first expression means that A is greater than B and not equal to B. If you reverse the inequality sign, it simply means that A is less than B and not equal to B. These inequalities are also called strict inequalities. If A and B are allowed to be equal, we denote this as follows. The first notation means A is greater than or equal to B, the second means that A is less than or equal to B. Instead of &ldquo;less&rdquo; and &ldquo;greater&rdquo; also &ldquo;smaller&rdquo; and &ldquo;larger&rdquo; are used. Having established this, we now turn to the question: how to solve inequalities between functions. To make the story clearer, let&rsquo;s look at an illustrative example. Take the following inequality: x smaller than or equal to 4 over x. For what values of x is it satisfied? Before I tell you how to solve such an inequality, let me show you the graphs. The inequality amounts to the following question: for which x-values does the green line lie above the blue one. The graph suggests that there are two intervals on which the inequality is satisfied. One unbounded interval, on the left, and one bounded interval. These two intervals form the solution set of the inequality. For values of x outside this set, the inequality does not hold. Now, it is important to note the following:the boundaries of the intervals are either marked by a point where both sides of the inequality are equal (pause), or a point where a domain problem occurs. So to describe the solution set, we have to find these points. First, let us look at the x-values where both sides are equal. That is, we solve the equation x equal to 4 over x. To get rid of the denominator, multiply both sides by x. We then obtain x^2 equal to 4. This has two solutions: x equal to 2 or x equal to -2. You can easily check that both are indeed solutions to the equation. So equality holds for x equal to 2 and x equal to -2. Now, we need to find x-values where domain problems occur. This only happens at x=0, since 4 over x is not defined there. The three points that we have found divide the real line into four intervals. ............. Now the following is important: On each interval, the inequality holds either for all values of x, or for no values of x, except possibly at the boundary points. So to check on each interval whether the inequality holds, it suffices to look at one point! For example, in the left interval, we can try x=-4. You see that indeed the inequality holds. Therefore it holds on the whole interval. In the next interval, we can try x=-1, and see that there the inequality does not hold. So it does not hold on the second interval. We continue in this way. Finally,we have to check the boundary points of the interval. At x=2 and x=-2, the inequality is indeed satisfied. At x=0, the inequality is not satisfied, since the right hand side is not defined there! We can now gather all the results to find the solutions: This inequality is satisfied for x smaller than or equal to -2, and x between 0 and 2, including 2, but excluding 0. The solution set can also be described in terms of intervals: Be aware that several ways of notation exist, but it is common to use a round bracket if the boundary is not part of the interval, and a square bracket if it is. The u-shaped symbol in the middle indicates that we take a union. The example illustrates the general method. Suppose you want to solve an inequality. Then &bull; First, Find the x-values where the functions are equal; and the points where one of the functions is not defined, or has a discontinuity. At such points, the inequality can change from valid to invalid. &bull; These points divide the real line into intervals. Look at each interval whether the inequality holds. You can check this at one point in the interval! &bull; Finally, check at each boundary point whether the inequality holds. The solution is then the union of intervals on which the inequality holds. You may wonder: what happened to the simplify - solve - check strategy that we used for solving equations. Well, the main method to simplify an equation is to apply the same operation on both sides. If you do that to an equation, it remains valid. However, for an inequality, this can be quite tricky. For example: 1 is smaller than 2. If you square both sides, it remains true. On the other hand -3 is also smaller than 2, but (-3) squared is not smaller than 2 squared. To avoid tricky problems like this, you can always use the procedure outlined in this video. Try it in the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"4e6916090e8e4a96863b6c8e943b1d74",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3eac40f5eb954b1e88e7da2c3c339221",
                                "vertical_name":"Video: Inequalities"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Number line",
                                            "Boundary point",
                                            "Bracket",
                                            "Point",
                                            "Inequality"
                                        ],
                                        "data":" Entering solutions to inequalities In each exercise below, you have to find the set on which the given inequality holds. To indicate the intervals that make up the set, you can drag the appropriate brackets onto the number line. Remember: a square bracket mans \"including the boundary point\", a round bracket means \"excluding the boundary point\". If the solution set contains isolated points, then drag the dot onto that point. For example, if some inequality is satisfied for all x&lt;&minus;7, all x in the interval (&minus;2,3] and for x=5, you should indicate this as follows: ",
                                        "unit_id":"7a27f45257844abea943d740c3f18559",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"501bc7d92cba465ca3ac9f19d7f48c5b",
                                "vertical_name":"Exercises: Inequalities"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Population size",
                                            "Increasing function",
                                            "Decreasing function",
                                            "Increasing",
                                            "Decreasing",
                                            "Population",
                                            "Constant",
                                            "Function",
                                            "True",
                                            "Inequality"
                                        ],
                                        "data":" In the video, we mentioned that you cannot just apply the same operation to both sides of an inequality: it may become invalid. That does not mean that an inequality always becomes invalid if you apply a function to both sides. In fact, the following is true: If you apply an increasing function to both sides of an inequality, then it remains true. By an increasing function we mean a function f for which the following holds: whenever a&lt;b for some a and b, then also f(a)&lt;f(b). Important examples of increasing functions are: f(x)=x+c (addition of a constant) f(x)=c&sdot;x with c&gt;0 (multiplication by a positive constant) f(x)=ax with a&gt;1. f(x)=loga(x) with a&gt;1 f(x)=xa with a&gt;0 and x&gt;0. (e.g.: f(x)=x). Compositions of these For example, suppose a population of bacteria grows according to the function P(t)=1000&sdot;2t, with t in hours. This is an increasing function! So suppose we measure the population size at some time t&gt;3. What can you say about the population size? Well, in this case, we can apply P to both side to obtain P(t)&gt;P(3)=8000. So we know that the population size will be at least 8000. In analogy to the previous, the following holds: If you apply a decreasing function to both sides of an inequality, then the inequality sign flips. By a decreasing function we mean a function f for which the following holds: whenever a&lt;b for some a and b, then f(a)&gt;f(b). Important examples of decreasing functions are: f(x)=c&sdot;x with c&lt;0 (multiplication by a negative constant) f(x)=ax with 0&lt;a&lt;1. f(x)=loga(x) with 0&lt;a&lt;1. f(x)=xa with a&lt;0 and x&gt;0. (e.g.: f(x)=1x.) However: if a function is neither increasing nor decreasing, it can be hard to tell what happens if you apply it to both sides of an inequality!! ",
                                        "unit_id":"414f9f9ede144c5c8930d666cb67134d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"da2ef9eb487a4bef926a459e87cfa146",
                                "vertical_name":"More on inequalities"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In this video an inequality is solved. But the solution contains an error! It's up to you to catch the error! You can share your thoughts in the discussion box below. The answer will be released on July 25th. ",
                                        "unit_id":"3c8ff8ad56eb4395aaab7ec913fb980b",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Number line",
                                            "Side",
                                            "Smaller",
                                            "Exercise",
                                            "Error",
                                            "Solve"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! Let&rsquo;s do another catch the error exercise. Remember the idea: I will solve an exercise for you, but somewhere, I make an error. It is up to you to find out what went wrong. Let&rsquo;s solve the following inequality: 1/(x^2-1) &gt; 1. To solve it, we first look where the left hand side and the right hand side are equal: 1/(x^2-1)=1. This we can easily solve: multiply both sides by the denominator. Then we add 1 to both sides. So our solutions become : x = sqrt(2) and x = - sqrt(2). Let&rsquo;s put the solution on a number line. You see that there are three intervals where we should check the inequality. On each interval, the inequality either holds for all points, or for none of the points. So we can just check at one point per interval. In the interval (-infty, -sqrt(2) ), we can take x=-2. Plug it into the inequality: the left hand side becomes \u2153, In the interval (-sqrt(2), sqrt(2) ) we can take the point 0. and we get 1/0^2-1=-1 Which is also smaller then. And at our last interval (sqrt(2),infty). We can take the point x = 2 And we get 1/((2^2)-1) which is again 1/3 smaller then 1 so for every interval the inequality does not hold. We conclude that there are no solutions to this inequality. But that is not true! Let us calculate the left hand side at x=1.2 . We can see that at x=1.2 we get 1/((1.2^2)-1) = 1/(1.44 - 1) which is equal to 1/0.44, this is greater that 1 You see that at x=1.2, the left hand side is larger than 1. Thus x=1.2 is a solution, but somehow we missed it. What mistake did I make? End of transcript. Skip to the start. ",
                                        "unit_id":"686c3d7f851b494787df616e2129776d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3f6f401d47d6402c881bfb8a53fe4a99",
                                "vertical_name":"Video: Catch the error"
                            }
                        ]
                    },
                    {
                        "sequential_id":"7f1a8b5bf2f84da58be332c8f7e4deaa",
                        "sequential_name":"4.5 Systems of equations",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Substitution method"
                                        ],
                                        "data":" How do you solve a system of equations? This video shows you how to do this using the substitution method! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"4e237a3bbcea49419bc5e3eddf224672",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Silver coin",
                                            "Gold coin",
                                            "Pythagoras theorem",
                                            "Silver coins",
                                            "Gold coins",
                                            "Substitution method",
                                            "Green line",
                                            "Blue line",
                                            "Intersection point",
                                            "Coin",
                                            "Gold",
                                            "Silver",
                                            "Method",
                                            "Line",
                                            "Intersection",
                                            "Equation",
                                            "Circle",
                                            "Variable",
                                            "Point"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back! Instead of one equation in a single variable, we may also consider two different equations in two variables. Let&rsquo;s consider the following example. We want to calculate the points of intersection of the line given by y equals x+1 and the circle with radius 5 whose center is at the origin. First we need an equation that describes the circle. Note that the circle is not the graph of a function, since there are two different points that have the same x-coordinate The circle consists of all point (x,y) that have distance 5, the radius, to the origin. So by Pythagoras Theorem we have x^2 + y^2 equals 5^2, and this gives us an equation describing all points on the circle. So, if (x,y) is an intersection point, then x and y satisfy the equations &middot; y equals x+1, that is, (x,y) is a point on the line, and also &middot; x^2 + y^2 equals 25, that is, (x,y) is a point on the circle. We call such a set of equations in the same variables a system of equations. To solve this system of equations, we substitute the first equation into the second one. So, we replace y in the second equation by x+1. This gives us an equation in which we have only one variable: x^2 + (x+1)^2 is equal to 25. We know how to solve such an equation of degree 2, and we find as solutions x equals 3 and x equals -4. Each of these solutions leads to another, simpler, system of equations. Now substituting x equals 3 in the equation y equals x+1, we find y equals 4, and in the same way, substituting x equals -4 gives y is equal to -3. Now we found the coordinates of both points of intersection. Let&rsquo;s now consider the following situation. We have a stack of coins consisting of two different types of coins, say silver and gold. The height of the stack is 8 cm. We know that a silver coin has a thickness of 0.3 cm, and a gold coin has a thickness of 0.2 cm. If x is the number of silver coins, and y the number of gold coins, then we have the equation 0.3 x + 0.2 y equals 8. To make the equation look nicer, we multiply it by 10: so 3x+2y is equal to 80. We also weighted the coins and the weight of the stack is 450 grams. Now a silver coin weighs 20 grams, and a gold coin weighs 10 grams, so we also have the equation 20 x + 10 y equals 450. In this case we divide by 10 to make the equation look nicer. The question is, of course, how many silver and how many gold coins have we got here? The answer is obtained by solving this system of equations. In the previous example with the line and the circle, the first equation was of the form y is equal to a function of x, and we could substitute this into the second equation. Here we can do something similar. We first solve the second equation for y, which gives y equals 45-2x, and then substitute this into the first one. This gives us an equation in only one variable. Expanding the brackets we obtain 90 - x equals 80. Solving this gives the solution x equals 10, and putting this back into the equation y equals 45-2x, we see that y equals 25. So we have 10 silver coins and 25 gold ones. The systems of equations in this example also has a graphical interpretation. The equation 3x+2y=80 defines a line, namely the graph y equals (80-3x)/2, the blue line here. The equation 2x+y=45 defines the green line, which is the graph y equals 45-2x. The solution that we found is the point of intersection of these two lines. We just solved two systems of equations using the substitution method: solve the simplest of the two equations for y, substitute the expression for y in the second equation to obtain an equation only in x. Then solve this equation for x, and substitute the result in the expression for y. Instead of first solving for y, you can also first solve for x. The substitution method is usually a good method to solve a system of two equations in two variables. However, the following example shows that you should be careful with this method. Suppose we want to solve this system of equations: xy equals 2x and x^2+y^2 equals 1. We solve the first equation for y, which gives y equals 2. Substituting this into the second equation leads to x^2 + 2^2 equals 1, and we conclude that there are no solutions. But actually we missed a solution. Plug x equals 0 and y equals 1 into both equations, to see that this is a solution to the system. So, why did we miss this solution? This is because the equation xy equals 2x has solutions y is equal to 2 and x is equal to 0. Plugging x equals 0 into the other equation gives y^2 equals 1, so that y equals +1 or -1. So our system of equations has two solutions: x equals 0 and y equals 1, and, x equals 0 and y equals -1. The substitution method can also be used for systems of three or more equations with three or more variables, but this is often much work! End of transcript. Skip to the start. ",
                                        "unit_id":"ff228715a2284da98af0e734bc4dbf4b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bccc166e79874b3c8ba9fac4217a551d",
                                "vertical_name":"Video: Systems of equations"
                            },
                            {
                                "units":[],
                                "vertical_id":"4f038d5401fa4ce18dcf608fc6a65719",
                                "vertical_name":"Exercises: Systems of equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Intersection point",
                                            "Elimination",
                                            "Method",
                                            "System"
                                        ],
                                        "data":" he elimination method The elimination method is another method to solve a system of equations. The idea behind the method is that the solutions of the system don't change if we multiply one (or more) of the equations by a nonzero constant; we replace an equation by the sum (or difference) of that equation with one of the other equations In this way we can manipulate the equations in such a way that one of the variables is eliminated. Let's illustrate the method with an example. Example We want to solve the following system of equations {2x+5y=64x&minus;4y=5 The solution (x,y) is the intersection point in the figure. We multiply the first equation by 2, so that the coefficients of x in both equations are the same {4x+10y=124x&minus;4y=5 Now we substract the second equation from the first one (which gives 14y=7), and the result replaces the second equation: {4x+10y=1214y=7&rArr;{4x+10y=12y=12 In the second step we already solved the second equation. We can substitute the solution y=12 in the first equation and solve the first equation for, or we can use elimination again (we chose this option here). We multiply the second equation by 10 (so we obtain 10y=5) and substract this from the first equation: {4x=7y=12&rArr;{x=74y=12 So the solution of our system of equations is (x,y)=(74,12). ",
                                        "unit_id":"6079ae5d793f49fbb8ca683059894354",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fb1370ce29ac450ba482d2734b700eef",
                                "vertical_name":"The elimination method"
                            }
                        ]
                    },
                    {
                        "sequential_id":"8c32007b66554c738fc5f4398f9017dd",
                        "sequential_name":"Subsection",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Exponential functions",
                                            "Training sequence"
                                        ],
                                        "data":" In this training sequence you can apply everything you have learned on solving trigonometric equations and equations containing exponential functions and logarithms. Also you can practise to solve inequalities and systems of equations. This training sequence will help you prepare for the homework. The results of your answers do not count for your final grade. Have a good training! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"f2a71987b7f049508746a93640dc1e6b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"38c4fbf704e247fc8a1a2599cb6241aa",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order",
                                            "Exercise"
                                        ],
                                        "data":" Exercise 1 Solve the following equations involving trigonometric functions. In some exercises there may be no solutions, one solution or several solutions. If there are no solutions, check the box before \"There are no solutions\". Otherwise, check as many boxes as there are solutions, starting from x1, and enter the solutions. Multiple solutions should always be entered in ascending order: x1&lt;x2&lt;\u22ef ",
                                        "unit_id":"9c38fb652553495cbdb64855dc2e2b18",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e1ae80f4656e469a84a2cb946e7c0726",
                                "vertical_name":"Trigonometric functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 2 Solve the following equations involving exponential functions. ",
                                        "unit_id":"617b9bd12939496c9f76743839967398",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"21e892c9204a42f0902450c2a01b448b",
                                "vertical_name":"Exponential functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Ascending order",
                                            "Exercise"
                                        ],
                                        "data":" Exercise 3 Solve the following equations involving logarithms. In some exercises, there may be no solutions, one solution or several solutions. If there are no solutions, check the box before \"There are no solutions\". Otherwise, check as many boxes as there are solutions, starting from x1, and enter the solutions. Multiple solutions should always be entered in ascending order: x1&lt;x2&lt;\u22ef ",
                                        "unit_id":"e1f732be8ae6450697fa926d6eabadad",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4908f0ffb242444e818cc4cd31735e76",
                                "vertical_name":"Logarithms"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Number line",
                                            "Boundary point",
                                            "Bracket",
                                            "Point",
                                            "Inequality"
                                        ],
                                        "data":" Exercise 4: inequalities In each exercise below, you have to find the set on which the given inequality holds. To indicate the intervals that make up the set, you can drag the appropriate brackets onto the number line. Remember: a square bracket mans \"including the boundary point\", a round bracket means \"excluding the boundary point\". If the solution set contains isolated points, then drag the dot onto that point. For example, if some inequality is satisfied for all x&lt;&minus;7, all x in the interval (&minus;2,3] and for x=5, you should indicate this as follows: ",
                                        "unit_id":"584dc570ad3a4f618a537da47577450f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4fde15843b974613bd566e27cb401716",
                                "vertical_name":"Inequalities"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Number line",
                                            "Boundary point",
                                            "Bracket",
                                            "Point",
                                            "Domain"
                                        ],
                                        "data":" Exercise 5: Determining the maximal domain In the problem below, you have to find the domain of a function. Like for inequalities, to indicate the intervals that make up this set, you can drag the appropriate brackets onto the number line. Remember: a square bracket mans \"including the boundary point\", a round bracket means \"excluding the boundary point\". If the domain contains isolated points, then drag the dot onto that point. For example, if the domain contains all x&lt;&minus;7, all x in the interval (&minus;2,3] and x=5, you should indicate this as follows: ",
                                        "unit_id":"484fad6bb76347089d318abe9266e3f2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1c298886da64471f9ce7b01276e0d01c",
                                "vertical_name":"Domain"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Living matter",
                                            "Organic material",
                                            "Radiocarbon dating",
                                            "Death"
                                        ],
                                        "data":" Exercise 6: Radiocarbon dating The age of an object containing organic material can be determined using radiocarbon dating. Living matter contains two isotopes of carbon in a fixed ratio: 12C which is stable, and 14C which is radioactive. After death 14C decays exponentially with a half-life of 5700 years, so the mass of 14C in the object is described by m(t)=m0(12)t5700, where t is the time in years, and m0 is the mass at the moment of death. ",
                                        "unit_id":"8afc937f2af342bcaecf8beca4305395",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e12d846cfda443c8bca60ad0e2364bad",
                                "vertical_name":"Applications I"
                            },
                            {
                                "units":[],
                                "vertical_id":"6ee30ea471684664b022243b8d3a7ba8",
                                "vertical_name":"Applications II"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Substitution method"
                                        ],
                                        "data":" Exercise 8: Systems of equations The following exercises contain systems of equations. Solve these using the 'substitution method' or the 'elimination method'. ",
                                        "unit_id":"c8aaa2984ab14256ba29cb541bf83d7b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b85d8ce50cc04eb9805f0f0ca8fa34a2",
                                "vertical_name":"Systems of equations"
                            }
                        ]
                    },
                    {
                        "sequential_id":"387ea4518f36425ba29c698449b0821c",
                        "sequential_name":"Summary",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Trigonometric equations",
                                            "Discussion forum"
                                        ],
                                        "data":" In this subsection we will give a summary of everything you have learned this week on trigonometric equations and equations with exponentials and logarithms. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"c6aafd7fa1dd4ef887b7bcf33f7e5624",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Double angle formulas",
                                            "Trigonometric identities",
                                            "Good luck",
                                            "Real line",
                                            "Exponential",
                                            "Boundary point",
                                            "Substitution method",
                                            "Solving",
                                            "Method",
                                            "Inequality",
                                            "Base",
                                            "Line",
                                            "Sin",
                                            "Equation",
                                            "Substitution",
                                            "Point",
                                            "Form"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome to the summary of week 4 in which I will give an overview of the topics treated this week. First of all, remember the 3-step-plan from last week: if you want to solve an equation, you should: simplify, solve and check! The first topic of this week is &ldquo;equations involving trigonometric functions&rdquo;. First you try to simplify such an equation to an equation of the form sin(x) equal to c or cos(x) equal to c. To do this, use an appropriate substitution, or trigonometric identities like double angle formulas, addition formulas or sin(x)^2 + cos(x)^2 is equal to 1. Sometimes it may even be necessary to use both methods. To solve the simplified equation, you find a single solution using a table or a calculator, and then you use the graph to obtain all the other solutions. Then we considered equations involving exponential functions and logarithms. If you encounter an equation involving exponential functions, you always want to reduce it to an equation of the form A^p is equal to A^q, which implies p equals q. There are two main techniques to simplify the equation. First you change all exponentials to the same base, and then, possibly, you use a substitution. To solve an equation involving logarithms, the ideas are basically the same. You always want to reduce to an equation of the form: log base A of p is equal to log base A of q, which implies p is equal to q. To get the equation in this form, you first write all logarithms in the same base, and possibly you make a substitution. The next topic was &ldquo;solving inequalities&rdquo;. We want to find out for which values of x the graph of f is below the graph of g. The general method to solve such inequalities is the following: First find the x-values where the functions are equal; , and the points where one of the functions is not defined, or has a discontinuity. At such points, the inequality can change from valid to invalid. Then these points divide the real line into intervals. Look at each interval whether the inequality holds. You can check this at one point in the interval! Finally, check at each boundary point whether the inequality holds. The solution is then the union of intervals on which the inequality holds. The last topic of this week was &ldquo;systems of equations&rdquo;, that is, we want to solve a set of two equations in two variables. This is useful, for instance, if you want to find the intersection points of a line and a circle. To solve such systems of equations you can use the substitution method: solve the simplest of the two equations for y, substitute the expression for y in the second equation to obtain an equation only in x. Then solve this equation for x, and substitute the result in the expression for y. Instead of first solving for y, you can also first solve for x. These were the topics of week 4. Good luck with your homework! End of transcript. Skip to the start. ",
                                        "unit_id":"d32c23fc15654437bdbc5a0cc88f33cd",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"41318a71f5e346ef86eb7ca9c697b0d9",
                                "vertical_name":"Video: Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ed869faf4ca44026b3d41e7a211fa39c",
                        "sequential_name":"Homework week 4",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" It is time for the homework of week 4 on equations and inequalities. As always, these problems are graded and are part of your final score. All homework is due on September 29, 23.30 hours UTC. However we recommend you to finish the homework of week 4 on July 25th. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted before posting your question. We kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"d6b369dcc6774ae0bfe2fb29b7efd2d1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"21cc9302d7ff47379854272a78881744",
                                "vertical_name":"Homework"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 1 ",
                                        "unit_id":"abf902991326409b9a4ea471f46bda12",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3d2634f9d789439ebf5ed2be0047b6ab",
                                "vertical_name":"Equations involving trigonometric functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 2 ",
                                        "unit_id":"11ab0a9599144591a46f8e0dd0103ab4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"747de5825df048728416b3f75a798377",
                                "vertical_name":"Equations involving exponential functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 3 ",
                                        "unit_id":"cd88386d99d6488c9a54fac4ea881c8b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4e422c72b48841949c6ac9995ca1969f",
                                "vertical_name":"Equations involving logarithms"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Number line",
                                            "Boundary point",
                                            "Bracket",
                                            "Point",
                                            "Inequality"
                                        ],
                                        "data":" Problem 4 In each problem below, you have to find the set on which the given inequality holds. To indicate the intervals that make up the set, you can drag the appropriate brackets onto the number line. Remember: a square bracket mans \"including the boundary point\", a round bracket means \"excluding the boundary point\". If the solution set contains isolated points, then drag the dot onto that point. For example, if some inequality is satisfied for all x&lt;&minus;7, all x in the interval (&minus;2,3] and for x=5, you should indicate this as follows: ",
                                        "unit_id":"d36fb3d1c03a48429517d697e6d8f478",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c7d6f593da134691ac5cefc29d343496",
                                "vertical_name":"Inequalities"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Number line",
                                            "Boundary point",
                                            "Bracket",
                                            "Point"
                                        ],
                                        "data":" Problem 5 2.0 points possible (graded) In the problem below, you have to find the domain of a function. Like for inequalities, to indicate the intervals that make up this set, you can drag the appropriate brackets onto the number line. Remember: a square bracket mans \"including the boundary point\", a round bracket means \"excluding the boundary point\". If the domain contains isolated points, then drag the dot onto that point. For example, if the domain contains all x&lt;&minus;7, all x in the interval (&minus;2,3] and x=5, you should indicate this as follows: ",
                                        "unit_id":"ed50d3cbf5ef4bf0bd7f2c4ef8549e00",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f3d1c9783afc49e0bd23b276d10ba09c",
                                "vertical_name":"Domain"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 6 ",
                                        "unit_id":"06404170c51c4a1eaf823a77e5aa931a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5c308d1c454e40bbb8744f6b5d183c68",
                                "vertical_name":"Systems of equations"
                            }
                        ]
                    },
                    {
                        "sequential_id":"00ec96d575814fd99ce5ed30857457d5",
                        "sequential_name":"University preview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Linear programming"
                                        ],
                                        "data":" In this university preview you will learn how to optimize a situation with linear programming. How can you maximize the profit of your company? Watch the video! The interactive exercise after the video is just for fun and is not part of your final grade. ",
                                        "unit_id":"3bb622c72a6e43e7ba12798602fec36f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Blue lines",
                                            "White clay",
                                            "Intersection point",
                                            "Blue line",
                                            "White line",
                                            "Method",
                                            "Optimization",
                                            "Area",
                                            "Blue",
                                            "Line",
                                            "White",
                                            "Point",
                                            "Making",
                                            "Amount",
                                            "Profit",
                                            "Tile",
                                            "Number",
                                            "Cup"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! In this week you practiced with inequalities and systems of equations. In this video you will see how these can be useful in an optimization problem. Suppose you really like these Delft blue cups and tiles and you would like to sell them. Maybe making pottery is not really your thing, so you decide to make them with your 3D-printer. Of course, you want your profit to be as high as possible. So you want to know how many cups and how many tiles you should make. Now you cannot make an unlimited number of them; there are some limiting conditions that you need to take into account. First of all, the tiles and cups are printed with blue and white clay. Let&rsquo;s say a tile consists of 30% blue and 70% white, and a cup consists of 40% blue and 60% white. If T is the number of tiles you make, and C the number of cups, and if each cup or tile takes exactly 0.1 kilograms to print, the amount of blue clay you need is: 0.1 times 30% of T + 0.1 \\times 40 % of C, and in the same way you find the amount of white clay you need. But, let&rsquo;s say, you only have 10 kilograms of blue clay, and 20 of white. Then we have the following constraints: 0.03 T + 0.04 C \\leq 10 and 0.07 T + 0.06 C \\leq 20, These inequalities say that the total amount of blue or white clay that you use is less than the amount you&rsquo;ve got. To maximize the profit you need to know what the profit is on one cup and on one tile. Let&rsquo;s say the profit on a tile and on a cup is both 1 euro. Then the total profit is the number of tiles and the number of cups that you sell. So, we need to solve the following problem: maximize the function P = T + C under the constraints that we just found. How can we do this? Well, first we make a picture of all the inequalities. Let&rsquo;s start with the inequality for the blue clay. If we remove the less-than sign, we get the equation of the blue line. Then all points (T,C) satisfying the inequality are below the blue line. Note that in the picture we also used that the number of cups and tiles is non-negative, that is, T \\geq 0 and C \\geq 0. The inequality corresponding to the white clay, gives the area below the white line. Now the points in the bright yellow area correspond to the number of tiles and cups that you can actually produce. Next we also draw lines representing the profit P. Suppose you want P to be equal to 100, then this corresponds to the line T+C=100, which is the orange line here. The line corresponding to P equals 200, is parallel to the line corresponding to P equals 100. You see that shifting this line upwards corresponds to making more profit, so you want to shift this line upwards as far as possible. But the line needs to intersect the yellow area, otherwise it corresponds to profit that you cannot actually make. So from the picture you see that the highest profit you can make, which is 300 here, corresponds to the intersection point of the white [presenter] and blue lines. You can find the intersection point by solving two equations, and this gives T equals 200 and C equals one 100. So these are the number of tiles and cups that you need to make to maximize your profit. The method that we just used is an example of an optimization method called linear programming. In actual problems, for example in planning of routes for ambulances, there might be thousands of variables and conditions, but the underlying idea remains the same. End of transcript. Skip to the start. ",
                                        "unit_id":"2697105a43ed42f8a8a1b78c8419ab27",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b2d16a8b8e7843338fbc5adecba9a7d9",
                                "vertical_name":"Video: University preview - Linear programming"
                            },
                            {
                                "units":[],
                                "vertical_id":"922c1fcec4374481ab79c16907d58f1f",
                                "vertical_name":"Interactive exercise"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f9c6bc5585624fb4bc89b9aaa1180f35",
                        "sequential_name":"* Student life 4 - Teamwork",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Extra curricular activities"
                                        ],
                                        "data":" In this video we will discuss the importance of teamwork for your study and extra-curricular activities. ",
                                        "unit_id":"c5b7ed55b4a84f45a389b3274644d8ce",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "World solar challenge",
                                            "Applied mathematics",
                                            "Solar car",
                                            "Good luck",
                                            "Extra curricular activities",
                                            "Selection process",
                                            "Good",
                                            "Pascal",
                                            "Design",
                                            "Building",
                                            "Team",
                                            "Car",
                                            "Day",
                                            "Mark",
                                            "Teamwork",
                                            "Important",
                                            "Study",
                                            "Work"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Teamwork! You might think that a study at university involves mainly working alone. Studying hard at the library and passing your exams. Well there is a lot of that. But another aspect is teamwork. A lot of practical work and design projects within your study is done in groups. Let&rsquo;s look at some examples: Students design robots together. They do experiments together. They work in projects as part of their study to solve problems or make new designs. In a lot of the extra-curricular activities there is teamwork too! At the TU Delft we have so-called Dream-teams that build all kinds of rockets, vehicles and sub-marines and compete in global competitions or try to set new records. But how do you build a good team and how do you become a great teammember? Today we are going to talk with Pascal de Koster and Mark Hupkens about that. Welcome Hello Pascal, you study the combined bachelor studies Applied Physics and Applied Mathematics. During what kind of study activities do you work in teams? We do a lot of projects in teams. We have programming assignments and we do experiments in teams. What is important in these projectteams? For projectteams it&rsquo;s important to share the work in a good way, so everybody does the same amount of work. It&rsquo;s very useful to work on a project as a team. You learn from each other. One person has good ideas, another is very good at designing experiments and another is good in reporting. Also, because you work in a team, you have to work! You don't want to let your teammembers down. So, everybody tries their best to work together! Hi Mark, you are leading the Nuna 8 team, consisting of 15 team members. Your team is building a new solar car for the World Solar Challenge. What is the secret to building a successful team? we had people applying for the team. During the selection process we looked at the technical skills and knowledge of a person, but also at his or her personal skills like planning and co-operation. In the beginning we had a good team building weekend to get to know everybody and to talk about how we were going to co-operate. We use for example scrum to plan our work and we have a personal update each day to keep each other updated on our lives. the ideal team member, what does he or she do? A good team member delivers on his or her promises. It&rsquo;s very nice if everyone cooperates well to get the best results. Being nice and pro-active are big plusses too! Yes! It&rsquo;s also very important to share your ideas and thoughts with the rest of the team, also when things get difficult or when you encounter set-backs. The worst set-back in the history of the Nuon Solar Team, happened to the Nuna 5 team. They built an excellent car, but the car crashed during a test day in Australia 3 weeks before the start of the race. The car was total-loss and everybody was devastated. Still they managed to get their car repaired and started the race and finished second. It showed how important teamwork is! Thank you so much for sharing your experiences with us. And Mark, good luck with the World Solar Challenge! End of transcript. Skip to the start ",
                                        "unit_id":"488bda2f453c43678f388cd9add37abd",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" Do you have tips on how to create a good team and on how to be a good team member? Please discuss! ",
                                        "unit_id":"ca4dd956c4da442f861c221af7318fe2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bdae7179e3ff4e1785f22b7ace5f3a83",
                                "vertical_name":"Student life 4 - Teamwork"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"ea1a19970262477d89845767db1107ae",
                "chapter_name":"Week 5. Differentiation",
                "sequentials":[
                    {
                        "sequential_id":"3ad4bef40c9f43abaf7276c152327064",
                        "sequential_name":"5.1 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Roller coasters",
                                            "Tangent line"
                                        ],
                                        "data":" Welcome to Differentation This week the topic is Differentiation. First we will explore the concept of differentiation by looking at roller coasters. You will learn the definition of a derivative. This can be used to calculate speed and to obtain the slope of a tangent line for instance. Then we will discuss standard derivatives and rules of calculation, followed by exercises to give you the chance to apply these rules. We will also discuss the concept of differentiability and the use of differentiation in optimization problems. The university preview of this week is on differential equations. These equations play an important role in engineering. Student life deals with practical stuff this week: money, running a household and student jobs. ",
                                        "unit_id":"701adee3ff78423eb467356c482c531a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2c0a9b58248b41a69226b1e75e856665",
                                "vertical_name":"Welcome to week 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Roller coasters"
                                        ],
                                        "data":" Do you like roller coasters? Watch the video and enjoy speed and slope! ",
                                        "unit_id":"e85152ff9509452aaa66fb59e4708106",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Roller coaster",
                                            "High speed",
                                            "Love",
                                            "Design",
                                            "Ride",
                                            "Track",
                                            "Aspect",
                                            "Slope",
                                            "Speed",
                                            "Differentiation"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Rollercoasters! Do you love them? Do you like to feel the G-forces and scream out loud? Or are you too scared? If I see those massive constructions of rollercoasters I can&rsquo;t help wondering: how do they invent these rides? And how do you make a rollercoaster spectacular but safe? I love roller coasters too! The design of a rollercoaster demands both creativity and thorough calculations. These calculations are strongly related to the topic of this week: Differentiation. To construct a roller coaster you have to deal with finding a good trade-off between different requirements. For a thrilling ride you want high speed and acceleration. But for safety reasons you want to limit the G-forces that people will experience. We call this an optimisation problem. Differentiation plays a very important role in solving those problems. Another important aspect is that a roller coaster track is constructed from basic segments. These segments need to be connected in such a way that the track is smooth and doesn&rsquo;t have any kinks or bumps. The slope and direction at the connection point of any pair of segments should coincide. If not, the ride would be very unpleasant. Mathematically, this means precisely that the track should be differentiable. This gives another aspect of roller coaster design where differentiation comes in. So, two of the most important ingredients for building a great roller coaster ride are slope and speed. But what is slope and what is speed exactly? Even to define slope and speed, we need the concept of differentiation! This week you will learn about differentiation and its many applications. Enjoy the ride! End of transcript. Skip to the start. ",
                                        "unit_id":"9fd62af49c13435ba464c051ac062d11",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1ed4c02318fa462dbb53a230873dfd2a",
                                "vertical_name":"Context video: roller coasters"
                            }
                        ]
                    },
                    {
                        "sequential_id":"78186dd22abb4674822982d73342fa5e",
                        "sequential_name":"5.2 Concept of differentiation",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Tangent line",
                                            "Discussion forum"
                                        ],
                                        "data":" This video will show you the definition of the derivative which is used to calculate speed or the slope of a tangent line for instance. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"58e67382d195435c9859218ac6ad7799",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Vertical position",
                                            "Bicycle computer",
                                            "Good luck",
                                            "Tangent line",
                                            "Time interval",
                                            "Rollercoaster cart",
                                            "Difference quotient",
                                            "Approximately equal",
                                            "Average speed",
                                            "Displacement",
                                            "Part",
                                            "Line",
                                            "Minus",
                                            "Rollercoaster",
                                            "Position",
                                            "Time",
                                            "Measuring",
                                            "Taking",
                                            "Constant",
                                            "Defined",
                                            "Quotient",
                                            "Equal",
                                            "Differentiation",
                                            "Delta",
                                            "Called",
                                            "Negative",
                                            "Straight",
                                            "Track",
                                            "Speed",
                                            "Limit",
                                            "Slope"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! In the rollercoaster video two questions were raised: how to determine the slope of the rollercoaster track and how to determine the speed of the rollercoaster cart. The funny thing is that both questions can be answered using differentiation. Let me show you how! Let us start with the concept of slope. How is it defined? First we look at a straight but inclined [click] part of the rollercoaster track. When a cart moves from point P to point Q, there is a corresponding horizontal displacement Delta x and a vertical displacement Delta y. The slope is simply defined as Delta y divided by Delta x. For example, if Delta x equals 10 meter and Delta y equals 5 meter, the slope is 0.5. Because the line is straight, it does not matter where we take P and Q. If we take Q twice as far, Delta x will double, but so will Delta y, so the slope remains the same... We can even take Q on the other side of P. Then Delta x is negative, say minus 4 meter. Delta y then equals minus 2 meter, so the quotient remains the same. As you would expect, the slope is a measure of steepness: if the track is steeper, then for a fixed Delta x, the corresponding Delta y will be larger, and so the slope will be larger. Finally, descent corresponds to negative slope. [FULL screen] If Delta x is positive, say 10 meter, the corresponding Delta y will be negative, say minus 4 meter. Therefore the slope will be negative, in this case -0.4. What if the track is not straight? Suppose we want to determine the slope at point P. If we zoom in at the track near P, the track will look approximately straight. So if we take Q close to P, and take the quotient of the displacements, we get an approximation of the slope of the track. To improve the approximation, we move Q closer to P. The quotient of Delta y and Delta x approaches a limit value. This value is, by definition, the slope at P. Now let us consider the concept of speed. First, suppose that the speed of the rollercoaster cart is constant on some part of the track. In that case, you can determine it by measuring the distance Delta x travelled during a time interval Delta t, and then take the quotient. For constant speed, it does not matter what time interval we take. Now suppose that the speed is not constant, and we want to determine the speed at time t. Again we can measure the distance Delta x travelled during a time interval Delta t and take the quotient. This gives us the average speed on the time interval, but not the speed at time t. However, if the time interval is small, the speed is approximately constant during that time interval. So the speed at time t is approximately equal to \\Delta x divided by \\Delta t. To make the approximation better, we take Delta t smaller and smaller. The quotient of Delta x and Delta t then approaches some limit value. This is precisely the speed at time t. We see that both slope and speed can be determined by taking the limit of a quotient. That is exactly what differentiation is. More precisely, suppose a function f and a point with x-coordinate equal to &lsquo;a&rsquo; are given. If the x-coordinate changes from &lsquo;a&rsquo; to &lsquo;a&rsquo; plus Delta x, the function value changes. The vertical increase is equal to f(a+\\Delta x) minus f(a), the horizontal increase is equal to \\Delta x. The quotient of these two is called a difference quotient. Now we can take the limit of Delta x to zero. If this limit exists, the number you obtain is called the derivative of f at x equal to &lsquo;a&rsquo;. It is denoted by f&rsquo;(a) or df/dx(a). The whole process of determining the derivative is called differentiation. If you look at the graph, both the difference quotient and the derivate have a geometric interpretation. The difference quotient is precisely the slope of the line connecting the points P and Q on the graph. Now if we let Delta x go to zero, you see that this connecting line approaches a limiting position. The slope of this limiting line is precisely the derivative of f at &lsquo;a&rsquo;. The limiting line itself is called the tangent line to the graph, at the point P. It is the unique line with the property that it passes through the point P and has the same slope as the graph in that point. Now, let us return to the original questions: what is slope and what is speed? We have seen that both slope and speed can be interpreted as derivatives: slope as the derivative of vertical position y as function of horizontal position x, speed as the derivative of position x as function of time t&hellip; The definition in terms of the limit of a difference quotient may seem abstract, but it provides the basis for many measuring devices. For example, a bicycle computer can measure the time it takes to for the wheel to make one revolution. In this case, Delta t is the time measured, Delta x is the circumference of the wheel. The current speed is approximated by Delta x divided by Delta t: the difference quotient. Usually, this approximation is sufficiently accurate. What if you want to calculate derivatives exactly? Taking limits every time can be cumbersome. In the next section, you will learn how to deal with this.. But first, let&rsquo;s practice with the concepts! Good luck! End of transcript. Skip to the start. ",
                                        "unit_id":"9fae1a346a4f49f3972e9549c9fabe77",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0ab5d92d6dfa4b89b10c7fa1e1849936",
                                "vertical_name":"Video: The definition"
                            },
                            {
                                "units":[],
                                "vertical_id":"6b10a8a69c9247f58d2753f583063527",
                                "vertical_name":"Exercises: The definition"
                            },
                            {
                                "units":[],
                                "vertical_id":"66c3d040acb24158bcd745752aa0503a",
                                "vertical_name":"Exercises: Approximating the derivative"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Function",
                                            "Derivative"
                                        ],
                                        "data":" The derivative function In the video we saw how to define the derivative of a function f at a given point x. If you change the point x, the derivative will change as well. This way, you obtain a new function, which associates to a certain x the derivative of f at x. This new function is called the derivative function of f, or simply the derivative of f. It is denoted by f&prime; or dfdx. This derivative function describes the slope of the graph of f. ",
                                        "unit_id":"6796604215fa427a81509d808631a6fc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2ad695eae705492184a438f5494918a2",
                                "vertical_name":"Exercises: The derivative function"
                            },
                            {
                                "units":[],
                                "vertical_id":"f77da999e5b64261a763d46941b5f97d",
                                "vertical_name":"Exercises: The derivative of x^2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c983b726940a4e1c98a0d5a2efa47599",
                        "sequential_name":"5.3 Standard derivatives and rules of calculation",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Product rule",
                                            "Chain rule",
                                            "Learn"
                                        ],
                                        "data":" This video shows the grand plan for calculating derivatives. First, you learn the derivatives of the standard functions. Second, you learn rules to calculate the derivative of combinations of standard functions. Important rules of calculation are the product rule and the chain rule. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"223db8ddaab547338ee5686599183de4",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Good luck",
                                            "Exponential function",
                                            "Chain rule",
                                            "Standard",
                                            "Function",
                                            "Taking",
                                            "Learn",
                                            "Rule"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Would you like to know how you can calculate the derivative of all functions you will ever encounter? In this video we&rsquo;ll set up the basic framework which will allow you to do so. This week we have learned a mathematical definition of the derivative, as a limit. Calculating derivatives using this limit is typically quite difficult. Therefore we like to have simpler rules of calculation so we can calculate the derivatives of more general functions than just the standard ones. What functions do we encounter? Well, we know standard functions such as polynomials, the sine and the exponential function. And we have rules to combine them such as taking the product of two functions. Subsequently, we can create more complicated functions by taking combinations of standard functions, for example e to the x times sin(x), and by taking more complicated combinations, and even more complicated combinations. The grand plan for calculating derivatives is the following: First, you learn the derivatives of the standard functions. And second: you learn rules to calculate the derivative of combinations of standard functions, such as the chain rule. For each method of combining functions, we want a rule which tells us the derivative of the combination in terms of the simpler ingredients. In the future, whenever you need to differentiate a non-standard function, you can analyse it to determine how it is a combination of standard functions, apply the rules, and use the derivatives of the standard functions to obtain its derivative. Together this implies we need to know just a few derivatives and a few rules to be able to determine the derivative of infinitely many functions! If you learn any new standard functions at university, you always want to discover what its derivative is, so you can still play this game for functions which involve this new standard function. Likewise for new methods of combining functions you will want to figure out what this implies for the derivative of this combination. You will learn the rules of combination in the next video, but first you can review the derivatives of standard functions by doing the exercises. Good luck! End of transcript. Skip to the start. ",
                                        "unit_id":"a1125cb6a689420f9c20936a70d1291e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"93eec541afce4dffbcce6bf9ade12fc2",
                                "vertical_name":"Video: Rules of calculation - background"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" A powerful method of learning is recalling information from memory. In the following exercises you can try to recall the standard derivatives and rules of calculation which are the two ingredients which allow you to calculate derivatives, which you hopefully encountered at school. Try to do this exercise without using external sources but purely from memory. Do not worry if you cannot solve these problems now, as we will review all standard derivatives and rules of calculation in the coming videos. In this case we advise you to first watch all videos in this section and only then try to make the exercises. ",
                                        "unit_id":"85925eafdbba491fb97eb3d017bc4e51",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e0ab107e99a147e1a47896a0086cf1b7",
                                "vertical_name":"Exercises: Recalling standard derivatives"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Chain rule",
                                            "Product rule",
                                            "Rule"
                                        ],
                                        "data":" To calculate the derivative of a function you have to know the derivatives of standard functions and learn to apply the rules of calculation, like the product rule and the chain rule. In this video you will learn the product rule. ",
                                        "unit_id":"d443879b91f1418a906f94de13815d4d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Addition rule",
                                            "Cross section",
                                            "Chain rule",
                                            "Product rule",
                                            "Walking speed",
                                            "Formula",
                                            "Small",
                                            "Sine",
                                            "Part",
                                            "Rectangle",
                                            "Rule",
                                            "Traveled",
                                            "Delta",
                                            "Constant",
                                            "Walking",
                                            "Length",
                                            "Train",
                                            "Product",
                                            "Width",
                                            "Area",
                                            "Speed",
                                            "Time",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Having trouble remembering all those rules for taking derivatives? In this video we&rsquo;ll try to help you by giving you examples to remember them by. Whenever an abstract mathematical formula arises you want to think of a concrete example which illustrates the formula. It&rsquo;s a good exercise to try to come up with your own examples. Let us start with the most basic rule of calculation; multiplying a function by a constant. Consider a car on a rollercoaster and let us measure the distance it has traveled in meters as a function of time measured in seconds. The derivative of this function is the speed in meters per second. If we change the unit of distance to feet, we know that there are 3.3 feet in a meter, so the number of feet traveled is 3.3 times the number of meters traveled. Likewise the number of feet per second is 3.3 times the number of meters per second. This illustrates that the derivative of a constant times a function equals that constant times the derivative of the function. We can also see this visually if we look at the graph of f. The graph of 2f has a slope twice as high as that of f. Next we consider the addition rule by looking at someone walking in a moving train. The speed of the boy with respect to the track equals the sum of the speed of the train and his walking speed. That is: the derivative of f plus g equals f prime plus g prime. The product rule (sometimes called Leibniz&rsquo;s rule) is the first of the two most important rules of calculation. Consider a pyramid. If we take a cross section at a distance x from the top we obtain a rectangle, with width w(x) and length ell(x), depending on this distance x. The area of the rectangle is the product w(x) times ell(x). Let us now consider the derivative of the area, which is the rate at which the area increases if we look a little further down the pyramid. Having x increase to x+delta x increases both the width and the length. The extra area can be split in three parts, the yellow part equals the width times the change in length. The green part is the length times the change in width. And the small purple rectangle is the change in length times the change in width. Now observe that the change in width is approximately the derivative of the width times delta x, and similarly for the change in length. We can use this to calculate the area of the three rectangles. If we now look at the rate we see that the derivative of the area equals the width times the derivative of the length plus the length times the derivative of the width. The limit of the area of the small purple rectangle becomes small as delta x goes to zero even after dividing this area by delta x. Thus if the change in height tends to zero it does not contribute to the derivative. As an example of how to use this rule we now calculate the derivative of x squared times sine of x. This equals the derivative (d/dx x^2) * sin(x)] of x squared times sine x plus x^2 (d/dx sin(x))] x squared times the derivative of sine x, which equals 2 x sine x plus x squared cosine of x. In this video we have illustrated the following three rules of calculation: Multiplying a function by a constant multiplies the derivative by the same constant. The addition rule tells you that the derivative of a sum is the sum of the derivatives. And the product rule gives the derivative of the product f times g as f times g&rsquo; plus f&rsquo; times g. In the next video we will have a look at the chain rule. See you there. End of transcript. Skip to the start. ",
                                        "unit_id":"99923f58179446e69b2a592df0a7fe50",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"744a6d8870ea4c9ca3cbbd711bce0108",
                                "vertical_name":"Video: Rules of calculation - part 1"
                            },
                            {
                                "units":[],
                                "vertical_id":"ca28dd4ea99c443ba3bba9c1d9127f23",
                                "vertical_name":"Exercises: The product rule"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rule"
                                        ],
                                        "data":" To calculate the derivative of a function you have to know the derivatives of standard functions and learn to apply the rules of calculation. This video shows you the important chain rule. ",
                                        "unit_id":"2182e1099dbc4e8a86bed693218a79b2",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Short period",
                                            "Quotient rule",
                                            "Chain rule",
                                            "Product rule",
                                            "Short time",
                                            "Outer function",
                                            "Prime",
                                            "Product",
                                            "Rule",
                                            "Delta",
                                            "End",
                                            "Diver",
                                            "Time",
                                            " ",
                                            "Depth",
                                            "Pressure",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back. In these videos we review the rules of calculation for differentiation. In the previous video we considered the product rule. The other very important rule of calculation is the chain rule. Consider a diver in the sea. To avoid decompression sickness the rate at which the diver can return to the surface must be restricted. The issue is not so much the change in height, but the change in pressure. During the diver&rsquo;s ascent the pressure is a function of the depth, x which itself is a function of time. Thus we are interested in the derivative of the pressure as a function of time. If we consider a short period of time delta t, then the change in pressure equals the change in pressure per meter, times the change in depth in this short time. Taking the limit as Delta t goes to zero, we find that the change in pressure per second equals the derivative of the pressure as a function of depth times the derivative of the depth as a function of time. In a formula this becomes f(g(x)) &lsquo; = f&rsquo;(g(x)) g&rsquo;(x). Notice that the derivative of pressure as a function of depth is typically almost constant, so the rules on the speed of ascent are typically given just in terms of speed. There are two frequent mistakes made when using the chain rule. The first one is to forget the factor g&rsquo;(x). The second one is that we need to evaluate the derivative of the outer function f at the value g(x) (and not at x). You can remember this using the diver. Where should we evaluate the derivative of the pressure as a function of depth? Well, obviously, at the depth we are currently at, which is given by the value of the inner function. As an example we now calculate the derivative of ln(x^2+1). The derivative of the natural logarithm equals 1/x, so we see 1/(x^2+1) *d(x^2+1)/dx = 1/x^2+1 * 2x. Finally, the derivative of f/g is often given as an extra rule, the quotient rule. It is easiest to think of this as a combination of the chain rule and the product rule. Indeed f/g equals the product of f(x) and 1/g, so using the product rule We obtain that this equals f prime times 1/g plus f times the derivative of 1/g. which is f prime of x over g(x) plus f(x) and to calculate the derivative of 1/g(x) we use the chainrule so we need to know the derivative of 1/x which is the derivative of x^-1= -x^-2 so we get (-1/g^2) times g prime. Putting everything under the same denominator we obtain f prime times g(x) -f(x) times g prime divided by g(x)^2. Remembering it this way makes sure you never get the wrong sign in this rule again. For example the derivative of x/(x^2+1) equals 1/(x^2+1) plus x * (-1/(x^2+1)^2) *(2x) = [(x^2+1) - 2x^2]/(x^2+1)^2 = (1-x^2)/(x^2+1)^2. which we can simplify to [1-x^2]/[(x^2+1)^2] Now,have a look at the exercises End of transcript. Skip to the start. ",
                                        "unit_id":"4947ffc0db3046888345fe2f28e0d048",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a766bfe3e5504678bc27c6b55647c056",
                                "vertical_name":"Video: Rules of calculation - part 2"
                            },
                            {
                                "units":[],
                                "vertical_id":"89a9aa1cad9b4d3298df4769ea3231d2",
                                "vertical_name":"Exercises: The chain rule"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Polynomial"
                                        ],
                                        "data":" ideo: DerivativeS of power functions and polynomials How to find the derivative of power functions and polynomial functions? Find out in this video! ",
                                        "unit_id":"fefc26542c3340838a2b054608239c38",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Difference quotient",
                                            "Trigonometric functions",
                                            "Exponential functions",
                                            "Real number",
                                            "Straight line",
                                            "Product rule",
                                            "Positive integer",
                                            "Exponential function",
                                            " ",
                                            "Constant",
                                            "Integer",
                                            "Exponent",
                                            "Rule",
                                            "Function",
                                            "Small",
                                            "Put",
                                            "Polynomial",
                                            "Definition",
                                            "Calculate",
                                            "Derivative"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hello, The first derivatives we are going to calculate explicitly are those of power functions, functions of the form x^n. To keep things simple we first consider only integer n &gt;=0, but the rule we find will be valid for all n. We start with the case f(x)=x^0=1. The derivative is the limit of the value of the difference quotient for very small values of h. As you can see the graph is horizontal. So it should come as no surprise that the difference quotient is 0, for all values of h. In particular this difference quotient equals 0 in the limit as h becomes very small. Thus the derivative of the constant function 1 equals this limit, that is 0. The second case we consider is f(x)=x^1=x. Again the graph is a straight line, so the difference quotient has a constant value, but in this case it equals 1 for all values of h. Thus the derivative of the function f(x)=x is the constant function 1. A more interesting function is f(x)=x^2. Expanding (x+h)^2 and including double the crossterm gives that the difference quotient equals 2x+h. Letting h go to zero we see that the result is just 2x. Thus the derivative of x^2 equals 2x. Let us put the derivatives we found so far in a table: The derivative of the constant function 1 =x^0 equals 0 The derivative of the function x^1 equals 1 The derivative of the function x^2 equals 2x Perhaps you are starting to see a pattern, but let us do another one. As you have already noticed using the definition becomes more work. If you want to calculate the difference quotient for f(x)=x^3 you have to expand (x+h)^3. While it is a good exercise to try to calculate the derivative of x^3 using the definition, we are going to use a smart shortcut. Indeed, we use the product rule on x^3=x*x^2. Thus the derivative of x^3 equals (the derivative of x)* x^2 + x* (the derivative of x^2), which is x^2+2 x^2 = 3x^2. Putting this result in a new row of our table, the pattern becomes clearer, but let us do one more case to test whether it still holds up. Again we use use the product rule to find the derivative instead of using the definition directly. We can write x^4=x*x^3 and obtain that the derivative of x^4 equals 1* x^3 + x* (3x^2)=4x^3. Thus we can calculate the derivative of x^4 using that we already know the derivative of x^3. Plugging this in the table we see that the pattern is now obvious. Indeed writing x=x^1 and noting that x^0 is just 1, we see that the derivative of x^n equals n * x^(n-1). Thus it follows that differentiating power functions involves the rule &ldquo;Put exponent in front and then reduce the exponent by one&rdquo;. To prove this for all positive integer n you can continue as we did before. [to second camera] To show that the derivative of x^5 follows this rule and thus equals 5 x^4 you can use the product rule and that you already know the derivative of x^4. This way you can also calculate the derivatives of x^6, x^7 etc. That you can prove this for all positive integer n in this way uses the mathematical technique of induction which we will not discuss here. It should be noted that the formula also holds for negative n (the derivative of 1/x equals -1*x^(-2) = -1/x^2), fractional n (the derivative of sqrt(x) equals 1/ 2 x^(-1/ 2)) and even any real number n (the derivative of x^pi equals pi* x^(pi-1)). However proving this for all these other values of n is rather complicated and we will do this later with a neat trick using the derivative of the exponential function. Let me stress that this only works for functions with *constant exponent*. For example the derivative of 2^x is not equal to x * 2^(x-1). Derivatives for exponential functions as 2^x are treated in a later video. You can use the derivatives of power functions to calculate the derivatives of any polynomial. For example, the polynomial 2 + 4 x + 5 x^2 + 7 x^3 -x^4 is a sum of multiples of power functions. Thus its derivative is two times the derivative of the constant function 1, plus 4 times the derivative of x, plus 5 times the derivative of x^2, etc. We obtain that the derivative equals 4 + 10x + 21x^2 - 4x^3. Notice that the derivative of a polynomial is a polynomial of one degree lower. Now try calculating a few polynomial derivatives yourself and then watch the video on derivatives of trigonometric functions. End of transcript. Skip to the start. ",
                                        "unit_id":"e44b5301335045b4b6858d24f1b0f346",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0a4026c7c17f4d77a6c6c8766655bcd0",
                                "vertical_name":"Video: Derivatives of power functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"f0cf2de9ad5b4349803f94f2c36e5f0e",
                                "vertical_name":"Exercises: Derivatives of power functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Video: Derivative of the sine It is important to know the derivative of standard functions. You will see how the derivative of the sine is determined. In the exercises after the video you will obtain the derivative of the cosine yourself. ",
                                        "unit_id":"a74d47a7e2574362b4e6ef8859762888",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"86b95308120e4d6b99203a9bf4b25d3a",
                                "vertical_name":"Video : Standard derivatives of the sine and the cosine"
                            },
                            {
                                "units":[],
                                "vertical_id":"dfb012e0ed9c4c7caa7e851ba4e20de0",
                                "vertical_name":"Exercises: Standard derivatives of the sine and the cosine"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" IDEO: DERIVATIVE OF AX AND XP It is important to know the derivative of standard functions. You will see how the derivative of ax and xp is determined. The information in this video can be used to make the exercises in the next unit. ",
                                        "unit_id":"9213c69e000f4751aa395e62a857f0f4",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"85249025e8c24e4ea3940d6b39045383",
                                "vertical_name":"Video: Standard derivatives of a^x and x^p"
                            }
                        ]
                    },
                    {
                        "sequential_id":"14610731450149acbfedf5b32e6aa4cf",
                        "sequential_name":"5.4 Tangent lines",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Tangent line",
                                            "Discussion forum"
                                        ],
                                        "data":" The derivative of a function is the slope of the tangent line at the graph of the function. In this video you will learn how to find an equation of this tangent line. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"7ecaef8c5397487b9859c38dd4d7eb03",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Tangent line",
                                            "Differentiable function",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! In a previous video we saw that the derivative of a function is the slope of the tangent line at the graph of the function. In this video we will see how to find an equation of this tangent line. Let&rsquo;s look at an example. Here we see the graph of the function x^2+2. We will determine the equation of the tangent line to the graph at the point (1,3). Ok, first of all: we know what the slope of the tangent line should be. It must be the derivative of f at the point 1. So, let&rsquo;s calculate the derivative: it is the derivative of x^2 + 2, which is 2x. Now we set x equal to 1 here, and we see that the slope of the tangent line is equal to 2. For the next step we choose a point (x,y) on the tangent line. Now the slope of the tangent line, which is 2, is equal to Delta y divided by Delta x, where Delta y is equal to y - 3, and Delta x is equal to x -1. So we obtained a relation between x and y. We will solve for y: multiply both sides of this equation by x-1, then we have y -3 = 2 (x -1). And finally, we bring the 3 to the other side. And there it is: the equation of the tangent line! The way we found the tangent line in this example? can be used for any differentiable function. Suppose we want to know the tangent line at the graph of a function f at the point (p, f(p)). We know two properties of the tangent line: it&rsquo;s slope is equal to the derivative of f at p, and it goes through the point (p, f(p) ). Just as in the example, we now choose a point (x,y) on the tangent line. The slope, which is f prime of p, is then equal to the difference between y and f(p), divided by the difference between x and p. We can now solve for y, then we find: y is equal to f prime of p times (x - p) plus f(p). And this is the equation of the tangent line! Ok, let&rsquo;s practise with this! End of transcript. Skip to the start. ",
                                        "unit_id":"0043d65679f34eb7adc33708af406396",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f7ed9d5d4ded46a2ade8bc26838a6162",
                                "vertical_name":"Video: The tangent line"
                            },
                            {
                                "units":[],
                                "vertical_id":"04bb5b7422cf4cdfa82965ca0257511d",
                                "vertical_name":"Exercises: The tangent line"
                            },
                            {
                                "units":[],
                                "vertical_id":"034ad87fadb64fe1a005c365f9b1ca5f",
                                "vertical_name":"Exercises: Tangents and angles"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e8a47cafbd7e4711906e65103874fdfe",
                        "sequential_name":"5.5 Non-differentiable functions",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Do all functions have a derivative at any point? Let&rsquo;s find out! We first do some warming-up exercises before watching the video on non-differentiability. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"6f84e531195a4070970103fa159be46f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"de9b669811aa49b6b74da0638d77e748",
                                "vertical_name":"Warming-up exercises"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" ideo: Non-differentiable functions In this video you will discover three cases of non-differentiable functions. ",
                                        "unit_id":"7c86c4de2bb842a4a25429134b1db6a2",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Difference quotient",
                                            "Green line",
                                            "Tangent line",
                                            "Horizontal line",
                                            "Real number",
                                            "Cube root",
                                            "Line",
                                            "Approximates",
                                            "Vertical",
                                            "Point",
                                            "Type",
                                            "Exist",
                                            "Delta",
                                            "Limit",
                                            "Slope",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! So far we took derivatives of many different functions. But you might wonder: can we differentiate any function at any point? The answer turns out to be &lsquo;no&rsquo;. Now we will look at what might go wrong. Remember that a function is differentiable at a point &lsquo;a&rsquo; if the limit, as Delta x goes to zero, of the following difference quotient exists: ( f(a+Delta x) &ndash; f(a) ) / Delta x. By &lsquo;exist&rsquo; we mean that the limit must be exactly one real number. Graphically the difference quotient is the slope of the green line, and in the limit it approximates the slope of the tangent line. So a function is not differentiable at &lsquo;a&rsquo; if this limit does not exist, meaning that there is no tangent line at &lsquo;a&rsquo;, at least not with a finite slope. Let&rsquo;s look at a few examples. Our first example is a function with a jump at &lsquo;a&rsquo;, so a non-continuous function. Let&rsquo;s see if we can approximate a tangent line at &lsquo;a&rsquo;. First we take Delta x positive, and the difference quotient is the slope of the green line. Now if we let Delta x go to 0, we see that the green line approximates a horizontal line. This is our candidate for a tangent line. Ok, now we do the same with a negative \\Delta x, and you see what goes wrong. The green line does not approximate the same horizontal line that we had before. So in this case the limit of the difference quotient does not exist, and we conclude that this function is not differentiable at the point &lsquo;a&rsquo;. Next we look at a function whose graph has a kink in it; the absolute value of sin(x), which has a kink at 0. We do the same as in the previous example. We approximate the tangent line with \\Delta x positive..., and with Delta x negative. We see that we get different lines again, so this function is not differentiable at 0. The last function we look at is the cube root of x. We can do the same as before; approximate the tangent line at 0 by first taking Delta x positive, and then negative. But now nothing seems to go wrong: the graph has a tangent line at x=0. The problem in this case is that the tangent line is vertical, so the slope of the tangent line is infinite. Recall that we said that a function is differentiable at &lsquo;a&rsquo; if the limit of the difference quotient exists, that is, it must be a real number. Well, in this case the limit equals infinity, which is not a real number. So the limit does not exist, and the function is not differentiable at 0, even though the graph has a tangent line. So far we have seen the following types of non-differentiable functions: non-continuous functions, functions with a kink in the graph, and functions whose graph have a vertical tangent line. These are the types of non-differentiable functions that you will encounter the most. There are more type non-differentiable functions, however you will not encounter them very often. So remember: not all functions are differentiable! End of transcript. Skip to the start. ",
                                        "unit_id":"d24b403285114ecb8ccf9b3ec8f00bc9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9006429366d0470db80db41957e5e7b2",
                                "vertical_name":"Video: Non-differentiable functions"
                            },
                            {
                                "units":[],
                                "vertical_id":"c16d3c973da640b4a5e40f0ef84f349e",
                                "vertical_name":"Exercises: Non-differentiable functions"
                            }
                        ]
                    },
                    {
                        "sequential_id":"ae6528beaef04b51a2194157277e7d16",
                        "sequential_name":"5.6 Application: finding extremal values",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" For optimization it is important to be able to find the minima and maxima of a function. In this video you will learn how to do this! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"865a37ae7b364f68af6d3ac23540924d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Local extrema",
                                            "Critical points",
                                            "Singular points",
                                            "Highest points",
                                            "Lowest points",
                                            "Local maxima",
                                            "Common mistake",
                                            "Horizontal axis",
                                            "Roller coaster",
                                            "Mechanical system",
                                            "Boundary points",
                                            "Critical point",
                                            "Singular point",
                                            "Local maximum",
                                            "Global maximum",
                                            "Necessarily true",
                                            "Highest point",
                                            "Local minimum",
                                            "Global minimum",
                                            "Boundary point",
                                            "Height function",
                                            "Differentiable function",
                                            "Called",
                                            "Minimal",
                                            "Arch",
                                            "Extremal",
                                            "Find",
                                            "Boundary",
                                            "Maximal",
                                            "Maximum",
                                            "Speed",
                                            "Terminology",
                                            "Height",
                                            "Necessarily",
                                            "Rollercoaster",
                                            "Point",
                                            "Minimum",
                                            "Track",
                                            "Differentiable",
                                            "Function",
                                            "Derivative"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back! A rollercoaster track has highest points and lowest points. If we know a function that describes the track, how can we find these points? This simple question, how to find minima and maxima of a function, has numerous other applications, because it has to do with optimization. Think of economics: a firm wants to know at which output the profit is maximal. Or physics: the stable states of a mechanical system are precisely those for which the energy is locally minimal. Or think again of our rollercoaster example: the speed may not be too high due to safety, and cannot be too low either, because then the cart may get stuck on the track. So when you are designing a roller coaster, you have to know what the minimal and maximal speed of the cart will be. In this video, you will learn how differentiation can be used to deal with such optimization problems. Let me first recall some terminology. We say function f has a global maximum at x=a, if all function values are smaller than or equal to f(a). Similarly, we say f has a global minimum at x=b if all function values are larger than or equal to f(b). The name &ldquo;global&rdquo; suggest that there or other types of maxima and minima. Well, there are!: we say that f has a local maximum at x=c if f(c) is the largest value that f attains on some interval around x=c. Similarly we say f has a local minimum at x=d if f(d) is the smallest value that f attains on some interval around x=d. Note that this also hold for the global maximum and minimum. Those are special cases of local maxima and minima. By the way, sometimes I get tired of saying &ldquo;maximal values and minimal values&rdquo;, and simply call them: &ldquo;extremal values&rdquo;. What do these extremal values have to do with differentiation? Well, recall the following. If a function is differentiable and the derivative is positive, then it is increasing. If the derivative is negative, it is decreasing. Now at a local maximum or minimum, f is neither increasing nor decreasing, so the derivative is precisely 0 at those points. Indeed, let&rsquo;s look at a local maximum in the graph in the picture, and zoom in. If you pass over over a maximum from left to right, then just before the maximum, the slope is positive, and right after the slope is negative. Precisely at the local maximum, the slope is 0. Based on this, you may suspect the following: given a function f and a point &lsquo;a&rsquo; where f has an extremal value, the derivative of f at a equals 0. Let me stress here that this is NOT always the case! Look at the following example: the absolute value of x. This function clearly has a minimum at x equal to 0. But what is the derivative there? As we have seen in the previous video, the derivative does not exist there! So we see, maxima and minima can also be attained at points where the derivative does not exist. Ok, so now you may suspect the following: in local maxima and minima of f, either the derivative vanishes, or it does not exist. Even that is not always the case! For example, look at this picture of the famous Gateway Arch in Saint Louis, USA. It&rsquo;s height, as a function of horizontal position, is a differentiable function. At the highest point, you see that the derivative of this function is 0, nothing extraordinary there. But what about the lowest points? Clearly, the lowest points are at the feet of the arch. The height function is differentiable there, but the derivative is not equal to zero! So what is going on here? Well, we are talking about points at the boundary! At boundary points, a function can have a local maximum or minimum without vanishing derivative. Ok, let&rsquo;s gather what we have seen: If f attains a local maximum or minimum at x=a, then either f&rsquo;(a)=0 or f is not differentiable at x=a or x=a is a boundary point of the domain of f. This is indeed the full story! Let me introduce some extra terminology: points on the horizontal axis where the derivative of f is 0 are called critical points, points where the derivative does not exist are called singular points, and if a point is at the boundary of the domain of f it is called, naturally, a boundary point. A warning is in place here. It is a common mistake to use this result in the wrong way. It says that IF f is locally extremal at x=a, THEN x=a must be a critical point, singular point or boundary point. BUT: the other way around is not necessarily true!!! For example, IF the derivative is zero at some x, then the function does not necessarily have a local minimum or maximum there. A standard example is the function x^3. The derivative is equal to 3x^2, which is 0 at x=0. So this function has a critical point at x equal to 0, but it has no extremum there: it is increasing both for x&lt;0 and for x&gt;0. Similarly, a function can have singular points which are neither a local maximum nor a local minimum, as the example shows. Keep that in mind! Let me summarize: if you want to find local extrema of a function, first find the critical points, singular points and boundary points. IF the function has local extrema, THEN it must be at those points, so we have limited our search from the whole domain of f to a limited set of points. But keep in mind: we still have to investigate the function at each of those points to see whether it has a local minimum there, a local maximum, or neither! You will see tips and tricks for that in the rest of this subsection. Let&rsquo;s practice! End of transcript. Skip to the start. ",
                                        "unit_id":"dc2e3eb8e83e41fd95cc5c0633f5e183",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e3461f71159b4bd4b0a39a446c729f2b",
                                "vertical_name":"Video: Finding local minima and maxima"
                            },
                            {
                                "units":[],
                                "vertical_id":"0cf51bdc8bdb4213827ae51d52d0fe09",
                                "vertical_name":"Exercises: Finding local minima and maxima"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Local extremum",
                                            "Singular points",
                                            "Critical points",
                                            "Number line",
                                            "Local extrema",
                                            "Local minima",
                                            "Local maxima",
                                            "Boundary points",
                                            "Critical point",
                                            "Boundary point",
                                            "Singular point",
                                            "Local minimum",
                                            "Local maximum",
                                            "Point",
                                            "Minimum",
                                            "Maximum",
                                            "Function"
                                        ],
                                        "data":" Minimum, Maximum or Neither? From the video, we know that local extrema of some function f can only be attained at critical points, singular points or boundary points. But beware: it is possible that even at such points, f does not have a local extremum! So the question is: given a critical point, singular point or boundary point, how to determine whether f has a local extremum or not? If f is continuous, then it suffices to know where the functions is increasing, and where it is decreasing, to identify the local extrema. This you can determine by looking where the derivative function f&prime; is positive and where it is negative. Let's look at an illustrative example. Consider the function f(x)=x&minus;2x. Then: x=0 is a boundary point and a singular point; x=1 is a critical point (check for yourself!). Are these local maxima or local minima? The derivative function is f&prime;(x)=1&minus;1x. The relevant behavior can be shown on a number line, indicating where f&prime; is positive, negative, zero or non-existent: From this you find that f is decreasing between x=0 and x=1 and increasing beyond x=1. Therefore, at x=0, the function has a local maximum, and at x=1 it has a local minimum. Now, try it yourself in the following exercises. ",
                                        "unit_id":"7de43b128cea4b58af3913e9c9fe6f78",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0793056f34d646f89708e62b3b419dc3",
                                "vertical_name":"Exercises: Local minima and maxima"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Let&rsquo;s find the global extreme values of f ( x ) = x 3 &minus; 3 x on the interval [ &minus; 3 , 3 ] . Can you catch the error? Share your thoughts in the discussion box below! The answer will be released on August 1st. ",
                                        "unit_id":"1dfc9c854c2a4e639b0e5e534e9bd9c0",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Critical points",
                                            "Number line",
                                            "Global maximum",
                                            "Critical point",
                                            "Global minimum",
                                            "Closed interval",
                                            "Point",
                                            "Interval",
                                            "Derivative",
                                            "Maximum",
                                            "Minus",
                                            "Equal",
                                            "Minimum",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! We&rsquo;re going to do a catch-the-error video again. Just a reminder, in this video we will give you a problem that is not correctly worked out. Your task is to find our mistake, so pay attention and catch that error! Consider the function f of x equal to x cubed minus 3x, on the closed interval from -3 to 3. On this interval, the functions has a global mimimum and maximum value. What are they? What were the steps of finding the global extreme values of a function? First step: Determine the derivative! The second step: Find the critical points, so setting the derivative to zero and solving for x. When we have done this, we can find out if we have found a minimum or a maximum value of f at point a by making a numberline of the derivative of f. The last step is to find out the function value at these points so we get our extreme values of f. Let us first determine the derivative of f. The derivative becomes 3 times, x squared, minus 3 , so We know that extreme values can occur at critical points, so we set the derivative equal to zero, and we solve for x. So we set the derivative equal to zero, well this is quite an easy function. So take 3 to the other side, and divide by 3, And we get our values &lsquo;x &lsquo; is equal to plus or minus one. Ok, let&rsquo;s see if these points correspond to minimum or maximum values of f. We can do this by making a &ldquo;number line of the derivative of f&rdquo; to see if the function is increasing or decreasing around our critical points . so we make a number line, where we set -1 and 1 with the derivative equals 0. At zero the derivative is equal to minus 3, so it's negative there, it's decreasing. At 2 derivative equals three times, two squared , minus three, which equals nine, so the function is increasing there. At -2 we have three times, minus two squared, minus three, which also equals nine, so the function is also increasing at -2. this gives us : increasing, critical point, decreasing,critical point, increasing We can now see that our function f has a maximum value at minus one and a minimum value at plus one. To find our extreme values we now only need to compute the function values ! f(-1)= ((-1)^3) -3 *-1 =2 f(1) = (1^3)-3*1=-2 So our maximum value is two. So, to conclude: f has a global maximum value of 2 at x equals -1, and a global minimum value of minus 2 at x equals 1. But, the value of f at x equals 3 is equal to 3 cubed minus 3*3, which is 27 - 9, which equals 18. This is larger than 2, so we did something wrong! Can you catch the error? End of transcript. Skip to the start. ",
                                        "unit_id":"670d16b436f846bfa0a1c378fe3e8c1a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"917709efc5a148df8e66340cd86ab645",
                                "vertical_name":"Video: Catch the error"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a714df5790254c8d8975e11c0d2f9760",
                        "sequential_name":"Training sequence",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Training sequence"
                                        ],
                                        "data":" In this training sequence you can apply everything you have learned on the definition of differentiation and the rules of calculation. This training sequence will help you prepare for the homework. The results of your answers do not count for your final grade. Have a good training! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"906d566ca6aa403a9f15bfda781ee111",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2a7c069ace7a4b538e60bb5bab90d8a0",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 1 Find the derivative of the given function. Simplify your answer as much as possible. ",
                                        "unit_id":"1871d1fb112a4e6bb9f459799e97fc13",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b7f8ed9a05494400ab9a15fd4ded16dd",
                                "vertical_name":"Exercise 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 2 Find the derivative of the given function. Simplify your answer as much as possible. ",
                                        "unit_id":"6ab1d6f0d6ce47128ff8317ac2df8f2d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"921266070c8642b1af21000e46ade4cd",
                                "vertical_name":"Exercise 2"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 3 Find the derivative of the given function. Simplify your answer as much as possible. ",
                                        "unit_id":"7514ca1398424d43b631c73f0e912106",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5edcd5177085448cb4e36d93e6a6b748",
                                "vertical_name":"Exercise 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" EXERCISE 4 Find the derivative of the given function. Simplify your answer as much as possible. ",
                                        "unit_id":"ce193a36b0e6438994684069e681d400",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a5af7793f26f4b48b1a54736e2a9b71f",
                                "vertical_name":"Exercise 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 5 More exercises on differentiation. ",
                                        "unit_id":"f3a6273a29504c669a02bd5525d03e2e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"74949fd832e54e4ba8a880c390f0a5c7",
                                "vertical_name":"Exercise 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 6: Tangent lines ",
                                        "unit_id":"565551603e5c4806a7eeb46dda966198",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a9e0312fc9b347c1ad5d0a31c70e2340",
                                "vertical_name":"Exercise 6"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Graphing calculator"
                                        ],
                                        "data":" Exercise 7: Differentiability Are the following functions differentiable at the indicated point? Think twice before answering: these questions are tricky. If you have a graphing calculator you may want to plot the functions. ",
                                        "unit_id":"211b53387ae047bdb758a3a342b36776",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b072b0342b58469cbea697a31d0c3523",
                                "vertical_name":"Exercise 7"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 8: Extremal values 1 ",
                                        "unit_id":"a132516ecb3b4372a529c59d2038ffa6",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"23548ebd5aa84231809c8cd045dbc94e",
                                "vertical_name":"Exercise 8new"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 9: Extremal Values 2 ",
                                        "unit_id":"cbc59d852dac498cb78c581306b74392",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"742309096bb640a69bc6d9d73ddb1f0c",
                                "vertical_name":"Exercise 9new"
                            },
                            {
                                "units":[],
                                "vertical_id":"8166b615a2284c89a530ba6d0aa22db6",
                                "vertical_name":"Exercise 10"
                            }
                        ]
                    },
                    {
                        "sequential_id":"3793a8a494b44600b551beb237275f90",
                        "sequential_name":"Subsection",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" In this subsection we will give a summary of everything you have learned this week on differentiation. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"b32b5b32a73d49e6afa1ac7dd10c13de",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Green line",
                                            "Tangent line",
                                            "Difference quotient",
                                            "Chain rule",
                                            "Horizontal axis",
                                            "Good luck",
                                            "Local maximum",
                                            "Exponential functions",
                                            "Quotient rule",
                                            "Product rule",
                                            "Boundary point",
                                            "Tangent",
                                            "Quotient",
                                            "Called",
                                            "Rule",
                                            "Boundary",
                                            "Sine",
                                            "Determine",
                                            "Maximum",
                                            "Divided",
                                            "Point",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! We are almost finished with week 5! To help you we will summarise this weeks content. At the beginning of week 5 we wanted to determine the slope of the rollercoaster track and the speed of the cart. To do so, we started by defining the derivative. The setting was as follows. Suppose a function f is given. If you move from point &lsquo;a&rsquo; on the horizontal axis to 'a' plus Delta x, the function value changes. The quotient of the vertical change and the horizontal change is called the difference quotient. It can be interpreted as the slope of the green line. Now take Delta x to zero. If the limit of the difference quotient exists, it called the derivative of f at &lsquo;a&rsquo;. It is denoted by f prime of (a) or df over dx of (a). The green line approaches a limiting position. This is the tangent line to the graph at point P. To determine the derivatives of more complicated functions, we first take a look at the derivatives of the standard functions. You should remember the derivatives of power functions, exponential functions and the logarithm. We also found the derivatives of sine(x) and cosine(x). The derivative of sine(x) equals plus cosine(x) and the derivative of cosine(x) equals minus sine(x). And in of the exercises we found that the derivative of tangent of x equals 1 divided by cosine of x squared. So far our standard derivatives, now let&rsquo;s look at the rules to calculate the derivatives of combinations of standard functions. The derivative of a constant times a function equals that constant times the derivative of the function. The derivative of f plus g equals the derivative of f plus the derivative of g. This is the sumrule for differentiation. We also know the product rule. This rule states that the derivative of f(x) times g(x) equals f&rsquo;(x) times g(x) plus g&rsquo;(x) times f(x). Furthermore the chain rule tells us that f of g(x) equals the derivative of f at the value g(x) times the derivative of g at the value x. Finally the derivative of f divided by g can be calculated using the quotient rule, but remember that you can also derive it by using a combination of the chain rule and the product rule. These were all of our rules. You should note that derivatives do not always exist. This might happen for several reasons. Some examples of instances where a function f is not differentiable at 'a' occur when: f is not continuous at 'a' (with picture of graph) The graph of f has a kink at 'a' (with picture) The graph of f has a vertical tangent line at 'a'. There are even more exotic examples but you will not encounter those often. Finally, we looked at how to determine local extrema of a function. The most important result is the following: If a function f attains a local maximum or minimum at x =a then either the derivative of f in 'a' equals zero, f is not differentiable at x equals 'a' or the point 'a' is a boundary point of the domain of f. The points where the derivative of f equals zero are called critical points. Points where the derivative does not exist are called singular points and if a point is at the boundary of the domain, we call it a boundary point. To find the maximum or minimum of f you must check all three kinds of points. This was all the theory about differentiation. If something from this summary is not completely clear to you, you can go back to the video explaining that part. Good luck with this week&rsquo;s exercises. End of transcript. Skip to the start. ",
                                        "unit_id":"d3faf42fec5348bbbfc1ee1e59727996",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e839ba0a6cbb4c2e8356a79de8a666fe",
                                "vertical_name":"Video: Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"1a41c49173284009a9edc99bd8c2168a",
                        "sequential_name":"Homework week 5",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Homework"
                                        ],
                                        "data":" You have learned and reviewed a lot on differentiation this week. In this homework sequence you can apply the things you have learned to the problems. The results of your homework will be a part of your final grade. All homework is due on September 29, 23.30 hours UTC. However we recommend you to finish the homework of week 5 on August 1st. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted before posting your question. We kindly ask you to give only hints when responding, but NOT to provide answers. ",
                                        "unit_id":"ff5c8333fa984f389cf8c57d13c03185",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9b3ff4d36b8f45999ae546fd3c7298ad",
                                "vertical_name":"Homework"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differentiable function"
                                        ],
                                        "data":" Problem 1 In the picture you see the graph of a differentiable function f. The following function values are given: f(2)=3 and f(2.03)=3.012. ",
                                        "unit_id":"0fad2496700c4017be4451ac52c65018",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"9c7a480cf41a46baab74b48b83004409",
                                "vertical_name":"Problem 1"
                            },
                            {
                                "units":[],
                                "vertical_id":"fccfa74630784045a08d8b17465cd315",
                                "vertical_name":"Problem 2"
                            },
                            {
                                "units":[],
                                "vertical_id":"a5360799e0a24c7a95fa31166c7f1acc",
                                "vertical_name":"Problem 3"
                            },
                            {
                                "units":[],
                                "vertical_id":"00c45de5737e4d3e8e13a76c89d6a111",
                                "vertical_name":"Problem 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 5 Find the derivative of the given function. Simplify your answer as much as possible. ",
                                        "unit_id":"6906706f21514c25a4ee392457e31746",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a95cc4eff3784f0cbc692fb166a52268",
                                "vertical_name":"Problem 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 6 The function f is given by f(x)=&minus;12x2+6x&minus;13. ",
                                        "unit_id":"ce7a4ffbab1e40708acf1e4caeb3c943",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"251b862f21504089b5cba3ccac3901c9",
                                "vertical_name":"Problem 6"
                            },
                            {
                                "units":[],
                                "vertical_id":"28a4ef003ebb47d0a0b918ce61f3e0aa",
                                "vertical_name":"Problem 7"
                            }
                        ]
                    },
                    {
                        "sequential_id":"fc6e5c6b48644ddba4f531e92c4540e7",
                        "sequential_name":"University preview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equations"
                                        ],
                                        "data":" This week's university preview introduces differential equations. These are equations where you have to solve for an unknown function instead of a number. Differential equations can be used to describe how many things (for example temperature or the price of coffee) change over time or over space. The exercise after the video is just for fun and doesn't count for your final grade. ",
                                        "unit_id":"301336b80c194ce38fb7fd315bf5cd83",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Differential equations",
                                            "Differential equation",
                                            "Traffic flows",
                                            "Room temperature",
                                            "Exponential function",
                                            "Equation",
                                            "Room",
                                            "Coffee",
                                            "Differentiation",
                                            "Infinitely",
                                            "Constant",
                                            "Temperature",
                                            "Rate",
                                            "Find",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! This week you practised differentiation of functions. And you might wonder where derivatives can be used. Well, one of the main applications of derivatives is in differential equations. Suppose I want to describe the temperature of the coffee in this cup as a function of time. What do we know about this function? Well, we know that if the coffee is very hot, it cools down fast. And if the temperature of the coffee is just above room temperature, it cools down at a slow rate. So it seems reasonable to assume that the rate of cooling is proportional to the difference of the temperature of the coffee and the room temperature. This is, of course, just a simplification of the real situation, but it actually turns out to be quite accurate. Ok, let&rsquo;s try to put this into a formula. Let f(t) be a function describing the difference at time t between the coffee temperature and the room temperature. This is the function we want to find. Then the rate of cooling is the derivative of f. This is proportional to f itself, so there is a constant k such that the derivative of f at time t is equal to k times f(t). We don&rsquo;t know the value of k, however it should be negative because the difference in temperature gets smaller in time. So, let&rsquo;s just say that k is equal to minus 2. Now we have obtained the relation f prime of t is equal to minus two times f(t). This is an example of a differential equation: that is, an equation that expresses a relationship between an unknown function and its derivatives. Differential equations play a very important role in, for instance, physics and engineering. Usually, these differential equations are more difficult than the one we just derived. Back to our differential equation We want to find a function f such that the derivative is -2 times the function itself. We know such a function: an exponential function so we have f(t)= e ^-2t, we can check The derivative of this function is -2 e^{-2t} which is equal to -2 times f(t). So we obtained a solution for our differential equation. But wait, is this the only solution? No, it is not! We can take f(t) equal to a constant times e to the power -2t, so we have a constant times e^{-2t}, now we can check the derivative again at prime of t = -2*C*e{-2t} this here is exually f(t) again, so we get -2f(t) So we have infinitely many solutions: C times e to the power -2t, for any constant C. We don&rsquo;t expect to find infinitely many different functions that all describe the temperature of my coffee! So, what is the value of C here? Well, our coffee machine produces coffee with a temperature of 80 degrees Celsius. If the room temperature is 20 degrees, then the difference is 80-20=60 degrees. So at t=0 the value of f should be 60, So what do we get in this case? f(t)=C*e^{-2t}, So f(0)=Ce^{-2*0}= 60 so we have C=60 and the solution of our diferential equation becomes: f(t)= 60*e^{-2t} Ok, so the function f describing the difference between the temperature of the coffee and the room, is given by the following function So we found the function that we wanted by solving the differential equation. Differential equations are very powerful tools. They are used to model, for example traffic flows, acoustic waves, and they are also used in, financial models. You will encounter more differential equations at the university. Your knowledge of differentiation is essential to understanding differential equations.. End of transcript. Skip to the start. ",
                                        "unit_id":"fa9038f79e204d7ca3d305e00d93891a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"90f96f61e98e44cb80ee9e039fae2de1",
                                "vertical_name":"Video: University preview - Differential equations"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Differential equation",
                                            "Discussion forum",
                                            "Room temperature",
                                            "Temperature",
                                            "Coffee",
                                            "Function",
                                            "Room"
                                        ],
                                        "data":" In the university preview Wolter showed a function of the difference of the coffee temperature and the room temperature and the relation of this function with its derivative function. Try this out at home and post your results on the discussion forum! Let f(t) be the difference in temperature at time t between the coffee in your own cup and the room. We saw in the video that f satisfies the differential equation f&prime;(t)=k&sdot;f(t) for some negative constant k. Determine the value of k by measuring the temperature of your coffee and the room. If you don&rsquo;t like to drink coffee you may do this exercise with tea / soup / chocolate milk / &hellip;&hellip; (insert your own favorite hot drink here; you can even try cooled drinks!). ",
                                        "unit_id":"65a39c29a0e64f59a9e97c2745f3cf06",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"764ae9626bb44ba2b24909c27baa8d71",
                                "vertical_name":"Exercises: Differential equations"
                            }
                        ]
                    },
                    {
                        "sequential_id":"a238315f811d4666824f9da46e49383a",
                        "sequential_name":"* Student life 5 - Practical stuff",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" This student life video is about practical stuff: money, running a household and finding a student job. ",
                                        "unit_id":"b44d8ab20e9d4fda9e93a2714a5e6543",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Teaching assistant",
                                            "Super market",
                                            "High school",
                                            "Mobile phone",
                                            "Good luck",
                                            "University tuition",
                                            "Good job",
                                            "Find",
                                            "Nice",
                                            "University",
                                            "Good",
                                            "Ll",
                                            "Program",
                                            "Save",
                                            "Year",
                                            "Tuition",
                                            "Job",
                                            "Buy",
                                            "Household",
                                            "Study",
                                            "Start",
                                            "Money"
                                        ],
                                        "data":" Start of transcript. Skip to the end. New! New! New! We already discussed some things that will be new for you, when you&rsquo;ll start your study, like how to plan your study and how to find nice extra-curricular activities and how to combine this with your study. Today we are going to talk about practical stuff, like money, a place to live and running a household. Totaal Mijke, what was the biggest change for you in that area? How I spend my money. In high school I could spend my pocket-money and the money I earned with jobs on anything I liked. Now I have to spend my money on rent, tuition, books and groceries. Totaal Luckily I get money from my student loan, my parents and my job as a teaching assistant, but I still have to be careful how I spend it all. How do you do that? At one point I didn&rsquo;t really know, what I was spending my money on. So I used an app on my mobile phone to register my expenses. This helped me to find out on what sort of things I spend most of my money. Especially the first months of the study year you have a lot of extra expenses, because you&rsquo;ll have to buy books and pay the university tuition. It&rsquo;s good to have a little financial buffer, before you start the study year. I also got tips from older-year students about which study material you need new and which study material you can buy second hand. Did you live with your parents first or did you live on your own when you started your study? When I started my study, I searched for a place to live near the university. This can be quite hard, because at the beginning of the year a lot of the new students are doing the same thing. I lived with 2 other students in one house. We ran a joint household, where we shared chores like cleaning and cooking. Did you know how to cook and clean before you started living on your own? Yes, I did. However, I needed to learn how to shop for groceries in a more efficient way and how to cook using cheap ingredients. You can save a lot of money if you know which ingredients you still have and make a list before you go shopping. You can also save money by making use of the promotions in the super market. A lot of students need to work to pay for their expenses. What kind of jobs are interesting jobs for a student? It&rsquo;s nice if the job pays well and if you have the opportunity to improve certain skills. The university offers quite a lot of interesting jobs for students for example helping with promotional activities and teaching assistant jobs. The teaching assistant jobs are in general only open to students who finished at least one year of their study. A lot of my friends worked in restaurants or had Saturday jobs in stores. But you can also tutor or baby-sit. A very good job can be to program websites or other programs. So if your university offers you possibilities to learn how to code, it might come handy as you can use it to get a nice job. Thank you very much for your tips. Good luck! And if you don&rsquo;t know how to clean or cook, don&rsquo;t hesitate to ask your parents for advice! End of transcript. Skip to the start. ",
                                        "unit_id":"532da886e5b5429abc2829cf08f99b94",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[],
                                        "data":" When you start your study, you might move to a new town. Which meal recipe from home will you bring with you? Take a picture! ",
                                        "unit_id":"0794ba20bbc14140986f7b9cd34b9020",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"4f2244b2d60643c08077a57d874f9c2c",
                                "vertical_name":"Student life: Practical stuff"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" What are the best student jobs? ",
                                        "unit_id":"f2df0d45e5784c7582db2719e3587888",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"e7850e0e433a486b9c16fe9f3d40c064",
                                "vertical_name":"Student jobs"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"3c70011f60bc483092affc9c09817d94",
                "chapter_name":"Week 6. Integration",
                "sequentials":[
                    {
                        "sequential_id":"b383fbf928a24ebe997895f20ea5753c",
                        "sequential_name":"6.1 Introduction",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Riemann sums",
                                            "Fundamental theorem",
                                            "Feedback",
                                            "Give"
                                        ],
                                        "data":" Welcome to Integration This week the topic is Integration. First we will explore the concept of integration by looking at the Pr&ecirc;t-a-loger example: turning an existing house into a sustainable one. You will learn the definition of integration by Riemann sums. Then we will discuss the fundamental theorem of calculus to define the relation between integral and derivative. We will review the primitive functions of x^n, e^x, sine and cosine. You will apply the rules of calculation. We finish this week with a university preview on integration of functions with more than one variable. This week's student life is about giving feedback. How do you give feedback in a good way? We encourage you to give us feedback on this course! ",
                                        "unit_id":"2220344d30874d618621984ab3781692",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"912f4715f7f34096a5e9e03e2ba2fdef",
                                "vertical_name":"Welcome to week 6"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" How can you measure the total electricity use of your house with integrals? Watch the video to find out ",
                                        "unit_id":"0ba3c3a0a1c7434aa6c367e815e39467",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Energy consumption",
                                            "Solar panels",
                                            "Solar power",
                                            "Sustainable energy",
                                            "Team",
                                            "Measure",
                                            "Part",
                                            "Power",
                                            "Sustainable",
                                            "House"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Sustainable energy is a major theme in engineering. We want to reduce energy consumption, but maintain the quality of life. This is a great challenge for science and engineering. Pr&ecirc;t-&agrave;-Loger is French for &ldquo;ready to be lived in&rdquo;. It is also the name of a team of students and staff of the Delft University of Technology taking part in the biannual Solar Decathlon competition for solar-powered houses. Instead of designing a new house the Pr&ecirc;t-&agrave;-Loger team turned an existing house into a sustainable one. This has more impact, because only 2% of the Dutch population lives in a new house. The Pr&ecirc;t-&agrave;-Loger team designed a modern insulated skin. The skin covers a part of the house. It provides a climatic buffer zone and the surface needed to produce its own solar power. The energy consumption is minimized using these innovative technologies and solutions. To measure the effect of all these adaptations, it is essential to determine the electrical energy consumption of the household. But how do you do that? It is difficult to measure energy consumption directly. You CAN measure the power - that is the rate at which you draw energy from the network, by measuring current and voltage of the incoming electricity. If the power is constant throughout time, then the total energy consumption during a period of time is simply the product of Power and time. For example, if the power equals 0.4 kilowatt during 3 hours, the energy consumption is 1.2 kilowatthour. In reality however, the power will not be constant. You switch electrical devices on and off throughout the day. That&rsquo;s true! Moreover, if your house happens to be equipped with solar panels - as in the Pr&ecirc;t-&agrave;-Loger example - Then during midday your power usage may be significantly less than in the evening - or even be negative !] How to determine the effective power consumption in this case? The answer is: by integration! ? End of transcript. Skip to the start ",
                                        "unit_id":"5827d37e44d94d78ae69135f2c0d0798",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f7f11d0d331743e48ef5fd5e9952677c",
                                "vertical_name":"Context video: Energy consumption"
                            }
                        ]
                    },
                    {
                        "sequential_id":"e4b692a1436342bf8d0b22e860024e79",
                        "sequential_name":"6.2 Concept of integration",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Energy consumption",
                                            "Riemann sum",
                                            "Discussion forum"
                                        ],
                                        "data":" This video will show you the important definition of an integral as a Riemann sum. How is an integral used to determine your energy consumption? At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"d6d68e423ccf47979246b1df403420ed",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Energy consumption",
                                            "Riemann sums",
                                            "Sustainable energy",
                                            "Riemann sum",
                                            "Horizontal axis",
                                            "Summation sign",
                                            "Approximately equal",
                                            "Time interval",
                                            "Called",
                                            "Length",
                                            "Smaller",
                                            "Determine",
                                            "Delta",
                                            "Taking",
                                            "Area",
                                            "Small",
                                            "Sign",
                                            "Integration",
                                            "Time",
                                            "Number",
                                            "Evaluate",
                                            "Sum",
                                            "Question",
                                            "Choose",
                                            "Interval",
                                            "Equal",
                                            "Case",
                                            "Limit",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome! In the video on sustainable energy, the following question was raised: if you know at any time the amount of power that you use at your home, how can you determine your daily energy consumption? In this video, I will show you how to answer this question using integration. Let&rsquo;s say we want to calculate the total energy consumption between time t equal to &lsquo;a&rsquo; and t equal to b. If the power is constant during that interval, then the total energy consumption is simply the power P times the length of the interval, b minus a. But in general the power will not be constant. What can we do? The idea is the following: First divide the time interval into small subintervals, each of length Delta t. Now we pretend that on every such interval, the power is constant. This is of course not true, but if the subintervals are small, then at least the power will not vary too much. We can then estimate the energy consumption per subinterval. Let&rsquo;s zoom in on one of the subintervals to make this more precise. First we choose a time in the interval - let&rsquo;s call it t_3, because we&rsquo;re in the third subinterval. Then we pretend that on this interval, the power is constant and equal to the power at time t3. This is an approximation. The real energy consumption on this interval is then approximately equal to P(t3) times Delta t. We can represent this product graphically [presenter] by the area of a rectangle with base Delta t and height P(t_3), as shown in the picture. This we can repeat for each interval: choose a point and approximate the energy consumption. The total energy consumption is then approximated by the sum of all contributions: P(t1) times Delta t plus P(t2) times Delta t etcetera. We can use the summation sign to denote this sum more compactly. Here, N is the number of subintervals, in this case 5. This sum can be graphically represented by the total area of the rectangles. Of course this is still an approximation: the power is not constant on every interval. But to make the approximation better, we can repeat the whole procedure for a larger number N of subintervals, each with smaller length Delta t. In the limit that N goes to infinity and Delta t tends to zero, we will obtain the exact energy consumption. This number also has a geometric meaning: in this case, it is the total area between the graph of the function P and the interval from a to b on the horizontal axis. This process, of taking the limit of sums for smaller and smaller intervals, is called integration. The sums that we wrote down to approximate the total energy consumption, are called Riemann sums. They are named after their inventor, the famous nineteenth century mathematician Bernhard Riemann. The limit of the Riemann sums, as the size of the Delta t&rsquo;s goes to 0, is called the integral of the function on the given interval. In this case, we can say that the total energy consumption is equal to the integral of the function P(t) for t ranging from t=a to t=b. We denote it as follows: the integral is denoted as a stretched S, the interval boundaries go below and above this sign and it is followed by the function P(t) and ended by dt. You can think of the dt as a limit of de Delta t&rsquo;s. This process is not limited to the context above. Let&rsquo;s look at a function f depending on a variable x. We wish to define the following object: the integral of f(x) for x ranging from x=a to x=b. Let us run through the procedure again. First, we break up the interval into a number of subintervals of length Delta x. Then we choose points with x-coordinate x1, x2, etcetera, one in each subinterval. These points are called sample points. Given a subdivision and the sample points, we can write the Riemann sum. The sum here represents the total area of a number of rectangles. Now we repeat this, for an increasing number N of intervals, with decreasing length Delta x. If the limit exists, independent of how we choose the sample points, then the number we obtain is by definition the integral of f(x) for x ranging from a to b. In this case, the number represents the area of the region between the graph and the interval from a to b on the horizontal axis. I say, specifically &ldquo;in this case&rdquo;; in general you have to be careful with this interpretation. More about that in the next video. To end, let us return to the original question: how to determine energy consumption on a given time interval, provided you know power as a function of time. The answer is: evaluate the integral of this function on the given time interval. I have to be honest here: in practice it is often impossible to evaluate such an integral exactly. But in many cases, it suffices to have an approximation. To make such an approximation, you can use a Riemann sum. In fact, this is roughly what a digital electricity meter does: it measures the power at sample points in time, and then calculates a Riemann sum to approximate the total energy consumption. What if you do want to evaluate integral exactly? Taking the limit of Riemann sums can be very cumbersome or even impossible! Luckily, there is a way to circumvent taking limits. More about this in the following subsection. But first, let&rsquo;s practice with the concept! End of transcript. Skip to the start. ",
                                        "unit_id":"d9da3c19e45948859d71b12bc59fadc5",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"323929712cc24b76858862b5e25ebeca",
                                "vertical_name":"Video: Definition of integral"
                            },
                            {
                                "units":[],
                                "vertical_id":"246d73c871e340d9bbe9602f406c771e",
                                "vertical_name":"Exercises: Approximating an integral"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In these exercises we consider Riemann sums &sum;i=1Nf(xi)&Delta;x corresponding to the integral &int;010(10&minus;110x2)dx. We divide the interval [0,10] into N=5 subintervals, all with length &Delta;x=2. ",
                                        "unit_id":"c080b0b32f8e49a182ff819893e362e2",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c72e1d05ae2c4881b581493a9a31272b",
                                "vertical_name":"Exercises: Riemann sums"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" You may think that an integral represents an area between a graph and the x-axis. This is true in some cases, but you have to be careful when the function that you integrate becomes negative! Watch this video to find out how that works. ",
                                        "unit_id":"496290a6c84941898d22b1711676cfcb",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Energy consumption",
                                            "Riemann sum",
                                            "Power consumption",
                                            "Sunny day",
                                            "Solar panels",
                                            "Electricity network",
                                            "Horizontal axis",
                                            "Signed area",
                                            "Positive part",
                                            "Negative part",
                                            "Axis",
                                            "Area",
                                            "Power",
                                            "Part",
                                            "Minus",
                                            "Region",
                                            "Negative",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome! When I ask my first year students &ldquo;what does this integral mean?&rdquo;, they usually answer: &ldquo;It&rsquo;s an area! Would this be your answer too? Then you should watch this video! It is true that in some cases, the number that you get, when you evaluate an integral, represents an area. Remember for example the function in the previous video. The Riemann sum represents the total area of a number of rectangles. If you increase the number of rectangles, they will cover the region between the graph and the horizontal axis more accurately. In the limit, the region is exactly covered. In this case the area of the region is, in fact by definition, equal to the limit of the Riemann sum. And this limit is precisely the integral of the function over the interval. So in this case, the integral is an area! But in general, you have to be careful! Problems arise when the function becomes negative at certain points. What is the interpretation then? Let us first look at the Riemann sum. At points where the function is negative, the corresponding terms in the Riemann sum will also be negative. Therefore, the Riemann sum represents the total area of the rectangles above the axis minus the total area of the rectangles below the axis. Now take the limit to obtain the integral. The graph, the horizontal axis and the lines x=a and x=b enclose a region, and the integral represents the total area B of the part above the horizontal axis, minus the area A of the part below the axis. It is referred to as the signed area of the region. You may wonder what the use is of this signed area. Indeed, if you want to paint the region, it is of no use; to know how much paint you need, you would have to know the actual area, in this case A plus B. But think again of energy consumption. We have seen that it is equal to the integral of the power as function of time. How can power consumption become negative? Well, for example if you live in a modern fancy house with solar panels on the roof. On a sunny day, the solar panels may produce more power than you use at that moment. The amount of power you deliver back to the electricity network is equal to the total area between the negative part of the graph and the horizontal axis. To determine your effective power consumption, you have to subtract this from the area between the positive part of the graph and the horizontal axis. That is: your total energy consumption is equal to the signed area of the region enclosed by the graph and the interval from a to b on the horizontal axis! In fact, it is the aim of the pret-a-loger project that we mentioned in the context video, to get this number to 0. So let me return to the original question: &ldquo;What does this integral mean? The correct answer is: &ldquo;It is the signed area of the region enclosed by the graph, the horizontal axis and the lines x equals a and x equals b.&rdquo; Please remember! End of transcript. Skip to the start. ",
                                        "unit_id":"4cafebbdfdeb4dd68a483ad09eb03690",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"57216103b9114eccb526df64b6cebea6",
                                "vertical_name":"Video: The integral, what does it mean?"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercises: Determine the integral geometrically ",
                                        "unit_id":"6405cdc827bb435899252830014e883e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c3fd323d3325424dbeb85d60ef574aef",
                                "vertical_name":"Exercises: Determine the integral geometrically"
                            }
                        ]
                    },
                    {
                        "sequential_id":"5ba9034c2e384c96bd263319ef334143",
                        "sequential_name":"6.3 The Fundamental Theorem of Calculus",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Fundamental theorem",
                                            "Theorem"
                                        ],
                                        "data":" How can you evaluate integrals exactly? A powerful tool for this is the Fundamental Theorem of Calculus. This video reviews the exact statement of the theorem and shows how integration and differentiation are related. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"6b280d47d67d453088ed0744c041b41f",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Riemann sum",
                                            "Riemann sums",
                                            "High school",
                                            "Primitive function",
                                            "Continuous function",
                                            "Fundamental theorem",
                                            "Approximately equal",
                                            "Indefinite integral",
                                            "Numerical integration",
                                            "Function",
                                            "Boundary",
                                            "Theorem",
                                            "Capital",
                                            "Clear",
                                            "Important",
                                            "Calculus",
                                            "Constant",
                                            "Make",
                                            "Minus",
                                            "Dx",
                                            "Equal",
                                            "Evaluate",
                                            "Integration",
                                            "Integral",
                                            "Derivative",
                                            "Small"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi! So far, we have seen the definition of the integral as a limit of Riemann sums. Using this definition, we always have a way to determine an integral approximately: replace it by a Riemann sum. Indeed, we can always subdivide the interval of integration, choose sample points and calculate the corresponding Riemann sum. In fact, this principle provides a basis for numerical integration! But it will almost never produce the exact value of the integral. Moreover, it can be very tedious to actually evaluate a Riemann sum&hellip; Luckily, there is an extremely powerful tool to evaluate integrals exactly. It is called: the fundamental theorem of Calculus. You have probably seen it in high school. Let me recall the precise statement: Suppose we have the following: a continuous function f, defined on the interval [a,b] and a function capital F such that small f is the derivative of capital F. Then the following holds: The integral from a to b of f(x) dx is equal to capital F(b) minus capital F(a). Any function with derivative equal to small f is called a primitive function or antiderivative of small f. Those terms can be used interchangeably. So by this theorem, integration comes down to finding a primitive function F and evaluating F(b) minus F(a). Let me show you an application of this theorem in an example: Let us consider the integral from 1 to 2 of x^2 dx. We need to find a primitive function of the square of x. That is: find a function which has x^2 as derivative. Note that the following function will do. F(x)=\u2153 x^3 check that this is Indeed a primitive function we calculate the derivative. F'(x) is equal to \u2153 times 3 times x^2. The prefactors cancel, and we are left with x^2. The fundamental theorem of calculus tells us that the integral is equal to capital F evaluated at the upper boundary, minus capital F evaluated at the lower boundary. So let me write the integral again, integral from 1 to 2, x^2dx = , and now It is customary to use the following notation&hellip; [\u2153 x^3]_1^2 . This means precisely what I just said : take the function \u2153 x^3, evaluate at the upper boundary x=2, evaluate at the lower boundary x=1, and subtract. The advantage of this way of writing is that you can make clear what primitive function you use, before you evaluate. It makes the calculation more transparent. I advise you to do the same when you write down your own calculations. So this is equal to \u2153 2^3 minus \u2153 1^3. This can be simplified to 1/3 (8 minus 1), which is 7/3. And this is the final answer, this is the exact value of this integral and it is also the exact value of this yellow region. This is approximately equal to 2.33, which seems reasonable if you look at the picture. But what&rsquo;s important is that we calculated the integral exactly! If you think of it, the fundamental theorem may seem a bit strange. Roughly, it tells you that integration and differentiation are inverse operations. [click] But if you compare the definition of differentiation to that of integration, it is really not clear at all that these are related! In a separate video I will give an explanation why this theorem is nevertheless true. I would like to end with some remarks about primitive functions. First of all, primitive functions are never unique! Look at the example: we had a function capital F equal to \u2153 times x^3 and a function small f equal to x^2. Small f is the derivative of capital F, so capital F is a primitive function for small f. But we can add any constant to capital F, for example 10. Let&rsquo;s call this new function capital G. The constant disappears after differentiation, so the derivative of capital G is again small f. Capital G is another primitive function of f. This works in general: if you have a primitive function, you can always add a constant to get another primitive function. In fact, this also works the other way around: if you have two primitive functions capital F and capital G of small f, then they must differ by a constant on the interval of integration. To see this, note that both capital F and capital G have small f as derivative, So the derivative of F minus G must be zero. This can only happen if F minus G is constant on the interval of integration. The important conclusion is that if you have one primitive function capital F of small f, you can find all others by simply adding an arbitrary constant. The set of all primitive functions is often denoted by an integral without boundaries: integral of f(x) dx. We call this an indefinite integral. For example: the integral x^2 dx denotes the set of all primitive functions of x^2. To make this set explicit, we write one primitive function, for example \u2153 x^3, plus C, to indicate all the others. Don&rsquo;t forget the plus C, otherwise you only have one primitive function! In the exercises after this video, you can practice with the fundamental theorem and the concept of primitive function. In the following video, I will show you why the fundamental theorem is true. End of transcript. Skip to the start. ",
                                        "unit_id":"aebe1d3216044f0e892c8e5f5498b3a9",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"13fafc6648a3444aa86affeec6de1a88",
                                "vertical_name":"Video: The Fundamental Theorem of Calculus"
                            },
                            {
                                "units":[],
                                "vertical_id":"b1f1c57c13f44a2fb226030d424b0e4c",
                                "vertical_name":"Exercise from the video"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Primitive function"
                                        ],
                                        "data":" Exercises: Match the graphs of standard functions with the graphs of their primitive function ",
                                        "unit_id":"b28d91047c6d439a8c2f652b0019b55d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3a87cdb8edb945c895c41e4b2423e959",
                                "vertical_name":"Exercises: Antiderivatives of standard functions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" EXERCISES: EVALUATE THE INTEGRALS Remember that you can determine an anti-derivative by differentiating possible candidates. ",
                                        "unit_id":"d3b459073a4e4624a80f353914015d03",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a26cd28ee8d34afcb44aecd214a4f842",
                                "vertical_name":"Exercises: Fundamental Theorem of Calculus"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Fundamental theorem"
                                        ],
                                        "data":" The Fundamental Theorem of Calculus says roughly that integration and differentiation are inverse operations. This video show you why the Fundamental Theorem of Calculus is true. ",
                                        "unit_id":"f3340a8588a1449a8f387d652498a755",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Fundamental theorem",
                                            "Primitive function",
                                            "Continuous function",
                                            "Signed area",
                                            "Difference quotient",
                                            "Approximately equal",
                                            "Theorem",
                                            "Upper",
                                            "Function",
                                            "Capital",
                                            "Area",
                                            "Quotient",
                                            "Subtract",
                                            "Definition",
                                            "Approximately",
                                            "Roughly",
                                            "Small",
                                            "Equal",
                                            "Strip",
                                            "Delta",
                                            "Minus",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome back! In the previous video, you saw the fundamental theorem of Calculus. Roughly, it says that integration and differentiation are inverse operations. In this video I would like to show you why this theorem is true. Let me first show you why differentiation and integration are related. Let us consider a continuous function f that we integrate from a to b. Recall that when you integrate, you are actually calculating a signed area between a graph, the x-axis and the line x=a and x=b. Let&rsquo;s call this signed area S. Now let us make the upper boundary variable. To stress this, let&rsquo;s replace b by a more standard variable name. We cannot use x, since it is already used in the integral. Let&rsquo;s use t instead. If t varies, so does the signed area, which we stress by writing S of t. My claim is: the derivative of S is equal to f. So why is this? Well, if we change from t to t+\\Delta t, then S changes, let&rsquo;s say by an amount Delta S. Now Delta S is precisely the area of the small strip in the picture. Let&rsquo;s zoom in to this strip. If \\Delta t is small, then the strip is roughly equal to a rectangle, with width \\Delta t and height f(t). So, \\Delta S is approximately equal to f(t) times Delta t. We can make this approximation better by taking Delta t smaller. It follows that the quotient Delta S divided by Delta t is approximately f(t), and this becomes exact if we let Delta t tend to 0: the limit of Delta t to 0 of the quotient is equal to f(t). Now, if you remember the video on differentiation, then see that the quotient is precisely a difference quotient for the function S, and the limit of the difference quotient is exactly the derivative of S at t! So we see: the derivative of S is precisely f! Equivalently, we can say that S is a primitive function of f. This already shows that differentiation and integration are related. How does the Fundamental Theorem as we phrased it follow from this? Well, we have seen that S is a primitive function of f. Furthermore, note the following. S(a) is by definition equal to the integral from a to a of f. If upper and lower boundary of an integral coincide, the integral is 0. More about that in the next subsection. S(b) equals the integral from a to b of f, again by definition. Since S(a) is zero, we can simply subtract, and get that the integral from a to b of f equals S(b) minus S(a). This is precisely the fundamental theorem, for the particular primitive function S. The only thing is that the Fundamental Theorem holds for any primitive function! So, to end, suppose that capital F is any other primitive function of f. We have seen in the previous video that S and F must differ by a constant C. So S equals F+C. Now we can rewrite the expression that we just obtained: replace S(a) by F(a)+C, replace S(b) by F(b) + C and subtract. The C&rsquo;s cancel., and we are left with F(b) minus F(a). To summarize, we have found that for any primitive function capital F of small f, the integral from a to b of f is equal to capital F in b minus capital F in &lsquo;a&rsquo;. This is precisely the statement of the fundamental theorem of calculus! End of transcript. Skip to the start. ",
                                        "unit_id":"ebbcbe2671644a84a13c20eb8dec3697",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"c2a4e69b2f9046a5a455a832a7245f78",
                                "vertical_name":"Video: Proof of the Fundamental Theorem of Calculus"
                            }
                        ]
                    },
                    {
                        "sequential_id":"043a2046645e4992a661b3f821aa6a84",
                        "sequential_name":"6.4 Calculating integrals",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" Learn the rules of calculation for integration, when the integrand is multiplied by a constant or two integrands are added. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"cdd3166f514445f1800f9c0ac08319fc",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Simple rules",
                                            "Horizontal axis",
                                            "Indefinite integrals",
                                            "Fundamental theorem",
                                            "Primitive function",
                                            "Walking speed",
                                            "Chain rule",
                                            "Product rule",
                                            "Understand",
                                            "Calculation",
                                            "Train",
                                            "Count",
                                            "Minus",
                                            "Product",
                                            "Speed",
                                            "Start",
                                            "Function",
                                            "Distance",
                                            "Area",
                                            "Rule"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome. To understand calculation rules it is good to have an example which illustrates them. As you know, speed is the derivative of distance over time. Using the Fundamental Theorem of Calculus it follows that distance travelled is the integral of speed as a function of time. This integral will help you understand all the rules of calculation explained in this video. Let us consider integrals with a fixed interval of integration. First we consider what happens if we start travelling at twice the speed. Surely the distance we cover in a given time also doubles. And if we multiply our speed by a different number, a constant c, the distance travelled is multiplied by said c. Thus we obtain the rule that the integral of a constant c times f equals c times the integral of f. Visually we see that the height of the region under the graph is multiplied by c, so the total area is also multiplied by this c. Note that if the constant is negative, for example c equals minus one, the region under the graph is reflected in the horizontal axis. Whereas the area above the horizontal axis would count positively, after multiplication by minus one the area remains the same, but as it is below the horizontal axis, we have to count this area negatively. Thus the rule of calculation still holds in this case. Now suppose you are walking forwards in a slowly moving train. Your total speed with respect to the ground will then be the sum of the speed of the train plus your walking speed. In a given time, how much you go forward will be the distance the train travelled plus the distance you have walked in the train towards the front of the train. That is, if f represents the speed of the train and g represents your walking speed, the integral of f plus g equals the integral of f plus the integral of g. We see that the area under the graph of f plus g equals the area under the graph of f plus the area between the graph of f and the graph of f plus g. This latter area is a deformed version of the area under the graph of g, where at each point the area is shifted upward by a different amount. However these vertical shifts do not change the area, and thus the area between the graphs of f and that of f plus g equals the area under the graph of g. Once again we see that our rule of calculation is valid. Let's now apply these two rules in combination in the following example: int_1^2 3x^2-4x^3 dx We can split the integral as the int_1^2 4x^3 dx plus int_1^2 -3x^2. which equals 4 int_1^2 x^3 dx -3 int_1^2 x^2 dx As we know that the integral of x^n equals 1^n+1 x^n+1 we can use this to calculate these 2 int_ and obtain: 4*((1/4)x^4)1^2 - 3((1/3)x^3)1^2=4(4-1/4)-3(8/3-1/3)=15-7=8 These rules of calculation also work for indefinite integrals. For example we could write directly int_4x^3 -3x^2 dx = x^4-x^3+C Finally a word of warning. For differentiation you learned the product rule and chain rule for products and compositions of functions. For integrals there are no simple rules to obtain the primitive function of f times g or of f(g(x)). At university you will learn some techniques which will help with these cases. Now let's apply the rules of this video to calculate a few integrals! End of transcript. Skip to the start. ",
                                        "unit_id":"a25230e141d14002a7f0ed9fe3b35708",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"a6fbd21ef266488d807f96634ef1d644",
                                "vertical_name":"Video: Changing the integrand"
                            },
                            {
                                "units":[],
                                "vertical_id":"9a5b434a3a2b4215bead3cc9606a0e3f",
                                "vertical_name":"Exercises: Changing the integrand"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Some useful properties of the intervals of integrals are shown in this video. ",
                                        "unit_id":"cec49e38f2b64d158e28226e15d6aa6d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Fundamental theorem",
                                            "Primitive function",
                                            "Simple function",
                                            "Minus sign",
                                            "Find",
                                            "Area",
                                            "Half",
                                            "Squared",
                                            "Function",
                                            "Calculate",
                                            "Minus",
                                            "Split",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi guys, you have already learned a lot about calculating integrals and you have probably practiced with them as well! Today I will show you a few useful properties of integrals. They will probably come in handy in the future. We will start with a property that is easy to remember. Say I want to calculate the integral of a function F from &lsquo;a&rsquo; to &lsquo;a&rsquo;, well then we would be after the area underneath the graph of f from &lsquo;a&rsquo; to &lsquo;a&rsquo; but this turns out to be zero for every function that we integrate. The second property is a really useful one. Imagine you want to calculate the integral of a function 'f' from &lsquo;a&rsquo; to &lsquo;c&rsquo; then I can take a point &lsquo;b&rsquo; somewhere in between &lsquo;a&rsquo; and &lsquo;c&rsquo; and split the region. So we get the integral of 'f' from 'a' to 'b' and add that to the integral of 'f' from 'b' to 'c'. If we look at the graph and visualize this, it is quite clear what is happening. We are just adding two areas to get the total area. For the last property we take the integral from &lsquo;b&rsquo; to &lsquo;a&rsquo; for a function F, where &lsquo;b&rsquo; is larger than &lsquo;a&rsquo;. So what happens now? We are going to use our last two properties to determine that. So if we would take the integral of F from &lsquo;a&rsquo; to &lsquo;a&rsquo; we could actually &lsquo;split&rsquo; that in an integral from &lsquo;a&rsquo; to &lsquo;b&rsquo; and add that to the integral from &lsquo;b&rsquo; to &lsquo;a&rsquo;. You know that the integral from &lsquo;a&rsquo; to &lsquo;a&rsquo; equals zero, for every function f. So these integrals should add to zero. This means that the integral from &lsquo;b&rsquo; to &lsquo;a&rsquo; is minus the integral from &lsquo;a&rsquo; to &lsquo;b&rsquo;. These properties can be used for integrals of every function. Note that if we apply the fundamental theorem of calculus on both sides we also obtain this formula. Now I will give you an example of how to use one of these properties. This example shows you how to use these rules to calculate integrals of piecewise defined functions. We want to evaluate the integral from minus one to two of the absolute value of x. If you look at an integral you want to evaluate, the first thing that you would probably do is find a primitive function. But the absolute value of x does not behave the same on the whole interval. As you can see in the graph the absolute value of x actually has two parts. If x is smaller than zero then y equals minus x, but if x is larger than zero then y equals x. So the primitive function of the absolute value of x is different depending on where you are in the interval. This makes calculating the integral from minus one to two a little bit harder. Maybe one of the properties you just saw can help us? What if we just split the integral, using property two, and we take the integral from minus one to zero and add that to the integral from zero to two. Now the absolute value of x is just one simple function in each part, so we can substitute the simpler expressions we found. Whenever x is less than zero we get minus x and whenever x is larger than zero we simply get x. So we take the integral from minus one to zero of minus x and add that to the integral from zero to two of plus x. Now we can find primitive functions for both expressions: The primitive function of minus x is minus one half x squared And that of x is one half x squared Don&rsquo;t forget to use the right boundaries. Using the fundamental theorem of Calculus we can thus evaluate the first integral which gives us minus a half times zero squared minus, minus a half times one squared. The primitive function in the second integral is plus one half x squared, evaluating this, gives the value of the integral becomes a half times two squared minus a half times zero squared. If we simplify this we end up with five over two. So in summary: you saw three properties: An integral with the same upper and lower bound equals zero for every function. We can split the integral in multiple parts and add them. Interchanging the upper and lower bounds of an integral results in adding a minus sign. We used the second property to integrate the absolute value of x. Good luck applying these properties! End of transcript. Skip to the start. ",
                                        "unit_id":"63a7bd770bbd45f4ad68954392034a9e",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"3e3e022d1e05471fb3f50c4b95977001",
                                "vertical_name":"Video: Splitting an integrand"
                            },
                            {
                                "units":[],
                                "vertical_id":"3827784e3b3f42f6812a87b8068919d5",
                                "vertical_name":"Exercises: Splitting an integrand"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Complex function",
                                            "Linear function",
                                            "Function"
                                        ],
                                        "data":" You learned that there is no general rule for calculating integrals of compositions of functions. In this video we show how to calculate integrals with a linear function within a more complex function using linear substitution. ",
                                        "unit_id":"7fab122bea104c7aaffde36f88e46e38",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Linear function",
                                            "Complex function",
                                            "Curve",
                                            "Function",
                                            "Dx",
                                            "Equal",
                                            "General",
                                            "Rule",
                                            " ",
                                            "Calculate",
                                            " "
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome. We learned that there is no general rule for calculating integrals of compositions of functions. We can, however, calculate integrals with a linear function within a more complex function. For example we can integrate the function cos(2x+5). Here 2x + 5 is a linear function, inside the cosine. Linear functions involve scaling, that is sending x to a multiple of x, and shifting: adding a constant. Let us consider these two operations separately. We first consider the integral of f(x+c). The graph of f(x+c) equals the graph of f, but shifted c to the left. The integral of f(x+c) therefore equals the integral of f, but we have to be careful about the endpoints. Indeed they have to shift by c , so we obtain int_a^b f(x+c) dx = int_{a+c}^{b+c} f(x) dx. If we consider the graph of f(2x) we see that we compress the graph by a factor of a half towards the y-axis. The area under the curve is thus also halved. Notice that the endpoints of the integral have been multiplied by one half as well: If we call the new endpoints a and b, the old ones were therefore 2a and 2b. Thus we find that the integral from a to b of f(2x) dx equals one half of the integral of 2a to 2b of f(x) dx. More in general the integral from a to b of f(cx) dx equals one over c times the integral of ca to cb of f(x) dx for any constant c. One might wonder what happens if c is negative. Well let&rsquo;s consider the graph of f(-x). This is the reflection of the graph of f(x) in the y-axis. The area under the curve remains equal. However notice that order of the starting point and endpoint have been interchanged. Thus we have to add a factor -1 to account for this change. As a result we find that int_a^b f(-x) dx = int_{-b}^{-a} f(-x) dx which equals - int_{-a}^{-b} of f(-x) dx. Remember that this only works for linear substitutions. These rules do not allow you to calculate the antiderivative of functions like cos(x^2), where we plug a non-linear function such as x^2 into the cosine. Now try to calculate the integral of cos(2x+5) yourself. End of transcript. Skip to the start. ",
                                        "unit_id":"86d9b71024a2446db1837669ac9aa4cc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"1a47e8e4e83f4896aa84b11855b83c0a",
                                "vertical_name":"Video: Linear substitutions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Primitive function",
                                            "Indefinite integrals"
                                        ],
                                        "data":" In the video you learned about integrals of f(cx) and f(x+c) for definite integrals. For indefinite integrals, calculating primitive functions, the same rules apply. However, changes in the boundaries of the integral should now be interpreted as changes in the argument of the primitive function. Remember that you can always check your primitive function by differentiating it and checking if it returns the original function. ",
                                        "unit_id":"a3a893eb6bc342c290cf1a442c662952",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"cd9b594fe62a480ab335ef086ee0e860",
                                "vertical_name":"Exercises: Linear substitutions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Let&rsquo;s evaluate the integral &int;&minus;111x2dx ! Can you catch the error? Share your thoughts in the discussion box below! The answer will be released on August 8th. ",
                                        "unit_id":"d10c58a3d2074cee9de28ecf845e02e2",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Primitive function",
                                            "Fundamental theorem",
                                            " "
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! In this &lsquo;catch-the-error&rsquo; video we will evaluate the following integral: \\int_{-1}^1 \\frac{1}{x^2} dx we know we can write \\frac{1}{x^2} as x^{-2} \\int_{-1}^1 x^{-2} dx We know that a primitive function of x^{-2} is &ndash;x^{-1}. You can check this by taking the derivative of &ndash;x^{-1}. So by the Fundamental Theorem of Calculus we find that the integral is equal to -x^{-1}]_{-1}^1 Now we write x^{-1} as \\frac{1}{x} [-\\frac{1}{x}]_{-1}^1 = -\\frac{1}{1}- (-\\frac{1}{-1} = -1 &ndash; 1 = -2 ] So, the integral is negative. However, the integrand 1/x^2 is positive for all x which implies that the integral should be positive. So the question for you is: what went wrong? End of transcript. Skip to the start. ",
                                        "unit_id":"c2141bca709d4e4196d8ef9fe1affcf3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"964c6370e0ae4d45b3405e3e2e656eaa",
                                "vertical_name":"Video: Catch the error"
                            }
                        ]
                    },
                    {
                        "sequential_id":"d678396246c44f70bc49bb760ab73c51",
                        "sequential_name":"6.5 Advanced integration techniques",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Substitution method"
                                        ],
                                        "data":" How to evaluate integrals of combinations of functions? Unfortunately, there are no general rules that tell you what to do. However, there are several technique that you can use to try to simplify a complicated integral. One of these techniques is the Substitution Method, that you will learn about in this video. Please note: in some countries, like the Netherlands, the material presented in this section is not formally part of the high school program! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/ How to evaluate integrals of combinations of functions? Unfortunately, there are no general rules that tell you what to do. However, there are several technique that you can use to try to simplify a complicated integral. One of these techniques is the Substitution Method, that you will learn about in this video. Please note: in some countries, like the Netherlands, the material presented in this section is not formally part of the high school program! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question.or answered before posting your question. ",
                                        "unit_id":"b2357f3da2cb4fb1a57103016db41a28",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Integration techniques",
                                            "Chain rule",
                                            "Primitive function",
                                            "Simpler",
                                            "Method",
                                            "Easier",
                                            "Du",
                                            "Result",
                                            "Integration",
                                            "Rule",
                                            "Dx",
                                            "Substitution",
                                            "Integral",
                                            "Sin",
                                            "Step",
                                            "Composition",
                                            " ",
                                            "Variable",
                                            "Function"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome! As you have seen in previous videos and exercises, the key to evaluating an integral is to find an anti-derivative of the function that you want to integrate. Recall that an anti-derivative of a function f is another function, say capital F, such that the derivative of capital F is equal to small f. We can also write this as follows: the integral of f(x)dx is equal to capital F(x) + C, where C is a constant. You have seen anti-derivatives of many standard functions. But how can you find an anti-derivative of combinations of these functions, like the ones on the slide? For differentiation, we have all kinds of rules that allow us to deal with combinations of functions. Are there such general rules for integration as well? Unfortunately, no. There is no set of general rules that allow us to evaluate all integrals. However, there are several integration techniques that may help you to simplify a given integral. One of these techniques is the so-called method of substitution, that I will discuss in this video. To illustrate the method, let me start with an example. Suppose you want to find an anti-derivative of the following function: cos(x^3+5x) times 3x^2+5. Look at the structure; the first factor is the composition two functions: a function f(x) equal to cosine of x and a function g(x) equal to x^3 + 5x. The second factor is precisely the derivative of g. Now, we know an anti-derivative of the cosine:it is the sine. Let&rsquo;s denote it by capital F. Then we see that the function that we try to integrate is of the following form: capital F&rsquo;(g(x)) times g&rsquo;(x). Do you recognize this expression? It is precisely the result of the chain rule for differentiation! It is equal to the derivative of capital F(g(x)). So capital F (g(x)) is a primitive function for the function that we are integrating. Thus we find that the integral is equal to capital F(g(x)) plus C, that is, sin(x^3+5x)+C. The whole story becomes slightly easier if we introduce a new variable u, defined as u = x^3+5x. We can re-express the integral in terms of this variable. This is called substitution. How does this work? Well, first of all, cos(x^3+5x) simply becomes cos(u). Furthermore, we have du/dx = 3x^2+5. This we can rewrite to du = 3x^2+5 dx. So the second part of the integral can simply be replaced by du. The whole integral has now been rewritten as the integral of cos(u)du. This is much easier to evaluate! It is equal to sin(u) + C. In the final step we replace u by x^3+5x, which gives the result sin(x^3+5x) + C. What we used here is the so-called substitution method. Let me summarize the steps. We start with a complicated integral. Then we choose a substitution: a new variable u, related to the old variable x. Using the derivative of u, we find a relation between du, x and dx. Armed with these relations, we can re-express the integral completely in terms of u and du. There should be no more x or dx! This new integral can be evaluated. Finally, we return to the original variable x, again by using the relation between u and x. And then we are done! Let me give you another example to illustrate the steps. Consider the integral of 1 divided by 1+x^3 times x^2 dx. You can see that the first factor is a composition of f(x)=1/x and g(x)=1+x^3. When a composition occurs in an integral, it is often worthwhile to try to get rid of the inner function by using a substitution. So in this case, we can try to make it simpler by using we try the substitution u = 1+x^3. It follows that du/dx = 3x^2, therefore du equals 3 x^2 dx. The factor x^2 dx occurs in the integral, but the factor 3 does not occur. But, we can rewrite the relation between du and dx as \u2153 du = x^2 dx. Now we can re-express the entire integral in terms of u and du; remember, there should be no more x or dx! We get the integral of 1 over u times \u2153 du. This is equal to \u2153 times the logarithm of the absolute value of u, plus C. Then re-express this in terms of x. Now we have obtained the answer to our original integral, as you can easily check yourself. The question remains: given a complicated integral, how to find an appropriate substitution? That is a good question, and I cannot give you a recipe that will always work. The art of the method is to find a substitution that makes the original integral simpler. To get a feeling for this, you need to work out many examples. You can practice this in the exercises. End of transcript. Skip to the start. ",
                                        "unit_id":"16711fd608d448d9a0b81289eea2155a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d8d1c870105245a3a22308feeb935a25",
                                "vertical_name":"Video: the Substitution Method"
                            },
                            {
                                "units":[],
                                "vertical_id":"f5325e27b52a4ba79cc5496c26d92a28",
                                "vertical_name":"Exercises: substitution without boundaries"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Substitution method"
                                        ],
                                        "data":" Can the Substitution Method also be applied to integrals with boundaries? Yes! Watch he video and find out how. ",
                                        "unit_id":"701fc41fb83448558b3f5943e11902a6",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Primitive function",
                                            "Minus sign",
                                            "Indefinite integral",
                                            "Substitution method",
                                            "Definite integral",
                                            "Evaluate",
                                            "Dx",
                                            "Minus",
                                            "Calculate",
                                            "Swap",
                                            "Du",
                                            "Substitution",
                                            "End",
                                            "Variable",
                                            "Integral",
                                            "Boundary"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! You have seen how to use the substitution method to evaluate indefinite integrals, that is, integrals without boundaries. In this video, I will show you how to use substitution in the case of a definite integral: an integral with boundaries. Let&rsquo;s consider an explicit example: the integral of 2x e^(3+x^2), where x ranges from 1 to 2. Of course, we can always do the following: first calculate the indefinite integral to find an anti-derivative. We can use the substitution u= 3+x^2. Then du equals 2x dx. We can rewrite the indefinite integral as the integral of e^u du. This is equal to e^u + C. In terms of x, we get e^(3+x^2) + C. We can use this anti-derivative to evaluate our original integral: plug the upper boundary and the lower boundary into an anti-derivative, and subtract. We get e^7 minus e^4. Now you may think: &ldquo;That is a lot of work!&rdquo;. And you would be right! There is a faster method: we can use substitution directly in the integral with boundaries! First, we rewrite the integral as we are used to do. The only new thing we have to think of is: what to do with the boundaries? Well, in the original integral, the boundaries indicate the smallest and largest value of the variable x; x ranges from 1 to 2. In the new integral, we should put the corresponding boundaries for the variable u! If x is equal to 1, then u is equal to 4, if x is equal to 2, then u is equal to 7. So the new integral becomes e^u du, with u ranging from 4 to 7. This we can easily calculate. A primitive function is e^u. Now plug in the boundaries and subtract. We get e^7 minus e^4; the same answer as before! There is no need to return to the original variable x; the value of the new integral is just the same is as the value of the old one! There is one more thing that you should be aware of: after a substitution, the boundaries may be in the wrong order. For example, consider the integral from 0 to pi of (cosine of x) squared times sine of x dx. We can substitute u = cos(x). Then du = - sin(x) dx, which we can rewrite to sin(x) dx = -du. We can re-express the integral as integral of minus u^2 du. What will the boundaries be? Well, if x=0, u = cos(0) which is 1. So the new lower boundary is 1. If x=pi, then u is equal to the cosine of pi, that is, -1. So the new upper boundary is -1. You see that the boundaries are in the wrong order. But this is easily resolved: as we have seen in previous videos, we can swap the boundaries, but we have to add a minus sign. Thus, the integral becomes minus the integral of -1 to 1 of the function minus u^2 du. That are a lot of minus signs! However, two minus signs cancel, and we get the integral of -1 to 1 of u^2 du. This is easily evaluated: a primitive function is \u2153 u^3, and in the end we get 2/3 as result. To summarize: you can use substitution also in case of integrals with boundaries. Just make sure to re-express these boundaries in terms of the new variable. In case the boundaries end up in the wrong order, simply swap them and add a minus sign. You can practice this in the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"790c688dc2ed4f37b635ffaf8fba620b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"77fbfe4c322048ea80895fcb3d58b181",
                                "vertical_name":"Video: Substition with boundaries"
                            },
                            {
                                "units":[],
                                "vertical_id":"e750078a3894462a8dacb11e61356c42",
                                "vertical_name":"Exercises: substitution with boundaries"
                            },
                            {
                                "units":[],
                                "vertical_id":"c611f773adb5481f873eb3a9502eaaa3",
                                "vertical_name":"Linear substitutions"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In case you have to integrate a product of two functions, there is an important technique that may help you: integration by parts. Watch the video to find out how it works! ",
                                        "unit_id":"00361cbda5794ec8aefa6870b581e3bb",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Final result",
                                            "Primitive function",
                                            "Product rule",
                                            "Constant function",
                                            "Minus",
                                            "Sine",
                                            "Left",
                                            "Rule",
                                            "Side",
                                            "Capital",
                                            "Function",
                                            "Integrand",
                                            "Apply",
                                            "Constant",
                                            "Calculating",
                                            "Product",
                                            "Integration",
                                            "Derivative",
                                            "Write",
                                            "Quarter",
                                            "Time",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome. In this video you will learn about another major technique for calculating integrals: integration by parts. This will allow you to deal with integrals of the product of two functions, such as the integrals of (3x plus 4) times cosine of x and x times e to the power 4x. Unlike the product rule for differentiation this method will not directly tell you the primitive function of a product of two functions, it will only rewrite it to another integral; hopefully the new integral is simpler though. Speaking of the product rule, let us recall it: The derivative of f times g equals f-prime times g plus f times g-prime. Thus for example, the derivative of (3x plus 4) times sine of x equals 3 times sine of x plus (3x plus 4) times cosine of x. We can now use this observation to calculate a primitive function of (3x plus 4) times cosine of x. The first step is to write the relation as (3x plus 4) time cosine of x equals the derivative of (3x plus 4) times sine of x minus 3 times sine of x. Integrating both sides we get that the integral of (3x plus 4) times cosine of x equals the integral of the derivative of (3x plus 4) times sine of x minus the integral of 3 times sine of x. Now we know that a primitive function of a derivative equals the original function. Moreover, we know a primitive function of the sine. Thus we obtain that the integral of (3x plus 4) times cosine of x equals (3x plus 4) times sine of x plus 3 times cosine of x plus a constant. We have just calculated the integral of the product (3x plus 4) times cosine of x, by reversing the product rule. Can you use a trick like this for arbitrary functions? Yes! To see how, it is convenient to write capital F for a primitive function of small f, that is capital F-prime equals little f. We now write down the product rule as the derivative of capital F times g equals capital F-prime times g plus capital F times g-prime, which is little f times g plus capital F times g-prime. We can rearrange this equation to little f times g equals the derivative of capital F times g minus capital F times g-prime. Integrating both sides gives that the integral of little f times g equals the integral of the derivative of capital F times g minus the integral of capital F times g-prime. An antiderivative of the derivative of capital F times g equals capital F times g, so we obtain that the integral of little f times g equals capital F times g minus the integral of capital F times g-prime. Let us now look at what this formula does. In order to calculate the integral of the product f times g, it suffices to calculate the integral of capital F times g-prime, that is, one of the two terms in the product has to be integrated, whereas the other term has to be differentiated. Using this rule to rewrite the integral on the left hand side is called integration by parts. If we apply this to the first example, you see that we take f equals cosine of x and g equals 3x plus 4. The primitive capital F then equals sine of x, and the derivative g-prime equals the constant function 3. Thus we recover the formula we found before. Whenever you want to apply integration by parts, the goal is to ensure that the new integral is simpler than the original integral. If you are calculating an integral and want to use integration by parts, there are several choices you have to make. First you need to decide how you write the original integrand as a product of two functions. Secondly you need to choose which of the two functions plays the role of g and will be differentiated, and which is f and needs to be integrated. Let us now consider the example x times e to the power 4x. We want to calculate the integral of x times e to the power 4x, and it seems obvious to split the integrand as x times e to the power 4x. Which of these two functions shall we integrate, and which shall we differentiate? For e to the 4x it does not matter if we integrate or differentiate, as the function will be just multiplied by a constant either way. For x integration gives one half times x squared and differentiation the constant 1. As a constant function is much simpler than a quadratic one, we differentiate x. Thus we set f equal to e to the power 4x, so its primitive capital F becomes a quarter e to the 4x. And the function x is g, so g-prime becomes the constant function 1. Carefully applying the formula for integration by parts we then obtain that the integral of x times e to the power 4x equals a quarter e to the power 4x times x minus the integral of a quarter e to the power 4x times 1. We are left with one quarter times the integral of e to the power 4x dx. The new integral we need to calculate is simpler than the one we started with. Indeed we have that the integral of e to the power 4x equals a quarter e to the power 4x plus a constant. So our final result is that the integral of x times e to the power 4x equals a quarter x e to the power 4x minus 1/16 e to the power 4x minus a quarter C. It is rather inconvenient to leave the minus 1/4 C in the final result. As C is some undetermined constant any multiple of C by a fixed amount is a different arbitrary constant. Thus for convenience we give it a new name, say D, to get that the integral of x times e to the power 4x equals a quarter x e to the power 4x minus 1/16 e to the power 4x plus a constant D. Now try integrating by parts yourself. End of transcript. Skip to the start. ",
                                        "unit_id":"a555cc3ff1904f31b6d58228747e5991",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d8859100b8e641338a342c8903f482b8",
                                "vertical_name":"Video: Integration by parts"
                            },
                            {
                                "units":[],
                                "vertical_id":"a8e7f294a288457687af0c4e68d95c0e",
                                "vertical_name":"Exercises: Integration by parts 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Applying integration by parts is a bit of an art. In this video you will see some helpful tips and tricks. ",
                                        "unit_id":"426a8b3e8ffb4aeb8dd9ec3e5f661b2d",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Left hand side",
                                            "Exponential function",
                                            "Minus minus",
                                            "Sine function",
                                            "Primitive function",
                                            "Cosine",
                                            "Sine",
                                            "Primitive",
                                            "Sign",
                                            "Minus",
                                            "Trick",
                                            "Easier",
                                            "Row",
                                            "Simpler",
                                            "Function",
                                            "Integrating",
                                            "Polynomial",
                                            "Ln",
                                            "Differentiate",
                                            " ",
                                            "Left",
                                            "Integration",
                                            "Constant",
                                            "Sin",
                                            "Product",
                                            "Integrate",
                                            "Int",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Welcome, In the previous video you learned what integration by parts is. To apply this technique you need to make several choices. Indeed calculating primitive functions is something of an art, and there are no fixed rules you can follow that will always lead to success. In this video I will share with you some ideas that can help you when applying integration by parts. Observe that integration by parts turns the problem of solving one integral into the problem of solving a different integral. The goal should thus always be to try to make the new integral easier than the old one. If you look back to the example we did in the previous video, the integral of x e^{4x} was transformed to the easier integral of e^{4x}. Ok, suppose you have decided to try to use integration by parts, and you have split up the function you need to integrate as f(x) times g(x). Which of the two functions should you differentiate and which should you integrate? In the example of x times e^{4x} we considered what would happen for both functions if we integrate and differentiate them. And this is what you should do in general, basing your choice on which resulting integral will be simplest. If you really have no idea, you can always try both options and see which works best. However consider the following table. If you read it from left to right it tells you what the primitive function is, if you read it from right to left it tells you the derivative. Notice that the functions in the top row are essentially just as difficult on the left and right hand side: The exponential function stays the same if you integrate or differentiate it, the sine just turns into a cosine upon either integrating or differentiating. Thus if one of your functions is the exponential function, for the new integral it does not matter whether you integrate or differentiate this function. For the polynomial functions in the second row you see that integrating increases the degree of the polynomial by one, while differentiating decreases the degree by one. Thus polynomials become moderately more difficult when integrating, and slightly simpler when differentiating. Finally the function ln(x) in the bottom row becomes extremely much simpler when differentiating, while the primitive function of 1/x is quite complicated. You see that the lower the function you consider occurs in the right column, the more you would like to differentiate it, whereas the higher the function occurs on the left the less you&rsquo;d mind integrating it. Thus typically it is best to integrate exponential functions, while if one of the functions in your product is ln(x), you really want to differentiate that one. For example for the integral x sin(x) you want to differentiate the function x from the second row, making it a little easier, and integrate the sin(x) which is above it in the top row, thus integrating or differentiating really does not matter for the sine. For the integral of x ln(x) you want to integrate the x from the second row, because ln(x) is now below it in the third row and thus becomes much much easier upon differentiating. Indeed you want to differentiate ln(x) so badly, that you want to use integration by parts even for the integral of ln(x), where you can not see a product at first. How can you rewrite ln(x) so that it is a product? Well, if ln(x) is one of the two functions, the other must be the constant function 1. Now applying integration by parts on 1*ln(x), where we of course differentiate ln(x) and thus take the primitive of 1, we obtain x ln(x) - integral of x * 1/x. The new integral is the integral of the constant 1, which is easy. We find that the integral of ln(x) equals x ln(x)-x +C. Finally I want to show you an advanced trick that you can sometimes use. Consider the integral of e^x cos(x). It is a nice product so you want to use integration by parts. Because both e^x and cos(x) are in the top row of the table, it does not really matter which one we integrate, but my personal preference is to integrate e^x. Then we obtain that the integral of e^x cos(x) equals e^x cos(x) + \\int e^x sin(x). Note you get a plus sign because it is a minus minus, one minus from integration by parts and one from the derivative of the cosine equals minus sine. The new integral e^x sin(x) looks just as hard as the original one, so it seems we have not achieved much. But it is a product so we can use integration by parts again. Let&rsquo;s integrate e^x again, and differentiate sin(x). This gives that \\int e^x cos(x) = e^x cos(x) + e^x sin(x) - \\int e^x cos(x). There does not appear a minus sign differentiating the sine function, so we keep the minus of the integration by parts this time. We seem to be back at square one, we have the same integral as before! However, now we can use an amazing trick. Notice that on the left we have plus one integral of e^x cos(x), whereas on the right we have minus one integral of e^x cos(x). Moving this integral from the right hand side of the equation to the left, gives 2 \\int e^x cos(x) = e^x cos(x) + e^x sin(x). Dividing by 2 we find our answer int e^x cos(x) = 1 / 2 e^x (cos(x) + sin(x)). Somewhere along the way we lost our constant of integration +C. If you look carefully it is exactly when we apply the trick to shift the minus int e^x cos(x) to the left hand side. Losing the constant of integration happens whenever you apply this method, and in this case it is easiest to just add the +C at the end. Now try solving some integrals yourselves. End of transcript. Skip to the start. ",
                                        "unit_id":"2308c63bc82a4e1a842d134fcee6ba9d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bf7e4e7881b34d3583aef2382f7c45cf",
                                "vertical_name":"Video: Integration by parts: tips and tricks"
                            },
                            {
                                "units":[],
                                "vertical_id":"5d1a95a5aa2643f0892a25bbea4c3469",
                                "vertical_name":"Exercises: Integration by parts 2"
                            }
                        ]
                    },
                    {
                        "sequential_id":"43eb095456da41f1928b5fe562710243",
                        "sequential_name":"Training sequence",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Training sequence",
                                            "Fundamental theorem"
                                        ],
                                        "data":" In this training sequence you can apply everything you have learned on the definition of integration, the fundamental theorem of calculus and the rules of calculation. This training sequence will help you prepare for the homework. The results of your answers do not count for your final grade. Have a good training! At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"c09254d662f14a39a77f1456e5ae0c29",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f973492408fe4c369ad47fdbd86e535c",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" EXERCISE 1 ",
                                        "unit_id":"c1bd897e955043248eb64caa3f2661ab",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"5a1c3eedb0eb4a9fa727f7e5bfdb762a",
                                "vertical_name":"Basic training"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 2 ",
                                        "unit_id":"4383a4de66b04f4ea2c3734d64bbc79b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"6852fc28a89740ed9c28ffa28d702bbb",
                                "vertical_name":"Rules of calculation"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 3 ",
                                        "unit_id":"1e557dc74e514a9d8ed0f3f00cb56a11",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"28e9a18025ac4e5f9a0ce4daf9fc44e1",
                                "vertical_name":"Evaluating integrals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 4 ",
                                        "unit_id":"99b60e0602c54a9384e359a6952fb449",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0412006bdc8b42a89efeba6a34b6cd60",
                                "vertical_name":"Pure integration"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 5 ",
                                        "unit_id":"a1cc4a0d7cdd44da9870aa31bbf41f6b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"ffb40767aef6468bb5bb1dd82cd64c0c",
                                "vertical_name":"Primitive function given"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 6 ",
                                        "unit_id":"b42993e2df9040d195b990cb7942a595",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"0e00b68c022e4cbfb571f76e852a5554",
                                "vertical_name":"Surface area"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Exercise 7 ",
                                        "unit_id":"028f47f6a93c488ca106387126c532a1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"55a4281e25e0424da651d74fec1b37b0",
                                "vertical_name":"Advanced integration techniques"
                            }
                        ]
                    },
                    {
                        "sequential_id":"2c3b8ea98aa54e6aa84092cc42a170cb",
                        "sequential_name":"Extra material: further applications",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum",
                                            "Real world",
                                            "Training sequence",
                                            "Exercise"
                                        ],
                                        "data":" INTRODUCTION In this training sequence you will explore many different types of applications of integrals. You will see that integrals can be used for much more than just calculating areas under the graph. Some of these applications require some knowledge from physics and other topics that is outside the scope of this course. So do not worry if you do not understand every setting in this exercise series. The exercises in this training sequence will not count for your final score. We have simplified the problems so that you can solve all integrals that appear. You may think that in the real world the functions appearing are not as tidy as the ones presented here and you will often be right. That is why you will want to learn a few more methods of evaluating integrals in university. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"ac430a7233204b24aa871196995893dc",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"78ed38e2f85d43dc9e6be02c9c8b23c2",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[],
                                "vertical_id":"74b621f1dd1748288feaa84a67826e57",
                                "vertical_name":"Applications I"
                            },
                            {
                                "units":[],
                                "vertical_id":"f1af405597c14ce9ad84a3d8a39c09a0",
                                "vertical_name":"Applications III"
                            },
                            {
                                "units":[],
                                "vertical_id":"b8ed903d76554f05a625d827b19e4e9f",
                                "vertical_name":"Radioactive decay"
                            },
                            {
                                "units":[],
                                "vertical_id":"ee4e2ab1ea584a148d1e4a70b09f0275",
                                "vertical_name":"Length of a graph I"
                            },
                            {
                                "units":[],
                                "vertical_id":"81b8b1eedafe4b3db7c209a4bc8cb883",
                                "vertical_name":"Length of a graph II"
                            },
                            {
                                "units":[],
                                "vertical_id":"eeb0e307b7914e08af82afa1d0f47bea",
                                "vertical_name":"Volume of a cooling tower"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Probability distribution function",
                                            "Sun",
                                            "Function",
                                            "Probability",
                                            "Experiment",
                                            "Day"
                                        ],
                                        "data":" EXERCISE 7: PROBABILITY OF SUNSHINE Let us consider the experiment where you look out the window and determine the fraction of time between sunrise and sunset the sun is actually shining (as opposed to being obscured by clouds). For every day this gives a number between 0 and 1. For days past this is a given result, but you might want to predict what happens on future days. Based on climate data you can try to predict what might happen on a random day in August. A way to describe this mathematically is to use a probability distribution function. This is a function p(x) such that the probability that the result of the experiment falls in the interval [a,b] equals &int;abp(x)dx. That is, if there are 15 hours between sunrise and sunset on this day in August, the probabilty of having between 10 and 11 hours of sun equals &int;10151115p(x)dx. ",
                                        "unit_id":"243c9d2d67334495a6f338556ce2c8b3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"d009e385ac2545ca890d44e3ac958bab",
                                "vertical_name":"Probability"
                            },
                            {
                                "units":[],
                                "vertical_id":"0e9cf9175b8a43f1af293f6a7f0ebc77",
                                "vertical_name":"Approximating sum with integral"
                            }
                        ]
                    },
                    {
                        "sequential_id":"f5b64962fea94932b7b4bb43c4237605",
                        "sequential_name":"Summary",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Discussion forum"
                                        ],
                                        "data":" In this subsection we will give a summary of everything you have learned this week on integration. At the bottom of each unit you will find a discussion forum. If you have any questions regarding the content of this unit, please check if your question has already been posted and/or answered before posting your question. ",
                                        "unit_id":"1830545490d9408bbaae6f27d4a290ba",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Total energy",
                                            "Power consumption",
                                            "Standard integrals",
                                            "Riemann sum",
                                            "Good luck",
                                            "Fundamental theorem",
                                            "Primitive function",
                                            "Signed area",
                                            "Horizontal axis",
                                            "Linear function",
                                            "Continuous function",
                                            "Riemann integral",
                                            "Time interval",
                                            "General",
                                            "Minus",
                                            "Capital",
                                            "Technique",
                                            "Derivative",
                                            "Integration",
                                            "Power",
                                            "Area",
                                            "Remember",
                                            "Axis",
                                            "Function",
                                            "Interval",
                                            "Variable",
                                            "Substitution",
                                            "Called",
                                            "Time",
                                            "Integral"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi there! We are already at the end of week 6! To help you remember integration, we will summarise the essentials. At the start of week 6 we wanted to determine the total energy consumption of a house during a certain time interval. However we only knew the function P(t) describing the power consumption as a function of time. In order to determine the total energy consumed we divide the entire interval into smaller intervals and pick a sample point in each interval. We can then approximate the total energy by summing the Delta t times the power at each sample point. The approximating sum is called a Riemann sum. If we take the size of the intervals to zero, then in the limit we obtain the exact energy consumption. The value of this limit is called the Riemann integral. Remember that an integral always has a geometric meaning: it is the signed area of the region between the graph of the function, and the integration interval on the horizontal axis. By &lsquo;signed&rsquo; we mean that the area of the parts below the axis should be subtracted. However, with this definition we can only approximate the actual integral because it is very hard to evaluate the limit in general. Lucky for us we can use the Fundamental theorem of Calculus. This theorem tells us that if we have a continuous function f on an interval from a to b, and we know that small f is a derivative function of capital F, then the integral from a to b of small f equals capital F in b minus capital F in a. This function capital F is called a primitive function of small f. Don&rsquo;t forget that when you find a primitive function capital F, capital F plus any constant is also a primitive function of small f. Of course, choosing a different primitive function does not change the value of the integral. Because of this connection between differentiation and integration, we can use our list of standard derivatives to obtain some of the standard integrals. We will now walk through the rules of calculation again. Our first set of rules is about the interval of the integral. The integral of any function from a to a is always equal to 0. We can also split an integral. The integral of a function f from a to c equals the integral of f from a to b plus the integral of f from b to c. And the last rule: The integral of f from a to b equals minus the integral of f from b to a. Our second set of rules is about the function itself. The integral of f plus the integral of g equals the integral of f + g. The integral of a constant C times f equals C times the integral of f. None of these rules tell us how to calculate an integral of products or compositions of functions. In fact, there are no general rules for these cases, in contrast to differentiation. We did derive some helpful rules in case we are integrating the composition of a function with a linear function. We found that the integral of f(x+c) from A to b equals the integral of f(x) from A+c to b+c. This corresponds to a shift of the graph of the function to the right or to the left. The integral of f(c*x) from A to b equals the integral of 1 over c times f(x) from c times a to c times b. In more general cases, when faced with an integral of a combination of functions, you can try to use the substitution to rewrite the integral to a simpler one. Let me recall the steps in an example. We start with a complicated integral, like the one shown on the slide. Then, we try to re-express everything in terms of a new variable u, related to x by the equality. This is called substitution. For example, we can choose the substitution u=x^3+5x. From this relation it follows that du = (3x^2+5) dx. Now we can express the integral entirely in terms of u and du. The new integral is easy to evaluate. Finally, return to the original variable, and we have found the answer! In case of an integral with boundaries, we can also apply this procedure. Just make sure to also express the boundaries in terms of the new variable. Another integration technique that we have seen is integration by parts. You can use it to find an anti-derivative of a product of functions. It works as follows. Suppose we want to integrate the product of functions f and g. Suppose that capital F is a primitive function for small f, then the integral is equal to capital F times g minus the integral of capital F times the derivative of g. Like the method of substitution, this technique does not give you an anti-derivative directly. Rather, you can convert the problem of evaluating a given integral to evaluating another integral. The goal is then to ensure that the new integral is easier to evaluate than the old one. That&rsquo;s all there is to integration for now. This was of course a quick summary, so if you didn&rsquo;t entirely understand a part, you should go back to the video explaining that part. Good luck with the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"e7d34b9fb6b34ab2b2b7765064d1ff08",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b700ed6b5d514d05b0d4f646532938a6",
                                "vertical_name":"Video: Summary"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c70328a9f3734a1d9fcd2634b5102baf",
                        "sequential_name":"University preview",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" In this week's university preview you will get a taste of multivariate integrals. In two dimensions these are integrals for functions f(x,y) of two variables and allow you to calculate volumes instead of areas. The exercises in this section are just for fun and your results on these exercises will not constitute a part of your final grade. ",
                                        "unit_id":"aabc030439fd4b2bb4cd28361c22f1ee",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Power consumption",
                                            "Office buildings",
                                            "Riemann sums",
                                            "Approximately equal",
                                            "Double integral",
                                            "Riemann sum",
                                            "Rectangular box",
                                            "Office building",
                                            "Height function",
                                            "Delta",
                                            "Base",
                                            "Integral",
                                            "Shape",
                                            "Integrate",
                                            "Sum",
                                            "Height",
                                            "Function",
                                            "Volume",
                                            "Roof",
                                            "Column",
                                            "Box",
                                            "Building"
                                        ],
                                        "data":" Start of transcript. Skip to the end. Hi. Until now we considered functions of one variable and their integrals. For example, we integrated speed over time to obtain distance traveled and the function of power consumption over time to obtain the total energy consumption. However, in engineering there are a lot of situations where you need to integrate functions of more than one variable. Let&rsquo;s look at an example. Suppose you were asked to design a suitable air conditioning system for an office building. Then you need to know the volume of that building. If the building has the shape of a rectangular box, like many office buildings, then estimating the volume is easy: it is the base area times the height. But what if it is not a box, like the Delft University library? As you see, its roof has a rather fancy, curved shape. How to determine the volume of a building with a curved roof? Here&rsquo;s an idea. For simplicity, assume that the building has rectangular base and vertical walls. You can chop up the building into rectangular columns, like cutting french fries from a potato. Of course, the volume of the whole building is just the sum of the volumes of the columns. Now the volume of each column may still be hard to find, but we can approximate each column by a box. Then the total volume is approximately equal to the sum of the volumes of the boxes, and that is easy to calculate. We can make the approximation better by taking more columns. Let&rsquo;s make this idea more precise. We introduce coordinates x and y on the base of building. Then the height of the roof is a function f of x and y. Now we divide the floor into small rectangles, say of area Delta A each. Let&rsquo;s zoom in to one such rectangle. We can draw an imaginary column between this rectangle and the roof. Pick a sample point in the rectangle, say with coordinates (x1, y1). Then the height of the column is roughly equal to f(x1,y1). The volume is roughly equal to this height times Delta A. And geometrically, this product represents the volume of a box with base Delta A and height f(x1,y1). This we can repeat for each of the small rectangles: pick a sample point, find the height of the roof over each sample point, and draw a box with that height and the rectangle as base. Then the total volume is approximately equal to the sum of the volumes of the boxes. Does this expression look familiar? It is the 2-dimensional analog of the Riemann sum. When we increase N, the number of rectangles, the Riemann sum gives a better approximation of the volume. The limit of the Riemann sum as N goes to infinity, and Delta A goes to zero, is by definition the integral of the height function f over the base of the building. We denote it as follows: the double integral over D of f(x,y) dA, where D is the Domain over which we integrate; in this case the base of the building. We use two integral signs to stress that there are two variables involved. In this case, this integral represents the exact volume of the building. Just as in the case of integration in one variable, it is very cumbersome to evaluate a double integral by using Riemann sums. Fortunately, there are ways to evaluate such integrals more easily. If you want to know how, have a look at the exercises! End of transcript. Skip to the start. ",
                                        "unit_id":"9a6694dff2034ffabacd185e55ed43a3",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"991d6a120c6941d4a18cd035541a4ecd",
                                "vertical_name":"Video: University Preview - Multiple integrals"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Double integral",
                                            "Riemann sum",
                                            "Iterated integral",
                                            "Integral",
                                            "Sum",
                                            "Small",
                                            "Vol",
                                            "Dx",
                                            "Dy"
                                        ],
                                        "data":" In the video you saw that the double integral over a rectangle of a function in two variables is defined as the limit of a double Riemann sum. However, this definition is often not very useful when you want to calculate the double integral. Suppose our function f(x,y) is defined on the rectangle D=[a,b]&times;[c,d], i.e. a&le;x&le;b and c&le;y&le;d. The graph of f is a surface above the rectangle (we assume that f&ge;0 ), and the volume of the solid V between the rectangle D and the graph of f is given by the double integral Vol(V)=\u222cDf(x,y)d(x,y). To approximate the volume of V, we can cut up V into N small slices of width &Delta;y. If &Delta;y is very small, the y-coordinate of one slice is more or less constant. So, the y-coordinate along the first slice is y1, of the second slice it is y2, and so on. The height of the i-th slice is now given by f(x,yi). Note that for each slice the value of yi is constant, so f(x,yi) is a function of one variable (namely x). Now the area of the side of the i-th slice is the area below the graph of the function f(x,yi), which is &int;abf(x,yi)dx. So the the volume of the i-th slide is Vol(slice i)=&int;abf(x,yi)dx&sdot;&Delta;y. Adding the volumes of all the slices gives an approximation for the volume of V: Vol(V)=&sum;i=1NVol(slice i)&asymp;&sum;i=1N&int;abf(x,yi)dx&sdot;&Delta;y. Note that we can consider the sum as a Riemann sum of the function g(y)=&int;abf(x,y)dx over the interval [c,d]. So by letting &Delta;y&rarr;0 (or: N&rarr;&infin;), this becomes the integral &int;cdg(y)dy, and we have obtained: Vol(V)=&int;cd(&int;abf(x,y)dx)dy. We see that we can calculate the double integral as an iterated integral: first we integrate in the x-direction, and then we integrate the result in the y-direction. So, to evaluate the iterated integral we first compute &int;abf(x,y)dx. During this computation we consider y as a constant. The result can be considered as a function of y, so next we must integrate this function over y from c to d. Of course, if we would have cut the slices along the x-axis instead of the y-axis, we would have found an iterated integral where the inner integral is in the y-direction and the outer integral is in the x-direction. So: Vol(V)=\u222cDf(x,y)d(x,y)=&int;cd(&int;abf(x,y)dx)dy=&int;ab(&int;cdf(x,y)dy)dx We see that we can calculate a double integral of a function in two variables by calculating two integrals of functions of one variable. ",
                                        "unit_id":"72fdbb441d74421885d3ac14efb9437b",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"bbd1fc74c2c745f5ac3dfe76a038f438",
                                "vertical_name":"Exercises: Calculating double integrals"
                            }
                        ]
                    },
                    {
                        "sequential_id":"0f75ef8955194fc596b5e5946f03bb8e",
                        "sequential_name":"* Student life 6 - Feedback",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Feedback",
                                            "Give"
                                        ],
                                        "data":" At university you will often be asked to give feedback. But what is feedback and how do you give it in a good way? Please give us your feedback in the following unit after watching the video. ",
                                        "unit_id":"760477e57c4b4736bf6cbabef18c3620",
                                        "unit_type":"html"
                                    },
                                    {
                                        "concepts":[
                                            "Teaching assistants",
                                            "Spaghetti bolognese",
                                            "Based",
                                            "Taste",
                                            "Person",
                                            "Good",
                                            "Spaghetti",
                                            "Chef",
                                            "Give",
                                            "Feedback",
                                            "End"
                                        ],
                                        "data":" Start of transcript. Skip to the end. At university, you will not only get feedback from your teachers and teaching assistants, but also from your peers. And you will also be asked to give feedback to your peers and to your teachers. But what is feedback? And how do you give it in a good way? In the engineering world Feedback occurs when outputs of a system are \"fed back\" as inputs as part of a chain of cause-and-effect that forms a circuit or loop. In this video we mean by feedback: information about reactions to your performance of a task, which is used as a basis for improvement. So to improve your mathematic skills or to improve this course feedback can be an important source. Good feedback are reactions that help you improve, so it needs to be specific, based on observation and your response, and contain tips to improve. Often at least these three steps are taken for good feedback: Firstly you share your observations: Tell what you saw/heard/experienced/ What was your response: How did it make you feel, what did it make you do? You finish your feedback with a tip: What would you recommend ? &hellip; Let&rsquo;s start with a simple example to separate loose opinions from feedback. Suppose you are a chef in a restaurant. You can get reviews like this: 8/10 Or: Food was tasty! Or: I ordered the spaghetti Bolognese. The portion-size was good. The sauce smelled delicious with its fresh basil and the spaghetti was nicely cooked al dente. The sauce contained a bit too much pepper to my taste. My tip is to let customers add the pepper themselves. Now which review would help you improve? The first two reviews are positive and show you are on the right track, the last one is also positive, but is more specific and gives a concrete example and tip to improve. So the last review gives you really good feedback Now feedback will not always be positive. The reviews could also look like this: 5/10 Or Food was awful! Or I ordered the spaghetti Bolognese. The spaghetti was overcooked and the sauce lacked taste. I was very disappointed. My tip is to use more herbs and spices and pay more attention to cooking times! Now as a chef you might not like the feedback, but at least the last review is very specific and can help you improve! Another important aspect of this feedback is that it discusses the output (in this case the spaghetti) and not the person, who made it (in this case the chef). You can imagine that a comment like: &ldquo;your chef doesn&rsquo;t know how to cook spaghetti&rdquo; might hurt a person much more than the comment: the spaghetti was overcooked. So keeping your feedback focused on the end result rather than on the person who made it, but will make your feedback easier to accept and therefore make the chances of a person improving things based on your feedback much higher! The same goes for feedback on behaviour: It&rsquo;s better to say for example: I see you didn&rsquo;t finish your work in time than to say I think you are lazy and unreliable. Unfortunately at your university and in this course the teachers can&rsquo;t always be very specific with their feedback and often return the feedback in the form of a grade. So often you have to analyse yourself how you are doing, by looking at which exercises you did well and which not. Don&rsquo;t be afraid to ask teachers and fellow students for feedback. We would really value your feedback on our course, because we would like to improve our course. The feedback may be positive or negative, but please be specific, tell us how it made you feel, what it made you do etcetera and finish with tips! We on the receiving side of the feedback, promise to listen to your feedback and be grateful! Thank you so much! Also, thank you very much for following this course and we wish you all the best in your study and in your future career! Bye! End of transcript. Skip to the start. ",
                                        "unit_id":"a68dbf10c06245f0b1cb72e94ee8bd8d",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b1625ec260794b78b0f6d817c9dadbfa",
                                "vertical_name":"Student life 6 - Feedback"
                            }
                        ]
                    }
                ]
            },
            {
                "chapter_id":"5405733a47ea4105a2bcab4d5968c393",
                "chapter_name":"Week 7. Exam",
                "sequentials":[
                    {
                        "sequential_id":"637028ee1efe495dabff64a1a4961ead",
                        "sequential_name":"Exam",
                        "verticals":[
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Good luck",
                                            "Discussion forum",
                                            "Differently",
                                            "Forum"
                                        ],
                                        "data":" Exam Welcome to the exam of Pre-University Calculus. You have learned a lot in this course on functions, equations, differentiation and integration. The exam contains problems on all these topics. The exam is due on September 29, 23.30 hours UTC. However we recommend you to finish the exam on August 15th. Unless specified differently you should be able to do these problems without a calculator. Unless stated differently we expect exact answers (including terms as 2 and e3), not rounded. Good luck! At the bottom of each problem you will find a discussion forum. In contrast to the homework exercises, we encourage you to make the exam on your own. If you really get stuck on something, you can still use the forum. Please check if your question has already been posted before posting your question. When responding to questions, do NOT provide answers, only give small hints or directions to the appropriate content. ",
                                        "unit_id":"ef285b628408404a8e392773002f9aa1",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"b04946e2eded43cca130f11fc336e995",
                                "vertical_name":"Introduction"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" problem 1: Investigation of a function In this problem, we investigate the following function: f(x)=x3&minus;6x2+12 ",
                                        "unit_id":"bd331f26c79c4f4db66ae0dea5864438",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"30dcaeaebcef4950a691c42a495153cb",
                                "vertical_name":"Problem 1"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 2: Rewriting expressions In this problem you are asked to rewrite expressions into a different form. ",
                                        "unit_id":"817f9506308843fb8b185e0eb373ed00",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f12e5883a1e64caca37e546d12d3d63a",
                                "vertical_name":"Problem 2"
                            },
                            {
                                "units":[],
                                "vertical_id":"e1c6e3ab17fb4300a99fcc99518668d6",
                                "vertical_name":"Problem 3"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 4: Cycling up and down a mountain In this exercise we consider a mountain, the height of which is a function of the horizontal distance x, with domain [0,&infin;), given by f(x)=x2e&minus;x. A cyclist starts at x=0 and moves in the positive x-direction. ",
                                        "unit_id":"1b26741f730d45b193301ff453615aea",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"8075e7965e744997b5391b13587b765c",
                                "vertical_name":"Problem 4"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Rational function",
                                            "Function"
                                        ],
                                        "data":" Problem 5: A rational function In this problem we study the function f(x)=&minus;1x&minus;3+1x+2+16. ",
                                        "unit_id":"9310765db2a544f08d2e72eafab5ca0f",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"f2c5bf4bed4b44d1ac39439043da1560",
                                "vertical_name":"Problem 5"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[
                                            "Water wave"
                                        ],
                                        "data":" PROBLEM 6: A WAVE Suppose that the height of a water wave in a canal (measured in meters from the bottom), at a certain time, is given by the following function: f(x)=14sin(2x)+3. Here x denotes the position along the canal in meters. ",
                                        "unit_id":"7a6aba78285a405bb7e10d1058a9cbca",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fb3e2af50cf941148ccfa498afb2579e",
                                "vertical_name":"Problem 6"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" problem 7: Rules of calculation ",
                                        "unit_id":"2e4499f2f28e492f82672d20b5df3013",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"fb755576ece54528864a162469b61773",
                                "vertical_name":"Problem 7"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 8 In this problem we consider the function f with domain x&ne;12 defined by f(x)=12x&minus;1. For every p&gt;12 the area of the indicated region, the rectangle with vertices (0,0), (p,0), (p,f(p)) and (0,f(p)), is denoted by A(p). It is easily verified that A(p)=p2p&minus;1. ",
                                        "unit_id":"cf145db1451f45f3aa72b8c50fb2db61",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"aeca2a2201e2488e846fefeda3f08677",
                                "vertical_name":"Problem 8"
                            },
                            {
                                "units":[
                                    {
                                        "concepts":[],
                                        "data":" Problem 9 In this problem we consider the functions f and g given by f(x)=x2+1 and g(x)=x+3. ",
                                        "unit_id":"4abcb3805424411fbefa1a9eacaf2f7a",
                                        "unit_type":"html"
                                    }
                                ],
                                "vertical_id":"2adfce1431cc4c6187e2a889f05defcc",
                                "vertical_name":"Problem 9"
                            }
                        ]
                    },
                    {
                        "sequential_id":"c59ba17903dd47f48150629ea9cea31f",
                        "sequential_name":"Closing survey",
                        "verticals":[
                            {
                                "units":[],
                                "vertical_id":"f81f36f41b9244d5862a707e4e04d29f",
                                "vertical_name":"Survey"
                            }
                        ]
                    }
                ]
            }
        ],
        "course_id":"course",
        "course_name":"Pre-University Calculus"
    }
]